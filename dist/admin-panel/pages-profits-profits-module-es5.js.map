{"version":3,"sources":["webpack:///src/app/pages/profits/add-profit/add-profit.component.html","webpack:///src/app/pages/profits/add-profit/add-profit.component.ts","webpack:///src/app/pages/profits/profits-routing.module.ts","webpack:///src/app/pages/profits/profits.component.html","webpack:///src/app/pages/profits/profits.component.ts","webpack:///src/app/pages/profits/profits.module.ts","webpack:///src/app/pages/profits/profits.service.ts"],"names":["form","patchValue","AddProfitComponent","fb","profitsService","categoriesService","productsService","storesService","toastr","spinner","router","group","profitType","profitValue","profitPercentage","validTill","profitOnList","_id","nameEn","nameAr","products","categories","stores","subCategories","selectedCategory","getProductsList","getbaseCategoriesList","getStoresList","event","console","log","profitOn","selectedStoreId","undefined","selectedProductId","show","getAll","subscribe","data","selectProductsList","map","x","hide","selectStoresList","getBaseCategories","baseCategories","selectBaseCategoriesList","getOne","res","info","length","error","message","fieldIndex","key","splice","addProfit","value","navigate","selectedCategoryId","Object","keys","count","prop","hasOwnProperty","newForm","storeId","addStoreProfit","addCategoryProfit","selectProfitOn","onSubmit","selector","templateUrl","styleUrls","routes","path","component","ProfitsRoutingModule","forChild","imports","exports","modalRef","ProfitsComponent","profitService","modalService","exportAsService","route","items","itemCount","limit","limits","offset","tableElements","exportAsConfig","type","elementIdOrContent","options","jsPDF","orientation","params","val","getData","profits","itemResource","reloadItems","query","template","id","itemId","deleteOne","opt","save","get","content","exportAs","ProfitsModule","forRoot","declarations","ProfitsService","http","next","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBQ;;AAGE;;AACE;;AAQE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACF;;AACF;;;;;;AAVM;;AAAA,oFAAkB,SAAlB,EAAkB,QAAlB,EAAkB,WAAlB,EAAkB,uBAAlB,EAAkB,aAAlB,EAAkB,cAAlB,EAAkB,YAAlB,EAAkB,cAAlB,EAAkB,UAAlB,EAAkB,IAAlB;;;;;;;;AAYN;;AACE;;AACE;;AAQE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACF;;AACF;;;;;;AAVM;;AAAA,sFAAoB,SAApB,EAAoB,UAApB,EAAoB,WAApB,EAAoB,yBAApB,EAAoB,aAApB,EAAoB,gBAApB,EAAoB,YAApB,EAAoB,cAApB,EAAoB,UAApB,EAAoB,IAApB;;;;;;;;AA0BJ;;AACE;;AACE;;AAQE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACF;;AACF;;;;;;;;AAVM;;AAAA,0FAAwB,SAAxB,EAAwB,sCAAxB,EAAwB,WAAxB,EAAwB,2BAAxB,EAAwB,aAAxB,EAAwB,wBAAxB,EAAwB,YAAxB,EAAwB,cAAxB,EAAwB,UAAxB,EAAwB,IAAxB;;;;;;;;AAlBR;;AACE;;AACE;;AAQE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACF;;AACA;;AAeF;;;;;;AAzBM;;AAAA,sFAAoB,SAApB,EAAoB,gBAApB,EAAoB,WAApB,EAAoB,+BAApB,EAAoB,aAApB,EAAoB,wBAApB,EAAoB,YAApB,EAAoB,cAApB,EAAoB,UAApB,EAAoB,IAApB;;AAUU;;AAAA;;;;;;;;AAsEV;;AACE;;AAEE;AAAA;;AAAA;;AAAA,iBAAU,QAAAA,IAAA,KAAS,kBAAT,EAA6BC,UAA7B,CAAwC,CAAxC,CAAV;AAAoD,SAApD;;AAQF;;AACF;;;;;;AARI;;AAAA,0FAAwB,SAAxB,EAAwB,aAAxB,EAAwB,aAAxB,EAAwB,yBAAxB,EAAwB,SAAxB,EAAwB,8BAAxB,EAAwB,YAAxB,EAAwB,2BAAxB;;;;;;;;AAUJ;;AAGE;;AAEE;AAAA;;AAAA;;AAAA,iBAAU,QAAAD,IAAA,KAAS,aAAT,EAAwBC,UAAxB,CAAmC,CAAnC,CAAV;AAA+C,SAA/C;;AAQF;;AACF;;;;;;AARI;;AAAA,4FAA0B,SAA1B,EAA0B,kBAA1B,EAA0B,aAA1B,EAA0B,yBAA1B,EAA0B,SAA1B,EAA0B,mCAA1B,EAA0B,YAA1B,EAA0B,2BAA1B;;;;;;;;;;;;QC5ILC,kB;AACX,kCACUC,EADV,EAEUC,cAFV,EAGUC,iBAHV,EAIUC,eAJV,EAKUC,aALV,EAMUC,MANV,EAOUC,OAPV,EAQUC,MARV,EAQwB;AAAA;;AAPd,aAAAP,EAAA,GAAAA,EAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAGV,aAAAV,IAAA,GAAO,KAAKG,EAAL,CAAQQ,KAAR,CAAc;AACnBC,oBAAU,EAAE,CAAC,EAAD,CADO;AAEnBC,qBAAW,EAAE,CAAC,CAAD,CAFM;AAGnBC,0BAAgB,EAAE,CAAC,CAAD,CAHC;AAInBC,mBAAS,EAAE,CAAC,EAAD;AAJQ,SAAd,CAAP;AAaA,aAAAC,YAAA,GAAkC,CAChC;AAAEC,aAAG,EAAE,GAAP;AAAYC,gBAAM,EAAE,SAApB;AAA+BC,gBAAM,EAAE;AAAvC,SADgC,EAEhC;AAAEF,aAAG,EAAE,GAAP;AAAYC,gBAAM,EAAE,UAApB;AAAgCC,gBAAM,EAAE;AAAxC,SAFgC,EAGhC;AAAEF,aAAG,EAAE,GAAP;AAAYC,gBAAM,EAAE,OAApB;AAA6BC,gBAAM,EAAE;AAArC,SAHgC,CAAlC;AAOA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,UAAA,GAAa,EAAb;AACA,aAAAC,MAAA,GAAS,EAAT;AAsFA,aAAAC,aAAA,GAAgB,EAAhB;AACA,aAAAC,gBAAA,GAAmB,EAAnB;AA/GI;;;;0CASW;AACb,eAAKC,eAAL;AACA,eAAKC,qBAAL;AACA,eAAKC,aAAL;AACD;;;uCAYcC,K,EAAO;AACpB,cAAIA,KAAJ,EAAW;AACTC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,iBAAKG,QAAL,GAAgBH,KAAK,CAACV,MAAtB;;AACA,gBAAI,KAAKa,QAAL,KAAkB,SAAtB,EAAiC;AAC/B,mBAAKC,eAAL,GAAuBC,SAAvB;AACD,aAFD,MAEO,IAAI,KAAKF,QAAL,KAAkB,UAAtB,EAAkC;AACvC,mBAAKG,iBAAL,GAAyBD,SAAzB;AACD,aAFM,MAEA,IAAI,KAAKF,QAAL,KAAkB,OAAtB,EAA+B;AACpC,mBAAKG,iBAAL,GAAyBD,SAAzB;AACD;AACF;AACF;;;0CAKiB;AAAA;;AAChBJ,iBAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,eAAKrB,OAAL,CAAa0B,IAAb;AAEA,eAAK7B,eAAL,CAAqB8B,MAArB;AAEA,eAAK9B,eAAL,CAAqBc,QAArB,CAA8BiB,SAA9B,CAAwC,UAAOC,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AACtD,0BAAIA,IAAJ,EAAU;AACR,6BAAKC,kBAAL,GAA0BD,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD,EAAO;AACxC,iCAAO;AACLxB,+BAAG,EAAEwB,CAAC,CAAC,KAAD,CADD;AAELvB,kCAAM,YAAKuB,CAAC,CAAC,MAAD,CAAN,CAFD;AAGLtB,kCAAM,EAAE;AAHH,2BAAP;AAKD,yBANyB,CAA1B;AAOD;;AATqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAAxC;AAYA,eAAKV,OAAL,CAAaiC,IAAb;AACD;;;sCACad,K,EAAO;AACnB,cAAIA,KAAJ,EAAW;AACTC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,iBAAKM,iBAAL,GAAyBN,KAAK,CAACX,GAA/B;AACD;AACF;;;wCAQe;AAAA;;AACdY,iBAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,eAAKrB,OAAL,CAAa0B,IAAb;AAEA,eAAK5B,aAAL,CAAmB6B,MAAnB;AAEA,eAAK7B,aAAL,CAAmBe,MAAnB,CAA0Be,SAA1B,CAAoC,UAAOC,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAClD,0BAAIA,IAAJ,EAAU;AACR,6BAAKK,gBAAL,GAAwBL,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD,EAAO;AACtC,iCAAO;AACLxB,+BAAG,EAAEwB,CAAC,CAAC,KAAD,CADD;AAELvB,kCAAM,YAAKuB,CAAC,CAAC,MAAD,CAAN,CAFD;AAGLtB,kCAAM,EAAE;AAHH,2BAAP;AAKD,yBANuB,CAAxB;AAOD;;AATiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAApC;AAYA,eAAKV,OAAL,CAAaiC,IAAb;AACD;;;oCACWd,K,EAAO;AACjB,cAAIA,KAAJ,EAAW;AACTC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,iBAAKI,eAAL,GAAuBJ,KAAK,CAACX,GAA7B;AACD;AACF;;;gDAUuB;AAAA;;AACtBY,iBAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,eAAKrB,OAAL,CAAa0B,IAAb;AAEA,eAAK9B,iBAAL,CAAuBuC,iBAAvB;AAEA,eAAKvC,iBAAL,CAAuBwC,cAAvB,CAAsCR,SAAtC,CAAgD,UAACC,IAAD,EAAU;AACxD,gBAAIA,IAAJ,EAAU;AACR,oBAAI,CAACQ,wBAAL,GAAgCR,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD,EAAO;AAC9C,uBAAO;AACLxB,qBAAG,EAAEwB,CAAC,CAAC,KAAD,CADD;AAELvB,wBAAM,YAAKuB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL,CAFD;AAGLtB,wBAAM,YAAKsB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL;AAHD,iBAAP;AAKD,eAN+B,CAAhC;AAOD;AACF,WAVD;AAYA,eAAKhC,OAAL,CAAaiC,IAAb;AACD;;;2CACkBd,K,EAAO;AAAA;;AACxB,eAAKnB,OAAL,CAAa0B,IAAb;;AAEA,cAAIP,KAAJ,EAAW;AACT,iBAAKJ,gBAAL,GAAwB,EAAxB;AACA,iBAAKA,gBAAL,CAAsB,CAAtB,IAA2BI,KAA3B;AAEA,iBAAKvB,iBAAL,CAAuB0C,MAAvB,CAA8BnB,KAAK,CAACX,GAApC,EAAyCoB,SAAzC,CACE,UAACW,GAAD,EAAS;AACP,oBAAI,CAACxC,MAAL,CAAYyC,IAAZ,CAAiBD,GAAG,CAAC,SAAD,CAApB,EAAiC,MAAjC;;AACA,oBAAI,CAACzB,aAAL,GAAqB,EAArB;;AACA,kBAAIyB,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAhB,EAA4B;AAC1B,oBAAI2B,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAZ,CAAuB6B,MAAvB,GAAgC,CAApC,EAAuC;AACrC,wBAAI,CAAC3B,aAAL,CAAmB,CAAnB,IAAwByB,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAZ,CAAuBmB,GAAvB,CAA2B,UAACC,CAAD,EAAO;AACxD,2BAAO;AACLxB,yBAAG,EAAEwB,CAAC,CAAC,KAAD,CADD;AAELvB,4BAAM,YAAKuB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL,CAFD;AAGLtB,4BAAM,YAAKsB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL;AAHD,qBAAP;AAKD,mBANuB,CAAxB;AAOD;AACF;AACF,aAfH,EAgBE,UAACU,KAAD,EAAW;AACTtB,qBAAO,CAACC,GAAR,CAAYqB,KAAZ;;AACA,oBAAI,CAAC3C,MAAL,CAAY2C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYC,OAA9B,EAAuC,OAAvC,EAFS,CAGT;;AACD,aApBH;AAsBD;;AAED,eAAK3C,OAAL,CAAaiC,IAAb;AACD,S,CACD;;;;0CAEkBW,U,EAAYzB,K,EAAO;AAAA;;AACnC,eAAKnB,OAAL,CAAa0B,IAAb,GADmC,CAGnC;;AACA,eAAK,IAAMmB,GAAX,IAAkB,KAAK9B,gBAAvB,EAAyC;AACvC,gBAAI8B,GAAG,GAAGD,UAAU,GAAG,CAAvB,EAA0B;AACxB,qBAAO,KAAK7B,gBAAL,CAAsB8B,GAAtB,CAAP;AACD;AACF,WARkC,CAUnC;;;AACA,eAAK/B,aAAL,CAAmBgC,MAAnB,CAA0BF,UAAU,GAAG,CAAvC;;AAEA,cAAIzB,KAAJ,EAAW;AACT;AACA,iBAAKJ,gBAAL,CAAsB6B,UAAU,GAAG,CAAnC,IAAwCzB,KAAxC;AAEA,iBAAKvB,iBAAL,CAAuB0C,MAAvB,CAA8BnB,KAAK,CAACX,GAApC,EAAyCoB,SAAzC,CACE,UAACW,GAAD,EAAS;AACP,oBAAI,CAACxC,MAAL,CAAYyC,IAAZ,CAAiBD,GAAG,CAAC,SAAD,CAApB,EAAiC,MAAjC;;AACA,kBAAIA,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAhB,EAA4B;AAC1B,oBAAI2B,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAZ,CAAuB6B,MAAvB,GAAgC,CAApC,EAAuC;AACrC,wBAAI,CAAC3B,aAAL,CAAmB8B,UAAU,GAAG,CAAhC,IAAqCL,GAAG,CAAC,MAAD,CAAH,CAAY3B,UAAZ,CAAuBmB,GAAvB,CACnC,UAACC,CAAD,EAAO;AACL,2BAAO;AACLxB,yBAAG,EAAEwB,CAAC,CAAC,KAAD,CADD;AAELvB,4BAAM,YAAKuB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL,CAFD;AAGLtB,4BAAM,YAAKsB,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,CAAL;AAHD,qBAAP;AAKD,mBAPkC,CAArC;AASD;AACF;AACF,aAhBH,EAiBE,UAACU,KAAD,EAAW;AACTtB,qBAAO,CAACC,GAAR,CAAYqB,KAAZ;;AACA,oBAAI,CAAC3C,MAAL,CAAY2C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYC,OAA9B,EAAuC,OAAvC,EAFS,CAGT;;AACD,aArBH;AAuBD,WA3BD,MA2BO;AACL;AACA,mBAAO,KAAK5B,gBAAL,CAAsB6B,UAAU,GAAG,CAAnC,CAAP;AACD;;AAED,eAAK5C,OAAL,CAAaiC,IAAb;AACD,S,CACD;AACA;;;;yCAEiB;AAAA;;AACf,cAAI,CAAC,KAAKV,eAAN,IAAyB,KAAKA,eAAL,KAAyB,EAAtD,EAA0D;AACxD,mBAAO,KAAKxB,MAAL,CAAY2C,KAAZ,CAAkB,cAAlB,EAAkC,OAAlC,CAAP;AACD;;AACD,eAAK1C,OAAL,CAAa0B,IAAb;AAEA,eAAK5B,aAAL,CACGiD,SADH,CACa,KAAKxD,IAAL,CAAUyD,KADvB,EAC8B,KAAKzB,eADnC,EAEGK,SAFH,CAGI,UAACW,GAAD,EAAS;AACP,kBAAI,CAACxC,MAAL,CAAYyC,IAAZ,CAAiBD,GAAG,CAAC,SAAD,CAApB,EAAiC,MAAjC;;AACA,kBAAI,CAACtC,MAAL,CAAYgD,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WANL,EAOI,UAACP,KAAD,EAAW;AACTtB,mBAAO,CAACC,GAAR,CAAYqB,KAAZ;;AACA,kBAAI,CAAC3C,MAAL,CAAY2C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYC,OAA9B,EAAuC,OAAvC,EAFS,CAGT;;AACD,WAXL;AAcA,eAAK3C,OAAL,CAAaiC,IAAb;AACD;;;4CAEmB;AAAA;;AAClB,eAAKjC,OAAL,CAAa0B,IAAb;AAEA,cAAIwB,kBAAJ;;AAEA,cAAIC,MAAM,CAACC,IAAP,CAAY,KAAKrC,gBAAjB,EAAmC0B,MAAnC,KAA8C,CAAlD,EAAqD;AACnD,gBAAIY,KAAK,GAAG,CAAZ;;AACA,iBAAK,IAAIC,IAAT,IAAiB,KAAKvC,gBAAtB,EAAwC;AACtC,kBAAI,KAAKA,gBAAL,CAAsBwC,cAAtB,CAAqCD,IAArC,CAAJ,EAAgD,EAAED,KAAF;AACjD;;AACD,gBAAI,KAAKtC,gBAAL,CAAsBsC,KAAK,GAAG,CAA9B,CAAJ,EAAsC;AACpCH,gCAAkB,GAAG,KAAKnC,gBAAL,CAAsBsC,KAAK,GAAG,CAA9B,EAAiC7C,GAAtD;AACD;AACF,WARD,MAQO;AACL,mBAAO,KAAKT,MAAL,CAAY2C,KAAZ,CAAkB,iBAAlB,EAAqC,OAArC,CAAP;AACD;;AAED,cAAIc,OAAO,GAAG,MAAH,OAAG,CAAH,kBAAQ,KAAKjE,IAAL,CAAUyD,KAAlB,CAAG,EAAoB;AAAES,mBAAO,EAAE,KAAKlC;AAAhB,WAApB,CAAd;AACA,eAAK3B,iBAAL,CAAuBmD,SAAvB,CAAiCS,OAAjC,EAA0CN,kBAA1C,EAA8DtB,SAA9D,CACE,UAACW,GAAD,EAAS;AACP,kBAAI,CAACxC,MAAL,CAAYyC,IAAZ,CAAiBD,GAAG,CAAC,SAAD,CAApB,EAAiC,MAAjC;;AACA,kBAAI,CAACtC,MAAL,CAAYgD,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAJH,EAKE,UAACP,KAAD,EAAW;AACTtB,mBAAO,CAACC,GAAR,CAAYqB,KAAZ;;AACA,kBAAI,CAAC3C,MAAL,CAAY2C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYC,OAA9B,EAAuC,OAAvC,EAFS,CAGT;;AACD,WATH;AAYA,eAAK3C,OAAL,CAAaiC,IAAb;AACD;;;mCAEU;AACT,cAAI,KAAKX,QAAL,KAAkB,OAAtB,EAA+B;AAC7B,iBAAKoC,cAAL;AACD,WAFD,MAEO,IAAI,KAAKpC,QAAL,KAAkB,UAAtB,EAAkC;AACvC,iBAAKqC,iBAAL;AACD,WAFM,MAEA,IAAI,KAAKrC,QAAL,KAAkB,SAAtB,EAAiC,CACvC;AACF;;;;;;;uBAnSU7B,kB,EAAkB,2H,EAAA,gI,EAAA,iJ,EAAA,2I,EAAA,qI,EAAA,yH,EAAA,8H,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,c;AAAA,k3B;AAAA;AAAA;ADjB/B;;AACE;;AACE;;AAAsC;;AAAU;;AAChD;;AACE;;AACE;;AACE;;AAQE;AAAA,mBAAgB,IAAAmE,cAAA,QAAhB;AAAsC,WAAtC;;AAEF;;AACF;;AAEA;;AAkBA;;AAgBA;;AA+BA;;AA0CE;;AACE;;AACE;;AASA;;AAcA;;AAeF;;AACF;;AACF;;AAEA;;AACE;;AASF;;AACF;;AACA;;AACE;;AAEE;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;;AAIA;;AACF;;AACA;;AAKE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAjMY;;AAAA,yFAAqB,SAArB,EAAqB,UAArB,EAAqB,WAArB,EAAqB,gBAArB,EAAqB,aAArB,EAAqB,QAArB,EAAqB,YAArB,EAAqB,cAArB,EAAqB,UAArB,EAAqB,IAArB;;AAYF;;AAAA;;AAiBY;;AAAA;;AAgBA;;AAAA;;AA6EN;;AAAA,2FAAuB,SAAvB,EAAuB,YAAvB,EAAuB,OAAvB,EAAuB,sEAAvB,EAAuB,SAAvB,EAAuB,0BAAvB,EAAuB,YAAvB,EAAuB,2BAAvB;;AAOY;;AAAA;;AAeZ;;AAAA;;AAqBJ;;AAAA,wFAAoB,SAApB,EAAoB,WAApB,EAAoB,aAApB,EAAoB,QAApB,EAAoB,SAApB,EAAoB,yBAApB,EAAoB,YAApB,EAAoB,2BAApB;;AAcF;;AAAA;;AAMA;;AAAA;;;;;;;;;sEChLGpE,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTqE,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,KAAR;AAAeC,eAAS,EAAE;AAA1B,KAFqB,CAAvB;;QAQaC,oB;;;;;YAAAA;;;;yBAAAA,oB;AAAoB,O;AAAA,gBAHtB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;0HAApBG,oB,EAAoB;AAAA;AAAA,kBAFrB,4DAEqB;AAAA,O;AAFT,K;;;;;sEAEXA,oB,EAAoB;cAJhC,sDAIgC;eAJvB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiDzB;;;;;;AAsB4C;;;;;;AAAA;;;;;;AAeA;;;;;;AAAA;;;;;;;;AAW1C;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAMA;;AAA0B;;AAAM;;AAClC;;;;;;;;AAjDR;;AACE;;AAQE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAGA;;AACE;;AASF;;AAEA;;AAGA;;AACE;;AAOF;;AAEA;;AACE;;AAWF;;AACF;;AACF;;;;;;AAjDI;;AAAA,gGAAuB,WAAvB,EAAuB,gBAAvB,EAAuB,YAAvB,EAAuB,aAAvB,EAAuB,OAAvB,EAAuB,YAAvB,EAAuB,YAAvB,EAAuB,IAAvB;;AAOmB;;AAAA,yFAAuB,QAAvB,EAAuB,IAAvB;;AAGA;;AAAA;;AAYA;;AAAA,2FAAyB,QAAzB,EAAyB,MAAzB;;AAGA;;AAAA;;AAUA;;AAAA;;;;;;;;AAkBvB;;AACE;;AACE;;AAAuC;;AAEzC;;AACA;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACA;;AAGE;AAAA;;AAAA;;AAAA,iBAAS,QAAAC,QAAA,OAAT;AAAwB,SAAxB;;AAEA;;AACF;;AACF;;AACF;;;;;;;;QClIWC,gB;AAWX,gCACUC,aADV,EAEU9E,iBAFV,EAGUC,eAHV,EAIUC,aAJV,EAKU6E,YALV,EAMU5E,MANV,EAOUC,OAPV,EAQU4E,eARV,EASEC,KATF,EASuB;AAAA;;AAAA;;AARb,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAA9E,iBAAA,GAAAA,iBAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAA6E,YAAA,GAAAA,YAAA;AACA,aAAA5E,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAA4E,eAAA,GAAAA,eAAA;AAjBV,aAAAE,KAAA,GAAQ,EAAR;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,MAAA,GAAS,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAT;AACA,aAAAC,MAAA,GAAS,CAAT;AACA,aAAAC,aAAA,GAAgB,EAAhB;AAiGA,aAAAC,cAAA,GAAiC;AAC/BC,cAAI,EAAE,KADyB;AAE/BC,4BAAkB,EAAE,UAFW;AAG/BC,iBAAO,EAAE;AACPC,iBAAK,EAAE;AACLC,yBAAW,EAAE;AADR;AADA;AAHsB,SAAjC;AAlFEZ,aAAK,CAACa,MAAN,CAAa9D,SAAb,CAAuB,UAAC+D,GAAD,EAAS;AAC9B,gBAAI,CAACC,OAAL;AACD,SAFD;AAGD;;;;kCAES;AAAA;;AACR,eAAKlB,aAAL,CAAmB/C,MAAnB;AAEA,eAAK3B,OAAL,CAAa0B,IAAb;AAEA,eAAKgD,aAAL,CAAmBmB,OAAnB,CAA2BjE,SAA3B,CAAqC,UAAOC,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAC/CA,IAD+C;AAAA;AAAA;AAAA;;AAEjD,2BAAKiD,KAAL,GAAajD,IAAb;AAEAT,6BAAO,CAACC,GAAR,CAAYQ,IAAZ;AAEA,2BAAKiE,YAAL,GAAoB,IAAI,qEAAJ,CAAsBjE,IAAtB,CAApB;AANiD;AAOhC,6BAAM,KAAKiE,YAAL,CAAkBzC,KAAlB,EAAN;;AAPgC;AAOjD,2BAAK0B,SAP4C;AAQjD,2BAAKgB,WAAL,CAAiB;AACfb,8BAAM,EAAE,CADO;AAEfF,6BAAK,EAAE,KAAKA;AAFG,uBAAjB;;AARiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAArC;AAeA,eAAKhF,OAAL,CAAaiC,IAAb;AACD;;;mCACO,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;oCAEiBd,K,EAAO;;;;;;yBACnB,KAAK2E,Y;;;;;;AACc,2BAAM,KAAKA,YAAL,CAAkBE,KAAlB,CAAwB7E,KAAxB,CAAN;;;AAArB,yBAAKgE,a;;;;;;;;;AAER;;;kCAGSc,Q,EAA4BC,E,EAAI;AACxC,eAAKC,MAAL,GAAcD,EAAd;AACA,eAAK1B,QAAL,GAAgB,KAAKG,YAAL,CAAkBjD,IAAlB,CAAuBuE,QAAvB,CAAhB;AACD;;;wCAEe;AAAA;;AACd,eAAKjG,OAAL,CAAa0B,IAAb;AAEA,eAAK8C,QAAL,CAAcvC,IAAd;AACA,eAAKyC,aAAL,CAAmB0B,SAAnB,CAA6B,KAAKD,MAAlC,EAA0CvE,SAA1C,CACE,UAACW,GAAD,EAAS;AACPnB,mBAAO,CAACC,GAAR,CAAYkB,GAAZ;;AACA,mBAAI,CAACxC,MAAL,CAAYyC,IAAZ,CAAiBD,GAAG,CAAC,SAAD,CAApB,EAAiC,MAAjC;;AACA,mBAAI,CAACuC,KAAL,GAAa,EAAb;;AAEA,mBAAI,CAACJ,aAAL,CAAmB/C,MAAnB;AACD,WAPH,EAQE,UAACe,KAAD,EAAW;AACTtB,mBAAO,CAACC,GAAR,CAAYqB,KAAZ;;AACA,mBAAI,CAAC3C,MAAL,CAAY2C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYC,OAA9B,EAAuC,OAAvC,EAFS,CAGT;;AACD,WAZH;AAeA,eAAK3C,OAAL,CAAaiC,IAAb;AACD;;;iCAWQoD,I,EAA2BgB,G,EAAc;AAChD,eAAKjB,cAAL,CAAoBC,IAApB,GAA2BA,IAA3B;;AACA,cAAIgB,GAAJ,EAAS;AACP,iBAAKjB,cAAL,CAAoBG,OAApB,CAA4BC,KAA5B,CAAkCC,WAAlC,GAAgDY,GAAhD;AACD;;AACD,eAAKzB,eAAL,CACG0B,IADH,CACQ,KAAKlB,cADb,EAC6B,SAD7B,EAEGxD,SAFH,CAEa,YAAM,CACf;AACD,WAJH;AAKA,eAAKgD,eAAL,CAAqB2B,GAArB,CAAyB,KAAKnB,cAA9B,EAA8CxD,SAA9C,CAAwD,UAAC4E,OAAD,EAAa;AACnEpF,mBAAO,CAACC,GAAR,CAAYmF,OAAZ;AACD,WAFD;AAGD;;;;;;;uBA9HU/B,gB,EAAgB,gI,EAAA,iJ,EAAA,2I,EAAA,qI,EAAA,mI,EAAA,yH,EAAA,8H,EAAA,+H,EAAA,gI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,8vD;AAAA;AAAA;ADvB7B;;AACE;;AACE;;AACE;;AACE;;AAAM;;;;;;AAAuC;;AAC/C;;AACA;;AACE;;AACE;;AACE;;AACE;;AAQE;;AAA0B;;AAAI;;AAChC;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;;;;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACG;;AAAU;;AAEf;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAiC;AAAA,mBAAS,IAAAgC,QAAA,CAAS,MAAT,CAAT;AAAyB,WAAzB;;AAC/B;;AACF;;AAYF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAyDA;;;;;;AAzHc;;AAAA;;AAkBI;;AAAA;;AAGA;;AAAA;;AAQC;;AAAA;;AA6BG;;AAAA;;;;;;;;;;sECvCThC,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTX,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8Ba0C,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBAXf,CACP,4DADO,EAEP,4EAFO,EAGP,2GAHO,EAIP,oEAAgBC,OAAhB,EAJO,EAKP,oEAAcA,OAAd,EALO,EAMP,gEAAYA,OAAZ,EANO,EAOP,4DAPO,EAQP,mEARO,CAWe;;;;0HAAbD,a,EAAa;AAAA,uBAZT,mEAYS,EAZS,mFAYT;AAZ2B,kBAEjD,4DAFiD,EAGjD,4EAHiD,EAIjD,2GAJiD,EAIjC,mEAJiC,EAIjC,mEAJiC,EAIjC,+DAJiC,EAQjD,4DARiD,EASjD,mEATiD;AAY3B,O;AAHV,K;;;;;sEAGHA,a,EAAa;cAbzB,sDAayB;eAbhB;AACRE,sBAAY,EAAE,CAAC,mEAAD,EAAmB,mFAAnB,CADN;AAERtC,iBAAO,EAAE,CACP,4DADO,EAEP,4EAFO,EAGP,2GAHO,EAIP,oEAAgBqC,OAAhB,EAJO,EAKP,oEAAcA,OAAd,EALO,EAMP,gEAAYA,OAAZ,EANO,EAOP,4DAPO,EAQP,mEARO;AAFD,S;AAagB,Q;;;;;;;;;;;;;;;;;;AC9B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaE,c;AACX,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEpB,aAAAjB,OAAA,GAAU,IAAI,oDAAJ,CAAoB,IAApB,CAAV;AAFwC;;;;iCAI/B;AAAA;;AACP,iBAAO,KAAKiB,IAAL,CAAUP,GAAV,CAAc,4DAAU,SAAxB,EAAmC3E,SAAnC,CACL,UAACW,GAAD,EAAS;AACP,gBAAIA,GAAG,CAAC,MAAD,CAAP,EAAiB;AACf,qBAAI,CAACsD,OAAL,CAAakB,IAAb,CAAkBxE,GAAG,CAAC,MAAD,CAArB;AACD;AACF,WALI,EAML,UAACG,KAAD,EAAW;AACTtB,mBAAO,CAACC,GAAR,CAAYqB,KAAZ,EADS,CAET;AACD,WATI,CAAP;AAWD;;;kCAESyD,M,EAAQ;AAChB,iBAAO,KAAKW,IAAL,WAAiB,8EAAqBX,MAArB,CAAjB,CAAP;AACD;;;;;;;uBArBUU,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVG,oBAAU,EAAE;AADF,S;AAGe,Q","file":"pages-profits-profits-module-es5.js","sourcesContent":["<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23 grid-center-noGutter content\">\n    <div class=\"title col-24 grid-center\">Add Profit</div>\n    <div class=\"form col-23\">\n      <div class=\"grid-middle-noGutter\">\n        <div class=\"col-24 grid-noGutter\">\n          <app-select\n            class=\"col-11_sm-24\"\n            [label]=\"'Profit on'\"\n            [fieldId]=\"'profitOn'\"\n            [ItemsList]=\"profitOnList\"\n            [placeholder]=\"'Select'\"\n            [fieldClass]=\"'col-18_md-24'\"\n            [required]=\"true\"\n            (itemselected)=\"selectProfitOn($event)\"\n          >\n          </app-select>\n        </div>\n\n        <ng-container\n          *ngIf=\"profitOn === 'Store' || profitOn === 'Category'\"\n        >\n          <div class=\"col-24 grid-noGutter\">\n            <app-select\n              class=\"col-11_sm-24\"\n              [label]=\"'Stores'\"\n              [fieldId]=\"'stores'\"\n              [ItemsList]=\"selectStoresList\"\n              [placeholder]=\"'Choose store'\"\n              [fieldClass]=\"'col-18_md-24'\"\n              [required]=\"true\"\n              (itemselected)=\"selectStore($event)\"\n            >\n            </app-select>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"profitOn === 'Product'\">\n          <div class=\"col-24 grid-noGutter\">\n            <app-select\n              class=\"col-11_sm-24\"\n              [label]=\"'Products'\"\n              [fieldId]=\"'products'\"\n              [ItemsList]=\"selectProductsList\"\n              [placeholder]=\"'Choose product'\"\n              [fieldClass]=\"'col-18_md-24'\"\n              [required]=\"true\"\n              (itemselected)=\"selectProduct($event)\"\n            >\n            </app-select>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"profitOn === 'Category'\">\n          <div class=\"col-24 grid-noGutter\">\n            <app-select\n              class=\"col-11_sm-24\"\n              [label]=\"'Category'\"\n              [fieldId]=\"'parentCategory'\"\n              [ItemsList]=\"selectBaseCategoriesList\"\n              [placeholder]=\"'Choose parent category'\"\n              [fieldClass]=\"'col-18_md-24'\"\n              [required]=\"true\"\n              (itemselected)=\"selectBaseCategory($event)\"\n            >\n            </app-select>\n          </div>\n          <ng-container *ngFor=\"let category of subCategories; index as i\">\n            <div class=\"col-24 grid-noGutter\">\n              <app-select\n                class=\"col-11_sm-24\"\n                [label]=\"'sub category'\"\n                [fieldId]=\"'subCategory' + (i + 1).toString()\"\n                [ItemsList]=\"subCategories[i]\"\n                [placeholder]=\"'Choose parent category'\"\n                [fieldClass]=\"'col-18_md-24'\"\n                [required]=\"true\"\n                (itemselected)=\"selectSubCategory(i, $event)\"\n              >\n              </app-select>\n            </div>\n          </ng-container>\n        </ng-container>\n\n        <div class=\"col-24 grid-noGutter\">\n          <!-- <div class=\"col-11_sm-24 grid-noGutter\">\n            <div class=\"col-24 grid\">\n              <app-input-radio\n                class=\"col-24\"\n                [label]=\"'Profit type'\"\n                [fieldId]=\"'profileType'\"\n                [items]=\"['percent', 'value']\"\n                [control]=\"form.get('profitType')\"\n                [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n              ></app-input-radio>\n\n              <ng-container *ngIf=\"form.get('profitType').value === 'value'\">\n                <app-input-text\n                  class=\"col-24\"\n                  (change)=\"form.get('profitPercentage').patchValue(0)\"\n                  [label]=\"'Profit value'\"\n                  [fieldId]=\"'profitValue'\"\n                  type=\"number\"\n                  [placeholder]=\"'Profit from this category'\"\n                  [control]=\"form.get('profitValue')\"\n                  [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n                >\n                </app-input-text>\n              </ng-container>\n\n              <ng-container *ngIf=\"form.get('profitType').value === 'percent'\">\n                <app-input-text\n                  class=\"col-24\"\n                  (change)=\"form.get('profitValue').patchValue(0)\"\n                  [label]=\"'Profit percent'\"\n                  [fieldId]=\"'profitPercentage'\"\n                  type=\"number\"\n                  [placeholder]=\"'Profit from this category'\"\n                  [control]=\"form.get('profitPercentage')\"\n                  [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n                >\n                </app-input-text>\n              </ng-container>\n            </div>\n          </div> -->\n\n          <div class=\"col-11_sm-24\">\n            <div class=\"col-24 grid\">\n              <app-input-radio\n                class=\"col-24\"\n                [label]=\"'Profit type'\"\n                [fieldId]=\"'profitType'\"\n                [items]=\"['percent', 'value']\"\n                [control]=\"form.get('profitType')\"\n                [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n              ></app-input-radio>\n\n              <ng-container *ngIf=\"form.get('profitType').value === 'value'\">\n                <app-input-text\n                  class=\"col-24\"\n                  (change)=\"form.get('profitPercentage').patchValue(0)\"\n                  [label]=\"'Profit value'\"\n                  [fieldId]=\"'profitValue'\"\n                  type=\"number\"\n                  [placeholder]=\"'Profit on this category'\"\n                  [control]=\"form.get('profitValue')\"\n                  [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n                >\n                </app-input-text>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"form.get('profitType').value === 'percent'\"\n              >\n                <app-input-text\n                  class=\"col-24\"\n                  (change)=\"form.get('profitValue').patchValue(0)\"\n                  [label]=\"'Profit percent'\"\n                  [fieldId]=\"'profitPercentage'\"\n                  type=\"number\"\n                  [placeholder]=\"'Profit on this category'\"\n                  [control]=\"form.get('profitPercentage')\"\n                  [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n                >\n                </app-input-text>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-24 grid-noGutter\">\n          <app-date-picker\n            class=\"col-11_sm-24\"\n            [label]=\"'Valid to'\"\n            [fieldId]=\"'validTill'\"\n            [placeholder]=\"'End at'\"\n            [control]=\"form.get('validTill')\"\n            [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n          >\n          </app-date-picker>\n        </div>\n      </div>\n      <div class=\"grid-right\">\n        <button\n          type=\"submit\"\n          (click)=\"onSubmit()\"\n          class=\"btn col-3_sm-5_xs-6 color1 round\"\n          [disabled]=\"!form.valid\"\n        >\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          [routerLink]=\"['/profits']\"\n          class=\"btn col-3_sm-5_xs-6 color2 round\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, AfterViewInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\nimport { ProfitsService } from '../profits.service';\nimport { ProductsService } from '../../products//products.service';\nimport { CategoriesService } from '../../categories/categories.service';\nimport { StoresService } from '../../stores/stores.service';\nimport { InputSelectItem } from 'src/app/models/InputSelectItem';\n\n@Component({\n  selector: 'app-add-profit',\n  templateUrl: './add-profit.component.html',\n  styleUrls: ['./add-profit.component.scss'],\n})\nexport class AddProfitComponent implements AfterViewInit {\n  constructor(\n    private fb: FormBuilder,\n    private profitsService: ProfitsService,\n    private categoriesService: CategoriesService,\n    private productsService: ProductsService,\n    private storesService: StoresService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {}\n\n  form = this.fb.group({\n    profitType: [''],\n    profitValue: [0],\n    profitPercentage: [0],\n    validTill: [''],\n  });\n\n  ngAfterViewInit(): void {\n    this.getProductsList();\n    this.getbaseCategoriesList();\n    this.getStoresList();\n  }\n\n  profitOnList: InputSelectItem[] = [\n    { _id: '1', nameEn: 'Product', nameAr: '' },\n    { _id: '2', nameEn: 'Category', nameAr: '' },\n    { _id: '3', nameEn: 'Store', nameAr: '' },\n  ];\n\n  profitOn;\n  products = [];\n  categories = [];\n  stores = [];\n  selectProfitOn(event) {\n    if (event) {\n      console.log(event);\n      this.profitOn = event.nameEn;\n      if (this.profitOn === 'Product') {\n        this.selectedStoreId = undefined;\n      } else if (this.profitOn === 'Category') {\n        this.selectedProductId = undefined;\n      } else if (this.profitOn === 'Store') {\n        this.selectedProductId = undefined;\n      }\n    }\n  }\n  ///////////////////////////////\n  // Product ///////////////////\n  selectProductsList: InputSelectItem[];\n  selectedProductId: String;\n  getProductsList() {\n    console.log('getting products');\n\n    this.spinner.show();\n\n    this.productsService.getAll();\n\n    this.productsService.products.subscribe(async (data) => {\n      if (data) {\n        this.selectProductsList = data.map((x) => {\n          return {\n            _id: x['_id'],\n            nameEn: `${x['name']}`,\n            nameAr: '',\n          };\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n  selectProduct(event) {\n    if (event) {\n      console.log(event);\n      this.selectedProductId = event._id;\n    }\n  }\n  // End Product\n  //////////////////////////////////\n\n  ///////////////////////////////\n  // Store ///////////////////\n  selectStoresList: InputSelectItem[];\n  selectedStoreId: String;\n  getStoresList() {\n    console.log('getting stores');\n\n    this.spinner.show();\n\n    this.storesService.getAll();\n\n    this.storesService.stores.subscribe(async (data) => {\n      if (data) {\n        this.selectStoresList = data.map((x) => {\n          return {\n            _id: x['_id'],\n            nameEn: `${x['name']}`,\n            nameAr: '',\n          };\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n  selectStore(event) {\n    if (event) {\n      console.log(event);\n      this.selectedStoreId = event._id;\n    }\n  }\n  // End Product\n  //////////////////////////////////\n\n  ///////////////////////////////\n  // Category ///////////////////\n  // Start select dropdown\n  selectBaseCategoriesList: InputSelectItem[];\n  subCategories = [];\n  selectedCategory = {};\n  getbaseCategoriesList() {\n    console.log('getting categories');\n\n    this.spinner.show();\n\n    this.categoriesService.getBaseCategories();\n\n    this.categoriesService.baseCategories.subscribe((data) => {\n      if (data) {\n        this.selectBaseCategoriesList = data.map((x) => {\n          return {\n            _id: x['_id'],\n            nameEn: `${x['name']['en']}`,\n            nameAr: `${x['name']['ar']}`,\n          };\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n  selectBaseCategory(event) {\n    this.spinner.show();\n\n    if (event) {\n      this.selectedCategory = {};\n      this.selectedCategory[0] = event;\n\n      this.categoriesService.getOne(event._id).subscribe(\n        (res) => {\n          this.toastr.info(res['message'], 'Info');\n          this.subCategories = [];\n          if (res['data'].categories) {\n            if (res['data'].categories.length > 0) {\n              this.subCategories[0] = res['data'].categories.map((x) => {\n                return {\n                  _id: x['_id'],\n                  nameEn: `${x['name']['en']}`,\n                  nameAr: `${x['name']['ar']}`,\n                };\n              });\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(error.error.message, 'Error');\n          // this.error.next(error.error.message);\n        }\n      );\n    }\n\n    this.spinner.hide();\n  }\n  // End select dropdown\n\n  selectSubCategory(fieldIndex, event) {\n    this.spinner.show();\n\n    // delete all next selected categories to index\n    for (const key in this.selectedCategory) {\n      if (key > fieldIndex + 1) {\n        delete this.selectedCategory[key];\n      }\n    }\n\n    // delete all next subcategories\n    this.subCategories.splice(fieldIndex + 1);\n\n    if (event) {\n      // selected category of index = event\n      this.selectedCategory[fieldIndex + 1] = event;\n\n      this.categoriesService.getOne(event._id).subscribe(\n        (res) => {\n          this.toastr.info(res['message'], 'Info');\n          if (res['data'].categories) {\n            if (res['data'].categories.length > 0) {\n              this.subCategories[fieldIndex + 1] = res['data'].categories.map(\n                (x) => {\n                  return {\n                    _id: x['_id'],\n                    nameEn: `${x['name']['en']}`,\n                    nameAr: `${x['name']['ar']}`,\n                  };\n                }\n              );\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(error.error.message, 'Error');\n          // this.error.next(error.error.message);\n        }\n      );\n    } else {\n      // selected category of index = event\n      delete this.selectedCategory[fieldIndex + 1];\n    }\n\n    this.spinner.hide();\n  }\n  // End Category\n  //////////////////////////////////\n\n  addStoreProfit() {\n    if (!this.selectedStoreId || this.selectedStoreId === '') {\n      return this.toastr.error('Select Store', 'Error');\n    }\n    this.spinner.show();\n\n    this.storesService\n      .addProfit(this.form.value, this.selectedStoreId)\n      .subscribe(\n        (res) => {\n          this.toastr.info(res['message'], 'Info');\n          this.router.navigate(['/profits']);\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(error.error.message, 'Error');\n          // this.error.next(error.error.message);\n        }\n      );\n\n    this.spinner.hide();\n  }\n\n  addCategoryProfit() {\n    this.spinner.show();\n\n    let selectedCategoryId;\n\n    if (Object.keys(this.selectedCategory).length !== 0) {\n      var count = 0;\n      for (var prop in this.selectedCategory) {\n        if (this.selectedCategory.hasOwnProperty(prop)) ++count;\n      }\n      if (this.selectedCategory[count - 1]) {\n        selectedCategoryId = this.selectedCategory[count - 1]._id;\n      }\n    } else {\n      return this.toastr.error('Select Category', 'Error');\n    }\n\n    let newForm = { ...this.form.value, storeId: this.selectedStoreId };\n    this.categoriesService.addProfit(newForm, selectedCategoryId).subscribe(\n      (res) => {\n        this.toastr.info(res['message'], 'Info');\n        this.router.navigate(['/profits']);\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n\n  onSubmit() {\n    if (this.profitOn === 'Store') {\n      this.addStoreProfit();\n    } else if (this.profitOn === 'Category') {\n      this.addCategoryProfit();\n    } else if (this.profitOn === 'Product') {\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfitsComponent } from './profits.component';\nimport { AddProfitComponent } from './add-profit/add-profit.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfitsComponent },\n  { path: 'add', component: AddProfitComponent },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfitsRoutingModule {}\n","<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23\" style=\"margin-top: 20px\">\n    <div class=\"card\">\n      <div class=\"card-header grid-noGutter\">\n        <span>{{ \"Profits\" | lowercase | translate }}</span>\n      </div>\n      <div class=\"card-body grid-center-noGutter\">\n        <div class=\"col-24 grid-spaceBetween-noGutter\">\n          <div class=\"card xs-hidden\">\n            <div class=\"card-body\">\n              <span\n                style=\"\n                  display: inline-block;\n                  background-color: #4899c2;\n                  padding: 15px;\n                  color: white;\n                \"\n              >\n                <i class=\"material-icons\">home</i>\n              </span>\n              <div style=\"display: inline-block; margin: 0 10px\">\n                <div style=\"color: #20a8d8; font-size: 18px; font-weight: 600\">\n                  {{ items.length }}\n                </div>\n                <div style=\"color: #73818f; font-size: 80%; font-weight: 700\">\n                  {{ \"Profits\" | lowercase | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-top xs-24 grid-noGutter\" style=\"margin-top: 15px\">\n            <div class=\"grid-column-noGutter\">\n              <div class=\"\">\n                <a [routerLink]=\"['./add']\" class=\"btn color1 round addbtn\"\n                  >Add Profit</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid-right-noGutter\" style=\"margin-top: 20px\">\n      <button class=\"btn color5 round\" (click)=\"exportAs('xlsx')\">\n        Export\n      </button>\n      <!-- <div class=\"dropdown\">\n        <button class=\"dropbtn\">Export</button> -->\n      <!-- <div class=\"dropdown-content\">\n          <a (click)=\"exportAs('xlsx')\">xlsx</a>\n          <a (click)=\"exportAs('pdf', 'landscape')\">pdf</a> -->\n      <!-- <a (click)=\"exportAs('png')\">png</a>\n                  <a (click)=\"exportAs('txt')\">txt</a>\n                  <a (click)=\"exportAs('csv')\">csv</a>\n                  <a (click)=\"exportAs('xml')\">xml</a> -->\n      <!-- </div> -->\n      <!-- </div> -->\n    </div>\n\n    <div class=\"grid-center-noGutter\" style=\"margin-top: 20px\">\n      <ng-container>\n        <ng-container *ngTemplateOutlet=\"table\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #table>\n  <div>\n    <data-table\n      id=\"my-table\"\n      title=\"List of Profits\"\n      [items]=\"tableElements\"\n      [itemCount]=\"itemCount\"\n      [pageLimits]=\"limits\"\n      [limit]=\"limit\"\n      [pagination]=\"true\"\n      (reload)=\"reloadItems($event)\"\n    >\n      <data-table-column [property]=\"'profitOn'\" [header]=\"'On'\">\n      </data-table-column>\n\n      <data-table-column [header]=\"'Name'\">\n        <ng-template #dataTableCell let-item=\"item\">{{\n          item.store\n            ? item.store.name\n            : item.category\n            ? item.category.name\n            : item.product\n            ? item.product.name\n            : \"-\"\n        }}</ng-template>\n      </data-table-column>\n\n      <data-table-column [property]=\"'profitType'\" [header]=\"'Type'\">\n      </data-table-column>\n\n      <data-table-column [header]=\"'Value'\">\n        <ng-template #dataTableCell let-item=\"item\">{{\n          item.profitValue !== 0\n            ? item.profitValue + \"EGP\"\n            : item.profitPercentage\n            ? item.profitPercentage + \"%\"\n            : \"0\"\n        }}</ng-template>\n      </data-table-column>\n\n      <data-table-column [width]=\"80\" header=\"Actions\">\n        <ng-template #dataTableCell let-item=\"item\" class=\"grid-center\">\n          <a\n            (click)=\"openModal(templateDelete, item._id)\"\n            class=\"trash\"\n            tooltip=\"Delete\"\n            placement=\"bottom\"\n            triggers=\"mouseenter:mouseleave\"\n          >\n            <i class=\"material-icons\">delete</i>\n          </a>\n        </ng-template>\n      </data-table-column>\n    </data-table>\n  </div>\n</ng-template>\n\n<ng-template #templateDelete id=\"template2\">\n  <div class=\"modal-header\">\n    <h4 style=\"color: red; font-weight: bold; justify-content: center\">\n      <i class=\"fa fa-trash fa-lg mt-4\"></i> Do you want to Delete This Element\n      ?\n    </h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"deleteElement()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DataTableResource } from 'angular7-data-table';\n\nimport { ProfitsService } from './profits.service';\nimport { ProductsService } from '../products//products.service';\nimport { CategoriesService } from '../categories/categories.service';\nimport { StoresService } from '../stores/stores.service';\n\nimport {\n  ExportAsService,\n  ExportAsConfig,\n  SupportedExtensions,\n} from 'ngx-export-as';\n\n@Component({\n  selector: 'app-profits',\n  templateUrl: './profits.component.html',\n  styleUrls: ['./profits.component.scss'],\n})\nexport class ProfitsComponent implements OnInit {\n  itemResource;\n  items = [];\n  itemCount = 0;\n  limit = 20;\n  limits = [20, 25, 50];\n  offset = 1;\n  tableElements = [];\n\n  modalRef: any;\n\n  constructor(\n    private profitService: ProfitsService,\n    private categoriesService: CategoriesService,\n    private productsService: ProductsService,\n    private storesService: StoresService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private exportAsService: ExportAsService,\n    route: ActivatedRoute\n  ) {\n    route.params.subscribe((val) => {\n      this.getData();\n    });\n  }\n\n  getData() {\n    this.profitService.getAll();\n\n    this.spinner.show();\n\n    this.profitService.profits.subscribe(async (data) => {\n      if (data) {\n        this.items = data;\n\n        console.log(data);\n\n        this.itemResource = new DataTableResource(data);\n        this.itemCount = await this.itemResource.count();\n        this.reloadItems({\n          offset: 0,\n          limit: this.limit,\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n  ngOnInit(): void {\n    // this.profitService.getAll();\n    // this.spinner.show();\n    // this.profitService.profits.subscribe(async (data) => {\n    //   if (data) {\n    //     this.items = data;\n    //     if ( data.length < this.limits[0] - 1) {\n    //       this.limit = data.length + 1;\n    //       this.limits[0] = data.length + 1;\n    //     }\n    //     this.itemResource = new DataTableResource(data);\n    //     this.itemCount = await this.itemResource.count();\n    //     this.reloadItems({\n    //       offset: 0,\n    //       limit: this.limit,\n    //     });\n    //   }\n    // });\n    // this.spinner.hide();\n  }\n\n  async reloadItems(event) {\n    if (this.itemResource) {\n      this.tableElements = await this.itemResource.query(event);\n    }\n  }\n\n  itemId;\n  openModal(template: TemplateRef<any>, id) {\n    this.itemId = id;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  deleteElement() {\n    this.spinner.show();\n\n    this.modalRef.hide();\n    this.profitService.deleteOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.profitService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n\n  exportAsConfig: ExportAsConfig = {\n    type: 'pdf',\n    elementIdOrContent: 'my-table',\n    options: {\n      jsPDF: {\n        orientation: 'landscape',\n      },\n    },\n  };\n  exportAs(type: SupportedExtensions, opt?: string) {\n    this.exportAsConfig.type = type;\n    if (opt) {\n      this.exportAsConfig.options.jsPDF.orientation = opt;\n    }\n    this.exportAsService\n      .save(this.exportAsConfig, 'Profits')\n      .subscribe(() => {\n        // save started\n      });\n    this.exportAsService.get(this.exportAsConfig).subscribe((content) => {\n      console.log(content);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { DataTableModule } from 'angular7-data-table';\nimport { ExportAsModule } from 'ngx-export-as';\n\nimport { ProfitsRoutingModule } from './profits-routing.module';\n\nimport { FormFieldsModule } from 'src/app/reusable-components/form-fields/form-fields.module';\n\nimport { ProfitsComponent } from './profits.component';\nimport { AddProfitComponent } from './add-profit/add-profit.component';\n\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [ProfitsComponent, AddProfitComponent],\n  imports: [\n    CommonModule,\n    ProfitsRoutingModule,\n    FormFieldsModule,\n    DataTableModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    ExportAsModule,\n    SharedModule,\n  ],\n})\nexport class ProfitsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { baseUrl } from '../../config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfitsService {\n  constructor(private http: HttpClient) {}\n\n  profits = new BehaviorSubject(null);\n\n  getAll() {\n    return this.http.get(baseUrl + '/profit').subscribe(\n      (res) => {\n        if (res['data']) {\n          this.profits.next(res['data']);\n        }\n      },\n      (error) => {\n        console.log(error);\n        // this.error.next(error.error.message);\n      }\n    );\n  }\n\n  deleteOne(itemId) {\n    return this.http.delete(baseUrl + `/profit/${itemId}`);\n  }\n}\n"]}