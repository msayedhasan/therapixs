{"version":3,"sources":["webpack:///src/app/models/order.ts","webpack:///src/app/pages/orders/orders-routing.module.ts","webpack:///src/app/pages/orders/orders.component.html","webpack:///src/app/pages/orders/orders.component.ts","webpack:///src/app/pages/orders/orders.module.ts","webpack:///src/app/pages/orders/orders.service.ts"],"names":["Order","routes","path","component","OrdersRoutingModule","forChild","imports","exports","modalRef","OrdersComponent","ordersService","modalService","toastr","items","itemCount","limit","limits","offset","tableElements","getAll","orders","subscribe","data","console","log","itemResource","count","reloadItems","event","query","FilterRecord","filter","item","i","products","length","product","name","toLowerCase","includes","template","id","itemId","show","hide","confirmOne","res","info","error","message","shipOne","deliverOne","FilterRecords","selector","templateUrl","styleUrls","OrdersModule","forRoot","declarations","OrdersService","http","get","next","form","post","providedIn"],"mappings":"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","file":"pages-orders-orders-module-es5.js","sourcesContent":["class Order {\n  _id: string;\n  product: string;\n  orderedBy: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\n\nconst routes: Routes = [{ path: '', component: OrdersComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersRoutingModule {}\n","<div class=\"grid-center-noGutter\">\n    <div class=\"col-20_sm-22_xs-23\" style=\"margin-top: 20px\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <span>Orders Records</span>\n            </div>\n            <div class=\"card-body grid-center-noGutter\">\n                <div class=\"col-24 grid-noGutter\">\n                    <div class=\"card col-5_md-8_sm-10_xs-hidden\">\n                        <div class=\"card-body\">\n                            <span style=\"\n                  display: inline-block;\n                  background-color: #4899c2;\n                  padding: 15px;\n                  color: white;\n                \">\n                <i class=\"material-icons\">home</i>\n              </span>\n                            <div style=\"display: inline-block; margin: 0 10px\">\n                                <div style=\"color: #20a8d8; font-size: 18px; font-weight: 600\">\n                                    {{ items.length }}\n                                </div>\n                                <div style=\"color: #73818f; font-size: 80%; font-weight: 700\">\n                                    Orders\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-24 grid-center-noGutter\" style=\"margin-top: 20px\">\n                    <div class=\"col-24 grid-noGutter\">\n                        <div class=\"col-12_xs-24 grid-left-noGutter\" style=\"margin-left: 10px\">\n                            <label class=\"col-24\" style=\"font-weight: bold\" for=\"\">Search for</label\n              >\n              <div class=\"col-24 grid\">\n                <input\n                  type=\"text\"\n                  #FilterRecord\n                  class=\"form-control col\"\n                  placeholder=\"e.g. Name\"\n                />\n                <a\n                  (click)=\"FilterRecords(FilterRecord.value)\"\n                  class=\"btn col-4 color1 round search\"\n                >\n                  <span class=\"md-hidden\">Search</span>\n                  <span><i class=\"material-icons\">search</i></span>\n                </a>\n                <a\n                  (click)=\"FilterRecords(''); FilterRecord.value = ''\"\n                  class=\"btn col-4 color2 round search\"\n                >\n                  <span class=\"md-hidden\">Clear</span>\n                  <span><i class=\"material-icons\">clear</i></span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid-center-noGutter\" style=\"margin-top: 20px\">\n      <ng-container>\n        <ng-container *ngTemplateOutlet=\"table\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #table>\n  <div>\n    <data-table\n      id=\"my-table\"\n      title=\"List of Orders\"\n      [items]=\"tableElements\"\n      [itemCount]=\"itemCount\"\n      [pageLimits]=\"limits\"\n      [limit]=\"limit\"\n      [pagination]=\"true\"\n      (reload)=\"reloadItems($event)\"\n      [noDataMessage]=\"'No data to show'\"\n    >\n      <data-table-column [header]=\"'Product'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          <div *ngFor=\"let item of item.products\">\n            {{ item.product.name }}\n          </div>\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [header]=\"'Store'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          {{ item.products[0].product.store?.name }}\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [header]=\"'Buyer'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          {{ item.orderedBy.name }}\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [width]=\"70\" [header]=\"'Status'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          <div>\n            <ng-container *ngIf=\"item.refund\"\n              ><span class=\"badge blocked\">refund</span></ng-container\n            >\n            <ng-container\n              *ngIf=\"item.confirmed && !item.shipped && !item.delivered\"\n              ><span class=\"badge confirmed\">confirmed</span>\n            </ng-container>\n            <ng-container *ngIf=\"item.shipped && !item.delivered\"\n              ><span class=\"badge active\">shipped</span></ng-container\n            >\n            <ng-container *ngIf=\"item.delivered\"\n              ><span class=\"badge active\">delivered</span>\n            </ng-container>\n            <ng-container *ngIf=\"!item.confirmed\"\n              ><span class=\"badge deleted\">Waiting</span>\n            </ng-container>\n          </div>\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [width]=\"150\" [property]=\"'_id'\" header=\"Actions\">\n        <ng-template #dataTableCell let-item=\"item\" class=\"grid-center\">\n          <ng-container *ngIf=\"!item.confirmed\">\n            <a\n              (click)=\"openModal(templateConfirm, item._id)\"\n              class=\"lock\"\n              tooltip=\"Confirm\"\n              placement=\"bottom\"\n              triggers=\"mouseenter:mouseleave\"\n            >\n              <i class=\"material-icons\">touch_app</i>\n            </a>\n          </ng-container>\n          <ng-container *ngIf=\"item.confirmed && !item.shipped\"\n            ><a\n              (click)=\"openModal(templateShip, item._id)\"\n              class=\"lock\"\n              tooltip=\"shipped\"\n              placement=\"bottom\"\n              triggers=\"mouseenter:mouseleave\"\n            >\n              <i class=\"material-icons\">local_shipping</i>\n            </a>\n          </ng-container>\n          <ng-container\n            *ngIf=\"item.confirmed && item.shipped && !item.delivered\"\n          >\n            <a\n              (click)=\"openModal(templateDeliver, item._id)\"\n              class=\"lock\"\n              tooltip=\"delivered\"\n              placement=\"bottom\"\n              triggers=\"mouseenter:mouseleave\"\n            >\n              <i class=\"material-icons\">check</i>\n            </a>\n          </ng-container>\n        </ng-template>\n      </data-table-column>\n    </data-table>\n  </div>\n</ng-template>\n\n<ng-template #templateConfirm id=\"template2\">\n  <div class=\"modal-header\">\n    <h4 style=\"font-weight: bold; justify-content: center\">\n      Do you want to confirm This order?\n    </h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"confirmElement()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #templateShip id=\"template2\">\n  <div class=\"modal-header\">\n    <h4 style=\"font-weight: bold; justify-content: center\">\n      Has this order been shipped?\n    </h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"shipElement()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #templateDeliver id=\"template2\">\n  <div class=\"modal-header\">\n    <h4 style=\"font-weight: bold; justify-content: center\">\n      Has this order been delivered?\n    </h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"deliverElement()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataTableResource } from 'angular7-data-table';\n\nimport { OrdersService } from './orders.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n})\nexport class OrdersComponent implements OnInit {\n  itemResource;\n  items = [];\n  itemCount = 0;\n  limit = 20;\n  limits = [20, 25, 50];\n  offset = 1;\n  tableElements = [];\n\n  modalRef: any;\n\n  constructor(\n    private ordersService: OrdersService,\n    private modalService: BsModalService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.ordersService.getAll();\n\n    this.ordersService.orders.subscribe(async (data) => {\n      if (data) {\n        console.log(data);\n        this.items = data;\n        this.itemResource = new DataTableResource(data);\n        this.itemCount = await this.itemResource.count();\n        this.reloadItems({\n          offset: 0,\n          limit: this.limit,\n        });\n      }\n    });\n  }\n\n  async reloadItems(event) {\n    if (this.itemResource) {\n      this.tableElements = await this.itemResource.query(event);\n    }\n  }\n\n  async FilterRecords(FilterRecord) {\n    this.tableElements = this.items;\n    if (FilterRecord !== '') {\n      this.tableElements = this.items.filter((item) => {\n        for (let i = 0; i < item.products.length; i++) {\n          item.products[i].product.name.toLowerCase().includes(FilterRecord);\n        }\n      });\n    }\n\n    this.itemResource = new DataTableResource(this.tableElements);\n    this.itemCount = await this.itemResource.count();\n    this.reloadItems({\n      offset: 0,\n      limit: this.limit,\n    });\n  }\n\n  itemId;\n  openModal(template: TemplateRef<any>, id) {\n    this.itemId = id;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  confirmElement() {\n    this.modalRef.hide();\n    this.ordersService.confirmOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n  }\n\n  shipElement() {\n    this.modalRef.hide();\n    this.ordersService.shipOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n  }\n\n  deliverElement() {\n    this.modalRef.hide();\n    this.ordersService.deliverOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataTableModule } from 'angular7-data-table';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { OrdersRoutingModule } from './orders-routing.module';\n\nimport { OrdersComponent } from './orders.component';\n\n@NgModule({\n  declarations: [OrdersComponent],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule,\n    TooltipModule.forRoot(),\n    DataTableModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n})\nexport class OrdersModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport '../../models/order';\n\nimport { baseUrl } from '../../config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdersService {\n  constructor(private http: HttpClient) {}\n\n  orders = new BehaviorSubject(null);\n\n  getAll() {\n    return this.http.get(baseUrl + '/order').subscribe((res) => {\n      if (res['data']) {\n        this.orders.next(res['data']);\n      }\n    });\n  }\n\n  confirmOne(itemId) {\n    return this.http.delete(baseUrl + `/order/${itemId}`);\n  }\n\n  shipOne(itemId) {\n    return this.http.get(baseUrl + `/order/${itemId}`);\n  }\n\n  deliverOne(form) {\n    return this.http.post(baseUrl + '/order', form);\n  }\n}\n"]}