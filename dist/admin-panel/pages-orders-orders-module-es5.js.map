{"version":3,"sources":["webpack:///src/app/models/order.ts","webpack:///src/app/pages/orders/orders-routing.module.ts","webpack:///src/app/pages/orders/orders.component.html","webpack:///src/app/pages/orders/orders.component.ts","webpack:///src/app/pages/orders/orders.module.ts","webpack:///src/app/pages/orders/orders.service.ts"],"names":["Order","routes","path","component","OrdersRoutingModule","forChild","imports","exports","modalRef","OrdersComponent","ordersService","modalService","toastr","spinner","items","itemCount","limit","limits","offset","tableElements","show","getAll","orders","subscribe","data","itemResource","count","reloadItems","hide","event","query","FilterRecord","filter","item","i","products","length","productName","toLowerCase","includes","seller","name","store","template","id","itemId","confirmOne","res","console","log","info","error","message","shipOne","deliverOne","selector","templateUrl","styleUrls","OrdersModule","forRoot","declarations","OrdersService","http","get","next","providedIn"],"mappings":"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","file":"pages-orders-orders-module-es5.js","sourcesContent":["class Order {\n  _id: string;\n  product: string;\n  orderedBy: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\n\nconst routes: Routes = [{ path: '', component: OrdersComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersRoutingModule {}\n","<div class=\"grid-center-noGutter\">\n    <div class=\"col-20_sm-22_xs-23\" style=\"margin-top: 20px\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <span>Orders Records</span>\n            </div>\n            <div class=\"card-body grid-center-noGutter\">\n                <div class=\"col-24 grid-noGutter\">\n                    <div class=\"card col-5_md-8_sm-10_xs-hidden\">\n                        <div class=\"card-body\">\n                            <span style=\"\n                  display: inline-block;\n                  background-color: #4899c2;\n                  padding: 15px;\n                  color: white;\n                \">\n                <i class=\"material-icons\">home</i>\n              </span>\n                            <div style=\"display: inline-block; margin: 0 10px\">\n                                <div style=\"color: #20a8d8; font-size: 18px; font-weight: 600\">\n                                    {{ items.length }}\n                                </div>\n                                <div style=\"color: #73818f; font-size: 80%; font-weight: 700\">\n                                    Orders\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"col-24 grid-center-noGutter\" style=\"margin-top: 20px\">\n                    <div class=\"col-24 grid-noGutter\">\n                        <div class=\"col-12_xs-24 grid-left-noGutter\" style=\"margin-left: 10px\">\n                            <label class=\"col-24\" style=\"font-weight: bold\" for=\"\">Search for</label\n              >\n             <div class=\"col-24 grid\">\n                <input\n                  type=\"text\"\n                  #FilterRecord\n                  class=\"form-control col\"\n                  placeholder=\"e.g. Name\"\n                />\n                <a\n                  (click)=\"FilterRecords(FilterRecord.value)\"\n                  class=\"btn col-4 color1 round search\"\n                >\n                  <span class=\"md-hidden\">Search</span>\n                  <span><i class=\"material-icons\">search</i></span>\n                </a>\n                <a\n                  (click)=\"FilterRecords(''); FilterRecord.value = ''\"\n                  class=\"btn col-4 color2 round search\"\n                >\n                  <span class=\"md-hidden\">Clear</span>\n                  <span><i class=\"material-icons\">clear</i></span>\n                </a>\n              </div>\n            </div>\n            </div>\n        </div> -->\n            </div>\n        </div>\n\n        <div class=\"grid-center-noGutter\" style=\"margin-top: 20px\">\n            <ng-container>\n                <ng-container *ngTemplateOutlet=\"table\"></ng-container>\n            </ng-container>\n        </div>\n    </div>\n</div>\n\n<ng-template #table>\n    <div>\n        <data-table id=\"my-table\" title=\"List of Orders\" [items]=\"tableElements\" [itemCount]=\"itemCount\" [pageLimits]=\"limits\" [limit]=\"limit\" [pagination]=\"true\" (reload)=\"reloadItems($event)\" [noDataMessage]=\"'No data to show'\">\n            <data-table-column [header]=\"'Product'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    <div *ngFor=\"let order of item.products; index as i\">\n                        {{ i + 1 }}- {{ \" \" + order.productName }}\n                    </div>\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [header]=\"'Qty'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    <div *ngFor=\"let order of item.products\">\n                        {{ order.qty }}\n                    </div>\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [header]=\"'Price'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    <div *ngFor=\"let order of item.products\">\n                        {{ order.price }}\n                    </div>\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [header]=\"'Store'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    {{ item.store?.name }}\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [property]=\"'from'\" [header]=\"'From'\">\n            </data-table-column>\n\n            <data-table-column [property]=\"'to'\" [header]=\"'To'\"> </data-table-column>\n\n            <data-table-column [property]=\"'profit'\" [header]=\"'Profit'\">\n            </data-table-column>\n\n            <data-table-column [header]=\"'Seller'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    {{ item.seller?.name }}\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [header]=\"'Buyer'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    {{ item.orderedBy.name }}\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [width]=\"70\" [header]=\"'Status'\">\n                <ng-template #dataTableCell let-item=\"item\">\n                    <div>\n                        <ng-container *ngIf=\"item.refund\"><span class=\"badge blocked\">refund</span></ng-container>\n                        <ng-container *ngIf=\"item.confirmed && !item.shipped && !item.delivered\"><span class=\"badge confirmed\">confirmed</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"item.shipped && !item.delivered\"><span class=\"badge active\">shipped</span></ng-container>\n                        <ng-container *ngIf=\"item.delivered\"><span class=\"badge active\">delivered</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"!item.confirmed\"><span class=\"badge deleted\">Waiting</span>\n                        </ng-container>\n                    </div>\n                </ng-template>\n            </data-table-column>\n\n            <data-table-column [width]=\"150\" [property]=\"'_id'\" header=\"Actions\">\n                <ng-template #dataTableCell let-item=\"item\" class=\"grid-center\">\n                    <ng-container *ngIf=\"!item.confirmed\">\n                        <a (click)=\"openModal(templateConfirm, item._id)\" class=\"lock\" tooltip=\"Confirm\" placement=\"bottom\" triggers=\"mouseenter:mouseleave\">\n                            <i class=\"material-icons\">touch_app</i>\n                        </a>\n                    </ng-container>\n                    <ng-container *ngIf=\"item.confirmed && !item.shipped\">\n                        <a (click)=\"openModal(templateShip, item._id)\" class=\"lock\" tooltip=\"shipped\" placement=\"bottom\" triggers=\"mouseenter:mouseleave\">\n                            <i class=\"material-icons\">local_shipping</i>\n                        </a>\n                    </ng-container>\n                    <ng-container *ngIf=\"item.confirmed && item.shipped && !item.delivered\">\n                        <a (click)=\"openModal(templateDeliver, item._id)\" class=\"lock\" tooltip=\"delivered\" placement=\"bottom\" triggers=\"mouseenter:mouseleave\">\n                            <i class=\"material-icons\">check</i>\n                        </a>\n                    </ng-container>\n                </ng-template>\n            </data-table-column>\n        </data-table>\n    </div>\n</ng-template>\n\n<ng-template #templateConfirm id=\"template2\">\n    <div class=\"modal-header\">\n        <h4 style=\"font-weight: bold; justify-content: center\">\n            Do you want to confirm This order?\n        </h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"grid-right\">\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color1 round\" style=\"margin-right: 10px\" (click)=\"confirmElement()\">\n        Confirm\n      </button>\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color2 round\" (click)=\"modalRef.hide()\">\n        Cancel\n      </button>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #templateShip id=\"template2\">\n    <div class=\"modal-header\">\n        <h4 style=\"font-weight: bold; justify-content: center\">\n            Has this order been shipped?\n        </h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"grid-right\">\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color1 round\" style=\"margin-right: 10px\" (click)=\"shipElement()\">\n        Confirm\n      </button>\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color2 round\" (click)=\"modalRef.hide()\">\n        Cancel\n      </button>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #templateDeliver id=\"template2\">\n    <div class=\"modal-header\">\n        <h4 style=\"font-weight: bold; justify-content: center\">\n            Has this order been delivered?\n        </h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"grid-right\">\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color1 round\" style=\"margin-right: 10px\" (click)=\"deliverElement()\">\n        Confirm\n      </button>\n            <button type=\"button\" class=\"btn col-5_sm-5_xs-6 color2 round\" (click)=\"modalRef.hide()\">\n        Cancel\n      </button>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DataTableResource } from 'angular7-data-table';\n\nimport { OrdersService } from './orders.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n})\nexport class OrdersComponent implements OnInit {\n  itemResource;\n  items = [];\n  itemCount = 0;\n  limit = 20;\n  limits = [20, 25, 50];\n  offset = 1;\n  tableElements = [];\n\n  modalRef: any;\n\n  constructor(\n    private ordersService: OrdersService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {\n    this.spinner.show();\n\n    this.ordersService.getAll();\n\n    this.ordersService.orders.subscribe(async (data) => {\n      if (data) {\n        this.items = data;\n        this.itemResource = new DataTableResource(data);\n        this.itemCount = await this.itemResource.count();\n        this.reloadItems({\n          offset: 0,\n          limit: this.limit,\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n\n  async reloadItems(event) {\n    if (this.itemResource) {\n      this.tableElements = await this.itemResource.query(event);\n    }\n  }\n\n  async FilterRecords(FilterRecord) {\n    this.tableElements = this.items;\n    if (FilterRecord !== '') {\n      this.tableElements = this.items.filter((item) => {\n        for (let i = 0; i < item.products.length; i++) {\n          item.products[i].productName.toLowerCase().includes(FilterRecord) ||\n            item.seller?.name.toLowerCase().includes(FilterRecord) ||\n            item.store?.name.toLowerCase().includes(FilterRecord);\n        }\n      });\n    }\n\n    this.itemResource = new DataTableResource(this.tableElements);\n    this.itemCount = await this.itemResource.count();\n    this.reloadItems({\n      offset: 0,\n      limit: this.limit,\n    });\n  }\n\n  itemId;\n  openModal(template: TemplateRef<any>, id) {\n    this.itemId = id;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  confirmElement() {\n    this.spinner.show();\n\n    this.modalRef.hide();\n    this.ordersService.confirmOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n\n  shipElement() {\n    this.spinner.show();\n\n    this.modalRef.hide();\n    this.ordersService.shipOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n\n  deliverElement() {\n    this.spinner.show();\n\n    this.modalRef.hide();\n    this.ordersService.deliverOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.ordersService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataTableModule } from 'angular7-data-table';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { OrdersRoutingModule } from './orders-routing.module';\n\nimport { OrdersComponent } from './orders.component';\n\n@NgModule({\n  declarations: [OrdersComponent],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule,\n    TooltipModule.forRoot(),\n    DataTableModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n})\nexport class OrdersModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport '../../models/order';\n\nimport { baseUrl } from '../../config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdersService {\n  constructor(private http: HttpClient) {}\n\n  orders = new BehaviorSubject(null);\n\n  getAll() {\n    return this.http.get(baseUrl + '/order').subscribe((res) => {\n      if (res['data']) {\n        this.orders.next(res['data']);\n      }\n    });\n  }\n\n  confirmOne(itemId) {\n    return this.http.get(baseUrl + `/order/confirmOne/${itemId}`);\n  }\n\n  shipOne(itemId) {\n    return this.http.get(baseUrl + `/order/shipOne/${itemId}`);\n  }\n\n  deliverOne(itemId) {\n    return this.http.get(baseUrl + `/order/deliverOne/${itemId}`);\n  }\n}\n"]}