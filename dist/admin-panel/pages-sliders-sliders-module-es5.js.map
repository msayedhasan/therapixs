{"version":3,"sources":["webpack:///src/app/pages/sliders/add-slider/add-slider.component.ts","webpack:///src/app/pages/sliders/add-slider/add-slider.component.html","webpack:///src/app/pages/sliders/edit-slider/edit-slider.component.ts","webpack:///src/app/pages/sliders/edit-slider/edit-slider.component.html","webpack:///src/app/pages/sliders/sliders-routing.module.ts","webpack:///src/app/pages/sliders/sliders.component.html","webpack:///src/app/pages/sliders/sliders.component.ts","webpack:///src/app/pages/sliders/sliders.module.ts","webpack:///src/app/pages/sliders/sliders.service.ts"],"names":["AddSliderComponent","fb","slidersService","toastr","spinner","router","form","group","image","show","formData","FormData","append","get","value","addOne","subscribe","res","reset","info","navigate","error","console","log","message","hide","onSubmit","selector","templateUrl","styleUrls","EditSliderComponent","route","sliderId","snapshot","paramMap","getOne","id","patchValue","formValue","key","File","JSON","stringify","updateOne","routes","path","component","SlidersRoutingModule","forChild","imports","exports","modalRef","SlidersComponent","sliderService","modalService","items","itemCount","limit","limits","offset","tableElements","getAll","sliders","data","itemResource","count","reloadItems","event","query","template","itemId","deleteOne","SlidersModule","forRoot","declarations","SlidersService","http","next","post","put","providedIn"],"mappings":"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","file":"pages-sliders-sliders-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SlidersService } from '../sliders.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-slider',\n  templateUrl: './add-slider.component.html',\n  styleUrls: ['./add-slider.component.scss'],\n})\nexport class AddSliderComponent implements OnInit {\n  image;\n  constructor(\n    private fb: FormBuilder,\n    private slidersService: SlidersService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {}\n\n  form = this.fb.group({\n    image: [],\n    // name: ['', Validators.required],\n  });\n\n  ngOnInit(): void {}\n  onSubmit() {\n    this.spinner.show();\n\n    const formData = new FormData();\n\n    formData.append('image', this.form.get('image').value);\n\n    this.slidersService.addOne(formData).subscribe(\n      (res) => {\n        this.image = null;\n        this.form.reset();\n        this.toastr.info(res['message'], 'Info');\n        this.router.navigate(['/sliders']);\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n}\n","<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23 grid-center-noGutter content\">\n    <div class=\"title col-24 grid-center\">\n      {{ \"Add\" | lowercase | translate }} {{ \"Slider\" | lowercase | translate }}\n    </div>\n    <div class=\"form col-23\">\n      <div class=\"grid-middle-noGutter\">\n        <div class=\"form-group grid-center-middle-noGutter col-24\">\n          <div class=\"col-24 grid-center\">\n            <app-upload-photo\n              [fieldId]=\"'image'\"\n              [image]=\"image\"\n              [control]=\"form.get('image')\"\n            >\n            </app-upload-photo>\n          </div>\n        </div>\n\n        <!-- <app-input-text class=\"col-11_sm-24\" [label]=\"'Name'\" [fieldId]=\"'name'\" [required]=\"true\" type=\"text\" [placeholder]=\"'Ad Name'\" [tooltipMsg]=\"'English'\" [control]=\"form.get('name')\" [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\">\n                </app-input-text> -->\n      </div>\n      <div class=\"grid-right\">\n        <button\n          type=\"submit\"\n          (click)=\"onSubmit()\"\n          class=\"btn col-3_sm-5_xs-6 color1 round\"\n          [disabled]=\"!form.valid\"\n        >\n         {{ \"Submit\" | lowercase | translate }}\n        </button>\n        <button\n          type=\"button\"\n          [routerLink]=\"['/sliders']\"\n          class=\"btn col-3_sm-5_xs-6 color2 round\"\n        >\n         {{ \"Cancel\" | lowercase | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SlidersService } from '../sliders.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-slider',\n  templateUrl: './edit-slider.component.html',\n  styleUrls: ['./edit-slider.component.scss'],\n})\nexport class EditSliderComponent implements OnInit, AfterViewInit {\n  image;\n  sliderId;\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private slidersService: SlidersService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {}\n\n  form = this.fb.group({\n    image: [],\n    // name: ['', Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.sliderId = this.route.snapshot.paramMap.get('id');\n  }\n  ngAfterViewInit() {\n    this.getOne(this.sliderId);\n  }\n\n  getOne(id) {\n    this.spinner.show();\n\n    this.slidersService.getOne(id).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.image = res['data']['image'];\n        this.form.get('image').patchValue(res['data']['image']);\n        // this.form.get('name').patchValue(res['data']['name']);\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n\n  onSubmit(formValue) {\n    this.spinner.show();\n\n    const formData = new FormData();\n\n    for (const key in formValue) {\n      if (formValue[key] instanceof File) {\n        formData.append(key, formValue[key]);\n      } else {\n        // contains object\n        formData.append(key, JSON.stringify(formValue[key]));\n      }\n    }\n\n    this.slidersService.updateOne(formData, this.sliderId).subscribe(\n      (res) => {\n        console.log(res);\n        this.image = null;\n        this.form.reset();\n        this.toastr.info(res['message'], 'Info');\n        this.router.navigate(['/sliders']);\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n}\n","<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23 grid-center-noGutter content\">\n    <div class=\"title col-24 grid-center\">Edit Slider</div>\n    <div class=\"form col-23\">\n      <div class=\"grid-middle-noGutter\">\n        <div class=\"form-group grid-center-middle-noGutter col-24\">\n          <div class=\"col-24 grid-center\">\n            <app-upload-photo\n              [fieldId]=\"'image'\"\n              [image]=\"image\"\n              [control]=\"form.get('image')\"\n            >\n            </app-upload-photo>\n          </div>\n        </div>\n\n        <!-- <app-input-text class=\"col-11_sm-24\" [label]=\"'Name'\" [fieldId]=\"'name'\" type=\"text\" [placeholder]=\"'Slider Name'\" [tooltipMsg]=\"'English'\" [control]=\"form.get('name')\" [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\">\n                </app-input-text> -->\n      </div>\n      <div class=\"grid-right\">\n        <button\n          type=\"submit\"\n          (click)=\"onSubmit(form.value)\"\n          class=\"btn col-3_sm-5_xs-6 color1 round\"\n          [disabled]=\"!form.valid\"\n        >\n         {{ \"Submit\" | lowercase | translate }}\n        </button>\n        <button\n          type=\"button\"\n          [routerLink]=\"['/sliders']\"\n          class=\"btn col-3_sm-5_xs-6 color2 round\"\n        >\n         {{ \"Cancel\" | lowercase | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SlidersComponent } from './sliders.component';\nimport { AddSliderComponent } from './add-slider/add-slider.component';\nimport { EditSliderComponent } from './edit-slider/edit-slider.component';\n\nconst routes: Routes = [\n  { path: '', component: SlidersComponent },\n  { path: 'add', component: AddSliderComponent },\n  { path: 'edit/:id', component: EditSliderComponent },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SlidersRoutingModule {}\n","<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23\" style=\"margin-top: 20px\">\n    <div class=\"card\">\n      <div class=\"card-header grid-noGutter\">\n        <span>{{ \"Sliders\" | lowercase | translate }}</span>\n      </div>\n      <div class=\"card-body grid-center-noGutter\">\n        <div class=\"col-24 grid-spaceBetween-noGutter\">\n          <div class=\"card xs-hidden\">\n            <div class=\"card-body\">\n              <span\n                style=\"\n                  display: inline-block;\n                  background-color: #4899c2;\n                  padding: 15px;\n                  color: white;\n                \"\n              >\n                <i class=\"material-icons\">home</i>\n              </span>\n              <div style=\"display: inline-block; margin: 0 10px\">\n                <div style=\"color: #20a8d8; font-size: 18px; font-weight: 600\">\n                  {{ items.length }}\n                </div>\n                <div style=\"color: #73818f; font-size: 80%; font-weight: 700\">\n                  {{ \"Sliders\" | lowercase | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-top xs-24 grid-noGutter\" style=\"margin-top: 15px\">\n            <div class=\"grid-column-noGutter\">\n              <div class=\"\">\n                <a [routerLink]=\"['./add']\" class=\"btn color1 round addbtn\"\n                  >Add Slider</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid-center-noGutter\" style=\"margin-top: 20px\">\n      <ng-container>\n        <ng-container *ngTemplateOutlet=\"table\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #table>\n  <div>\n    <data-table\n      id=\"my-table\"\n      title=\"List of Sliders\"\n      [items]=\"tableElements\"\n      [itemCount]=\"itemCount\"\n      [pageLimits]=\"limits\"\n      [limit]=\"limit\"\n      [pagination]=\"true\"\n      (reload)=\"reloadItems($event)\"\n    >\n      <data-table-column\n        [width]=\"50\"\n        [property]=\"'image'\"\n        [resizable]=\"true\"\n        [header]=\"'Img'\"\n      >\n        <ng-template #dataTableCell let-item=\"item\">\n          <img\n            [src]=\"\n              item.image ? item.image : '../../../../../assets/placeholder.png'\n            \"\n            width=\"30px\"\n            height=\"30px\"\n            alt=\"\"\n          />\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [width]=\"150\" header=\"Actions\">\n        <ng-template #dataTableCell let-item=\"item\" class=\"grid-center\">\n          <a\n            [routerLink]=\"['./edit/', item._id]\"\n            class=\"pencil\"\n            [tooltip]=\"'Edit'\"\n            placement=\"bottom\"\n          >\n            <i class=\"material-icons\">colorize</i>\n          </a>\n          <a\n            (click)=\"openModal(templateDelete, item._id)\"\n            class=\"trash\"\n            tooltip=\"Delete\"\n            placement=\"bottom\"\n            triggers=\"mouseenter:mouseleave\"\n          >\n            <i class=\"material-icons\">delete</i>\n          </a>\n        </ng-template>\n      </data-table-column>\n    </data-table>\n  </div>\n</ng-template>\n\n<ng-template #templateDelete id=\"template2\">\n  <div class=\"modal-header\">\n    <h4 style=\"color: red; font-weight: bold; justify-content: center\">\n      <i class=\"fa fa-trash fa-lg mt-4\"></i> Do you want to Delete This Element\n      ?\n    </h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"deleteElement()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n       {{ \"Cancel\" | lowercase | translate }}\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DataTableResource } from 'angular7-data-table';\n\nimport { SlidersService } from './sliders.service';\n\n@Component({\n  selector: 'app-sliders',\n  templateUrl: './sliders.component.html',\n  styleUrls: ['./sliders.component.scss'],\n})\nexport class SlidersComponent implements OnInit {\n  itemResource;\n  items = [];\n  itemCount = 0;\n  limit = 20;\n  limits = [20, 25, 50];\n  offset = 1;\n  tableElements = [];\n\n  modalRef: any;\n\n  constructor(\n    private sliderService: SlidersService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {\n    this.sliderService.getAll();\n\n    this.spinner.show();\n\n    this.sliderService.sliders.subscribe(async (data) => {\n      if (data) {\n        this.items = data;\n\n        this.itemResource = new DataTableResource(data);\n        this.itemCount = await this.itemResource.count();\n        this.reloadItems({\n          offset: 0,\n          limit: this.limit,\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n\n  async reloadItems(event) {\n    if (this.itemResource) {\n      this.tableElements = await this.itemResource.query(event);\n    }\n  }\n\n  itemId;\n  openModal(template: TemplateRef<any>, id) {\n    this.itemId = id;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  deleteElement() {\n    this.spinner.show();\n\n    this.modalRef.hide();\n    this.sliderService.deleteOne(this.itemId).subscribe(\n      (res) => {\n        console.log(res);\n        this.toastr.info(res['message'], 'Info');\n        this.items = [];\n\n        this.sliderService.getAll();\n      },\n      (error) => {\n        console.log(error);\n        this.toastr.error(error.error.message, 'Error');\n        // this.error.next(error.error.message);\n      }\n    );\n\n    this.spinner.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { DataTableModule } from 'angular7-data-table';\n\nimport { SlidersRoutingModule } from './sliders-routing.module';\n\nimport { FormFieldsModule } from 'src/app/reusable-components/form-fields/form-fields.module';\n\nimport { SlidersComponent } from './sliders.component';\nimport { AddSliderComponent } from './add-slider/add-slider.component';\nimport { EditSliderComponent } from './edit-slider/edit-slider.component';\n\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [SlidersComponent, AddSliderComponent, EditSliderComponent],\n  imports: [\n    CommonModule,\n    SlidersRoutingModule,\n    FormFieldsModule,\n    DataTableModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    SharedModule,\n  ],\n})\nexport class SlidersModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { baseUrl } from '../../config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SlidersService {\n  constructor(private http: HttpClient) {}\n\n  sliders = new BehaviorSubject(null);\n\n  getAll() {\n    return this.http.get(baseUrl + '/slider').subscribe(\n      (res) => {\n        if (res['data']) {\n          this.sliders.next(res['data']);\n        }\n      },\n      (error) => {\n        console.log(error);\n        // this.error.next(error.error.message);\n      }\n    );\n  }\n\n  getOne(itemId) {\n    return this.http.get(baseUrl + `/slider/${itemId}`);\n  }\n\n  addOne(form) {\n    return this.http.post(baseUrl + '/slider', form);\n  }\n\n  updateOne(form, itemId) {\n    return this.http.put(baseUrl + `/slider/${itemId}`, form);\n  }\n\n  deleteOne(itemId) {\n    return this.http.delete(baseUrl + `/slider/${itemId}`);\n  }\n}\n"]}