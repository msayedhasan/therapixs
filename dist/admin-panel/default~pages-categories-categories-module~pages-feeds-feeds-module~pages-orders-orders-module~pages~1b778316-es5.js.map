{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/angular7-data-table/__ivy_ngcc__/esm2015/angular7-data-table.js","webpack:///node_modules/ngx-popup-dialog/__ivy_ngcc__/fesm2015/ngx-popup-dialog.js"],"names":["BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","add","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","Error","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ɵfac","ScrollStrategyOptions_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","value","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","length","_keydownEventSubscriptions","_keydownEvents","next","_isAttached","addEventListener","push","index","indexOf","splice","removeEventListener","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","provide","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","_platform","container","_containerElement","parentNode","removeChild","_createContainer","isBrowser","containerClass","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_keydownEventsObservable","observer","subscription","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","asObservable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","forEach","cssClass","children","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Element","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","source","hasOwnProperty","input","split","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","changes","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","preventDefault","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","emit","_createOverlay","CdkConnectedOverlay_Factory","inputs","outputs","features","propDecorators","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","ɵmod","ɵinj","OverlayModule_Factory","providers","imports","ngJitMode","declarations","exports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","listenerOptions","passive","AutofillMonitor","_monitoredElements","Map","elementOrRef","info","subject","result","listener","animationName","target","isAutofilled","set","unlisten","_info","stopMonitoring","AutofillMonitor_Factory","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","CdkAutofill_Factory","CdkTextareaAutosize","_destroyed","_enabled","_previousMinRows","_textareaElement","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","_getWindow","textareaClone","cloneNode","rows","visibility","border","padding","overflow","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","_c0","_c1","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","color","options","focusVia","disableRipple","disabled","attributes","attribute","hasAttribute","MatButton_Factory","ɵcmp","viewQuery","MatButton_Query","_t","ripple","first","hostVars","MatButton_HostBindings","attrs","ngContentSelectors","decls","vars","consts","template","MatButton_Template","_isRippleDisabled","directives","encapsulation","changeDetection","String","None","OnPush","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","tabIndex","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","enterDuration","_c2","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","MAT_CHECKBOX_CLICK_ACTION","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","useExisting","MatCheckbox","multi","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_MatCheckboxMixinBase","_changeDetectorRef","_clickAction","_options","ariaLabel","ariaLabelledby","_uniqueId","labelPosition","name","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","detectChanges","checked","isDisabled","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","animSuffix","nativeCheckbox","_required","newValue","changed","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","required","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","_getAriaChecked","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","MatChipEvent","MatChipSelectionChange","selected","isUserInput","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","globalRippleOptions","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","basicChipAttrName","tagName","toLowerCase","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","focus","removable","selectable","toggleSelected","coercedValue","_value","MatChip_Factory","contentQueries","MatChip_ContentQueries","dirIndex","MatChipRemove","avatar","trailingIcon","removeIcon","MatChip_HostBindings","MatChip_click_HostBindingHandler","_handleClick","MatChip_keydown_HostBindingHandler","_handleKeydown","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","_parentChip","nodeName","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MatChipsDefaultOptions","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_uid","_tabIndex","_userTabIndex","_onChange","_multiple","_compareWith","o1","o2","ariaOrientation","valueChange","valueAccessor","_keyManager","chips","withWrap","withVerticalOrientation","withHorizontalOrientation","tabOut","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","onKeydown","newChipIndex","setActiveItem","_clearSelection","deselect","Array","isArray","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","skip","clear","fallbackValue","valueToEmit","_hasFocusedChip","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","toArray","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","empty","writeValue","_placeholder","MatChipList_Factory","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","errorState","compareWith","errorStateMatcher","MatChipList_Template","descendants","MatChipInputEvent","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","MatChipsModule_Factory","useValue","MatCalendarBody_tr_0_Template","ctx_r0","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","item_r6","$implicit","ctx_r8","_cellClicked","colIndex_r7","rowIndex_r3","ctx_r5","_cellWidth","_isActiveCell","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r6","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r7","_userSelected","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r10","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r11","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r13","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r14","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r15","ctx_r3","MatDatepickerToggle__svg_svg_2_Template","_c3","_c4","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","end","MatDatepickerIntl_Factory","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","cell","columnChanges","rowIndex","colIndex","cellNumber","querySelector","MatCalendarBody_Factory","MatCalendarBody_Template","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dateAdapter","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","localeChanges","_init","date","_selectedDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","oldActiveDate","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","compareDate","_focusActiveCell","_getDateInCurrentMonth","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","_weekdays","concat","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","_hasSameMonthAndYear","d1","d2","obj","isDateInstance","isValid","validDate","_getValidDateOrNull","deserialize","clampDate","_minDate","_maxDate","MatMonthView_Factory","MatMonthView_Query","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","row","year","_createCellForYear","month","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","isSameMultiYearView","_selectedYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","normalizedDate","_monthSelected","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","currentView","_isSameView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","MatCalendarHeader_Factory","MatCalendar","MatCalendarHeader_Template","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_7_listener","previousClicked","MatCalendarHeader_Template_button_click_8_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","_moveFocusOnNextTick","startView","_intlChanges","_calendarHeaderPortal","headerComponent","startAt","_currentView","focusActiveCell","firstChange","view","_getCurrentViewComponent","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","matDatepickerAnimations","transformPanel","opacity","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_animationState","_animationDone","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","MatDatepickerContent_HostBindings","MatDatepickerContent_animation_transformPanel_done_HostBindingHandler","datepicker","touchUi","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","_dateFilter","calendarHeaderComponent","data","animation","animations","MatDatepicker","_dialog","_viewContainerRef","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_destroyPopup","oldValue","_datepickerInput","_valueChange","_openAsDialog","_openAsPopup","_popupComponentRef","_popupRef","instance","_startExitAnimation","_dialogRef","completeClose","disableClose","autoFocus","restoreFocus","afterClosed","componentInstance","_createPopup","ref","_createPopupPositionStrategy","detachments","getConnectedOverlayOrigin","_color","_getThemePalette","MatDatepicker_Factory","opened","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","dateInput","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","control","controlValue","_maxValidator","_filterValidator","_validator","compose","_isInitialized","c","isAltDownArrow","_datepicker","readOnly","lastValueWasValid","parse","_formatValue","_registerInput","oldDate","_min","_max","blur","MatDatepickerInput_Factory","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","MatDatepickerInput_change_HostBindingHandler","MatDatepickerInput_blur_HostBindingHandler","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","toIso8601","matDatepicker","matDatepickerFilter","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","MatDatepickerToggle_ContentQueries","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_focus_HostBindingHandler","MatDatepickerToggle_Template","MatDatepickerToggle_Template_button_click_0_listener","_open","MatDatepickerModule","MatDatepickerModule_Factory","entryComponents","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","ariaDescribedBy","ariaLabelledBy","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_focusTrapFactory","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","attachDomPortal","_savePreviouslyFocusedElement","_ariaLabelledBy","attachComponentPortal","attachTemplatePortal","_containsFocus","focusWasTrapped","_getFocusTrap","focusInitialElement","focusInitialElementWhenReady","toFocus","_focusTrap","destroy","toState","_trapFocus","_restoreFocus","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","Default","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","phaseName","_closeFallbackTimeout","_finishDialogClose","_result","_recaptureFocus","dialogResult","totalTime","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","afterOpened","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","state","global","userInjector","injector","containerPortal","componentFactoryResolver","containerRef","_createInjector","contentRef","previousValue","removeAttribute","siblings","sibling","getAttribute","dialogs","MatDialog_Factory","defaultOptions","dialogElementUid","MatDialogClose","getClosestDialog","proxiedChange","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","MatFormField_div_13_Template","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","_c5","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","error","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","rect","getRootNode","rootNode","_appearance","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","MatFormFieldModule","MatFormFieldModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","className","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","console","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","iconElement","_toSvgElement","str","div","innerHTML","childNodes","nodeType","ELEMENT_NODE","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","match","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_isServer","_isNativeSelect","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","IOS","el","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","MatInputModule","MatInputModule_Factory","MatListOption_mat_pseudo_checkbox_2_Template","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","MatNavList_Factory","ɵMatNavList_BaseFactory","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","navList","list","_isInteractiveList","_list","_lines","MatListItem_Factory","MatListItem_ContentQueries","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","checkboxPosition","_inputsInitialized","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","_setFocusedOption","selectedOptions","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","MatListOption_Template","_contentInitialized","a1","a2","_","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","added","item","disableRippleChanges","colorChanges","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","optionIndex","_getOptionIndex","activeItemIndex","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","shiftKey","_getSelectedOptionValues","activeIndex","values","correspondingOption","focusedIndex","focusedOption","skipDisabled","hasChanged","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","MatSelectionList_blur_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","MatSelectionList_Template","MatListModule","MatListModule_Factory","MatRadioDefaultOptions","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","_name","_labelPosition","onTouched","_radios","radio","isAlreadySelected","_updateRadioButtonNames","v","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","MatRadioGroup_Factory","MatRadioGroup_ContentQueries","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_providerOverride","_removeUniqueSelectionListener","listen","_touch","groupValueChanged","newCheckedState","notify","_setDisabled","_MatRadioButtonBase_Factory","_MatRadioButtonBase_Query","ariaDescribedby","MatRadioButton_Factory","ɵMatRadioButton_BaseFactory","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputChange","MatRadioButton_Template_input_click_5_listener","MatRadioModule","MatRadioModule_Factory","MatSelect_span_4_Template","MatSelect_span_5_span_1_Template","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_8_Template","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_liveAnnouncer","defaults","_panelOpen","_scrollTop","_destroy","_optionIds","_positions","_disableOptionCentering","_focused","optionSelectionChanges","onSelectionChange","openedChange","_openedStream","o","_closedStream","disableOptionCentering","typeaheadDebounceInterval","panelOpen","overlayDir","_triggerRect","trigger","_initKeyManager","_resetOptions","_typeaheadDebounceInterval","getComputedStyle","fontSize","_calculateOverlayPosition","_highlightCorrectOption","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","previouslySelectedOption","selectedOption","announce","viewValue","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","_calculateOverlayOffsetX","panel","scrollTop","warn","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","sort","sortComparator","activeOptionIndex","labelCount","optionGroups","_getItemHeight","current","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_getAriaLabel","viewportSize","paddingWidth","group","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","reverse","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_getAriaLabelledby","_getAriaActiveDescendant","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","MatSelectModule","MatSelectModule_Factory","DataTableRowComponent_ng_template_7_th_0_div_1_Template","column_r2","a0","column","DataTableRowComponent_ng_template_7_th_0_div_2_Template","cellTemplate","_this","DataTableRowComponent_ng_template_7_th_0_Template","getCellColor","visible","styleClassObject","header","DataTableRowComponent_ng_template_7_td_1_div_1_Template","DataTableRowComponent_ng_template_7_td_1_div_2_Template","DataTableRowComponent_ng_template_7_td_1_Template","DataTableRowComponent_ng_template_7_Template","dataTable","primaryColumn","DataTableRowComponent_tr_8_Template","expanded","columnCount","expandTemplate","_c6","DataTableComponent_data_table_header_6_Template","DataTableComponent_filter_bar_7_Template","DataTableComponent_th_18_button_3_span_1_Template","ctx_r17","i_r9","column_r8","_c7","DataTableComponent_th_18_button_3_span_2_Template","headerTemplate","_c8","DataTableComponent_th_18_button_3_span_3_Template","sortBy","sortAsc","DataTableComponent_th_18_button_3_span_4_Template","_r21","DataTableComponent_th_18_button_3_span_4_Template_span_mousedown_0_listener","_r10","ctx_r20","resizeColumnStart","DataTableComponent_th_18_button_3_Template","_r25","DataTableComponent_th_18_button_3_Template_button_click_0_listener","ctx_r23","headerClicked","ctx_r26","itemCount","labels","sortAscending","sortDescending","sortable","resizable","DataTableComponent_th_18_span_4_span_1_Template","DataTableComponent_th_18_span_4_span_2_Template","DataTableComponent_th_18_span_4_span_3_Template","ctx_r29","DataTableComponent_th_18_span_4_span_4_Template","_r35","DataTableComponent_th_18_span_4_span_4_Template_span_mousedown_0_listener","ctx_r34","DataTableComponent_th_18_span_4_Template","DataTableComponent_th_18_Template","DataTableComponent_tbody_19_Template","_r42","DataTableComponent_tbody_19_Template_tbody_selectedChange_0_listener","_r40","ctx_r41","onRowSelectChanged","item_r38","index_r39","DataTableComponent_tbody_20_Template","noDataMessage","DataTableComponent_tbody_21_tr_1_td_5_Template","column_r47","DataTableComponent_tbody_21_tr_1_Template","index_r45","ctx_r43","expandColumnVisible","indexColumnVisible","selectColumnVisible","columns","DataTableComponent_tbody_21_Template","substituteItems","DataTableComponent_div_22_Template","DataTableComponent_data_table_pagination_23_Template","pageLimits","DataTableHeaderComponent_p_1_Template","title","DataTableHeaderComponent_div_8_li_2_Template","_r7","DataTableHeaderComponent_div_8_li_2_Template_input_ngModelChange_2_listener","DataTableHeaderComponent_div_8_li_2_Template_input_change_2_listener","onChange","expandColumn","DataTableHeaderComponent_div_8_li_3_Template","DataTableHeaderComponent_div_8_li_3_Template_input_ngModelChange_2_listener","ctx_r9","DataTableHeaderComponent_div_8_li_3_Template_input_change_2_listener","indexColumn","DataTableHeaderComponent_div_8_li_4_Template","DataTableHeaderComponent_div_8_li_4_Template_input_ngModelChange_2_listener","DataTableHeaderComponent_div_8_li_4_Template_input_change_2_listener","selectColumn","DataTableHeaderComponent_div_8_ng_template_5_li_0_Template","_r20","DataTableHeaderComponent_div_8_ng_template_5_li_0_Template_input_ngModelChange_2_listener","item_r15","DataTableHeaderComponent_div_8_ng_template_5_li_0_Template_input_change_2_listener","ctx_r21","DataTableHeaderComponent_div_8_ng_template_5_Template","DataTableHeaderComponent_div_8_Template","expandableRows","_c9","DataTablePaginationComponent_option_9_Template","l_r2","_c10","FieldFilterChooserPopupDialog_a_6_Template","_r4","FieldFilterChooserPopupDialog_a_6_Template_a_click_0_listener","field_r1","fieldSelected","FieldFilterPopupDialog_mat_option_14_Template","operator_r17","filterOperators","FieldFilterPopupDialog_ng_container_16_ng_container_1_Template","FieldFilterPopupDialog_ng_container_16_Template","FieldFilterPopupDialog_ng_container_17_ng_container_1_Template","FieldFilterPopupDialog_ng_container_17_Template","FieldFilterPopupDialog_ng_container_18_ng_container_1_Template","FieldFilterPopupDialog_ng_container_18_Template","_r15","FieldFilterPopupDialog_ng_container_19_ng_container_1_Template","_c11","form","FieldFilterPopupDialog_ng_container_19_Template","_r11","fieldFilter","field","possibleOptions","FieldFilterPopupDialog_ng_container_20_ng_container_1_Template","FieldFilterPopupDialog_ng_container_20_Template","FieldFilterPopupDialog_ng_template_24_mat_error_6_Template","_r23","ctx_r25","getErrorMessage","FieldFilterPopupDialog_ng_template_24_Template","_r27","FieldFilterPopupDialog_ng_template_24_Template_input_ngModelChange_1_listener","filterValue","_r24","matcher","FieldFilterPopupDialog_ng_template_26_mat_error_3_Template","_r28","FieldFilterPopupDialog_ng_template_26_Template","_r31","FieldFilterPopupDialog_ng_template_26_Template_input_ngModelChange_1_listener","ctx_r30","FieldFilterPopupDialog_ng_template_28_mat_checkbox_1_Template","_r39","FieldFilterPopupDialog_ng_template_28_mat_checkbox_1_Template_mat_checkbox_change_0_listener","option_r37","ctx_r38","valueCheckChange","ctx_r35","isValueChecked","getPossibleOptionDisplayText","FieldFilterPopupDialog_ng_template_28_mat_error_2_Template","ctx_r36","MUST_SELECT_VALUE_VALIDATION","FieldFilterPopupDialog_ng_template_28_Template","options_r32","f_r34","submitted","isAtleastOneValueSelected","FieldFilterPopupDialog_ng_template_30_Template","_r43","FieldFilterPopupDialog_ng_template_30_Template_input_focus_1_listener","_r41","ctx_r42","FieldFilterPopupDialog_ng_template_30_Template_mat_radio_group_ngModelChange_2_listener","ctx_r44","FieldFilterPopupDialog_ng_template_32_mat_error_3_Template","_r45","ctx_r46","FieldFilterPopupDialog_ng_template_32_Template","_r48","FieldFilterPopupDialog_ng_template_32_Template_input_ngModelChange_1_listener","ctx_r47","FilterBarComponent_mat_chip_5_Template","FilterBarComponent_mat_chip_5_Template_mat_chip_click_0_listener","filter_r3","chipClicked","FilterBarComponent_mat_chip_5_Template_mat_chip_removed_0_listener","removeFilter","formatChipDisplayText","isBlank","HideDirective","renderer","_prevCondition","_displayStyle","displayStyle","newCondition","initDisplayStyle","setStyle","HideDirective_Factory","hide","MinPipe","MinPipe_Factory","ɵpipe","pure","PixelConverter","PixelConverter_Factory","DataTableResource","params","localeCompare","limit","reject","DataTableColumnDirective","cellColors","_initCellClass","styleClass","test","replace","DataTableColumnDirective_Factory","DataTableColumnDirective_ContentQueries","DataTableRowComponent","_listeners","rowTooltip","rowClick","rowClicked","rowDoubleClick","rowDoubleClicked","pagination","displayParams","DataTableRowComponent_Factory","DataTableComponent","DataTableRowComponent_Template","DataTableRowComponent_Template_button_click_2_listener","DataTableRowComponent_Template_input_ngModelChange_6_listener","getRowColor","selectOnRowClick","getTooltip","expandRow","displayIndex","selectRow","defaultTranslations","headerReload","headerColumnSelector","headerColumnSelectorAdded","headerColumnSelectorRemoved","selectAllRows","sortedAscending","sortedDescending","paginationLimit","paginationText","paginationTotalPages","firstPage","prevPage","pageNumberLabel","pageNumber","pageNumberNofM","nextPage","lastPage","loadingText","loadedText","addFilter","searchField","selectedValueRequired","validDateRequired","valueRequired","numericValueRequired","not","drag","move","up","pageX","startY","pageY","moved","mouseMoveHandler","evt","dx","dy","mouseUpHandler","nextId","_items","showTitle","indexColumnHeader","multiSelect","substituteRows","autoReload","showReloading","tableCssClass","tableContainerCssClass","reload","headerClick","cellClick","refreshClick","filterAdded","filterRemoved","filterUpdated","filterChanged","_displayParams","notifier","selectedRows","_selectAllCheckbox","_resizeInProgress","resizeLimit","_reloading","_sortAsc","_offset","_limit","asc","_initDefaultValues","_initDefaultClickEvents","_updateDisplayParams","reloadItems","notifier$","_notify","subject$","tableEvent","sortColumn","reloading","_getRemoteParameters","ascending","rowColors","selectedRow","row_","columnElement","startOffset","moveEvent","_isResizeInLimit","nextElementSibling","loading","reloadNotification","paginationNotification","ceil","col","sortNotification","_onReloadFinished","_itemCount","count","val","_sortBy","_onSelectAllChanged","from","DataTableComponent_Factory","DataTableComponent_ContentQueries","DataTableComponent_Query","page","filterableFields","filters","DataTableComponent_Template","DataTableComponent_Template_input_ngModelChange_17_listener","selectAllCheckbox","columnSelectorNotification","DataTableHeaderComponent","FilterBarComponent","DataTablePaginationComponent","pipes","elemRef","columnSelectorOpen","isChecked","columnName","interpolateParams","column_name","DataTableHeaderComponent_Factory","DataTableHeaderComponent_HostBindings","DataTableHeaderComponent_click_HostBindingHandler","onClickHandler","DataTableHeaderComponent_keyup_HostBindingHandler","onKeyUpHandler","DataTableHeaderComponent_Template","DataTableHeaderComponent_Template_button_click_3_listener","DataTableHeaderComponent_Template_button_click_5_listener","nextId$1","pageInput","maxPage","DataTablePaginationComponent_Factory","DataTablePaginationComponent_Query","limits","DataTablePaginationComponent_Template","_r3","DataTablePaginationComponent_Template_select_ngModelChange_8_listener","DataTablePaginationComponent_Template_button_click_11_listener","pageFirst","DataTablePaginationComponent_Template_button_click_13_listener","pageBack","DataTablePaginationComponent_Template_input_blur_20_listener","validate","DataTablePaginationComponent_Template_input_keyup_enter_20_listener","DataTablePaginationComponent_Template_input_keyup_esc_20_listener","_r1","DataTablePaginationComponent_Template_button_click_25_listener","pageForward","DataTablePaginationComponent_Template_button_click_27_listener","pageLast","FieldFilterChooserPopupDialog","_dialogCloser","fieldSearchQuery","filteredFields","fields","keyboardEventsManager","listItem","searchQuery","scrollIntoView","click","FieldFilterChooserPopupDialog_Factory","FieldFilterChooserPopupDialog_Query","FieldFilterChooserPopupDialog_Template","FieldFilterChooserPopupDialog_Template_input_ngModelChange_3_listener","onFieldSearch","FieldFilterChooserPopupDialog_Template_input_keydown_3_listener","handleKeyDown","Function","MyErrorStateMatcher","isSubmitted","dirty","touched","FieldFilterPopupDialog","valuesList","dataType","ALL_FILTER_OPERATORS","selectedOperator","operator","toDate","formatDate","hasError","displayText","d","getFullYear","s","Date","FieldFilterPopupDialog_Factory","FieldFilterPopupDialog_Template","_r49","FieldFilterPopupDialog_Template_form_ngSubmit_1_listener","valid","onFilterApply","FieldFilterPopupDialog_Template_mat_select_valueChange_13_listener","numericOperators","textualOperators","enumOperators","boolOperators","popupDialogService","currentTarget","openFieldChooserDialog","openFieldFilterDialog","old","convertFilterToEmittedFilter","triggeredElement","fieldChooserDialogRef","coverTriggeringElement","suppressCloseOnClickSelectors","formatValue","clonedFilter","JSON","stringify","FilterBarComponent_Factory","FilterBarComponent_Template","FilterBarComponent_Template_i_click_4_listener","FilterBarComponent_Template_input_focus_6_listener","inputFocused","DataTableModule","ngModule","DataTableModule_Factory","PopupDialog_ng_template_2_Template","POPUP_DIALOG_CLOSE","PopupDialog","isOpened","scaleBottomToTop","scrollBoundedFunction","onScroll","bind","mouseDownHandled","mouseUpHandled","clickHandled","triggeringElement","positionDialogWhereTriggeringElement","positionDialogUpIfBottomOutsideViewport","handleMouseEvent","lastClickedElement","dialogContainerRef","childOf","closeDialog","registerOrUnregisterAncestrosScrollEvent","loadComponent","beforeClose","afterOpen","componentFactory","resolveComponentFactory","component","popupContentViewContainer","resolveAndCreate","componentRef","createComponent","register","matDialogConfig","offsetHeight","innerWidth","scaleToTopOnBottomOverflow","dialogContainerElem","isOutOfViewport","topIfScaleToTop","triggeringElementHeight","bounding","out","innerHeight","any","all","node","ancestor","PopupDialog_Factory","PopupDialog_Query","PopupDialog_HostBindings","PopupDialog_mousedown_HostBindingHandler","onMouseDown","PopupDialog_mouseup_HostBindingHandler","onMouseUp","PopupDialog_click_HostBindingHandler","onClick","PopupDialog_Template","PopupDialog_Template_div_transitionend_0_listener","containerTransitionEnd","read","PopupDialogService","_dialogService","popupDialogData","popupDialogConfig","PopupDialogService_Factory","NgxPopupDialogModule","NgxPopupDialogModule_Factory"],"mappingsiBA;;;;;;AAKA;;;;;QAGMA,mB;AACF;;;;AAIA,mCAAYC,cAAZ,EAA4BC,QAA5B,EAAsC;AAAA;;AAClC,aAAKD,cAAL,GAAsBA,cAAtB;AACA,aAAKE,mBAAL,GAA2B;AAAEC,aAAG,EAAE,EAAP;AAAWC,cAAI,EAAE;AAAjB,SAA3B;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACA,aAAKC,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;;iCAIS,CAAG;AACZ;;;;;;;iCAIS;AACL,cAAI,KAAKM,aAAL,EAAJ,EAA0B;AACtB;AACA,gBAAMC,IAAI;AAAI;AAAkB,iBAAKF,SAAL,CAAeG,eAA/C;AACA,iBAAKC,uBAAL,GAA+B,KAAKV,cAAL,CAAoBW,yBAApB,EAA/B,CAHsB,CAItB;;AACA,iBAAKT,mBAAL,CAAyBE,IAAzB,GAAgCI,IAAI,CAACI,KAAL,CAAWR,IAAX,IAAmB,EAAnD;AACA,iBAAKF,mBAAL,CAAyBC,GAAzB,GAA+BK,IAAI,CAACI,KAAL,CAAWT,GAAX,IAAkB,EAAjD,CANsB,CAOtB;AACA;;AACAK,gBAAI,CAACI,KAAL,CAAWR,IAAX,GAAkB,kFAAoB,CAAC,KAAKM,uBAAL,CAA6BN,IAAlD,CAAlB;AACAI,gBAAI,CAACI,KAAL,CAAWT,GAAX,GAAiB,kFAAoB,CAAC,KAAKO,uBAAL,CAA6BP,GAAlD,CAAjB;AACAK,gBAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,wBAAnB;AACA,iBAAKT,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKA,UAAT,EAAqB;AACjB;AACA,gBAAMU,IAAI;AAAI;AAAkB,iBAAKT,SAAL,CAAeG,eAA/C;AACA;;AACA,gBAAMO,IAAI;AAAI;AAAkB,iBAAKV,SAAL,CAAeU,IAA/C;AACA;;AACA,gBAAMC,SAAS;AAAI;AAAkBF,gBAAI,CAACH,KAA1C;AACA;;AACA,gBAAMM,SAAS;AAAI;AAAkBF,gBAAI,CAACJ,KAA1C;AACA;;AACA,gBAAMO,0BAA0B,GAAGF,SAAS,CAACG,cAAV,IAA4B,EAA/D;AACA;;AACA,gBAAMC,0BAA0B,GAAGH,SAAS,CAACE,cAAV,IAA4B,EAA/D;AACA,iBAAKf,UAAL,GAAkB,KAAlB;AACAY,qBAAS,CAACb,IAAV,GAAiB,KAAKF,mBAAL,CAAyBE,IAA1C;AACAa,qBAAS,CAACd,GAAV,GAAgB,KAAKD,mBAAL,CAAyBC,GAAzC;AACAY,gBAAI,CAACF,SAAL,CAAeS,MAAf,CAAsB,wBAAtB,EAhBiB,CAiBjB;AACA;;AACAL,qBAAS,CAACG,cAAV,GAA2BF,SAAS,CAACE,cAAV,GAA2B,MAAtD;AACAG,kBAAM,CAACC,MAAP,CAAc,KAAKd,uBAAL,CAA6BN,IAA3C,EAAiD,KAAKM,uBAAL,CAA6BP,GAA9E;AACAc,qBAAS,CAACG,cAAV,GAA2BD,0BAA3B;AACAD,qBAAS,CAACE,cAAV,GAA2BC,0BAA3B;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ;AACA;AACA;;AACA;AACA,cAAMN,IAAI;AAAI;AAAkB,eAAKT,SAAL,CAAeG,eAA/C;;AACA,cAAIM,IAAI,CAACF,SAAL,CAAeY,QAAf,CAAwB,wBAAxB,KAAqD,KAAKpB,UAA9D,EAA0E;AACtE,mBAAO,KAAP;AACH;AACD;;;AACA,cAAMW,IAAI,GAAG,KAAKV,SAAL,CAAeU,IAA5B;AACA;;AACA,cAAMU,QAAQ,GAAG,KAAK1B,cAAL,CAAoB2B,eAApB,EAAjB;;AACA,iBAAOX,IAAI,CAACY,YAAL,GAAoBF,QAAQ,CAACG,MAA7B,IAAuCb,IAAI,CAACc,WAAL,GAAmBJ,QAAQ,CAACK,KAA1E;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA0BV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,aAASC,cAAT,GAA0B,CAAG;;AAC7B,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;AAIA,aAASC,wCAAT,GAAoD;AAChD,aAAOC,KAAK,8CAAZ;AACH;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;QAGMC,mB;AACF;;;;;;AAMA,mCAAYC,iBAAZ,EAA+BC,OAA/B,EAAwCtC,cAAxC,EAAwDuC,OAAxD,EAAiE;AAAA;;AAAA;;AAC7D,aAAKF,iBAAL,GAAyBA,iBAAzB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKtC,cAAL,GAAsBA,cAAtB;AACA,aAAKuC,OAAL,GAAeA,OAAf;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACA;;;;AAGA,aAAKC,OAAL;AAAgB;;;AAGhB,oBAAM;AACF,eAAI,CAACC,OAAL;;AACA,cAAI,KAAI,CAACC,WAAL,CAAiBC,WAAjB,EAAJ,EAAoC;AAChC,iBAAI,CAACN,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,qBAAM,KAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,aAHA;AAIH;AACJ,SAXD;AAYH;AACD;;;;;;;;;+BAKOC,U,EAAY;AACf,cAAI,KAAKJ,WAAT,EAAsB;AAClB,kBAAMV,wCAAwC,EAA9C;AACH;;AACD,eAAKU,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;;;;iCAIS;AAAA;;AACL,cAAI,KAAKP,mBAAT,EAA8B;AAC1B;AACH;AACD;;;AACA,cAAMQ,MAAM,GAAG,KAAKX,iBAAL,CAAuBY,QAAvB,CAAgC,CAAhC,CAAf;;AACA,cAAI,KAAKV,OAAL,IAAgB,KAAKA,OAAL,CAAaW,SAA7B,IAA0C,KAAKX,OAAL,CAAaW,SAAb,GAAyB,CAAvE,EAA0E;AACtE,iBAAKC,sBAAL,GAA8B,KAAKnD,cAAL,CAAoBW,yBAApB,GAAgDR,GAA9E;AACA,iBAAKqC,mBAAL,GAA2BQ,MAAM,CAACI,SAAP;AAAkB;;;AAG7C,wBAAM;AACF;AACA,kBAAMC,cAAc,GAAG,MAAI,CAACrD,cAAL,CAAoBW,yBAApB,GAAgDR,GAAvE;;AACA,kBAAImD,IAAI,CAACC,GAAL,CAASF,cAAc,GAAG,MAAI,CAACF,sBAA/B;AAA0D;;AAAmB;AAAkB,oBAAI,CAACZ,OAAxB,CAAkCW,SAAlH,EAA+H;AAC3H,sBAAI,CAACT,OAAL;AACH,eAFD,MAGK;AACD,sBAAI,CAACE,WAAL,CAAiBa,cAAjB;AACH;AACJ,aAZ0B,CAA3B;AAaH,WAfD,MAgBK;AACD,iBAAKhB,mBAAL,GAA2BQ,MAAM,CAACI,SAAP,CAAiB,KAAKX,OAAtB,CAA3B;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKD,mBAAT,EAA8B;AAC1B,iBAAKA,mBAAL,CAAyBiB,WAAzB;;AACA,iBAAKjB,mBAAL,GAA2B,IAA3B;AACH;AACJ;AACD;;;;;;iCAGS;AACL,eAAKE,OAAL;AACA,eAAKC,WAAL;AAAoB;AAAkB,cAAtC;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA0CV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;QAGMe,kB;;;;;;;;AACF;;;;iCAIS,CAAG;AACZ;;;;;;;kCAIU,CAAG;AACb;;;;;;;iCAIS,CAAG;;;;;AAGhB;;;;;;AAKA;;;;;;;AAOA;AACA;;AACA;;;;;;;;;AAOA,aAASC,4BAAT,CAAsCC,OAAtC,EAA+CC,gBAA/C,EAAiE;AAC7D,aAAOA,gBAAgB,CAACC,IAAjB;AAAuB;;;;AAI9B,gBAAAC,eAAe,EAAI;AACf;AACA,YAAMC,YAAY,GAAGJ,OAAO,CAACK,MAAR,GAAiBF,eAAe,CAAC5D,GAAtD;AACA;;AACA,YAAM+D,YAAY,GAAGN,OAAO,CAACzD,GAAR,GAAc4D,eAAe,CAACE,MAAnD;AACA;;AACA,YAAME,WAAW,GAAGP,OAAO,CAACQ,KAAR,GAAgBL,eAAe,CAAC3D,IAApD;AACA;;AACA,YAAMiE,YAAY,GAAGT,OAAO,CAACxD,IAAR,GAAe2D,eAAe,CAACK,KAApD;AACA,eAAOJ,YAAY,IAAIE,YAAhB,IAAgCC,WAAhC,IAA+CE,YAAtD;AACH,OAdM,CAAP;AAeH;AACD;;;;;;;;;AAOA,aAASC,2BAAT,CAAqCV,OAArC,EAA8CC,gBAA9C,EAAgE;AAC5D,aAAOA,gBAAgB,CAACC,IAAjB;AAAuB;;;;AAI9B,gBAAAS,mBAAmB,EAAI;AACnB;AACA,YAAMC,YAAY,GAAGZ,OAAO,CAACzD,GAAR,GAAcoE,mBAAmB,CAACpE,GAAvD;AACA;;AACA,YAAMsE,YAAY,GAAGb,OAAO,CAACK,MAAR,GAAiBM,mBAAmB,CAACN,MAA1D;AACA;;AACA,YAAMS,WAAW,GAAGd,OAAO,CAACxD,IAAR,GAAemE,mBAAmB,CAACnE,IAAvD;AACA;;AACA,YAAMuE,YAAY,GAAGf,OAAO,CAACQ,KAAR,GAAgBG,mBAAmB,CAACH,KAAzD;AACA,eAAOI,YAAY,IAAIC,YAAhB,IAAgCC,WAAhC,IAA+CC,YAAtD;AACH,OAdM,CAAP;AAeH;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,8BAAT,GAA0C,CAAG;;AAC7C,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;QAGMC,wB;AACF;;;;;;AAMA,wCAAYxC,iBAAZ,EAA+BrC,cAA/B,EAA+CsC,OAA/C,EAAwDC,OAAxD,EAAiE;AAAA;;AAC7D,aAAKF,iBAAL,GAAyBA,iBAAzB;AACA,aAAKrC,cAAL,GAAsBA,cAAtB;AACA,aAAKsC,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACH;AACD;;;;;;;;;+BAKOO,U,EAAY;AACf,cAAI,KAAKJ,WAAT,EAAsB;AAClB,kBAAMV,wCAAwC,EAA9C;AACH;;AACD,eAAKU,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;;;;iCAIS;AAAA;;AACL,cAAI,CAAC,KAAKP,mBAAV,EAA+B;AAC3B;AACA,gBAAMsC,QAAQ,GAAG,KAAKvC,OAAL,GAAe,KAAKA,OAAL,CAAawC,cAA5B,GAA6C,CAA9D;AACA,iBAAKvC,mBAAL,GAA2B,KAAKH,iBAAL,CAAuBY,QAAvB,CAAgC6B,QAAhC,EAA0C1B,SAA1C;AAAqD;;;AAGhF,wBAAM;AACF,oBAAI,CAACT,WAAL,CAAiBa,cAAjB,GADE,CAEF;;;AACA,kBAAI,MAAI,CAACjB,OAAL,IAAgB,MAAI,CAACA,OAAL,CAAayC,SAAjC,EAA4C;AACxC;AACA,oBAAMC,WAAW,GAAG,MAAI,CAACtC,WAAL,CAAiBuC,cAAjB,CAAgCC,qBAAhC,EAApB;;AAFwC,4CAGd,MAAI,CAACnF,cAAL,CAAoB2B,eAApB,EAHc;AAAA,oBAGhCI,KAHgC,yBAGhCA,KAHgC;AAAA,oBAGzBF,MAHyB,yBAGzBA,MAHyB,EAIxC;AACA;;AACA;;;AACA,oBAAMuD,WAAW,GAAG,CAAC;AAAErD,uBAAK,EAALA,KAAF;AAASF,wBAAM,EAANA,MAAT;AAAiBoC,wBAAM,EAAEpC,MAAzB;AAAiCuC,uBAAK,EAAErC,KAAxC;AAA+C5B,qBAAG,EAAE,CAApD;AAAuDC,sBAAI,EAAE;AAA7D,iBAAD,CAApB;;AACA,oBAAIuD,4BAA4B,CAACsB,WAAD,EAAcG,WAAd,CAAhC,EAA4D;AACxD,wBAAI,CAAC1C,OAAL;;AACA,wBAAI,CAACJ,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,2BAAM,MAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,mBAHA;AAIH;AACJ;AACJ,aAtB0B,CAA3B;AAuBH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKN,mBAAT,EAA8B;AAC1B,iBAAKA,mBAAL,CAAyBiB,WAAzB;;AACA,iBAAKjB,mBAAL,GAA2B,IAA3B;AACH;AACJ;AACD;;;;;;iCAGS;AACL,eAAKE,OAAL;AACA,eAAKC,WAAL;AAAoB;AAAkB,cAAtC;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA+BV;AAED;;;;;;AAKA;;;;;;;;QAMM0C,qB;AACF;;;;;;AAMA,mCAAYhD,iBAAZ,EAA+BrC,cAA/B,EAA+CsC,OAA/C,EAAwDrC,QAAxD,EAAkE;AAAA;;AAAA;;AAC9D,WAAKoC,iBAAL,GAAyBA,iBAAzB;AACA,WAAKrC,cAAL,GAAsBA,cAAtB;AACA,WAAKsC,OAAL,GAAeA,OAAf;AACA;;;;AAGA,WAAKgD,IAAL;AAAa;;;AAGb;AAAA,eAAM,IAAI5B,kBAAJ,EAAN;AAAA,OAHA;AAIA;;;;;;AAIA,WAAK6B,KAAL;AAAc;;;;AAId,gBAACC,MAAD;AAAA,eAAY,IAAIpD,mBAAJ,CAAwB,MAAI,CAACC,iBAA7B,EAAgD,MAAI,CAACC,OAArD,EAA8D,MAAI,CAACtC,cAAnE,EAAmFwF,MAAnF,CAAZ;AAAA,OAJA;AAKA;;;;;AAGA,WAAKC,KAAL;AAAc;;;AAGd;AAAA,eAAM,IAAI1F,mBAAJ,CAAwB,MAAI,CAACC,cAA7B,EAA6C,MAAI,CAACM,SAAlD,CAAN;AAAA,OAHA;AAIA;;;;;;;AAKA,WAAKoF,UAAL;AAAmB;;;;AAInB,gBAACF,MAAD;AAAA,eAAY,IAAIX,wBAAJ,CAA6B,MAAI,CAACxC,iBAAlC,EAAqD,MAAI,CAACrC,cAA1D,EAA0E,MAAI,CAACsC,OAA/E,EAAwFkD,MAAxF,CAAZ;AAAA,OAJA;;AAKA,WAAKlF,SAAL,GAAiBL,QAAjB;AACH,K;;AAELoF,yBAAqB,CAACM,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,aAAO,KAAKA,CAAC,IAAIR,qBAAV,EAAiC,uDAAgB,uEAAhB,CAAjC,EAA2E,uDAAgB,oEAAhB,CAA3E,EAAkH,uDAAgB,oDAAhB,CAAlH,EAAkJ,uDAAgB,wDAAhB,CAAlJ,CAAP;AAAsL,KAA/P;AACA;;;AACAA,yBAAqB,CAACS,cAAtB,GAAuC;AAAA,aAAM,CACzC;AAAEC,YAAI,EAAE;AAAR,OADyC,EAEzC;AAAEA,YAAI,EAAE;AAAR,OAFyC,EAGzC;AAAEA,YAAI,EAAE;AAAR,OAHyC,EAIzC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAJyC,CAAN;AAAA,KAAvC;AAMA;;;AAAmBb,yBAAqB,CAACc,KAAtB,GAA8B,yEAAmB;AAAEC,aAAO,EAAE,SAASR,6BAAT,GAAyC;AAAE,eAAO,IAAIP,qBAAJ,CAA0B,+DAAS,uEAAT,CAA1B,EAAsD,+DAAS,oEAAT,CAAtD,EAA+E,+DAAS,oDAAT,CAA/E,EAAiG,+DAAS,wDAAT,CAAjG,CAAP;AAA8H,OAApL;AAAsLgB,WAAK,EAAEhB,qBAA7L;AAAoNiB,gBAAU,EAAE;AAAhO,KAAnB,CAA9B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBjB,qBAAzB,EAAgD,CAAC;AACtEU,YAAI,EAAE,wDADgE;AAEtEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFgE,OAAD,CAAhD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAAoC;AAAEA,cAAI,EAAE;AAAR,SAApC,EAAoE;AAAEA,cAAI,EAAE;AAAR,SAApE,EAA6F;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC1IF,gBAAI,EAAE,oDADoI;AAE1IG,gBAAI,EAAE,CAAC,wDAAD;AAFoI,WAAD;AAA/B,SAA7F,CAAP;AAGF,OANS,EAMP,IANO;AAMC,KANhB;;AAOd,QAAI,KAAJ,EAAW,CA4CV;AAED;;;;;;AAMA;;;;;;AAKA;;;;;QAGMK,a;AACF;;;AAGA,2BAAYf,MAAZ,EAAoB;AAAA;;AAChB;;;AAGA,WAAKgB,cAAL,GAAsB,IAAI9C,kBAAJ,EAAtB;AACA;;;;AAGA,WAAK+C,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,WAAKC,WAAL,GAAmB,KAAnB;AACA;;;;AAGA,WAAKC,aAAL,GAAqB,2BAArB;AACA;;;;;;AAKA,WAAKC,mBAAL,GAA2B,KAA3B;;AACA,UAAIpB,MAAJ,EAAY;AACR;AACA;AACA;;AACA;AACA,YAAMqB,UAAU;AAAI;AAAkBC,cAAM,CAACC,IAAP,CAAYvB,MAAZ,CAAtC;;AACA,uCAAkBqB,UAAlB,iCAA8B;AAAzB,cAAMG,GAAG,kBAAT;;AACD,cAAIxB,MAAM,CAACwB,GAAD,CAAN,KAAgBhB,SAApB,EAA+B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAKgB,GAAL;AAAa;AAAkBxB,kBAAM,CAACwB,GAAD,CAArC;AACH;AACJ;AACJ;AACJ,K;;AAEL,QAAI,KAAJ,EAAW,CAqEV;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,wBAAT,GAAoC,CAAG;;AACvC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,aAASC,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;QAGMC,sB;AACF;;;;;;;AAOA,oCAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+Cd,UAA/C,EAA2D;AAAA;;AACvD,WAAKa,OAAL,GAAeA,OAAf;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKd,UAAL,GAAkBA,UAAlB;AACA,WAAKe,OAAL,GAAeJ,MAAM,CAACI,OAAtB;AACA,WAAKC,OAAL,GAAeL,MAAM,CAACK,OAAtB;AACA,WAAKC,QAAL,GAAgBL,OAAO,CAACK,QAAxB;AACA,WAAKC,QAAL,GAAgBN,OAAO,CAACM,QAAxB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAoCV;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyBMC,mB;;;;AAEN,QAAI,KAAJ,EAAW,CASV;AACD;;;;;QAGMC,8B;AACF;;;;AAIA,4CAAYC,cAAZ,EAA4BC,wBAA5B,EAAsD;AAAA;;AAClD,WAAKD,cAAL,GAAsBA,cAAtB;AACA,WAAKC,wBAAL,GAAgCA,wBAAhC;AACH,K;AAEL;;;AACAF,kCAA8B,CAAC/B,cAA/B,GAAgD;AAAA,aAAM,CAClD;AAAEC,YAAI,EAAEoB;AAAR,OADkD,EAElD;AAAEpB,YAAI,EAAE6B,mBAAR;AAA6B3B,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAzC,OAFkD,CAAN;AAAA,KAAhD;;AAIA,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;;;AAOA,aAASiC,wBAAT,CAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AAC/C,UAAIA,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,QAA7B,IAAyCA,KAAK,KAAK,QAAvD,EAAiE;AAC7D,cAAMhG,KAAK,CAAC,qCAA8B+F,QAA9B,gBAA2CC,KAA3C,yDAAD,CAAX;AAEH;AACJ;AACD;;;;;;;;;AAOA,aAASC,0BAAT,CAAoCF,QAApC,EAA8CC,KAA9C,EAAqD;AACjD,UAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,KAA/B,IAAwCA,KAAK,KAAK,QAAtD,EAAgE;AAC5D,cAAMhG,KAAK,CAAC,qCAA8B+F,QAA9B,gBAA2CC,KAA3C,wDAAD,CAAX;AAEH;AACJ;AAED;;;;;;AAKA;;;;;;;QAKME,yB;AACF;;;AAGA,yCAAYnI,QAAZ,EAAsB;AAAA;;AAAA;;AAClB;;;AAGA,aAAKoI,iBAAL,GAAyB,EAAzB;AACA;;;;AAGA,aAAKC,gBAAL;AAAyB;;;;AAIzB,kBAACC,KAAD,EAAW;AACP;AACA,cAAMC,QAAQ,GAAG,MAAI,CAACH,iBAAtB;;AACA,eAAK,IAAII,CAAC,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,GAAG,CAAC,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAID,QAAQ,CAACC,CAAD,CAAR,CAAYE,0BAAZ,GAAyC,CAA7C,EAAgD;AAC5CH,sBAAQ,CAACC,CAAD,CAAR,CAAYG,cAAZ,CAA2BC,IAA3B,CAAgCN,KAAhC;;AACA;AACH;AACJ;AACJ,SAnBD;;AAoBA,aAAKjI,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;sCAGc;AACV,eAAKwC,OAAL;AACH;AACD;;;;;;;;4BAKIM,U,EAAY;AACZ;AACA,eAAKzB,MAAL,CAAYyB,UAAZ,EAFY,CAGZ;;AACA,cAAI,CAAC,KAAK+F,WAAV,EAAuB;AACnB,iBAAKxI,SAAL,CAAeU,IAAf,CAAoB+H,gBAApB,CAAqC,SAArC,EAAgD,KAAKT,gBAArD;;AACA,iBAAKQ,WAAL,GAAmB,IAAnB;AACH;;AACD,eAAKT,iBAAL,CAAuBW,IAAvB,CAA4BjG,UAA5B;AACH;AACD;;;;;;;;+BAKOA,U,EAAY;AACf;AACA,cAAMkG,KAAK,GAAG,KAAKZ,iBAAL,CAAuBa,OAAvB,CAA+BnG,UAA/B,CAAd;;AACA,cAAIkG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,iBAAKZ,iBAAL,CAAuBc,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;AACH,WALc,CAMf;;;AACA,cAAI,KAAKZ,iBAAL,CAAuBK,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,iBAAKjG,OAAL;AACH;AACJ;AACD;;;;;;;;kCAKU;AACN,cAAI,KAAKqG,WAAT,EAAsB;AAClB,iBAAKxI,SAAL,CAAeU,IAAf,CAAoBoI,mBAApB,CAAwC,SAAxC,EAAmD,KAAKd,gBAAxD;;AACA,iBAAKQ,WAAL,GAAmB,KAAnB;AACH;AACJ;;;;;;AAELV,6BAAyB,CAACzC,IAA1B,GAAiC,SAAS0D,iCAAT,CAA2CxD,CAA3C,EAA8C;AAAE,aAAO,KAAKA,CAAC,IAAIuC,yBAAV,EAAqC,uDAAgB,wDAAhB,CAArC,CAAP;AAAyE,KAA1J;AACA;;;AACAA,6BAAyB,CAACtC,cAA1B,GAA2C;AAAA,aAAM,CAC7C;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAD6C,CAAN;AAAA,KAA3C;AAGA;;;AAAmBkC,6BAAyB,CAACjC,KAA1B,GAAkC,yEAAmB;AAAEC,aAAO,EAAE,SAASiD,iCAAT,GAA6C;AAAE,eAAO,IAAIjB,yBAAJ,CAA8B,+DAAS,wDAAT,CAA9B,CAAP;AAA2D,OAArH;AAAuH/B,WAAK,EAAE+B,yBAA9H;AAAyJ9B,gBAAU,EAAE;AAArK,KAAnB,CAAlC;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyB8B,yBAAzB,EAAoD,CAAC;AAC1ErC,YAAI,EAAE,wDADoE;AAE1EG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFoE,OAAD,CAApD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,CAAP;AAGF,OANS,EAMP,IANO;AAMC,KANhB;;AAOd,QAAI,KAAJ,EAAW,CAsBV;AACD;;;;;;;;AAMA,aAASoD,4CAAT,CAAsDC,UAAtD,EAAkEjJ,SAAlE,EAA6E;AACzE,aAAOiJ,UAAU,IAAI,IAAInB,yBAAJ,CAA8B9H,SAA9B,CAArB;AACH;AACD;;;;;;AAIA,QAAMkJ,oCAAoC,GAAG;AACzC;AACA;AACAC,aAAO,EAAErB,yBAHgC;AAIzCsB,UAAI,EAAE,CACF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiCtB,yBAAjC,CADE;AAED;AACD;AACA;AACA,8DALE,CAJmC;AAWzCuB,gBAAU,EAAEL;AAX6B,KAA7C;AAcA;;;;;;AAKA;;;;;;AAKA,QAAMM,iBAAiB,GAAG,OAAOrI,MAAP,KAAkB,WAAlB,IAAiC,CAAC,CAACA,MAAnC,IACtB,CAAC;AAAI;AAAkBA,UAApB,CAA8BsI,SAA9B;AAA6C;AAAkBtI,UAApB,CAA8BuI,OAA3E,CADL;AAEA;;;;QAGMC,gB;AACF;;;;AAIA,gCAAY9J,QAAZ,EAAsB+J,SAAtB,EAAiC;AAAA;;AAC7B,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAK1J,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;sCAGc;AACV;AACA,cAAMgK,SAAS,GAAG,KAAKC,iBAAvB;;AACA,cAAID,SAAS,IAAIA,SAAS,CAACE,UAA3B,EAAuC;AACnCF,qBAAS,CAACE,UAAV,CAAqBC,WAArB,CAAiCH,SAAjC;AACH;AACJ;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,CAAC,KAAKC,iBAAV,EAA6B;AACzB,iBAAKG,gBAAL;AACH;;AACD,iBAAO,KAAKH,iBAAZ;AACH;AACD;;;;;;;;;2CAMmB;AACf;;AACA;AACA,cAAMI,SAAS,GAAG,KAAKN,SAAL,GAAiB,KAAKA,SAAL,CAAeM,SAAhC,GAA4C,OAAO/I,MAAP,KAAkB,WAAhF;AACA;;AACA,cAAMgJ,cAAc,GAAG,uBAAvB;;AACA,cAAID,SAAS,IAAIV,iBAAjB,EAAoC;AAChC;AACA,gBAAMY,0BAA0B,GAAG,KAAKlK,SAAL,CAAemK,gBAAf,CAAgC,WAAIF,cAAJ,0CAC3DA,cAD2D,wBAAhC,CAAnC,CAFgC,CAIhC;AACA;;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,0BAA0B,CAAC9B,MAA/C,EAAuDD,CAAC,EAAxD,EAA4D;AACvD;AAAkB+B,wCAA0B,CAAC/B,CAAD,CAA1B,CAA8B0B,UAAjD,CAA8DC,WAA9D,CAA0EI,0BAA0B,CAAC/B,CAAD,CAApG;AACH;AACJ;AACD;;;AACA,cAAMwB,SAAS,GAAG,KAAK3J,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAlB;;AACAT,mBAAS,CAACpJ,SAAV,CAAoBC,GAApB,CAAwByJ,cAAxB,EAlBe,CAmBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAIX,iBAAJ,EAAuB;AACnBK,qBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,MAAnC;AACH,WAFD,MAGK,IAAI,CAACL,SAAL,EAAgB;AACjBL,qBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,QAAnC;AACH;;AACD,eAAKrK,SAAL,CAAeU,IAAf,CAAoB4J,WAApB,CAAgCX,SAAhC;;AACA,eAAKC,iBAAL,GAAyBD,SAAzB;AACH;;;;;;AAELF,oBAAgB,CAACpE,IAAjB,GAAwB,SAASkF,wBAAT,CAAkChF,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIkE,gBAAV,EAA4B,uDAAgB,wDAAhB,CAA5B,EAAuD,uDAAgB,8DAAhB,CAAvD,CAAP;AAAkG,KAAjK;AACA;;;AACAA,oBAAgB,CAACjE,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OADoC,EAEpC;AAAEH,YAAI,EAAE;AAAR,OAFoC,CAAN;AAAA,KAAlC;AAIA;;;AAAmBgE,oBAAgB,CAAC5D,KAAjB,GAAyB,yEAAmB;AAAEC,aAAO,EAAE,SAASyE,wBAAT,GAAoC;AAAE,eAAO,IAAId,gBAAJ,CAAqB,+DAAS,wDAAT,CAArB,EAAyC,+DAAS,8DAAT,CAAzC,CAAP;AAAsE,OAAvH;AAAyH1D,WAAK,EAAE0D,gBAAhI;AAAkJzD,gBAAU,EAAE;AAA9J,KAAnB,CAAzB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyByD,gBAAzB,EAA2C,CAAC;AACjEhE,YAAI,EAAE,wDAD2D;AAEjEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF2D,OAAD,CAA3C,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGyB,OANlB,EAMoB,IANpB;AAM4B,KAN3C;;AAOd,QAAI,KAAJ,EAAW,CAkBV;AACD;;;;;;;;AAMA,aAAS+E,kCAAT,CAA4CC,eAA5C,EAA6DzK,SAA7D,EAAwE;AACpE,aAAOyK,eAAe,IAAI,IAAIhB,gBAAJ,CAAqBzJ,SAArB,CAA1B;AACH;AACD;;;;;;AAIA,QAAM0K,0BAA0B,GAAG;AAC/B;AACAvB,aAAO,EAAEM,gBAFsB;AAG/BL,UAAI,EAAE,CACF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiCK,gBAAjC,CADE;AAED;AAAkB,8DAFjB,CAHyB;AAO/BJ,gBAAU,EAAEmB;AAPmB,KAAnC;AAUA;;;;;;AAKA;;;;;QAIMG,U;AACF;;;;;;;;;;AAUA,0BAAYC,aAAZ,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC7I,OAAzC,EAAkDD,OAAlD,EAA2D+I,mBAA3D,EAAgF/K,SAAhF,EAA2FgL,SAA3F,EAAsG;AAAA;;AAAA;;AAClG,aAAKJ,aAAL,GAAqBA,aAArB;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAK7I,OAAL,GAAeA,OAAf;AACA,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAK+I,mBAAL,GAA2BA,mBAA3B;AACA,aAAK/K,SAAL,GAAiBA,SAAjB;AACA,aAAKgL,SAAL,GAAiBA,SAAjB;AACA,aAAKC,gBAAL,GAAwB,IAAxB;AACA,aAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA,aAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,aAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,aAAKC,gBAAL,GAAwB,kDAAaC,KAArC;;AACA,aAAKC,qBAAL;AAA8B;;;;AAI9B,kBAACtD,KAAD;AAAA,iBAAW,MAAI,CAACiD,cAAL,CAAoB3C,IAApB,CAAyBN,KAAzB,CAAX;AAAA,SAJA;;AAKA,aAAKuD,wBAAL,GAAgC,IAAI,+CAAJ;AAAgB;;;;AAIhD,kBAACC,QAAD,EAAc;AACV;AACA,cAAMC,YAAY,GAAG,MAAI,CAACpD,cAAL,CAAoBxF,SAApB,CAA8B2I,QAA9B,CAArB;;AACA,gBAAI,CAACpD,0BAAL;AACA;AAAQ;;;AAGR,wBAAM;AACFqD,0BAAY,CAACvI,WAAb;AACA,oBAAI,CAACkF,0BAAL;AACH;AAND;AAOH,SAf+B,CAAhC;AAgBA;;;;AAGA,aAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA;;;;AAGA,aAAKD,0BAAL,GAAkC,CAAlC;;AACA,YAAIpG,OAAO,CAACiE,cAAZ,EAA4B;AACxB,eAAKyF,eAAL,GAAuB1J,OAAO,CAACiE,cAA/B;;AACA,eAAKyF,eAAL,CAAqBC,MAArB,CAA4B,IAA5B;AACH;;AACD,aAAKC,iBAAL,GAAyB5J,OAAO,CAAC6J,gBAAjC;AACH;AACD;;;;;;;;;AAuBA;;;;;;;+BAOOC,M,EAAQ;AAAA;;AACX;AACA,cAAIC,YAAY,GAAG,KAAKpB,aAAL,CAAmBgB,MAAnB,CAA0BG,MAA1B,CAAnB,CAFW,CAGX;;;AACA,cAAI,CAAC,KAAKlB,KAAL,CAAWoB,aAAZ,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,iBAAKA,mBAAL,CAAyB5B,WAAzB,CAAqC,KAAKO,KAA1C;AACH;;AACD,cAAI,KAAKgB,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBD,MAAvB,CAA8B,IAA9B;AACH;;AACD,eAAKO,oBAAL;;AACA,eAAKC,kBAAL;;AACA,eAAKC,uBAAL;;AACA,cAAI,KAAKV,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBW,MAArB;AACH,WAfU,CAgBX;AACA;AACA;;;AACA,eAAKtK,OAAL,CAAauK,QAAb,CACKC,YADL,GAEKC,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGK3J,SAHL;AAGgB;;;AAGhB,sBAAM;AACF;AACA,gBAAI,MAAI,CAACR,WAAL,EAAJ,EAAwB;AACpB,oBAAI,CAACY,cAAL;AACH;AACJ,WAXD,EAnBW,CA+BX;;;AACA,eAAKwJ,oBAAL,CAA0B,IAA1B;;AACA,cAAI,KAAKzK,OAAL,CAAamE,WAAjB,EAA8B;AAC1B,iBAAKuG,eAAL;AACH;;AACD,cAAI,KAAK1K,OAAL,CAAakE,UAAjB,EAA6B;AACzB,iBAAKyG,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC,KAAK7I,OAAL,CAAakE,UAA7C,EAAyD,IAAzD;AACH,WAtCU,CAuCX;;;AACA,eAAKgF,YAAL,CAAkB5C,IAAlB,GAxCW,CAyCX;;;AACA,eAAKwC,mBAAL,CAAyBvK,GAAzB,CAA6B,IAA7B,EA1CW,CA2CX;AACA;;;AACA,cAAI,KAAKyB,OAAL,CAAaqE,mBAAb,IAAoC,KAAK0E,SAA7C,EAAwD;AACpD,iBAAKK,gBAAL,GAAwB,KAAKL,SAAL,CAAelI,SAAf;AAA0B;;;AAGlD;AAAA,qBAAM,MAAI,CAAC+J,OAAL,EAAN;AAAA,aAHwB,CAAxB;AAIH;;AACD,iBAAOb,YAAP;AACH;AACD;;;;;;;iCAIS;AACL,cAAI,CAAC,KAAK1J,WAAL,EAAL,EAAyB;AACrB;AACH;;AACD,eAAKwK,cAAL,GAJK,CAKL;AACA;AACA;;AACA,eAAKJ,oBAAL,CAA0B,KAA1B;;AACA,cAAI,KAAKb,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBrJ,MAArD,EAA6D;AACzD,iBAAKqJ,iBAAL,CAAuBrJ,MAAvB;AACH;;AACD,cAAI,KAAKmJ,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBvJ,OAArB;AACH;AACD;;;AACA,cAAM2K,gBAAgB,GAAG,KAAKnC,aAAL,CAAmBpI,MAAnB,EAAzB,CAhBK,CAiBL;;;AACA,eAAK4I,YAAL,CAAkB7C,IAAlB,GAlBK,CAmBL;;;AACA,eAAKwC,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC,EApBK,CAqBL;AACA;;;AACA,eAAKgM,wBAAL,GAvBK,CAwBL;;;AACA,eAAK3B,gBAAL,CAAsBlI,WAAtB;;AACA,iBAAO4J,gBAAP;AACH;AACD;;;;;;;kCAIU;AACN;AACA,cAAME,UAAU,GAAG,KAAK3K,WAAL,EAAnB;;AACA,cAAI,KAAKuJ,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBgB,OAAvB;AACH;;AACD,eAAKK,sBAAL;;AACA,eAAKJ,cAAL;;AACA,eAAKzB,gBAAL,CAAsBlI,WAAtB;;AACA,eAAK4H,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC;;AACA,eAAK4J,aAAL,CAAmBiC,OAAnB;;AACA,eAAK1B,YAAL,CAAkBgC,QAAlB;;AACA,eAAKjC,cAAL,CAAoBiC,QAApB;;AACA,eAAK7E,cAAL,CAAoB6E,QAApB;;AACA,cAAI,KAAKtC,KAAL,IAAc,KAAKA,KAAL,CAAWhB,UAA7B,EAAyC;AACrC,iBAAKgB,KAAL,CAAWhB,UAAX,CAAsBC,WAAtB,CAAkC,KAAKe,KAAvC;;AACA,iBAAKA,KAAL;AAAc;AAAkB,gBAAhC;AACH;;AACD,eAAKqB,mBAAL,GAA2B,KAAKpB,KAAL;AAAc;AAAkB,cAA3D;;AACA,cAAImC,UAAJ,EAAgB;AACZ,iBAAK7B,YAAL,CAAkB7C,IAAlB;AACH;;AACD,eAAK6C,YAAL,CAAkB+B,QAAlB;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKvC,aAAL,CAAmBtI,WAAnB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAK4I,cAAL,CAAoBsB,YAApB,EAAP;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKrB,YAAL,CAAkBqB,YAAlB,EAAP;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKpB,YAAL,CAAkBoB,YAAlB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAKhB,wBAAZ;AACH;AACD;;;;;;;oCAIY;AACR,iBAAO,KAAKvJ,OAAZ;AACH;AACD;;;;;;;yCAIiB;AACb,cAAI,KAAK4J,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBuB,KAAvB;AACH;AACJ;AACD;;;;;;;;+CAKuBC,Q,EAAU;AAC7B,cAAIA,QAAQ,KAAK,KAAKxB,iBAAtB,EAAyC;AACrC;AACH;;AACD,cAAI,KAAKA,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBgB,OAAvB;AACH;;AACD,eAAKhB,iBAAL,GAAyBwB,QAAzB;;AACA,cAAI,KAAK/K,WAAL,EAAJ,EAAwB;AACpB+K,oBAAQ,CAACzB,MAAT,CAAgB,IAAhB;AACA,iBAAK1I,cAAL;AACH;AACJ;AACD;;;;;;;;mCAKWoK,U,EAAY;AACnB,eAAKrL,OAAL,GAAeuE,MAAM,CAAC+G,MAAP,CAAc/G,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkB,KAAKtL,OAAvB,CAAd,EAA+CqL,UAA/C,CAAf;;AACA,eAAKlB,kBAAL;AACH;AACD;;;;;;;;qCAKaoB,G,EAAK;AACd,eAAKvL,OAAL,GAAeuE,MAAM,CAAC+G,MAAP,CAAc/G,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkB,KAAKtL,OAAvB,CAAd,EAA+C;AAAEwL,qBAAS,EAAED;AAAb,WAA/C,CAAf;;AACA,eAAKnB,uBAAL;AACH;AACD;;;;;;;;sCAKcqB,O,EAAS;AACnB,cAAI,KAAK5C,KAAT,EAAgB;AACZ,iBAAK8B,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC4C,OAAhC,EAAyC,IAAzC;AACH;AACJ;AACD;;;;;;;;yCAKiBA,O,EAAS;AACtB,cAAI,KAAK5C,KAAT,EAAgB;AACZ,iBAAK8B,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC4C,OAAhC,EAAyC,KAAzC;AACH;AACJ;AACD;;;;;;;uCAIe;AACX;AACA,cAAMD,SAAS,GAAG,KAAKxL,OAAL,CAAawL,SAA/B;;AACA,cAAI,CAACA,SAAL,EAAgB;AACZ,mBAAO,KAAP;AACH;;AACD,iBAAO,OAAOA,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CA,SAAS,CAAC7F,KAA7D;AACH;AACD;;;;;;;;6CAKqByF,Q,EAAU;AAC3B,cAAIA,QAAQ,KAAK,KAAK1B,eAAtB,EAAuC;AACnC;AACH;;AACD,eAAKuB,sBAAL;;AACA,eAAKvB,eAAL,GAAuB0B,QAAvB;;AACA,cAAI,KAAK/K,WAAL,EAAJ,EAAwB;AACpB+K,oBAAQ,CAACzB,MAAT,CAAgB,IAAhB;AACAyB,oBAAQ,CAACf,MAAT;AACH;AACJ;AACD;;;;;;;;kDAK0B;AACtB,eAAKzB,KAAL,CAAWR,YAAX,CAAwB,KAAxB,EAA+B,KAAKsD,YAAL,EAA/B;AACH;AACD;;;;;;;;6CAKqB;AACjB,cAAI,CAAC,KAAK7C,KAAV,EAAiB;AACb;AACH;AACD;;;AACA,cAAMxK,KAAK,GAAG,KAAKwK,KAAL,CAAWxK,KAAzB;AACAA,eAAK,CAACmB,KAAN,GAAc,kFAAoB,KAAKQ,OAAL,CAAaR,KAAjC,CAAd;AACAnB,eAAK,CAACiB,MAAN,GAAe,kFAAoB,KAAKU,OAAL,CAAaV,MAAjC,CAAf;AACAjB,eAAK,CAACsN,QAAN,GAAiB,kFAAoB,KAAK3L,OAAL,CAAa2L,QAAjC,CAAjB;AACAtN,eAAK,CAACuN,SAAN,GAAkB,kFAAoB,KAAK5L,OAAL,CAAa4L,SAAjC,CAAlB;AACAvN,eAAK,CAACwN,QAAN,GAAiB,kFAAoB,KAAK7L,OAAL,CAAa6L,QAAjC,CAAjB;AACAxN,eAAK,CAACyN,SAAN,GAAkB,kFAAoB,KAAK9L,OAAL,CAAa8L,SAAjC,CAAlB;AACH;AACD;;;;;;;;;6CAMqBC,a,EAAe;AAChC,eAAKlD,KAAL,CAAWxK,KAAX,CAAiB2N,aAAjB,GAAiCD,aAAa,GAAG,MAAH,GAAY,MAA1D;AACH;AACD;;;;;;;;0CAKkB;AAAA;;AACd;AACA,cAAME,YAAY,GAAG,8BAArB;AACA,eAAKjD,gBAAL,GAAwB,KAAKjL,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAxB;;AACA,eAAKa,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC,sBAApC;;AACA,cAAI,KAAKyB,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,iBAAKuG,cAAL,CAAoB,KAAK3B,gBAAzB,EAA2C,KAAKhJ,OAAL,CAAaoE,aAAxD,EAAuE,IAAvE;AACH,WAPa,CAQd;AACA;;;AACC;AAAkB,eAAKwE,KAAL,CAAWoB,aAA9B,CAA8CkC,YAA9C,CAA2D,KAAKlD,gBAAhE,EAAkF,KAAKJ,KAAvF,EAVc,CAWd;AACA;;;AACA,eAAKI,gBAAL,CAAsBxC,gBAAtB,CAAuC,OAAvC,EAAgD,KAAK8C,qBAArD,EAbc,CAcd;;;AACA,cAAI,OAAO6C,qBAAP,KAAiC,WAArC,EAAkD;AAC9C,iBAAKpM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACFD,mCAAqB;AAAE;;;AAGvB,0BAAM;AACF,oBAAI,MAAI,CAACnD,gBAAT,EAA2B;AACvB,wBAAI,CAACA,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC0N,YAApC;AACH;AACJ,eAPoB,CAArB;AAQH,aAZD;AAaH,WAdD,MAeK;AACD,iBAAKjD,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC0N,YAApC;AACH;AACJ;AACD;;;;;;;;;;;;+CASuB;AACnB,cAAI,KAAKrD,KAAL,CAAWyD,WAAf,EAA4B;AACvB;AAAkB,iBAAKzD,KAAL,CAAWhB,UAA9B,CAA2CS,WAA3C,CAAuD,KAAKO,KAA5D;AACH;AACJ;AACD;;;;;;;yCAIiB;AAAA;;AACb;AACA,cAAI0D,gBAAgB,GAAG,KAAKtD,gBAA5B;;AACA,cAAI,CAACsD,gBAAL,EAAuB;AACnB;AACH;AACD;;;AACA,cAAIC,SAAJ;AACA;;AACA,cAAIC,YAAY;AAAI;;;AAGpB,mBAHIA,YAGJ,GAAM;AACF;AACA,gBAAIF,gBAAJ,EAAsB;AAClBA,8BAAgB,CAACzF,mBAAjB,CAAqC,OAArC,EAA8C,MAAI,CAACyC,qBAAnD;AACAgD,8BAAgB,CAACzF,mBAAjB,CAAqC,eAArC,EAAsD2F,YAAtD;;AACA,kBAAIF,gBAAgB,CAAC1E,UAArB,EAAiC;AAC7B0E,gCAAgB,CAAC1E,UAAjB,CAA4BC,WAA5B,CAAwCyE,gBAAxC;AACH;AACJ,aARC,CASF;AACA;AACA;;;AACA,gBAAI,MAAI,CAACtD,gBAAL,IAAyBsD,gBAA7B,EAA+C;AAC3C,oBAAI,CAACtD,gBAAL,GAAwB,IAAxB;AACH;;AACD,gBAAI,MAAI,CAAChJ,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,oBAAI,CAACuG,cAAL;AAAqB;AAAkB2B,8BAAvC,EAA2D,MAAI,CAACtM,OAAL,CAAaoE,aAAxE,EAAuF,KAAvF;AACH;;AACDqI,wBAAY,CAACF,SAAD,CAAZ;AACH,WAtBD;;AAuBAD,0BAAgB,CAAChO,SAAjB,CAA2BS,MAA3B,CAAkC,8BAAlC;;AACA,eAAKgB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACD;AAAkBE,4BAAnB,CAAsC9F,gBAAtC,CAAuD,eAAvD,EAAwEgG,YAAxE;AACH,WALD,EAjCa,CAuCb;AACA;;;AACAF,0BAAgB,CAACjO,KAAjB,CAAuB2N,aAAvB,GAAuC,MAAvC,CAzCa,CA0Cb;AACA;AACA;;AACAO,mBAAS,GAAG,KAAKxM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAG5C;AAAA,mBAAMM,UAAU,CAACF,YAAD,EAAe,GAAf,CAAhB;AAAA,WAHY,CAAZ;AAIH;AACD;;;;;;;;;;;uCAQenL,O,EAASsL,U,EAAYC,K,EAAO;AACvC;AACA,cAAMtO,SAAS,GAAG+C,OAAO,CAAC/C,SAA1B;AACA,oFAAYqO,UAAZ,EAAwBE,OAAxB;AAAiC;;;;AAIjC,oBAAAC,QAAQ,EAAI;AACR;AACA;AACA,gBAAIA,QAAJ,EAAc;AACVF,mBAAK,GAAGtO,SAAS,CAACC,GAAV,CAAcuO,QAAd,CAAH,GAA6BxO,SAAS,CAACS,MAAV,CAAiB+N,QAAjB,CAAlC;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;mDAK2B;AAAA;;AACvB;AACA;AACA;AACA,eAAK/M,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF;AACA;AACA;;AACA;AACA,gBAAM3C,YAAY,GAAG,OAAI,CAAC1J,OAAL,CAAauK,QAAb,CAChBC,YADgB,GAEhBC,IAFgB,CAEX,iEAAU,mDAAM,OAAI,CAACtB,YAAX,EAAyB,OAAI,CAACC,YAA9B,CAAV,CAFW,EAGhBtI,SAHgB;AAGL;;;AAGhB,wBAAM;AACF;AACA;AACA,kBAAI,CAAC,OAAI,CAACgI,KAAN,IAAe,CAAC,OAAI,CAACD,KAArB,IAA8B,OAAI,CAACC,KAAL,CAAWkE,QAAX,CAAoB5G,MAApB,KAA+B,CAAjE,EAAoE;AAChE,oBAAI,OAAI,CAAC0C,KAAL,IAAc,OAAI,CAAC7I,OAAL,CAAakE,UAA/B,EAA2C;AACvC,yBAAI,CAACyG,cAAL,CAAoB,OAAI,CAAC9B,KAAzB,EAAgC,OAAI,CAAC7I,OAAL,CAAakE,UAA7C,EAAyD,KAAzD;AACH;;AACD,oBAAI,OAAI,CAAC0E,KAAL,IAAc,OAAI,CAACA,KAAL,CAAWoB,aAA7B,EAA4C;AACxC,yBAAI,CAACC,mBAAL,GAA2B,OAAI,CAACrB,KAAL,CAAWoB,aAAtC;;AACA,yBAAI,CAACC,mBAAL,CAAyBpC,WAAzB,CAAqC,OAAI,CAACe,KAA1C;AACH;;AACDa,4BAAY,CAACvI,WAAb;AACH;AACJ,aAnBoB,CAArB;AAoBH,WA5BD;AA6BH;AACD;;;;;;;;iDAKyB;AACrB;AACA,cAAM+C,cAAc,GAAG,KAAKyF,eAA5B;;AACA,cAAIzF,cAAJ,EAAoB;AAChBA,0BAAc,CAAC9D,OAAf;;AACA,gBAAI8D,cAAc,CAAC1D,MAAnB,EAA2B;AACvB0D,4BAAc,CAAC1D,MAAf;AACH;AACJ;AACJ;;;4BA5eoB;AACjB,iBAAO,KAAKsI,KAAZ;AACH;AACD;;;;;;;4BAIsB;AAClB,iBAAO,KAAKG,gBAAZ;AACH;AACD;;;;;;;;;4BAMkB;AACd,iBAAO,KAAKJ,KAAZ;AACH;;;;;;AA4dL,QAAI,KAAJ,EAAW,CAuGV;AACD;;;;;;AAIA,aAASoE,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAaV;AAED;;;;;AAKA;AACA;;AACA;;;;;;AAIA,QAAMC,gBAAgB,GAAG,6CAAzB;AACA;;;;;AAIA,QAAMC,cAAc,GAAG,eAAvB;AACA;;;;;;;;QAOMC,iC;AACF;;;;;;;AAOA,iDAAYC,WAAZ,EAAyB3P,cAAzB,EAAyCM,SAAzC,EAAoD0J,SAApD,EAA+D4F,iBAA/D,EAAkF;AAAA;;AAC9E,aAAK5P,cAAL,GAAsBA,cAAtB;AACA,aAAKM,SAAL,GAAiBA,SAAjB;AACA,aAAK0J,SAAL,GAAiBA,SAAjB;AACA,aAAK4F,iBAAL,GAAyBA,iBAAzB;AACA;;;;AAGA,aAAKC,oBAAL,GAA4B;AAAE9N,eAAK,EAAE,CAAT;AAAYF,gBAAM,EAAE;AAApB,SAA5B;AACA;;;;AAGA,aAAKiO,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,IAAhB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,KAAtB;AACA;;;;AAGA,aAAKC,sBAAL,GAA8B,IAA9B;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,KAAvB;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,CAAvB;AACA;;;;AAGA,aAAKC,YAAL,GAAoB,EAApB;AACA;;;;AAGA,aAAKC,mBAAL,GAA2B,EAA3B;AACA;;;;AAGA,aAAKC,gBAAL,GAAwB,IAAI,4CAAJ,EAAxB;AACA;;;;AAGA,aAAKC,mBAAL,GAA2B,kDAAa3E,KAAxC;AACA;;;;AAGA,aAAK4E,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,aAAKC,oBAAL,GAA4B,EAA5B;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,KAAKL,gBAAL,CAAsBxD,YAAtB,EAAvB;AACA,aAAK8D,SAAL,CAAejB,WAAf;AACH;AACD;;;;;;;;;AAOA;;;;;+BAKO5M,U,EAAY;AAAA;;AACf,cAAI,KAAKJ,WAAL,IAAoBI,UAAU,KAAK,KAAKJ,WAA5C,EAAyD;AACrD,kBAAMT,KAAK,CAAC,0DAAD,CAAX;AACH;;AACD,eAAK2O,kBAAL;;AACA9N,oBAAU,CAAC+N,WAAX,CAAuBjQ,SAAvB,CAAiCC,GAAjC,CAAqC0O,gBAArC;AACA,eAAK7M,WAAL,GAAmBI,UAAnB;AACA,eAAKgO,YAAL,GAAoBhO,UAAU,CAAC+N,WAA/B;AACA,eAAK1F,KAAL,GAAarI,UAAU,CAACmC,cAAxB;AACA,eAAK8L,WAAL,GAAmB,KAAnB;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,aAAL,GAAqB,IAArB;;AACA,eAAKX,mBAAL,CAAyB9M,WAAzB;;AACA,eAAK8M,mBAAL,GAA2B,KAAKvQ,cAAL,CAAoBmR,MAApB,GAA6B/N,SAA7B;AAAwC;;;AAGnE,sBAAM;AACF;AACA;AACA;AACA,mBAAI,CAAC6N,gBAAL,GAAwB,IAAxB;;AACA,mBAAI,CAACvD,KAAL;AACH,WAT0B,CAA3B;AAUH;AACD;;;;;;;;;;;;;;;;;;gCAeQ;AACJ;AACA,cAAI,KAAKsD,WAAL,IAAoB,CAAC,KAAKhH,SAAL,CAAeM,SAAxC,EAAmD;AAC/C;AACH,WAJG,CAKJ;AACA;AACA;;;AACA,cAAI,CAAC,KAAK2G,gBAAN,IAA0B,KAAKf,eAA/B,IAAkD,KAAKgB,aAA3D,EAA0E;AACtE,iBAAKE,mBAAL;AACA;AACH;;AACD,eAAKC,kBAAL;;AACA,eAAKC,0BAAL;;AACA,eAAKC,uBAAL,GAdI,CAeJ;AACA;AACA;;;AACA,eAAKC,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA,eAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,eAAKC,YAAL,GAAoB,KAAKxG,KAAL,CAAWjG,qBAAX,EAApB;AACA;;AACA,cAAM0M,UAAU,GAAG,KAAKH,WAAxB;AACA;;AACA,cAAMzM,WAAW,GAAG,KAAK2M,YAAzB;AACA;;AACA,cAAME,YAAY,GAAG,KAAKN,aAA1B,CA1BI,CA2BJ;;AACA;;AACA,cAAMO,YAAY,GAAG,EAArB,CA7BI,CA8BJ;;AACA;;AACA,cAAIC,QAAJ,CAhCI,CAiCJ;AACA;;AAlCI,qDAmCY,KAAK3B,mBAnCjB;AAAA;;AAAA;AAmCJ,gEAA0C;AAAA,kBAAjC4B,GAAiC;;AACtC;;AACA;AACA,kBAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBN,UAArB,EAAiCI,GAAjC,CAAlB,CAHsC,CAItC;AACA;AACA;;AACA;;;AACA,kBAAIG,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmCjN,WAAnC,EAAgDgN,GAAhD,CAAnB,CARsC,CAStC;;AACA;;;AACA,kBAAIK,UAAU,GAAG,KAAKC,cAAL,CAAoBH,YAApB,EAAkCnN,WAAlC,EAA+C6M,YAA/C,EAA6DG,GAA7D,CAAjB,CAXsC,CAYtC;;;AACA,kBAAIK,UAAU,CAACE,0BAAf,EAA2C;AACvC,qBAAK1C,SAAL,GAAiB,KAAjB;;AACA,qBAAK2C,cAAL,CAAoBR,GAApB,EAAyBC,WAAzB;;AACA;AACH,eAjBqC,CAkBtC;AACA;;;AACA,kBAAI,KAAKQ,6BAAL,CAAmCJ,UAAnC,EAA+CF,YAA/C,EAA6DN,YAA7D,CAAJ,EAAgF;AAC5E;AACA;AACAC,4BAAY,CAAC/I,IAAb,CAAkB;AACd2J,0BAAQ,EAAEV,GADI;AAEd7K,wBAAM,EAAE8K,WAFM;AAGdjN,6BAAW,EAAXA,WAHc;AAId2N,iCAAe,EAAE,KAAKC,yBAAL,CAA+BX,WAA/B,EAA4CD,GAA5C;AAJH,iBAAlB;AAMA;AACH,eA9BqC,CA+BtC;AACA;AACA;;;AACA,kBAAI,CAACD,QAAD,IAAaA,QAAQ,CAACM,UAAT,CAAoBQ,WAApB,GAAkCR,UAAU,CAACQ,WAA9D,EAA2E;AACvEd,wBAAQ,GAAG;AAAEM,4BAAU,EAAVA,UAAF;AAAcF,8BAAY,EAAZA,YAAd;AAA4BF,6BAAW,EAAXA,WAA5B;AAAyCS,0BAAQ,EAAEV,GAAnD;AAAwDhN,6BAAW,EAAXA;AAAxD,iBAAX;AACH;AACJ,aAxEG,CAyEJ;AACA;;AA1EI;AAAA;AAAA;AAAA;AAAA;;AA2EJ,cAAI8M,YAAY,CAACrJ,MAAjB,EAAyB;AACrB;AACA,gBAAIqK,OAAO,GAAG,IAAd;AACA;;AACA,gBAAIC,SAAS,GAAG,CAAC,CAAjB;;AAJqB,wDAKHjB,YALG;AAAA;;AAAA;AAKrB,qEAAgC;AAAA,oBAArBkB,GAAqB;;AAC5B;AACA,oBAAMC,KAAK,GAAGD,GAAG,CAACL,eAAJ,CAAoB7Q,KAApB,GAA4BkR,GAAG,CAACL,eAAJ,CAAoB/Q,MAAhD,IAA0DoR,GAAG,CAACN,QAAJ,CAAaQ,MAAb,IAAuB,CAAjF,CAAd;;AACA,oBAAID,KAAK,GAAGF,SAAZ,EAAuB;AACnBA,2BAAS,GAAGE,KAAZ;AACAH,yBAAO,GAAGE,GAAV;AACH;AACJ;AAZoB;AAAA;AAAA;AAAA;AAAA;;AAarB,iBAAKnD,SAAL,GAAiB,KAAjB;;AACA,iBAAK2C,cAAL;AAAqB;AAAkBM,mBAAnB,CAA6BJ,QAAjD;AAA4D;AAAkBI,mBAAnB,CAA6B3L,MAAxF;;AACA;AACH,WA3FG,CA4FJ;AACA;;;AACA,cAAI,KAAK2I,QAAT,EAAmB;AACf;AACA,iBAAKD,SAAL,GAAiB,IAAjB;;AACA,iBAAK2C,cAAL;AAAqB;AAAkBT,oBAAnB,CAA8BW,QAAlD;AAA6D;AAAkBX,oBAAnB,CAA8BE,WAA1F;;AACA;AACH,WAnGG,CAoGJ;AACA;;;AACA,eAAKO,cAAL;AAAqB;AAAkBT,kBAAnB,CAA8BW,QAAlD;AAA6D;AAAkBX,kBAAnB,CAA8BE,WAA1F;AACH;AACD;;;;;;iCAGS;AACL,eAAKb,kBAAL;;AACA,eAAKH,aAAL,GAAqB,IAArB;AACA,eAAKkC,mBAAL,GAA2B,IAA3B;;AACA,eAAK7C,mBAAL,CAAyB9M,WAAzB;AACH;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKuN,WAAT,EAAsB;AAClB;AACH,WAHK,CAIN;AACA;;;AACA,cAAI,KAAKD,YAAT,EAAuB;AACnBsC,wBAAY,CAAC,KAAKtC,YAAL,CAAkBnQ,KAAnB;AAA2B;AAAkB;AACrDT,iBAAG,EAAE,EADgD;AAErDC,kBAAI,EAAE,EAF+C;AAGrDgE,mBAAK,EAAE,EAH8C;AAIrDH,oBAAM,EAAE,EAJ6C;AAKrDpC,oBAAM,EAAE,EAL6C;AAMrDE,mBAAK,EAAE,EAN8C;AAOrDuR,wBAAU,EAAE,EAPyC;AAQrDC,4BAAc,EAAE;AARqC,aAA7C,CAAZ;AAUH;;AACD,cAAI,KAAKnI,KAAT,EAAgB;AACZ,iBAAKkG,0BAAL;AACH;;AACD,cAAI,KAAK3O,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBmO,WAAjB,CAA6BjQ,SAA7B,CAAuCS,MAAvC,CAA8CkO,gBAA9C;AACH;;AACD,eAAK1M,MAAL;;AACA,eAAKwN,gBAAL,CAAsB7C,QAAtB;;AACA,eAAK9K,WAAL,GAAmB,KAAKoO,YAAL;AAAqB;AAAkB,cAA1D;AACA,eAAKC,WAAL,GAAmB,IAAnB;AACH;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,CAAC,KAAKA,WAAN,KAAsB,CAAC,KAAKhH,SAAN,IAAmB,KAAKA,SAAL,CAAeM,SAAxD,CAAJ,EAAwE;AACpE,iBAAKoH,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,iBAAKC,YAAL,GAAoB,KAAKxG,KAAL,CAAWjG,qBAAX,EAApB;AACA,iBAAKqM,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA;;AACA,gBAAM+B,YAAY,GAAG,KAAKtC,aAAL,IAAsB,KAAKb,mBAAL,CAAyB,CAAzB,CAA3C;AACA;;AACA,gBAAM6B,WAAW,GAAG,KAAKC,eAAL,CAAqB,KAAKT,WAA1B,EAAuC8B,YAAvC,CAApB;;AACA,iBAAKf,cAAL,CAAoBe,YAApB,EAAkCtB,WAAlC;AACH;AACJ;AACD;;;;;;;;;;;;iDASyBuB,W,EAAa;AACjC;AAAkB,cAAnB,CAA0BrD,YAA1B,GAAyCqD,WAAzC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcC,S,EAAW;AACpB;AAAkB,cAAnB,CAA0BrD,mBAA1B,GAAgDqD,SAAhD,CADqB,CAErB;AACA;;AACA,cAAIA,SAAS,CAACxK,OAAV;AAAmB;;AAAmB;AAAkB,cAAnB,CAA0BgI,aAA/D,MAAoF,CAAC,CAAzF,EAA4F;AACvF;AAAkB,gBAAnB,CAA0BA,aAA1B,GAA0C,IAA1C;AACH;;AACA;AAAkB,cAAnB,CAA0BL,kBAA1B;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmB8C,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BxD,eAA1B,GAA4CwD,MAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;iDAOkD;AAAA,cAA3BC,kBAA2B,uEAAN,IAAM;;AAC7C;AAAkB,cAAnB,CAA0B3D,sBAA1B,GAAmD2D,kBAAnD;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;4CAOwC;AAAA,cAAtBC,aAAsB,uEAAN,IAAM;;AACnC;AAAkB,cAAnB,CAA0B7D,cAA1B,GAA2C6D,aAA3C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;mCAOyB;AAAA,cAAhBC,OAAgB,uEAAN,IAAM;;AACpB;AAAkB,cAAnB,CAA0B/D,QAA1B,GAAqC+D,OAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;6CASoC;AAAA,cAAjBC,QAAiB,uEAAN,IAAM;;AAC/B;AAAkB,cAAnB,CAA0B7D,eAA1B,GAA4C6D,QAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;;kCAUU3M,M,EAAQ;AACb;AAAkB,cAAnB,CAA0B4M,OAA1B,GAAoC5M,MAApC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmB6M,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BzD,QAA1B,GAAqCyD,MAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmBA,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BxD,QAA1B,GAAqCwD,MAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;;;8CAWsBC,Q,EAAU;AAC3B;AAAkB,cAAnB,CAA0BC,wBAA1B,GAAqDD,QAArD;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;wCAOgBrC,U,EAAYI,G,EAAK;AAC7B;AACA,cAAImC,CAAJ;;AACA,cAAInC,GAAG,CAACzK,OAAJ,IAAe,QAAnB,EAA6B;AACzB;AACA;AACA4M,aAAC,GAAGvC,UAAU,CAACzR,IAAX,GAAmByR,UAAU,CAAC9P,KAAX,GAAmB,CAA1C;AACH,WAJD,MAKK;AACD;AACA,gBAAMsS,MAAM,GAAG,KAAKC,MAAL,KAAgBzC,UAAU,CAACzN,KAA3B,GAAmCyN,UAAU,CAACzR,IAA7D;AACA;;AACA,gBAAMmU,IAAI,GAAG,KAAKD,MAAL,KAAgBzC,UAAU,CAACzR,IAA3B,GAAkCyR,UAAU,CAACzN,KAA1D;AACAgQ,aAAC,GAAGnC,GAAG,CAACzK,OAAJ,IAAe,OAAf,GAAyB6M,MAAzB,GAAkCE,IAAtC;AACH;AACD;;;AACA,cAAIC,CAAJ;;AACA,cAAIvC,GAAG,CAACxK,OAAJ,IAAe,QAAnB,EAA6B;AACzB+M,aAAC,GAAG3C,UAAU,CAAC1R,GAAX,GAAkB0R,UAAU,CAAChQ,MAAX,GAAoB,CAA1C;AACH,WAFD,MAGK;AACD2S,aAAC,GAAGvC,GAAG,CAACxK,OAAJ,IAAe,KAAf,GAAuBoK,UAAU,CAAC1R,GAAlC,GAAwC0R,UAAU,CAAC5N,MAAvD;AACH;;AACD,iBAAO;AAAEmQ,aAAC,EAADA,CAAF;AAAKI,aAAC,EAADA;AAAL,WAAP;AACH;AACD;;;;;;;;;;;;yCASiBtC,W,EAAajN,W,EAAagN,G,EAAK;AAC5C;AACA;;AACA;AACA,cAAIwC,aAAJ;;AACA,cAAIxC,GAAG,CAACvK,QAAJ,IAAgB,QAApB,EAA8B;AAC1B+M,yBAAa,GAAG,CAACxP,WAAW,CAAClD,KAAb,GAAqB,CAArC;AACH,WAFD,MAGK,IAAIkQ,GAAG,CAACvK,QAAJ,KAAiB,OAArB,EAA8B;AAC/B+M,yBAAa,GAAG,KAAKH,MAAL,KAAgB,CAACrP,WAAW,CAAClD,KAA7B,GAAqC,CAArD;AACH,WAFI,MAGA;AACD0S,yBAAa,GAAG,KAAKH,MAAL,KAAgB,CAAhB,GAAoB,CAACrP,WAAW,CAAClD,KAAjD;AACH;AACD;;;AACA,cAAI2S,aAAJ;;AACA,cAAIzC,GAAG,CAACtK,QAAJ,IAAgB,QAApB,EAA8B;AAC1B+M,yBAAa,GAAG,CAACzP,WAAW,CAACpD,MAAb,GAAsB,CAAtC;AACH,WAFD,MAGK;AACD6S,yBAAa,GAAGzC,GAAG,CAACtK,QAAJ,IAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAAC1C,WAAW,CAACpD,MAAzD;AACH,WArB2C,CAsB5C;;;AACA,iBAAO;AACHuS,aAAC,EAAElC,WAAW,CAACkC,CAAZ,GAAgBK,aADhB;AAEHD,aAAC,EAAEtC,WAAW,CAACsC,CAAZ,GAAgBE;AAFhB,WAAP;AAIH;AACD;;;;;;;;;;;;uCASeC,K,EAAOtN,O,EAAS3F,Q,EAAUiR,Q,EAAU;AAAA,cACzCyB,CADyC,GAChCO,KADgC,CACzCP,CADyC;AAAA,cACtCI,CADsC,GAChCG,KADgC,CACtCH,CADsC;AAE/C;;AACA,cAAIlN,OAAO,GAAG,KAAKsN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;AACA;;;AACA,cAAIpL,OAAO,GAAG,KAAKqN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd,CAL+C,CAM/C;;;AACA,cAAIrL,OAAJ,EAAa;AACT8M,aAAC,IAAI9M,OAAL;AACH;;AACD,cAAIC,OAAJ,EAAa;AACTiN,aAAC,IAAIjN,OAAL;AACH,WAZ8C,CAa/C;;AACA;;;AACA,cAAIsN,YAAY,GAAG,IAAIT,CAAvB;AACA;;AACA,cAAIU,aAAa,GAAIV,CAAC,GAAG/M,OAAO,CAACtF,KAAb,GAAsBL,QAAQ,CAACK,KAAnD;AACA;;AACA,cAAIgT,WAAW,GAAG,IAAIP,CAAtB;AACA;;AACA,cAAIQ,cAAc,GAAIR,CAAC,GAAGnN,OAAO,CAACxF,MAAb,GAAuBH,QAAQ,CAACG,MAArD,CArB+C,CAsB/C;;AACA;;AACA,cAAIoT,YAAY,GAAG,KAAKC,kBAAL,CAAwB7N,OAAO,CAACtF,KAAhC,EAAuC8S,YAAvC,EAAqDC,aAArD,CAAnB;AACA;;;AACA,cAAIK,aAAa,GAAG,KAAKD,kBAAL,CAAwB7N,OAAO,CAACxF,MAAhC,EAAwCkT,WAAxC,EAAqDC,cAArD,CAApB;AACA;;;AACA,cAAIlC,WAAW,GAAGmC,YAAY,GAAGE,aAAjC;AACA,iBAAO;AACHrC,uBAAW,EAAXA,WADG;AAEHN,sCAA0B,EAAGnL,OAAO,CAACtF,KAAR,GAAgBsF,OAAO,CAACxF,MAAzB,KAAqCiR,WAF9D;AAGHsC,oCAAwB,EAAED,aAAa,KAAK9N,OAAO,CAACxF,MAHjD;AAIHwT,sCAA0B,EAAEJ,YAAY,IAAI5N,OAAO,CAACtF;AAJjD,WAAP;AAMH;AACD;;;;;;;;;;;sDAQ8BkR,G,EAAK0B,K,EAAOjT,Q,EAAU;AAChD,cAAI,KAAKuO,sBAAT,EAAiC;AAC7B;AACA,gBAAMqF,eAAe,GAAG5T,QAAQ,CAACuC,MAAT,GAAkB0Q,KAAK,CAACH,CAAhD;AACA;;AACA,gBAAMe,cAAc,GAAG7T,QAAQ,CAAC0C,KAAT,GAAiBuQ,KAAK,CAACP,CAA9C;AACA;;AACA,gBAAMjG,SAAS,GAAGqH,aAAa,CAAC,KAAK7S,WAAL,CAAiB8S,SAAjB,GAA6BtH,SAA9B,CAA/B;AACA;;AACA,gBAAMD,QAAQ,GAAGsH,aAAa,CAAC,KAAK7S,WAAL,CAAiB8S,SAAjB,GAA6BvH,QAA9B,CAA9B;AACA;;AACA,gBAAMwH,WAAW,GAAGzC,GAAG,CAACmC,wBAAJ,IACfjH,SAAS,IAAI,IAAb,IAAqBA,SAAS,IAAImH,eADvC;AAEA;;AACA,gBAAMK,aAAa,GAAG1C,GAAG,CAACoC,0BAAJ,IACjBnH,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAIqH,cADrC;AAEA,mBAAOG,WAAW,IAAIC,aAAtB;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;;;;;;;;6CAYqBC,K,EAAOvO,O,EAAShE,c,EAAgB;AACjD;AACA;AACA;AACA,cAAI,KAAK+P,mBAAL,IAA4B,KAAKlD,eAArC,EAAsD;AAClD,mBAAO;AACHkE,eAAC,EAAEwB,KAAK,CAACxB,CAAN,GAAU,KAAKhB,mBAAL,CAAyBgB,CADnC;AAEHI,eAAC,EAAEoB,KAAK,CAACpB,CAAN,GAAU,KAAKpB,mBAAL,CAAyBoB;AAFnC,aAAP;AAIH;AACD;;;AACA,cAAM9S,QAAQ,GAAG,KAAK8P,aAAtB,CAXiD,CAYjD;AACA;;AACA;;AACA,cAAMqE,aAAa,GAAGvS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAACxB,CAAN,GAAU/M,OAAO,CAACtF,KAAlB,GAA0BL,QAAQ,CAAC0C,KAA5C,EAAmD,CAAnD,CAAtB;AACA;;AACA,cAAM2R,cAAc,GAAGzS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAACpB,CAAN,GAAUnN,OAAO,CAACxF,MAAlB,GAA2BH,QAAQ,CAACuC,MAA7C,EAAqD,CAArD,CAAvB;AACA;;AACA,cAAM+R,WAAW,GAAG1S,IAAI,CAACwS,GAAL,CAASpU,QAAQ,CAACvB,GAAT,GAAekD,cAAc,CAAClD,GAA9B,GAAoCyV,KAAK,CAACpB,CAAnD,EAAsD,CAAtD,CAApB;AACA;;AACA,cAAMyB,YAAY,GAAG3S,IAAI,CAACwS,GAAL,CAASpU,QAAQ,CAACtB,IAAT,GAAgBiD,cAAc,CAACjD,IAA/B,GAAsCwV,KAAK,CAACxB,CAArD,EAAwD,CAAxD,CAArB,CArBiD,CAsBjD;;AACA;;AACA,cAAI8B,KAAK,GAAG,CAAZ;AACA;;AACA,cAAIC,KAAK,GAAG,CAAZ,CA1BiD,CA2BjD;AACA;AACA;;AACA,cAAI9O,OAAO,CAACtF,KAAR,IAAiBL,QAAQ,CAACK,KAA9B,EAAqC;AACjCmU,iBAAK,GAAGD,YAAY,IAAI,CAACJ,aAAzB;AACH,WAFD,MAGK;AACDK,iBAAK,GAAGN,KAAK,CAACxB,CAAN,GAAU,KAAKjE,eAAf,GAAkCzO,QAAQ,CAACtB,IAAT,GAAgBiD,cAAc,CAACjD,IAAhC,GAAwCwV,KAAK,CAACxB,CAA/E,GAAmF,CAA3F;AACH;;AACD,cAAI/M,OAAO,CAACxF,MAAR,IAAkBH,QAAQ,CAACG,MAA/B,EAAuC;AACnCsU,iBAAK,GAAGH,WAAW,IAAI,CAACD,cAAxB;AACH,WAFD,MAGK;AACDI,iBAAK,GAAGP,KAAK,CAACpB,CAAN,GAAU,KAAKrE,eAAf,GAAkCzO,QAAQ,CAACvB,GAAT,GAAekD,cAAc,CAAClD,GAA/B,GAAsCyV,KAAK,CAACpB,CAA7E,GAAiF,CAAzF;AACH;;AACD,eAAKpB,mBAAL,GAA2B;AAAEgB,aAAC,EAAE8B,KAAL;AAAY1B,aAAC,EAAE2B;AAAf,WAA3B;AACA,iBAAO;AACH/B,aAAC,EAAEwB,KAAK,CAACxB,CAAN,GAAU8B,KADV;AAEH1B,aAAC,EAAEoB,KAAK,CAACpB,CAAN,GAAU2B;AAFV,WAAP;AAIH;AACD;;;;;;;;;;uCAOexD,Q,EAAUT,W,EAAa;AAClC,eAAKkE,mBAAL,CAAyBzD,QAAzB;;AACA,eAAK0D,wBAAL,CAA8BnE,WAA9B,EAA2CS,QAA3C;;AACA,eAAK2D,qBAAL,CAA2BpE,WAA3B,EAAwCS,QAAxC;;AACA,cAAIA,QAAQ,CAAClM,UAAb,EAAyB;AACrB,iBAAK8P,gBAAL,CAAsB5D,QAAQ,CAAClM,UAA/B;AACH,WANiC,CAOlC;;;AACA,eAAKyK,aAAL,GAAqByB,QAArB,CARkC,CASlC;AACA;AACA;;AACA,cAAI,KAAKrC,gBAAL,CAAsBkG,SAAtB,CAAgC9N,MAApC,EAA4C;AACxC;AACA,gBAAMX,wBAAwB,GAAG,KAAK0O,oBAAL,EAAjC;AACA;;;AACA,gBAAMC,WAAW,GAAG,IAAI7O,8BAAJ,CAAmC8K,QAAnC,EAA6C5K,wBAA7C,CAApB;;AACA,iBAAKuI,gBAAL,CAAsBzH,IAAtB,CAA2B6N,WAA3B;AACH;;AACD,eAAKzF,gBAAL,GAAwB,KAAxB;AACH;AACD;;;;;;;;;4CAMoB0B,Q,EAAU;AAC1B,cAAI,CAAC,KAAKwB,wBAAV,EAAoC;AAChC;AACH;AACD;;;AACA,cAAMwC,QAAQ;AAAI;AAAkB,eAAK5F,YAAxB,CAAuCtG,gBAAvC,CAAwD,KAAK0J,wBAA7D,CAAjB;AACA;;;AACA,cAAIyC,OAAJ;AACA;;AACA,cAAIC,OAAO,GAAGlE,QAAQ,CAAChL,QAAvB;;AACA,cAAIgL,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChCkP,mBAAO,GAAG,QAAV;AACH,WAFD,MAGK,IAAI,KAAKtC,MAAL,EAAJ,EAAmB;AACpBsC,mBAAO,GAAGjE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,GAAgC,OAAhC,GAA0C,MAApD;AACH,WAFI,MAGA;AACDkP,mBAAO,GAAGjE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,GAAgC,MAAhC,GAAyC,OAAnD;AACH;;AACD,eAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkO,QAAQ,CAACjO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCkO,oBAAQ,CAAClO,CAAD,CAAR,CAAY7H,KAAZ,CAAkBkW,eAAlB,aAAuCF,OAAvC,cAAkDC,OAAlD;AACH;AACJ;AACD;;;;;;;;;;;;;kDAU0BzP,M,EAAQuL,Q,EAAU;AACxC;AACA,cAAMjR,QAAQ,GAAG,KAAK8P,aAAtB;AACA;;AACA,cAAMuF,KAAK,GAAG,KAAKzC,MAAL,EAAd;AACA;;;AACA,cAAIzS,MAAJ;AACA;;AACA,cAAI1B,GAAJ;AACA;;AACA,cAAI8D,MAAJ;;AACA,cAAI0O,QAAQ,CAAChL,QAAT,KAAsB,KAA1B,EAAiC;AAC7B;AACAxH,eAAG,GAAGiH,MAAM,CAACoN,CAAb;AACA3S,kBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkB1B,GAAlB,GAAwB,KAAKgQ,eAAtC;AACH,WAJD,MAKK,IAAIwC,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AACrC;AACA;AACA;AACA1D,kBAAM,GAAGvC,QAAQ,CAACG,MAAT,GAAkBuF,MAAM,CAACoN,CAAzB,GAA6B,KAAKrE,eAAL,GAAuB,CAA7D;AACAtO,kBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkBoC,MAAlB,GAA2B,KAAKkM,eAAzC;AACH,WANI,MAOA;AACD;AACA;AACA;AACA;;AACA;AACA,gBAAM6G,8BAA8B,GAAG1T,IAAI,CAAC2T,GAAL,CAASvV,QAAQ,CAACuC,MAAT,GAAkBmD,MAAM,CAACoN,CAAzB,GAA6B9S,QAAQ,CAACvB,GAA/C,EAAoDiH,MAAM,CAACoN,CAA3D,CAAvC;AACA;;AACA,gBAAM0C,cAAc,GAAG,KAAKrH,oBAAL,CAA0BhO,MAAjD;AACAA,kBAAM,GAAGmV,8BAA8B,GAAG,CAA1C;AACA7W,eAAG,GAAGiH,MAAM,CAACoN,CAAP,GAAWwC,8BAAjB;;AACA,gBAAInV,MAAM,GAAGqV,cAAT,IAA2B,CAAC,KAAKjG,gBAAjC,IAAqD,CAAC,KAAKjB,cAA/D,EAA+E;AAC3E7P,iBAAG,GAAGiH,MAAM,CAACoN,CAAP,GAAY0C,cAAc,GAAG,CAAnC;AACH;AACJ,WArCuC,CAsCxC;;AACA;;;AACA,cAAMC,4BAA4B,GAAIxE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,IAAiC,CAACqP,KAAnC,IAChCpE,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,IAA+BqP,KADpC,CAxCwC,CA0CxC;;AACA;;AACA,cAAMK,2BAA2B,GAAIzE,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,IAA+B,CAACqP,KAAjC,IAC/BpE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,IAAiCqP,KADtC;AAEA;;AACA,cAAIhV,KAAJ;AACA;;AACA,cAAI3B,IAAJ;AACA;;AACA,cAAIgE,KAAJ;;AACA,cAAIgT,2BAAJ,EAAiC;AAC7BhT,iBAAK,GAAG1C,QAAQ,CAACK,KAAT,GAAiBqF,MAAM,CAACgN,CAAxB,GAA4B,KAAKjE,eAAzC;AACApO,iBAAK,GAAGqF,MAAM,CAACgN,CAAP,GAAW,KAAKjE,eAAxB;AACH,WAHD,MAIK,IAAIgH,4BAAJ,EAAkC;AACnC/W,gBAAI,GAAGgH,MAAM,CAACgN,CAAd;AACArS,iBAAK,GAAGL,QAAQ,CAAC0C,KAAT,GAAiBgD,MAAM,CAACgN,CAAhC;AACH,WAHI,MAIA;AACD;AACA;AACA;AACA;;AACA;AACA,gBAAM4C,+BAA8B,GAAG1T,IAAI,CAAC2T,GAAL,CAASvV,QAAQ,CAAC0C,KAAT,GAAiBgD,MAAM,CAACgN,CAAxB,GAA4B1S,QAAQ,CAACtB,IAA9C,EAAoDgH,MAAM,CAACgN,CAA3D,CAAvC;AACA;;;AACA,gBAAMiD,aAAa,GAAG,KAAKxH,oBAAL,CAA0B9N,KAAhD;AACAA,iBAAK,GAAGiV,+BAA8B,GAAG,CAAzC;AACA5W,gBAAI,GAAGgH,MAAM,CAACgN,CAAP,GAAW4C,+BAAlB;;AACA,gBAAIjV,KAAK,GAAGsV,aAAR,IAAyB,CAAC,KAAKpG,gBAA/B,IAAmD,CAAC,KAAKjB,cAA7D,EAA6E;AACzE5P,kBAAI,GAAGgH,MAAM,CAACgN,CAAP,GAAYiD,aAAa,GAAG,CAAnC;AACH;AACJ;;AACD,iBAAO;AAAElX,eAAG;AAAG;AAAkBA,eAA1B;AAAiCC,gBAAI;AAAG;AAAkBA,gBAA1D;AAAkE6D,kBAAM;AAAG;AAAkBA,kBAA7F;AAAuGG,iBAAK;AAAG;AAAkBA,iBAAjI;AAA0IrC,iBAAK,EAALA,KAA1I;AAAiJF,kBAAM,EAANA;AAAjJ,WAAP;AACH;AACD;;;;;;;;;;;;8CASsBuF,M,EAAQuL,Q,EAAU;AACpC;AACA,cAAMC,eAAe,GAAG,KAAKC,yBAAL,CAA+BzL,MAA/B,EAAuCuL,QAAvC,CAAxB,CAFoC,CAGpC;AACA;;;AACA,cAAI,CAAC,KAAK1B,gBAAN,IAA0B,CAAC,KAAKjB,cAApC,EAAoD;AAChD4C,2BAAe,CAAC/Q,MAAhB,GAAyByB,IAAI,CAAC2T,GAAL,CAASrE,eAAe,CAAC/Q,MAAzB,EAAiC,KAAKgO,oBAAL,CAA0BhO,MAA3D,CAAzB;AACA+Q,2BAAe,CAAC7Q,KAAhB,GAAwBuB,IAAI,CAAC2T,GAAL,CAASrE,eAAe,CAAC7Q,KAAzB,EAAgC,KAAK8N,oBAAL,CAA0B9N,KAA1D,CAAxB;AACH;AACD;;;AACA,cAAMuV,MAAM;AAAI;AAAkB,YAAlC;;AACA,cAAI,KAAKC,iBAAL,EAAJ,EAA8B;AAC1BD,kBAAM,CAACnX,GAAP,GAAamX,MAAM,CAAClX,IAAP,GAAc,GAA3B;AACAkX,kBAAM,CAACrT,MAAP,GAAgBqT,MAAM,CAAClT,KAAP,GAAekT,MAAM,CAACjJ,SAAP,GAAmBiJ,MAAM,CAAClJ,QAAP,GAAkB,EAApE;AACAkJ,kBAAM,CAACvV,KAAP,GAAeuV,MAAM,CAACzV,MAAP,GAAgB,MAA/B;AACH,WAJD,MAKK;AACD;AACA,gBAAMwM,SAAS,GAAG,KAAK1L,WAAL,CAAiB8S,SAAjB,GAA6BpH,SAA/C;AACA;;;AACA,gBAAMD,QAAQ,GAAG,KAAKzL,WAAL,CAAiB8S,SAAjB,GAA6BrH,QAA9C;;AACAkJ,kBAAM,CAACzV,MAAP,GAAgB,kFAAoB+Q,eAAe,CAAC/Q,MAApC,CAAhB;AACAyV,kBAAM,CAACnX,GAAP,GAAa,kFAAoByS,eAAe,CAACzS,GAApC,CAAb;AACAmX,kBAAM,CAACrT,MAAP,GAAgB,kFAAoB2O,eAAe,CAAC3O,MAApC,CAAhB;AACAqT,kBAAM,CAACvV,KAAP,GAAe,kFAAoB6Q,eAAe,CAAC7Q,KAApC,CAAf;AACAuV,kBAAM,CAAClX,IAAP,GAAc,kFAAoBwS,eAAe,CAACxS,IAApC,CAAd;AACAkX,kBAAM,CAAClT,KAAP,GAAe,kFAAoBwO,eAAe,CAACxO,KAApC,CAAf,CAVC,CAWD;;AACA,gBAAIuO,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChC4P,oBAAM,CAAChE,UAAP,GAAoB,QAApB;AACH,aAFD,MAGK;AACDgE,oBAAM,CAAChE,UAAP,GAAoBX,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,UAA9B,GAA2C,YAA/D;AACH;;AACD,gBAAIiL,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AAChC2P,oBAAM,CAAC/D,cAAP,GAAwB,QAAxB;AACH,aAFD,MAGK;AACD+D,oBAAM,CAAC/D,cAAP,GAAwBZ,QAAQ,CAAChL,QAAT,KAAsB,QAAtB,GAAiC,UAAjC,GAA8C,YAAtE;AACH;;AACD,gBAAI0G,SAAJ,EAAe;AACXiJ,oBAAM,CAACjJ,SAAP,GAAmB,kFAAoBA,SAApB,CAAnB;AACH;;AACD,gBAAID,QAAJ,EAAc;AACVkJ,oBAAM,CAAClJ,QAAP,GAAkB,kFAAoBA,QAApB,CAAlB;AACH;AACJ;;AACD,eAAKyB,oBAAL,GAA4B+C,eAA5B;AACAS,sBAAY;AAAE;AAAkB,eAAKtC,YAAxB,CAAuCnQ,KAAxC,EAA+C0W,MAA/C,CAAZ;AACH;AACD;;;;;;;;kDAK0B;AACtBjE,sBAAY;AAAE;AAAkB,eAAKtC,YAAxB,CAAuCnQ,KAAxC;AAAgD;AAAkB;AAC1ET,eAAG,EAAE,GADqE;AAE1EC,gBAAI,EAAE,GAFoE;AAG1EgE,iBAAK,EAAE,GAHmE;AAI1EH,kBAAM,EAAE,GAJkE;AAK1EpC,kBAAM,EAAE,EALkE;AAM1EE,iBAAK,EAAE,EANmE;AAO1EuR,sBAAU,EAAE,EAP8D;AAQ1EC,0BAAc,EAAE;AAR0D,WAAlE,CAAZ;AAUH;AACD;;;;;;;;qDAK6B;AACzBF,sBAAY,CAAC,KAAKjI,KAAL,CAAWxK,KAAZ;AAAoB;AAAkB;AAC9CT,eAAG,EAAE,EADyC;AAE9CC,gBAAI,EAAE,EAFwC;AAG9C6D,kBAAM,EAAE,EAHsC;AAI9CG,iBAAK,EAAE,EAJuC;AAK9CuO,oBAAQ,EAAE,EALoC;AAM9C6E,qBAAS,EAAE;AANmC,WAAtC,CAAZ;AAQH;AACD;;;;;;;;;;iDAOyBtF,W,EAAaS,Q,EAAU;AAC5C;AACA,cAAM2E,MAAM;AAAI;AAAkB,YAAlC;AACA;;AACA,cAAMG,gBAAgB,GAAG,KAAKF,iBAAL,EAAzB;AACA;;;AACA,cAAMG,qBAAqB,GAAG,KAAKzH,sBAAnC;AACA;;AACA,cAAMzK,MAAM,GAAG,KAAK7C,WAAL,CAAiB8S,SAAjB,EAAf;;AACA,cAAIgC,gBAAJ,EAAsB;AAClB;AACA,gBAAMpU,cAAc,GAAG,KAAKrD,cAAL,CAAoBW,yBAApB,EAAvB;;AACA0S,wBAAY,CAACiE,MAAD,EAAS,KAAKK,iBAAL,CAAuBhF,QAAvB,EAAiCT,WAAjC,EAA8C7O,cAA9C,CAAT,CAAZ;AACAgQ,wBAAY,CAACiE,MAAD,EAAS,KAAKM,iBAAL,CAAuBjF,QAAvB,EAAiCT,WAAjC,EAA8C7O,cAA9C,CAAT,CAAZ;AACH,WALD,MAMK;AACDiU,kBAAM,CAAC3E,QAAP,GAAkB,QAAlB;AACH,WAjB2C,CAkB5C;AACA;AACA;AACA;AACA;;AACA;;;AACA,cAAIkF,eAAe,GAAG,EAAtB;AACA;;AACA,cAAIvQ,OAAO,GAAG,KAAKsN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;AACA;;;AACA,cAAIpL,OAAO,GAAG,KAAKqN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;;AACA,cAAIrL,OAAJ,EAAa;AACTuQ,2BAAe,yBAAkBvQ,OAAlB,SAAf;AACH;;AACD,cAAIC,OAAJ,EAAa;AACTsQ,2BAAe,yBAAkBtQ,OAAlB,QAAf;AACH;;AACD+P,gBAAM,CAACE,SAAP,GAAmBK,eAAe,CAACC,IAAhB,EAAnB,CAnC4C,CAoC5C;AACA;AACA;AACA;AACA;;AACA,cAAItS,MAAM,CAAC6I,SAAX,EAAsB;AAClB,gBAAIoJ,gBAAJ,EAAsB;AAClBH,oBAAM,CAACjJ,SAAP,GAAmB,kFAAoB7I,MAAM,CAAC6I,SAA3B,CAAnB;AACH,aAFD,MAGK,IAAIqJ,qBAAJ,EAA2B;AAC5BJ,oBAAM,CAACjJ,SAAP,GAAmB,EAAnB;AACH;AACJ;;AACD,cAAI7I,MAAM,CAAC4I,QAAX,EAAqB;AACjB,gBAAIqJ,gBAAJ,EAAsB;AAClBH,oBAAM,CAAClJ,QAAP,GAAkB,kFAAoB5I,MAAM,CAAC4I,QAA3B,CAAlB;AACH,aAFD,MAGK,IAAIsJ,qBAAJ,EAA2B;AAC5BJ,oBAAM,CAAClJ,QAAP,GAAkB,EAAlB;AACH;AACJ;;AACDiF,sBAAY,CAAC,KAAKjI,KAAL,CAAWxK,KAAZ,EAAmB0W,MAAnB,CAAZ;AACH;AACD;;;;;;;;;;;0CAQkB3E,Q,EAAUT,W,EAAa7O,c,EAAgB;AACrD;AACA;;AACA;AACA,cAAIiU,MAAM;AAAI;AAAkB;AAAEnX,eAAG,EAAE,EAAP;AAAW8D,kBAAM,EAAE;AAAnB,WAAhC;AACA;;AACA,cAAImO,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,cAAI,KAAK7C,SAAT,EAAoB;AAChBsC,wBAAY,GAAG,KAAK2F,oBAAL,CAA0B3F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DvO,cAA3D,CAAf;AACH;AACD;;;AACA,cAAI2U,qBAAqB,GAAG,KAAKpI,iBAAL,CAAuBqI,mBAAvB,GAA6C9S,qBAA7C,GAAqEhF,GAAjG,CAXqD,CAYrD;AACA;AACA;AACA;;;AACAiS,sBAAY,CAACoC,CAAb,IAAkBwD,qBAAlB,CAhBqD,CAiBrD;AACA;;AACA,cAAIrF,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AAChC;AACA;;AACA;AACA,gBAAMuQ,cAAc;AAAI;AAAkB,iBAAK5X,SAAL,CAAeG,eAAlC,CAAoD0X,YAA3E;AACAb,kBAAM,CAACrT,MAAP,aAAmBiU,cAAc,IAAI9F,YAAY,CAACoC,CAAb,GAAiB,KAAK5C,YAAL,CAAkB/P,MAAvC,CAAjC;AACH,WAND,MAOK;AACDyV,kBAAM,CAACnX,GAAP,GAAa,kFAAoBiS,YAAY,CAACoC,CAAjC,CAAb;AACH;;AACD,iBAAO8C,MAAP;AACH;AACD;;;;;;;;;;;0CAQkB3E,Q,EAAUT,W,EAAa7O,c,EAAgB;AACrD;AACA;;AACA;AACA,cAAIiU,MAAM;AAAI;AAAkB;AAAElX,gBAAI,EAAE,EAAR;AAAYgE,iBAAK,EAAE;AAAnB,WAAhC;AACA;;AACA,cAAIgO,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,cAAI,KAAK7C,SAAT,EAAoB;AAChBsC,wBAAY,GAAG,KAAK2F,oBAAL,CAA0B3F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DvO,cAA3D,CAAf;AACH,WAToD,CAUrD;AACA;AACA;AACA;;AACA;;;AACA,cAAI+U,uBAAJ;;AACA,cAAI,KAAK9D,MAAL,EAAJ,EAAmB;AACf8D,mCAAuB,GAAGzF,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,MAA9B,GAAuC,OAAjE;AACH,WAFD,MAGK;AACD0Q,mCAAuB,GAAGzF,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,OAA9B,GAAwC,MAAlE;AACH,WArBoD,CAsBrD;AACA;;;AACA,cAAI0Q,uBAAuB,KAAK,OAAhC,EAAyC;AACrC;AACA,gBAAMC,aAAa;AAAI;AAAkB,iBAAK/X,SAAL,CAAeG,eAAlC,CAAoD6X,WAA1E;AACAhB,kBAAM,CAAClT,KAAP,aAAkBiU,aAAa,IAAIjG,YAAY,CAACgC,CAAb,GAAiB,KAAKxC,YAAL,CAAkB7P,KAAvC,CAA/B;AACH,WAJD,MAKK;AACDuV,kBAAM,CAAClX,IAAP,GAAc,kFAAoBgS,YAAY,CAACgC,CAAjC,CAAd;AACH;;AACD,iBAAOkD,MAAP;AACH;AACD;;;;;;;;;+CAMuB;AACnB;;AACA;AACA,cAAMiB,YAAY,GAAG,KAAK5G,cAAL,EAArB;AACA;;;AACA,cAAM6G,aAAa,GAAG,KAAKpN,KAAL,CAAWjG,qBAAX,EAAtB,CALmB,CAMnB;AACA;AACA;;AACA;;;AACA,cAAMsT,qBAAqB,GAAG,KAAKrI,YAAL,CAAkBsI,GAAlB;AAAuB;;;;AAIrD,oBAAAC,UAAU,EAAI;AACV,mBAAOA,UAAU,CAACC,aAAX,GAA2BC,aAA3B,CAAyC1T,qBAAzC,EAAP;AACH,WAN6B,CAA9B;;AAOA,iBAAO;AACH2T,2BAAe,EAAExU,2BAA2B,CAACiU,YAAD,EAAeE,qBAAf,CADzC;AAEHM,+BAAmB,EAAEpV,4BAA4B,CAAC4U,YAAD,EAAeE,qBAAf,CAF9C;AAGHO,4BAAgB,EAAE1U,2BAA2B,CAACkU,aAAD,EAAgBC,qBAAhB,CAH1C;AAIHQ,gCAAoB,EAAEtV,4BAA4B,CAAC6U,aAAD,EAAgBC,qBAAhB;AAJ/C,WAAP;AAMH;AACD;;;;;;;;;;2CAOmB/P,M,EAAsB;AAAA,4CAAXwQ,SAAW;AAAXA,qBAAW;AAAA;;AACrC,iBAAOA,SAAS,CAACC,MAAV;AAAkB;;;;;AAKzB,oBAACC,YAAD,EAAeC,eAAf,EAAmC;AAC/B,mBAAOD,YAAY,GAAG9V,IAAI,CAACwS,GAAL,CAASuD,eAAT,EAA0B,CAA1B,CAAtB;AACH,WAPM,EAOH3Q,MAPG,CAAP;AAQH;AACD;;;;;;;;mDAK2B;AACvB;AACA;AACA;AACA;AACA;;AACA;AACA,cAAM3G,KAAK;AAAI;AAAkB,eAAKzB,SAAL,CAAeG,eAAlC,CAAoD6X,WAAlE;AACA;;AACA,cAAMzW,MAAM;AAAI;AAAkB,eAAKvB,SAAL,CAAeG,eAAlC,CAAoD0X,YAAnE;AACA;;AACA,cAAM9U,cAAc,GAAG,KAAKrD,cAAL,CAAoBW,yBAApB,EAAvB;;AACA,iBAAO;AACHR,eAAG,EAAEkD,cAAc,CAAClD,GAAf,GAAqB,KAAKgQ,eAD5B;AAEH/P,gBAAI,EAAEiD,cAAc,CAACjD,IAAf,GAAsB,KAAK+P,eAF9B;AAGH/L,iBAAK,EAAEf,cAAc,CAACjD,IAAf,GAAsB2B,KAAtB,GAA8B,KAAKoO,eAHvC;AAIHlM,kBAAM,EAAEZ,cAAc,CAAClD,GAAf,GAAqB0B,MAArB,GAA8B,KAAKsO,eAJxC;AAKHpO,iBAAK,EAAEA,KAAK,GAAI,IAAI,KAAKoO,eALtB;AAMHtO,kBAAM,EAAEA,MAAM,GAAI,IAAI,KAAKsO;AANxB,WAAP;AAQH;AACD;;;;;;;;iCAKS;AACL,iBAAO,KAAKxN,WAAL,CAAiBsL,YAAjB,OAAoC,KAA3C;AACH;AACD;;;;;;;;4CAKoB;AAChB,iBAAO,CAAC,KAAKgC,sBAAN,IAAgC,KAAKH,SAA5C;AACH;AACD;;;;;;;;;;mCAOW6C,Q,EAAU2G,I,EAAM;AACvB,cAAIA,IAAI,KAAK,GAAb,EAAkB;AACd;AACA;AACA,mBAAO3G,QAAQ,CAACrL,OAAT,IAAoB,IAApB,GAA2B,KAAKkJ,QAAhC,GAA2CmC,QAAQ,CAACrL,OAA3D;AACH;;AACD,iBAAOqL,QAAQ,CAACpL,OAAT,IAAoB,IAApB,GAA2B,KAAKkJ,QAAhC,GAA2CkC,QAAQ,CAACpL,OAA3D;AACH;AACD;;;;;;;;6CAKqB;AACjB,cAAI,CAAC,KAAK8I,mBAAL,CAAyB3H,MAA9B,EAAsC;AAClC,kBAAMxG,KAAK,CAAC,uEAAD,CAAX;AACH,WAHgB,CAIjB;AACA;;;AACA,eAAKmO,mBAAL,CAAyBjB,OAAzB;AAAkC;;;;AAIlC,oBAAAmK,IAAI,EAAI;AACJpR,sCAA0B,CAAC,SAAD,EAAYoR,IAAI,CAAC/R,OAAjB,CAA1B;AACAQ,oCAAwB,CAAC,SAAD,EAAYuR,IAAI,CAAC9R,OAAjB,CAAxB;AACAU,sCAA0B,CAAC,UAAD,EAAaoR,IAAI,CAAC7R,QAAlB,CAA1B;AACAM,oCAAwB,CAAC,UAAD,EAAauR,IAAI,CAAC5R,QAAlB,CAAxB;AACH,WATD;AAUH;AACD;;;;;;;;;yCAMiBuH,U,EAAY;AAAA;;AACzB,cAAI,KAAK9D,KAAT,EAAgB;AACZ,sFAAY8D,UAAZ,EAAwBE,OAAxB;AAAiC;;;;AAIjC,sBAAAC,QAAQ,EAAI;AACR,kBAAIA,QAAQ,KAAK,EAAb,IAAmB,OAAI,CAACqB,oBAAL,CAA0BxH,OAA1B,CAAkCmG,QAAlC,MAAgD,CAAC,CAAxE,EAA2E;AACvE,uBAAI,CAACqB,oBAAL,CAA0B1H,IAA1B,CAA+BqG,QAA/B;;AACA,uBAAI,CAACjE,KAAL,CAAWvK,SAAX,CAAqBC,GAArB,CAAyBuO,QAAzB;AACH;AACJ,aATD;AAUH;AACJ;AACD;;;;;;;;6CAKqB;AAAA;;AACjB,cAAI,KAAKjE,KAAT,EAAgB;AACZ,iBAAKsF,oBAAL,CAA0BtB,OAA1B;AAAmC;;;;AAInC,sBAAAC,QAAQ,EAAI;AACR,qBAAI,CAACjE,KAAL,CAAWvK,SAAX,CAAqBS,MAArB,CAA4B+N,QAA5B;AACH,aAND;;AAOA,iBAAKqB,oBAAL,GAA4B,EAA5B;AACH;AACJ;AACD;;;;;;;;yCAKiB;AACb;AACA,cAAMtJ,MAAM,GAAG,KAAK4M,OAApB;;AACA,cAAI5M,MAAM,YAAY,wDAAtB,EAAkC;AAC9B,mBAAOA,MAAM,CAACyR,aAAP,CAAqB1T,qBAArB,EAAP;AACH,WALY,CAMb;;;AACA,cAAIiC,MAAM,YAAYoS,OAAtB,EAA+B;AAC3B,mBAAOpS,MAAM,CAACjC,qBAAP,EAAP;AACH;AACD;;;AACA,cAAMpD,KAAK,GAAGqF,MAAM,CAACrF,KAAP,IAAgB,CAA9B;AACA;;AACA,cAAMF,MAAM,GAAGuF,MAAM,CAACvF,MAAP,IAAiB,CAAhC,CAba,CAcb;;AACA,iBAAO;AACH1B,eAAG,EAAEiH,MAAM,CAACoN,CADT;AAEHvQ,kBAAM,EAAEmD,MAAM,CAACoN,CAAP,GAAW3S,MAFhB;AAGHzB,gBAAI,EAAEgH,MAAM,CAACgN,CAHV;AAIHhQ,iBAAK,EAAEgD,MAAM,CAACgN,CAAP,GAAWrS,KAJf;AAKHF,kBAAM,EAANA,MALG;AAMHE,iBAAK,EAALA;AANG,WAAP;AAQH;;;4BApmCe;AACZ,iBAAO,KAAKsO,mBAAZ;AACH;;;;;;AAomCL,QAAI,KAAJ,EAAW,CAsLV;AACD;;;;;;AAIA,aAASoJ,KAAT,GAAiB,CAAG;;AACpB,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,aAASC,UAAT,GAAsB,CAAG;;AACzB,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;AAIA,aAASC,gBAAT,GAA4B,CAAG;;AAC/B,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;AAIA,aAASC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAaV;AACD;;;;;;AAIA,aAASC,WAAT,GAAuB,CAAG;;AAC1B,QAAI,KAAJ,EAAW,CASV;AACD;;;;;;AAIA,aAASC,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAiBV;AACD;;;;;;;;AAMA,aAASzG,YAAT,CAAsB0G,WAAtB,EAAmCC,MAAnC,EAA2C;AACvC,WAAK,IAAIhT,GAAT,IAAgBgT,MAAhB,EAAwB;AACpB,YAAIA,MAAM,CAACC,cAAP,CAAsBjT,GAAtB,CAAJ,EAAgC;AAC5B+S,qBAAW,CAAC/S,GAAD,CAAX,GAAmBgT,MAAM,CAAChT,GAAD,CAAzB;AACH;AACJ;;AACD,aAAO+S,WAAP;AACH;AACD;;;;;;;;AAMA,aAASvE,aAAT,CAAuB0E,KAAvB,EAA8B;AAC1B,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,IAAI,IAA1C,EAAgD;AAAA,2BACrBA,KAAK,CAACC,KAAN,CAAY1K,cAAZ,CADqB;AAAA;AAAA,YACrCvH,KADqC;AAAA,YAC9BkS,KAD8B;;AAE5C,eAAQ,CAACA,KAAD,IAAUA,KAAK,KAAK,IAArB,GAA6BC,UAAU,CAACnS,KAAD,CAAvC,GAAiD,IAAxD;AACH;;AACD,aAAOgS,KAAK,IAAI,IAAhB;AACH;AAED;;;;;;AAKA;;;;;;;;;;;QASMI,yB;AACF;;;;;;;;;AASA,yCAAYC,SAAZ,EAAuBC,UAAvB,EAAmC7K,WAAnC,EAAgD8K,aAAhD,EAA+Dxa,QAA/D,EAAyEya,QAAzE,EAAmFC,gBAAnF,EAAqG;AAAA;;AACjG;;;AAGA,aAAKtK,mBAAL,GAA2B,EAA3B,CAJiG,CAKjG;AACA;AACA;AACA;;AACA,aAAKlE,iBAAL,GAAyB,IAAIuD,iCAAJ,CAAsCC,WAAtC,EAAmD8K,aAAnD,EAAkExa,QAAlE,EAA4Eya,QAA5E,EAAsFC,gBAAtF,EACpBC,sBADoB,CACG,KADH,EAEpBC,QAFoB,CAEX,KAFW,EAGpBC,kBAHoB,CAGD,CAHC,CAAzB;AAIA,aAAKC,oBAAL,CAA0BR,SAA1B,EAAqCC,UAArC;AACH;AACD;;;;;;;;;AAqBA;;;;;+BAKOzX,U,EAAY;AACf,eAAKJ,WAAL,GAAmBI,UAAnB;;AACA,eAAKoJ,iBAAL,CAAuBD,MAAvB,CAA8BnJ,UAA9B;;AACA,cAAI,KAAKiY,UAAT,EAAqB;AACjBjY,sBAAU,CAACkY,YAAX,CAAwB,KAAKD,UAA7B;AACA,iBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,eAAK7O,iBAAL,CAAuBgB,OAAvB;AACH;AACD;;;;;;;iCAIS;AACL,eAAKhB,iBAAL,CAAuBrJ,MAAvB;AACH;AACD;;;;;;;;;gCAMQ;AACJ,eAAKqJ,iBAAL,CAAuBuB,KAAvB;AACH;AACD;;;;;;;;;kDAM0B;AACtB,eAAKvB,iBAAL,CAAuBiF,mBAAvB;AACH;AACD;;;;;;;;;;iDAOyBqC,W,EAAa;AAClC,eAAKtH,iBAAL,CAAuB+O,wBAAvB,CAAgDzH,WAAhD;AACH;AACD;;;;;;;;;;;;;6CAUqB8G,S,EAAWC,U,EAAYlT,O,EAASC,O,EAAS;AAC1D;AACA,cAAMoL,QAAQ,GAAG,IAAIxL,sBAAJ,CAA2BoT,SAA3B,EAAsCC,UAAtC,EAAkDlT,OAAlD,EAA2DC,OAA3D,CAAjB;;AACC;AAAkB,cAAnB,CAA0B8I,mBAA1B,CAA8CrH,IAA9C,CAAmD2J,QAAnD;;AACC;AAAkB,cAAnB,CAA0BxG,iBAA1B,CAA4CgP,aAA5C;AAA2D;AAAkB,cAAnB,CAA0B9K,mBAApF;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcvC,G,EAAK;AACf;AACA;AACA;AACA;AAAK;AAAkB,cAAnB,CAA0BnL,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCsY,YAAtC,CAAmDnN,GAAnD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0BkN,UAA1B,GAAuClN,GAAvC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;oCAOYmG,M,EAAQ;AACf;AAAkB,cAAnB,CAA0B9H,iBAA1B,CAA4CiP,kBAA5C,CAA+DnH,MAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;oCAOYA,M,EAAQ;AACf;AAAkB,cAAnB,CAA0B9H,iBAA1B,CAA4CkP,kBAA5C,CAA+DpH,MAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;2CASmBF,Q,EAAU;AACxB;AAAkB,cAAnB,CAA0B5H,iBAA1B,CAA4CmP,kBAA5C,CAA+DvH,QAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcL,S,EAAW;AACpB;AAAkB,cAAnB,CAA0BrD,mBAA1B,GAAgDqD,SAAS,CAAC6H,KAAV,EAAhD;;AACC;AAAkB,cAAnB,CAA0BpP,iBAA1B,CAA4CgP,aAA5C;AAA2D;AAAkB,cAAnB,CAA0B9K,mBAApF;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;kCAOUjJ,M,EAAQ;AACb;AAAkB,cAAnB,CAA0B+E,iBAA1B,CAA4CyE,SAA5C,CAAsDxJ,MAAtD;;AACA;AAAQ;AAAkB;AAA1B;AACH;;;4BArKY;AACT,iBAAO,KAAKzE,WAAL,CAAiBsL,YAAjB,OAAoC,KAA3C;AACH;AACD;;;;;;;4BAIuB;AACnB,iBAAO,KAAK9B,iBAAL,CAAuBwE,eAA9B;AACH;AACD;;;;;;;4BAIgB;AACZ,iBAAO,KAAKN,mBAAZ;AACH;;;;;;AAuJL,QAAI,KAAJ,EAAW,CAuBV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,QAAMmL,YAAY,GAAG,4BAArB;AACA;;;;;;;QAMMC,sB;AACF,wCAAc;AAAA;;AACV,aAAKC,YAAL,GAAoB,QAApB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,aAAL,GAAqB,EAArB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,eAAL,GAAuB,EAAvB;AACA,aAAKC,MAAL,GAAc,EAAd;AACA,aAAKC,OAAL,GAAe,EAAf;AACH;AACD;;;;;;;;+BAIOnZ,U,EAAY;AACf;AACA,cAAMyC,MAAM,GAAGzC,UAAU,CAAC0S,SAAX,EAAf;AACA,eAAK9S,WAAL,GAAmBI,UAAnB;;AACA,cAAI,KAAKkZ,MAAL,IAAe,CAACzW,MAAM,CAACzD,KAA3B,EAAkC;AAC9BgB,sBAAU,CAACoZ,UAAX,CAAsB;AAAEpa,mBAAK,EAAE,KAAKka;AAAd,aAAtB;AACH;;AACD,cAAI,KAAKC,OAAL,IAAgB,CAAC1W,MAAM,CAAC3D,MAA5B,EAAoC;AAChCkB,sBAAU,CAACoZ,UAAX,CAAsB;AAAEta,oBAAM,EAAE,KAAKqa;AAAf,aAAtB;AACH;;AACDnZ,oBAAU,CAAC+N,WAAX,CAAuBjQ,SAAvB,CAAiCC,GAAjC,CAAqC0a,YAArC;AACA,eAAKxK,WAAL,GAAmB,KAAnB;AACH;AACD;;;;;;;;;;8BAOgB;AAAA,cAAZ9I,KAAY,uEAAJ,EAAI;;AACX;AAAkB,cAAnB,CAA0B0T,aAA1B,GAA0C,EAA1C;;AACC;AAAkB,cAAnB,CAA0BD,UAA1B,GAAuCzT,KAAvC;;AACC;AAAkB,cAAnB,CAA0B6T,WAA1B,GAAwC,YAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;+BAOiB;AAAA,cAAZ7T,KAAY,uEAAJ,EAAI;;AACZ;AAAkB,cAAnB,CAA0B4T,YAA1B,GAAyC,EAAzC;;AACC;AAAkB,cAAnB,CAA0BD,WAA1B,GAAwC3T,KAAxC;;AACC;AAAkB,cAAnB,CAA0B8T,eAA1B,GAA4C,YAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;iCAOmB;AAAA,cAAZ9T,KAAY,uEAAJ,EAAI;;AACd;AAAkB,cAAnB,CAA0ByT,UAA1B,GAAuC,EAAvC;;AACC;AAAkB,cAAnB,CAA0BC,aAA1B,GAA0C1T,KAA1C;;AACC;AAAkB,cAAnB,CAA0B6T,WAA1B,GAAwC,UAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;gCAOkB;AAAA,cAAZ7T,KAAY,uEAAJ,EAAI;;AACb;AAAkB,cAAnB,CAA0B2T,WAA1B,GAAwC,EAAxC;;AACC;AAAkB,cAAnB,CAA0BC,YAA1B,GAAyC5T,KAAzC;;AACC;AAAkB,cAAnB,CAA0B8T,eAA1B,GAA4C,UAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;gCASkB;AAAA,cAAZ9T,KAAY,uEAAJ,EAAI;;AACd;AAAK;AAAkB,cAAnB,CAA0BvF,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCwZ,UAAtC,CAAiD;AAAEpa,mBAAK,EAAEmG;AAAT,aAAjD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0B+T,MAA1B,GAAmC/T,KAAnC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;iCASmB;AAAA,cAAZA,KAAY,uEAAJ,EAAI;;AACf;AAAK;AAAkB,cAAnB,CAA0BvF,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCwZ,UAAtC,CAAiD;AAAEta,oBAAM,EAAEqG;AAAV,aAAjD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0BgU,OAA1B,GAAoChU,KAApC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;6CASgC;AAAA,cAAb+L,MAAa,uEAAJ,EAAI;;AAC3B;AAAkB,cAAnB,CAA0B7T,IAA1B,CAA+B6T,MAA/B;;AACC;AAAkB,cAAnB,CAA0B+H,eAA1B,GAA4C,QAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;2CAS8B;AAAA,cAAb/H,MAAa,uEAAJ,EAAI;;AACzB;AAAkB,cAAnB,CAA0B9T,GAA1B,CAA8B8T,MAA9B;;AACC;AAAkB,cAAnB,CAA0B8H,WAA1B,GAAwC,QAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;gCAKQ;AACJ;AACA;AACA;AACA,cAAI,CAAC,KAAKpZ,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBC,WAAjB,EAA1B,EAA0D;AACtD;AACH;AACD;;;AACA,cAAM0U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCtE,KAA/C;AACA;;AACA,cAAMwb,YAAY,GAAG,KAAKzZ,WAAL,CAAiBmO,WAAjB,CAA6BlQ,KAAlD;AACA;;AACA,cAAM4E,MAAM,GAAG,KAAK7C,WAAL,CAAiB8S,SAAjB,EAAf;;AAZI,cAaI1T,KAbJ,GAa2CyD,MAb3C,CAaIzD,KAbJ;AAAA,cAaWF,MAbX,GAa2C2D,MAb3C,CAaW3D,MAbX;AAAA,cAamBuM,QAbnB,GAa2C5I,MAb3C,CAamB4I,QAbnB;AAAA,cAa6BC,SAb7B,GAa2C7I,MAb3C,CAa6B6I,SAb7B;AAcJ;;AACA,cAAMgO,yBAAyB,GAAG,CAACta,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAA/B,MAC7B,CAACqM,QAAD,IAAaA,QAAQ,KAAK,MAA1B,IAAoCA,QAAQ,KAAK,OADpB,CAAlC;AAEA;;AACA,cAAMkO,uBAAuB,GAAG,CAACza,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAAjC,MAC3B,CAACwM,SAAD,IAAcA,SAAS,KAAK,MAA5B,IAAsCA,SAAS,KAAK,OADzB,CAAhC;AAEAiJ,gBAAM,CAAC3E,QAAP,GAAkB,KAAK+I,YAAvB;AACApE,gBAAM,CAACiF,UAAP,GAAoBF,yBAAyB,GAAG,GAAH,GAAS,KAAKR,WAA3D;AACAvE,gBAAM,CAACkF,SAAP,GAAmBF,uBAAuB,GAAG,GAAH,GAAS,KAAKX,UAAxD;AACArE,gBAAM,CAACmF,YAAP,GAAsB,KAAKb,aAA3B;AACAtE,gBAAM,CAACoF,WAAP,GAAqB,KAAKZ,YAA1B;;AACA,cAAIO,yBAAJ,EAA+B;AAC3BD,wBAAY,CAAC7I,cAAb,GAA8B,YAA9B;AACH,WAFD,MAGK,IAAI,KAAKyI,eAAL,KAAyB,QAA7B,EAAuC;AACxCI,wBAAY,CAAC7I,cAAb,GAA8B,QAA9B;AACH,WAFI,MAGA,IAAI,KAAK5Q,WAAL,CAAiB8S,SAAjB,GAA6B1H,SAA7B,KAA2C,KAA/C,EAAsD;AACvD;AACA;AACA;AACA;AACA,gBAAI,KAAKiO,eAAL,KAAyB,YAA7B,EAA2C;AACvCI,0BAAY,CAAC7I,cAAb,GAA8B,UAA9B;AACH,aAFD,MAGK,IAAI,KAAKyI,eAAL,KAAyB,UAA7B,EAAyC;AAC1CI,0BAAY,CAAC7I,cAAb,GAA8B,YAA9B;AACH;AACJ,WAXI,MAYA;AACD6I,wBAAY,CAAC7I,cAAb,GAA8B,KAAKyI,eAAnC;AACH;;AACDI,sBAAY,CAAC9I,UAAb,GAA0BgJ,uBAAuB,GAAG,YAAH,GAAkB,KAAKP,WAAxE;AACH;AACD;;;;;;;;kCAKU;AACN,cAAI,KAAK/K,WAAL,IAAoB,CAAC,KAAKrO,WAA9B,EAA2C;AACvC;AACH;AACD;;;AACA,cAAM2U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCtE,KAA/C;AACA;;AACA,cAAM+b,MAAM,GAAG,KAAKha,WAAL,CAAiBmO,WAAhC;AACA;;AACA,cAAMsL,YAAY,GAAGO,MAAM,CAAC/b,KAA5B;AACA+b,gBAAM,CAAC9b,SAAP,CAAiBS,MAAjB,CAAwBka,YAAxB;AACAY,sBAAY,CAAC7I,cAAb,GAA8B6I,YAAY,CAAC9I,UAAb,GAA0BgE,MAAM,CAACkF,SAAP,GACpDlF,MAAM,CAACmF,YAAP,GAAsBnF,MAAM,CAACiF,UAAP,GAAoBjF,MAAM,CAACoF,WAAP,GAAqBpF,MAAM,CAAC3E,QAAP,GAAkB,EADrF;AAEA,eAAKhQ,WAAL;AAAoB;AAAkB,cAAtC;AACA,eAAKqO,WAAL,GAAmB,IAAnB;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CAyDV;AAED;;;;;;AAKA;;;;;QAGM4L,sB;AACF;;;;;;AAMA,sCAAY5c,cAAZ,EAA4BM,SAA5B,EAAuC0J,SAAvC,EAAkD4F,iBAAlD,EAAqE;AAAA;;AACjE,aAAK5P,cAAL,GAAsBA,cAAtB;AACA,aAAKM,SAAL,GAAiBA,SAAjB;AACA,aAAK0J,SAAL,GAAiBA,SAAjB;AACA,aAAK4F,iBAAL,GAAyBA,iBAAzB;AACH;AACD;;;;;;;;iCAIS;AACL,iBAAO,IAAI6L,sBAAJ,EAAP;AACH;AACD;;;;;;;;;;;;oCASYoB,U,EAAYtC,S,EAAWC,U,EAAY;AAC3C,iBAAO,IAAIF,yBAAJ,CAA8BC,SAA9B,EAAyCC,UAAzC,EAAqDqC,UAArD,EAAiE,KAAK7c,cAAtE,EAAsF,KAAKM,SAA3F,EAAsG,KAAK0J,SAA3G,EAAsH,KAAK4F,iBAA3H,CAAP;AACH;AACD;;;;;;;;4CAKoBxI,M,EAAQ;AACxB,iBAAO,IAAIsI,iCAAJ,CAAsCtI,MAAtC,EAA8C,KAAKpH,cAAnD,EAAmE,KAAKM,SAAxE,EAAmF,KAAK0J,SAAxF,EAAmG,KAAK4F,iBAAxG,CAAP;AACH;;;;;;AAELgN,0BAAsB,CAACjX,IAAvB,GAA8B,SAASmX,8BAAT,CAAwCjX,CAAxC,EAA2C;AAAE,aAAO,KAAKA,CAAC,IAAI+W,sBAAV,EAAkC,uDAAgB,oEAAhB,CAAlC,EAAyE,uDAAgB,wDAAhB,CAAzE,EAAoG,uDAAgB,8DAAhB,CAApG,EAAsI,uDAAgB7S,gBAAhB,CAAtI,CAAP;AAAkL,KAA7P;AACA;;;AACA6S,0BAAsB,CAAC9W,cAAvB,GAAwC;AAAA,aAAM,CAC1C;AAAEC,YAAI,EAAE;AAAR,OAD0C,EAE1C;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAF0C,EAG1C;AAAEH,YAAI,EAAE;AAAR,OAH0C,EAI1C;AAAEA,YAAI,EAAEgE;AAAR,OAJ0C,CAAN;AAAA,KAAxC;AAMA;;;AAAmB6S,0BAAsB,CAACzW,KAAvB,GAA+B,yEAAmB;AAAEC,aAAO,EAAE,SAAS0W,8BAAT,GAA0C;AAAE,eAAO,IAAIF,sBAAJ,CAA2B,+DAAS,oEAAT,CAA3B,EAAoD,+DAAS,wDAAT,CAApD,EAAwE,+DAAS,8DAAT,CAAxE,EAA4F,+DAAS7S,gBAAT,CAA5F,CAAP;AAAiI,OAAxL;AAA0L1D,WAAK,EAAEuW,sBAAjM;AAAyNtW,gBAAU,EAAE;AAArO,KAAnB,CAA/B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBsW,sBAAzB,EAAiD,CAAC;AACvE7W,YAAI,EAAE,wDADiE;AAEvEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFiE,OAAD,CAAjD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAAiC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9EF,gBAAI,EAAE,oDADwE;AAE9EG,gBAAI,EAAE,CAAC,wDAAD;AAFwE,WAAD;AAA/B,SAAjC,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,EAGgB;AAAEA,cAAI,EAAEgE;AAAR,SAHhB,CAAP;AAGqD,OAN9C,EAMgD,IANhD;AAMwD,KANvE;;AAOd,QAAI,KAAJ,EAAW,CAqBV;AAED;;;;;;AAKA;;;;;;AAIA,QAAIgT,YAAY,GAAG,CAAnB,C,CACA;AACA;;AACA;;;;;;;;;QAQMC,O;AACF;;;;;;;;;;;;AAYA,uBAAYC,gBAAZ,EAA8BrN,iBAA9B,EAAiDsN,yBAAjD,EAA4EC,gBAA5E,EAA8F9R,mBAA9F,EAAmH+R,SAAnH,EAA8H9a,OAA9H,EAAuIhC,SAAvI,EAAkJ+c,eAAlJ,EAAmK/R,SAAnK,EAA8K;AAAA;;AAC1K,aAAK2R,gBAAL,GAAwBA,gBAAxB;AACA,aAAKrN,iBAAL,GAAyBA,iBAAzB;AACA,aAAKsN,yBAAL,GAAiCA,yBAAjC;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA,aAAK9R,mBAAL,GAA2BA,mBAA3B;AACA,aAAK+R,SAAL,GAAiBA,SAAjB;AACA,aAAK9a,OAAL,GAAeA,OAAf;AACA,aAAKhC,SAAL,GAAiBA,SAAjB;AACA,aAAK+c,eAAL,GAAuBA,eAAvB;AACA,aAAK/R,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;+BAKO9F,M,EAAQ;AACX;AACA,cAAM8X,IAAI,GAAG,KAAKC,kBAAL,EAAb;AACA;;;AACA,cAAMC,IAAI,GAAG,KAAKC,kBAAL,CAAwBH,IAAxB,CAAb;AACA;;;AACA,cAAMI,YAAY,GAAG,KAAKC,mBAAL,CAAyBH,IAAzB,CAArB;AACA;;;AACA,cAAMI,aAAa,GAAG,IAAIrX,aAAJ,CAAkBf,MAAlB,CAAtB;AACAoY,uBAAa,CAAC7P,SAAd,GAA0B6P,aAAa,CAAC7P,SAAd,IAA2B,KAAKsP,eAAL,CAAqBnV,KAA1E;AACA,iBAAO,IAAI+C,UAAJ,CAAeyS,YAAf,EAA6BJ,IAA7B,EAAmCE,IAAnC,EAAyCI,aAAzC,EAAwD,KAAKtb,OAA7D,EAAsE,KAAK+I,mBAA3E,EAAgG,KAAK/K,SAArG,EAAgH,KAAKgL,SAArH,CAAP;AACH;AACD;;;;;;;;mCAKW;AACP,iBAAO,KAAK6R,gBAAZ;AACH;AACD;;;;;;;;;2CAMmBG,I,EAAM;AACrB;AACA,cAAME,IAAI,GAAG,KAAKld,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAb;;AACA8S,cAAI,CAACK,EAAL,yBAAyBd,YAAY,EAArC;AACAS,cAAI,CAAC3c,SAAL,CAAeC,GAAf,CAAmB,kBAAnB;AACAwc,cAAI,CAAC1S,WAAL,CAAiB4S,IAAjB;AACA,iBAAOA,IAAP;AACH;AACD;;;;;;;;;6CAMqB;AACjB;AACA,cAAMF,IAAI,GAAG,KAAKhd,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAb;;AACA,eAAKkF,iBAAL,CAAuBqI,mBAAvB,GAA6CrN,WAA7C,CAAyD0S,IAAzD;;AACA,iBAAOA,IAAP;AACH;AACD;;;;;;;;;4CAMoBE,I,EAAM;AACtB;AACA;AACA,cAAI,CAAC,KAAKM,OAAV,EAAmB;AACf,iBAAKA,OAAL,GAAe,KAAKV,SAAL,CAAeW,GAAf,CAAmB,4DAAnB,CAAf;AACH;;AACD,iBAAO,IAAI,mEAAJ,CAAoBP,IAApB,EAA0B,KAAKN,yBAA/B,EAA0D,KAAKY,OAA/D,EAAwE,KAAKV,SAA7E,EAAwF,KAAK9c,SAA7F,CAAP;AACH;;;;;;AAEL0c,WAAO,CAACrX,IAAR,GAAe,SAASqY,eAAT,CAAyBnY,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAImX,OAAV,EAAmB,uDAAgB3X,qBAAhB,CAAnB,EAA2D,uDAAgB0E,gBAAhB,CAA3D,EAA8F,uDAAgB,sEAAhB,CAA9F,EAAgJ,uDAAgB6S,sBAAhB,CAAhJ,EAAyL,uDAAgBxU,yBAAhB,CAAzL,EAAqO,uDAAgB,sDAAhB,CAArO,EAAuQ,uDAAgB,oDAAhB,CAAvQ,EAAuS,uDAAgB,wDAAhB,CAAvS,EAAkU,uDAAgB,gEAAhB,CAAlU,EAA0W,uDAAgB,wDAAhB,EAAiC,CAAjC,CAA1W,CAAP;AAAwZ,KAArc;;AACA4U,WAAO,CAAC7W,KAAR,GAAgB,iEAA0B;AAAEE,WAAK,EAAE2W,OAAT;AAAkB5W,aAAO,EAAE4W,OAAO,CAACrX;AAAnC,KAA1B,CAAhB;AACA;;AACAqX,WAAO,CAAClX,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAEV;AAAR,OAD2B,EAE3B;AAAEU,YAAI,EAAEgE;AAAR,OAF2B,EAG3B;AAAEhE,YAAI,EAAE;AAAR,OAH2B,EAI3B;AAAEA,YAAI,EAAE6W;AAAR,OAJ2B,EAK3B;AAAE7W,YAAI,EAAEqC;AAAR,OAL2B,EAM3B;AAAErC,YAAI,EAAE;AAAR,OAN2B,EAO3B;AAAEA,YAAI,EAAE;AAAR,OAP2B,EAQ3B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAR2B,EAS3B;AAAEH,YAAI,EAAE;AAAR,OAT2B,EAU3B;AAAEA,YAAI,EAAE,wDAAR;AAAkBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA9B,OAV2B,CAAN;AAAA,KAAzB;AAYA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBiX,OAAzB,EAAkC,CAAC;AACxDjX,YAAI,EAAE;AADkD,OAAD,CAAlC,EAErB,YAAY;AAAE,eAAO,CAAC;AAAEA,cAAI,EAAEV;AAAR,SAAD,EAAkC;AAAEU,cAAI,EAAEgE;AAAR,SAAlC,EAA8D;AAAEhE,cAAI,EAAE;AAAR,SAA9D,EAAyG;AAAEA,cAAI,EAAE6W;AAAR,SAAzG,EAA2I;AAAE7W,cAAI,EAAEqC;AAAR,SAA3I,EAAgL;AAAErC,cAAI,EAAE;AAAR,SAAhL,EAA2M;AAAEA,cAAI,EAAE;AAAR,SAA3M,EAAoO;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACjRF,gBAAI,EAAE,oDAD2Q;AAEjRG,gBAAI,EAAE,CAAC,wDAAD;AAF2Q,WAAD;AAA/B,SAApO,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,EAGsB;AAAEA,cAAI,EAAE,wDAAR;AAAyBE,oBAAU,EAAE,CAAC;AACzEF,gBAAI,EAAE;AADmE,WAAD;AAArC,SAHtB,CAAP;AAKF,OAPS,EAOP,IAPO;AAOC,KAPhB;;AAQd,QAAI,KAAJ,EAAW,CAwDV;AAED;;;;;;AAKA;;;;;;AAIA,QAAMkY,mBAAmB,GAAG,CACxB;AACIzW,aAAO,EAAE,OADb;AAEIC,aAAO,EAAE,QAFb;AAGIC,cAAQ,EAAE,OAHd;AAIIC,cAAQ,EAAE;AAJd,KADwB,EAOxB;AACIH,aAAO,EAAE,OADb;AAEIC,aAAO,EAAE,KAFb;AAGIC,cAAQ,EAAE,OAHd;AAIIC,cAAQ,EAAE;AAJd,KAPwB,EAaxB;AACIH,aAAO,EAAE,KADb;AAEIC,aAAO,EAAE,KAFb;AAGIC,cAAQ,EAAE,KAHd;AAIIC,cAAQ,EAAE;AAJd,KAbwB,EAmBxB;AACIH,aAAO,EAAE,KADb;AAEIC,aAAO,EAAE,QAFb;AAGIC,cAAQ,EAAE,KAHd;AAIIC,cAAQ,EAAE;AAJd,KAnBwB,CAA5B;AA0BA;;;;;AAIA,QAAMuW,qCAAqC,GAAG,IAAI,4DAAJ,CAAmB,uCAAnB,CAA9C;AACA;;;;;;AAKA,aAASC,6CAAT,CAAuD9W,OAAvD,EAAgE;AAC5D;AAAQ;;;;AAIR,kBAAC7B,MAAD;AAAA,iBAAY6B,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,CAAoCF,MAApC,CAAZ;AAAA;AAJA;AAKH;AACD;;;;;;QAIM4Y,gB;AACF;;;AAGA,8BAAYvB,UAAZ,EAAwB;AAAA;;AACpB,WAAKA,UAAL,GAAkBA,UAAlB;AACH,K;;AAELuB,oBAAgB,CAACzY,IAAjB,GAAwB,SAAS0Y,wBAAT,CAAkCxY,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIuY,gBAAV,EAA4B,gEAAyB,wDAAzB,CAA5B,CAAP;AAAkF,KAAjJ;;AACAA,oBAAgB,CAACE,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAEqY,gBAAR;AAA0BG,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAjC,EAA6D,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAA7D,CAArC;AAAiIC,cAAQ,EAAE,CAAC,kBAAD;AAA3I,KAAzB,CAAxB;AACA;;AACAJ,oBAAgB,CAACtY,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAE;AAAR,OADoC,CAAN;AAAA,KAAlC;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBqY,gBAAzB,EAA2C,CAAC;AACjErY,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,4DADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAF2D,OAAD,CAA3C,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OANhC,EAMkC,IANlC;AAM0C,KANzD;;AAOd,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;QAIM0Y,mB;AACF;;AACA;;;;;;;AAOA,mCAAYC,QAAZ,EAAsBC,WAAtB,EAAmCC,gBAAnC,EAAqDC,qBAArD,EAA4EC,IAA5E,EAAkF;AAAA;;AAC9E,aAAKJ,QAAL,GAAgBA,QAAhB;AACA,aAAKI,IAAL,GAAYA,IAAZ;AACA,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKC,aAAL,GAAqB,KAArB;AACA,aAAKhP,cAAL,GAAsB,KAAtB;AACA,aAAKiP,mBAAL,GAA2B,KAA3B;AACA,aAAKC,KAAL,GAAa,KAAb;AACA,aAAKC,qBAAL,GAA6B,kDAAavT,KAA1C;AACA;;;;AAGA,aAAKwT,cAAL,GAAsB,CAAtB;AACA;;;;AAGA,aAAKC,IAAL,GAAY,KAAZ;AACA;;;;AAGA,aAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAKrT,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,aAAKpJ,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,aAAK0c,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA,aAAKC,eAAL,GAAuB,IAAI,kEAAJ,CAAmBd,WAAnB,EAAgCC,gBAAhC,CAAvB;AACA,aAAKc,sBAAL,GAA8Bb,qBAA9B;AACA,aAAKrY,cAAL,GAAsB,KAAKkZ,sBAAL,EAAtB;AACH;AACD;;;;;;;;;AAgGA;;;sCAGc;AACV,cAAI,KAAK/c,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBwK,OAAjB;AACH;;AACD,eAAKgS,qBAAL,CAA2B1b,WAA3B;AACH;AACD;;;;;;;oCAIYkc,O,EAAS;AACjB,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;;AACA,iBAAKjd,WAAL,CAAiBwZ,UAAjB,CAA4B;AACxBpa,mBAAK,EAAE,KAAKA,KADY;AAExBmM,sBAAQ,EAAE,KAAKA,QAFS;AAGxBrM,oBAAM,EAAE,KAAKA,MAHW;AAIxBsM,uBAAS,EAAE,KAAKA;AAJQ,aAA5B;;AAMA,gBAAIwR,OAAO,CAAC,QAAD,CAAP,IAAqB,KAAKN,IAA9B,EAAoC;AAChC,mBAAKO,SAAL,CAAelS,KAAf;AACH;AACJ;;AACD,cAAIiS,OAAO,CAAC,MAAD,CAAX,EAAqB;AACjB,iBAAKN,IAAL,GAAY,KAAKS,cAAL,EAAZ,GAAoC,KAAKC,cAAL,EAApC;AACH;AACJ;AACD;;;;;;;;yCAKiB;AAAA;;AACb,cAAI,CAAC,KAAKrM,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAehL,MAAvC,EAA+C;AAC3C,iBAAKgL,SAAL,GAAiBuK,mBAAjB;AACH;;AACD,eAAKtb,WAAL,GAAmB,KAAK+b,QAAL,CAAcsB,MAAd,CAAqB,KAAKC,YAAL,EAArB,CAAnB;;AACA,eAAKtd,WAAL,CAAiBud,aAAjB,GAAiC9c,SAAjC;AAA4C;;;;AAI5C,oBAACmF,KAAD,EAAW;AACP,mBAAI,CAACiX,cAAL,CAAoB3W,IAApB,CAAyBN,KAAzB;;AACA,gBAAIA,KAAK,CAAC4X,OAAN,KAAkB,4DAAlB,IAA4B,CAAC,6EAAe5X,KAAf,CAAjC,EAAwD;AACpDA,mBAAK,CAAC6X,cAAN;;AACA,qBAAI,CAACL,cAAL;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;uCAKe;AACX;AACA,cAAM3T,gBAAgB,GAAG,KAAKwT,SAAL,GACrB,KAAKxT,gBAAL,IAAyB,KAAKiU,uBAAL,EAD7B;AAEA;;;AACA,cAAMzC,aAAa,GAAG,IAAIrX,aAAJ,CAAkB;AACpCwH,qBAAS,EAAE,KAAK+Q,IADoB;AAEpC1S,4BAAgB,EAAhBA,gBAFoC;AAGpC5F,0BAAc,EAAE,KAAKA,cAHe;AAIpCE,uBAAW,EAAE,KAAKA;AAJkB,WAAlB,CAAtB;;AAMA,cAAI,KAAK3E,KAAL,IAAc,KAAKA,KAAL,KAAe,CAAjC,EAAoC;AAChC6b,yBAAa,CAAC7b,KAAd,GAAsB,KAAKA,KAA3B;AACH;;AACD,cAAI,KAAKF,MAAL,IAAe,KAAKA,MAAL,KAAgB,CAAnC,EAAsC;AAClC+b,yBAAa,CAAC/b,MAAd,GAAuB,KAAKA,MAA5B;AACH;;AACD,cAAI,KAAKqM,QAAL,IAAiB,KAAKA,QAAL,KAAkB,CAAvC,EAA0C;AACtC0P,yBAAa,CAAC1P,QAAd,GAAyB,KAAKA,QAA9B;AACH;;AACD,cAAI,KAAKC,SAAL,IAAkB,KAAKA,SAAL,KAAmB,CAAzC,EAA4C;AACxCyP,yBAAa,CAACzP,SAAd,GAA0B,KAAKA,SAA/B;AACH;;AACD,cAAI,KAAKxH,aAAT,EAAwB;AACpBiX,yBAAa,CAACjX,aAAd,GAA8B,KAAKA,aAAnC;AACH;;AACD,cAAI,KAAKF,UAAT,EAAqB;AACjBmX,yBAAa,CAACnX,UAAd,GAA2B,KAAKA,UAAhC;AACH;;AACD,iBAAOmX,aAAP;AACH;AACD;;;;;;;;;gDAMwBxR,gB,EAAkB;AAAA;;AACtC;AACA,cAAMsH,SAAS,GAAG,KAAKA,SAAL,CAAegF,GAAf;AAAoB;;;;AAItC,oBAAA4H,eAAe;AAAA,mBAAK;AAChB9Y,qBAAO,EAAE8Y,eAAe,CAAC9Y,OADT;AAEhBC,qBAAO,EAAE6Y,eAAe,CAAC7Y,OAFT;AAGhBC,sBAAQ,EAAE4Y,eAAe,CAAC5Y,QAHV;AAIhBC,sBAAQ,EAAE2Y,eAAe,CAAC3Y,QAJV;AAKhBL,qBAAO,EAAEgZ,eAAe,CAAChZ,OAAhB,IAA2B,OAAI,CAACA,OALzB;AAMhBC,qBAAO,EAAE+Y,eAAe,CAAC/Y,OAAhB,IAA2B,OAAI,CAACA,OANzB;AAOhBd,wBAAU,EAAE6Z,eAAe,CAAC7Z,UAAhB,IAA8BT;AAP1B,aAAL;AAAA,WAJG,CAAlB;AAaA,iBAAOoG,gBAAgB,CAClBwE,SADE,CACQ,KAAKxJ,MAAL,CAAYyV,UADpB,EAEF1B,aAFE,CAEYzH,SAFZ,EAGFkH,sBAHE,CAGqB,KAAKhH,kBAH1B,EAIFiH,QAJE,CAIO,KAAK7R,IAJZ,EAKFuX,iBALE,CAKgB,KAAK1M,aALrB,EAMFiH,kBANE,CAMiB,KAAKsE,cANtB,EAOF9D,kBAPE,CAOiB,KAAKkF,YAPtB,EAQFC,qBARE,CAQoB,KAAKC,uBARzB,CAAP;AASH;AACD;;;;;;;;kDAK0B;AAAA;;AACtB;AACA,cAAM/S,QAAQ,GAAG,KAAK+Q,QAAL,CAAc/L,QAAd,GAAyBgO,mBAAzB,CAA6C,KAAKvZ,MAAL,CAAYyV,UAAzD,CAAjB;;AACA,eAAKgD,uBAAL,CAA6BlS,QAA7B;;AACAA,kBAAQ,CAACgD,eAAT,CAAyBvN,SAAzB;AAAoC;;;;AAIpC,oBAAAwd,CAAC;AAAA,mBAAI,OAAI,CAACrB,cAAL,CAAoBsB,IAApB,CAAyBD,CAAzB,CAAJ;AAAA,WAJD;AAKA,iBAAOjT,QAAP;AACH;AACD;;;;;;;;yCAKiB;AAAA;;AACb,cAAI,CAAC,KAAKhL,WAAV,EAAuB;AACnB,iBAAKme,cAAL;AACH,WAFD,MAGK;AACD;AACA,iBAAKne,WAAL,CAAiB8S,SAAjB,GAA6B/O,WAA7B,GAA2C,KAAKA,WAAhD;AACH;;AACD,cAAI,CAAC,KAAK/D,WAAL,CAAiBC,WAAjB,EAAL,EAAqC;AACjC,iBAAKD,WAAL,CAAiBuJ,MAAjB,CAAwB,KAAKuT,eAA7B;;AACA,iBAAKvT,MAAL,CAAY2U,IAAZ;AACH;;AACD,cAAI,KAAKna,WAAT,EAAsB;AAClB,iBAAKyY,qBAAL,GAA6B,KAAKxc,WAAL,CAAiB2c,aAAjB,GAAiClc,SAAjC;AAA4C;;;;AAIzE,sBAAAmF,KAAK,EAAI;AACL,qBAAI,CAAC+W,aAAL,CAAmBuB,IAAnB,CAAwBtY,KAAxB;AACH,aAN4B,CAA7B;AAOH,WARD,MASK;AACD,iBAAK4W,qBAAL,CAA2B1b,WAA3B;AACH;AACJ;AACD;;;;;;;;yCAKiB;AACb,cAAI,KAAKd,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBG,MAAjB;;AACA,iBAAKA,MAAL,CAAY+d,IAAZ;AACH;;AACD,eAAK1B,qBAAL,CAA2B1b,WAA3B;AACH;;;4BA5Qa;AAAE,iBAAO,KAAK+M,QAAZ;AAAuB;AACvC;;;;;0BAIYlJ,O,EAAS;AACjB,eAAKkJ,QAAL,GAAgBlJ,OAAhB;;AACA,cAAI,KAAKsY,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKnP,QAAZ;AAAuB;AACvC;;;;;0BAIYlJ,O,EAAS;AACjB,eAAKkJ,QAAL,GAAgBlJ,OAAhB;;AACA,cAAI,KAAKqY,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKb,YAAZ;AAA2B;AAC/C;;;;;0BAIgB7W,K,EAAO;AAAE,eAAK6W,YAAL,GAAoB,oFAAsB7W,KAAtB,CAApB;AAAmD;AAC5E;;;;;;;4BAImB;AAAE,iBAAO,KAAK8W,aAAZ;AAA4B;AACjD;;;;;0BAIiB9W,K,EAAO;AAAE,eAAK8W,aAAL,GAAqB,oFAAsB9W,KAAtB,CAArB;AAAoD;AAC9E;;;;;;;4BAIyB;AAAE,iBAAO,KAAK+W,mBAAZ;AAAkC;AAC7D;;;;;0BAIuB/W,K,EAAO;AAC1B,eAAK+W,mBAAL,GAA2B,oFAAsB/W,KAAtB,CAA3B;AACH;AACD;;;;;;;4BAIoB;AAAE,iBAAO,KAAK8H,cAAZ;AAA6B;AACnD;;;;;0BAIkB9H,K,EAAO;AAAE,eAAK8H,cAAL,GAAsB,oFAAsB9H,KAAtB,CAAtB;AAAqD;AAChF;;;;;;;4BAIW;AAAE,iBAAO,KAAKgX,KAAZ;AAAoB;AACjC;;;;;0BAIShX,K,EAAO;AAAE,eAAKgX,KAAL,GAAa,oFAAsBhX,KAAtB,CAAb;AAA4C;AAC9D;;;;;;;4BAIiB;AACb,iBAAO,KAAKvF,WAAZ;AACH;AACD;;;;;;;4BAIU;AACN,iBAAO,KAAKmc,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAtB,GAA8B,KAArC;AACH;;;;;;AAmLLuW,uBAAmB,CAAC9Y,IAApB,GAA2B,SAASob,2BAAT,CAAqClb,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAI4Y,mBAAV,EAA+B,gEAAyBzB,OAAzB,CAA/B,EAAkE,gEAAyB,yDAAzB,CAAlE,EAAgH,gEAAyB,8DAAzB,CAAhH,EAAmK,gEAAyBkB,qCAAzB,CAAnK,EAAoO,gEAAyB,gEAAzB,EAAgD,CAAhD,CAApO,CAAP;AAAiS,KAAtW;;AACAO,uBAAmB,CAACH,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE0Y,mBAAR;AAA6BF,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,uBAAL,EAA8B,EAA9B,CAAD,EAAoC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAApC,EAAmE,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAAnE,CAAxC;AAA6IyC,YAAM,EAAE;AAAE5B,sBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAlB;AAA2EC,YAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAAjF;AAAsH7Y,sBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAtI;AAA+Lc,eAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAAxM;AAAmPC,eAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAA5P;AAAuSb,mBAAW,EAAE,CAAC,gCAAD,EAAmC,aAAnC,CAApT;AAAuW8Z,oBAAY,EAAE,CAAC,iCAAD,EAAoC,cAApC,CAArX;AAA0a5M,0BAAkB,EAAE,CAAC,uCAAD,EAA0C,oBAA1C,CAA9b;AAA+fC,qBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAA9gB;AAAqkB7K,YAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAA3kB;AAAgnB0K,iBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA3nB;AAA0qBtM,cAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAAlrB;AAA2tBgF,wBAAgB,EAAE,CAAC,qCAAD,EAAwC,kBAAxC,CAA7uB;AAA0yBrK,aAAK,EAAE,CAAC,0BAAD,EAA6B,OAA7B,CAAjzB;AAAw1BF,cAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAAh2B;AAAy4BqM,gBAAQ,EAAE,CAAC,6BAAD,EAAgC,UAAhC,CAAn5B;AAAg8BC,iBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA38B;AAA0/BxH,qBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAAzgC;AAAgkCF,kBAAU,EAAE,CAAC,+BAAD,EAAkC,YAAlC,CAA5kC;AAA6nCia,+BAAuB,EAAE,CAAC,sCAAD,EAAyC,yBAAzC;AAAtpC,OAArJ;AAAk3CO,aAAO,EAAE;AAAE3B,qBAAa,EAAE,eAAjB;AAAkCC,sBAAc,EAAE,gBAAlD;AAAoErT,cAAM,EAAE,QAA5E;AAAsFpJ,cAAM,EAAE,QAA9F;AAAwG0c,sBAAc,EAAE;AAAxH,OAA33C;AAAugDhB,cAAQ,EAAE,CAAC,qBAAD,CAAjhD;AAA0iD0C,cAAQ,EAAE,CAAC,kEAAD;AAApjD,KAAzB,CAA3B;AACA;;AACAzC,uBAAmB,CAAC3Y,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAEiX;AAAR,OADuC,EAEvC;AAAEjX,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAE;AAAR,OAHuC,EAIvC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACgY,qCAAD;AAAtB,SAAD;AAA/B,OAJuC,EAKvC;AAAEnY,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OALuC,CAAN;AAAA,KAArC;;AAOA0Y,uBAAmB,CAAC0C,cAApB,GAAqC;AACjC/Z,YAAM,EAAE,CAAC;AAAErB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,2BAAD;AAArB,OAAD,CADyB;AAEjCwN,eAAS,EAAE,CAAC;AAAE3N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,8BAAD;AAArB,OAAD,CAFsB;AAGjCkG,sBAAgB,EAAE,CAAC;AAAErG,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,qCAAD;AAArB,OAAD,CAHe;AAIjCoB,aAAO,EAAE,CAAC;AAAEvB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,4BAAD;AAArB,OAAD,CAJwB;AAKjCqB,aAAO,EAAE,CAAC;AAAExB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,4BAAD;AAArB,OAAD,CALwB;AAMjCnE,WAAK,EAAE,CAAC;AAAEgE,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,0BAAD;AAArB,OAAD,CAN0B;AAOjCrE,YAAM,EAAE,CAAC;AAAEkE,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,2BAAD;AAArB,OAAD,CAPyB;AAQjCgI,cAAQ,EAAE,CAAC;AAAEnI,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,6BAAD;AAArB,OAAD,CARuB;AASjCiI,eAAS,EAAE,CAAC;AAAEpI,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,8BAAD;AAArB,OAAD,CATsB;AAUjCS,mBAAa,EAAE,CAAC;AAAEZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kCAAD;AAArB,OAAD,CAVkB;AAWjCO,gBAAU,EAAE,CAAC;AAAEV,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,+BAAD;AAArB,OAAD,CAXqB;AAYjCkZ,oBAAc,EAAE,CAAC;AAAErZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,mCAAD;AAArB,OAAD,CAZiB;AAajCM,oBAAc,EAAE,CAAC;AAAET,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,mCAAD;AAArB,OAAD,CAbiB;AAcjCmZ,UAAI,EAAE,CAAC;AAAEtZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,yBAAD;AAArB,OAAD,CAd2B;AAejCwa,6BAAuB,EAAE,CAAC;AAAE3a,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,sCAAD;AAArB,OAAD,CAfQ;AAgBjCQ,iBAAW,EAAE,CAAC;AAAEX,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,gCAAD;AAArB,OAAD,CAhBoB;AAiBjCsa,kBAAY,EAAE,CAAC;AAAEza,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iCAAD;AAArB,OAAD,CAjBmB;AAkBjC0N,wBAAkB,EAAE,CAAC;AAAE7N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,uCAAD;AAArB,OAAD,CAlBa;AAmBjC2N,mBAAa,EAAE,CAAC;AAAE9N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kCAAD;AAArB,OAAD,CAnBkB;AAoBjC8C,UAAI,EAAE,CAAC;AAAEjD,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,yBAAD;AAArB,OAAD,CApB2B;AAqBjCoZ,mBAAa,EAAE,CAAC;AAAEvZ,YAAI,EAAE;AAAR,OAAD,CArBkB;AAsBjCwZ,oBAAc,EAAE,CAAC;AAAExZ,YAAI,EAAE;AAAR,OAAD,CAtBiB;AAuBjCmG,YAAM,EAAE,CAAC;AAAEnG,YAAI,EAAE;AAAR,OAAD,CAvByB;AAwBjCjD,YAAM,EAAE,CAAC;AAAEiD,YAAI,EAAE;AAAR,OAAD,CAxByB;AAyBjCyZ,oBAAc,EAAE,CAAC;AAAEzZ,YAAI,EAAE;AAAR,OAAD;AAzBiB,KAArC;AA2BA;;AAAc,KAAC,YAAY;AAAE,sEAAyB0Y,mBAAzB,EAA8C,CAAC;AACpE1Y,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,qEADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAF8D,OAAD,CAA9C,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAEiX;AAAR,SAAD,EAAoB;AAAEjX,cAAI,EAAE;AAAR,SAApB,EAAkD;AAAEA,cAAI,EAAE;AAAR,SAAlD,EAAqF;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClIF,gBAAI,EAAE,oDAD4H;AAElIG,gBAAI,EAAE,CAACgY,qCAAD;AAF4H,WAAD;AAA/B,SAArF,EAGX;AAAEnY,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SAHW,CAAP;AAKF,OAXS,EAWP;AAAEqZ,sBAAc,EAAE,CAAC;AAC7BrZ,cAAI,EAAE,mDADuB;AAE7BG,cAAI,EAAE,CAAC,mCAAD;AAFuB,SAAD,CAAlB;AAGVmZ,YAAI,EAAE,CAAC;AACPtZ,cAAI,EAAE,mDADC;AAEPG,cAAI,EAAE,CAAC,yBAAD;AAFC,SAAD,CAHI;AAMVoZ,qBAAa,EAAE,CAAC;AAChBvZ,cAAI,EAAE;AADU,SAAD,CANL;AAQVwZ,sBAAc,EAAE,CAAC;AACjBxZ,cAAI,EAAE;AADW,SAAD,CARN;AAUVmG,cAAM,EAAE,CAAC;AACTnG,cAAI,EAAE;AADG,SAAD,CAVE;AAYVjD,cAAM,EAAE,CAAC;AACTiD,cAAI,EAAE;AADG,SAAD,CAZE;AAcVyZ,sBAAc,EAAE,CAAC;AACjBzZ,cAAI,EAAE;AADW,SAAD,CAdN;AAgBVS,sBAAc,EAAE,CAAC;AACjBT,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,mCAAD;AAFW,SAAD,CAhBN;AAmBVoB,eAAO,EAAE,CAAC;AACVvB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,4BAAD;AAFI,SAAD,CAnBC;AAsBVqB,eAAO,EAAE,CAAC;AACVxB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,4BAAD;AAFI,SAAD,CAtBC;AAyBVQ,mBAAW,EAAE,CAAC;AACdX,cAAI,EAAE,mDADQ;AAEdG,cAAI,EAAE,CAAC,gCAAD;AAFQ,SAAD,CAzBH;AA4BVsa,oBAAY,EAAE,CAAC;AACfza,cAAI,EAAE,mDADS;AAEfG,cAAI,EAAE,CAAC,iCAAD;AAFS,SAAD,CA5BJ;AA+BV0N,0BAAkB,EAAE,CAAC;AACrB7N,cAAI,EAAE,mDADe;AAErBG,cAAI,EAAE,CAAC,uCAAD;AAFe,SAAD,CA/BV;AAkCV2N,qBAAa,EAAE,CAAC;AAChB9N,cAAI,EAAE,mDADU;AAEhBG,cAAI,EAAE,CAAC,kCAAD;AAFU,SAAD,CAlCL;AAqCV8C,YAAI,EAAE,CAAC;AACPjD,cAAI,EAAE,mDADC;AAEPG,cAAI,EAAE,CAAC,yBAAD;AAFC,SAAD,CArCI;AAwCVwN,iBAAS,EAAE,CAAC;AACZ3N,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,8BAAD;AAFM,SAAD,CAxCD;AA2CVkB,cAAM,EAAE,CAAC;AACTrB,cAAI,EAAE,mDADG;AAETG,cAAI,EAAE,CAAC,2BAAD;AAFG,SAAD,CA3CE;AA8CVkG,wBAAgB,EAAE,CAAC;AACnBrG,cAAI,EAAE,mDADa;AAEnBG,cAAI,EAAE,CAAC,qCAAD;AAFa,SAAD,CA9CR;AAiDVnE,aAAK,EAAE,CAAC;AACRgE,cAAI,EAAE,mDADE;AAERG,cAAI,EAAE,CAAC,0BAAD;AAFE,SAAD,CAjDG;AAoDVrE,cAAM,EAAE,CAAC;AACTkE,cAAI,EAAE,mDADG;AAETG,cAAI,EAAE,CAAC,2BAAD;AAFG,SAAD,CApDE;AAuDVgI,gBAAQ,EAAE,CAAC;AACXnI,cAAI,EAAE,mDADK;AAEXG,cAAI,EAAE,CAAC,6BAAD;AAFK,SAAD,CAvDA;AA0DViI,iBAAS,EAAE,CAAC;AACZpI,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,8BAAD;AAFM,SAAD,CA1DD;AA6DVS,qBAAa,EAAE,CAAC;AAChBZ,cAAI,EAAE,mDADU;AAEhBG,cAAI,EAAE,CAAC,kCAAD;AAFU,SAAD,CA7DL;AAgEVO,kBAAU,EAAE,CAAC;AACbV,cAAI,EAAE,mDADO;AAEbG,cAAI,EAAE,CAAC,+BAAD;AAFO,SAAD,CAhEF;AAmEVwa,+BAAuB,EAAE,CAAC;AAC1B3a,cAAI,EAAE,mDADoB;AAE1BG,cAAI,EAAE,CAAC,sCAAD;AAFoB,SAAD;AAnEf,OAXO;AAiFb,KAjFF;;AAkFd,QAAI,KAAJ,EAAW,CA4KV;AACD;;;;;;;AAKA,aAASkb,sDAAT,CAAgE/Z,OAAhE,EAAyE;AACrE;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,QAAM2b,8CAA8C,GAAG;AACnD5X,aAAO,EAAEyU,qCAD0C;AAEnDxU,UAAI,EAAE,CAACsT,OAAD,CAF6C;AAGnDrT,gBAAU,EAAEyX;AAHuC,KAAvD;AAMA;;;;;;QAKME,a;;;;AAENA,iBAAa,CAACC,IAAd,GAAqB,+DAAwB;AAAExb,UAAI,EAAEub;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACE,IAAd,GAAqB,+DAAwB;AAAEpb,aAAO,EAAE,SAASqb,qBAAT,CAA+B5b,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIyb,aAAV,GAAP;AAAoC,OAAnF;AAAqFI,eAAS,EAAE,CACrI1E,OADqI,EAErIqE,8CAFqI,CAAhG;AAGtCM,aAAO,EAAE,CAAC,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAD,EACR,sEADQ;AAH6B,KAAxB,CAArB;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BN,aAA1B,EAAyC;AAAEO,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACpD,mBAAD,EACxIL,gBADwI,CAAP;AAC7G,SAD+E;AAC7EuD,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAP;AAAqD,SADC;AACCG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACrD,mBAAD,EAClIL,gBADkI,EAElI,sEAFkI,CAAP;AAExG;AAHgF,OAAzC,CAAnD;AAGkB,KAHjC;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkD,aAAzB,EAAwC,CAAC;AAC9Dvb,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CADV;AAECG,iBAAO,EAAE,CAACrD,mBAAD,EAAsBL,gBAAtB,EAAwC,sEAAxC,CAFV;AAGCyD,sBAAY,EAAE,CAACpD,mBAAD,EAAsBL,gBAAtB,CAHf;AAICsD,mBAAS,EAAE,CACP1E,OADO,EAEPqE,8CAFO;AAJZ,SAAD;AAFwD,OAAD,CAAxC,EAWrB,IAXqB,EAWf,IAXe;AAWP,KAXR;AAYd;;;;;;;;AAMA,QAAMU,iBAAiB,GAAG,CACtB/E,OADsB,EAEtBJ,sBAFsB,EAGtBpT,oCAHsB,EAItBwB,0BAJsB,EAKtBqW,8CALsB,CAA1B;AAQA;;;;;;AAKA;;;;;;;;QAOMW,0B;;;;;AACF;;;;AAIA,0CAAY1hB,SAAZ;AACA;;;;AAIAoa,cALA,EAKU;AAAA;;AAAA,iCACApa,SADA,EACWoa,QADX;AAET;AACD;;;;;;;sCAGc;AACV;;AACA,cAAI,KAAKuH,oBAAL,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,iBAAK5hB,SAAL,CAAe8I,mBAAf,CAAmC,KAAK6Y,oBAAxC,EAA8D,KAAKC,mBAAnE;AACH;AACJ;AACD;;;;;;;2CAImB;AAAA;;AACf;;AACA,eAAKC,gCAAL;;AACA,eAAKC,4BAAL;AAAmC;;;AAGnC;AAAA,mBAAM,OAAI,CAACD,gCAAL,EAAN;AAAA,WAHA;AAIH;AACD;;;;;;;2DAImC;AAC/B,cAAI,CAAC,KAAKjY,iBAAV,EAA6B;AACzB;AACH;AACD;;;AACA,cAAMmY,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;AACA;;AACA,cAAM3F,MAAM,GAAG0F,iBAAiB,IAAI,KAAK/hB,SAAL,CAAeU,IAAnD;AACA2b,gBAAM,CAAC/R,WAAP,CAAmB,KAAKV,iBAAxB;AACH;AACD;;;;;;;;qDAK6BqY,E,EAAI;AAC7B;AACA,cAAMC,SAAS,GAAG,KAAKC,aAAL,EAAlB;;AACA,cAAID,SAAJ,EAAe;AACX,gBAAI,KAAKN,mBAAT,EAA8B;AAC1B,mBAAK5hB,SAAL,CAAe8I,mBAAf,CAAmCoZ,SAAnC,EAA8C,KAAKN,mBAAnD;AACH;;AACD,iBAAK5hB,SAAL,CAAeyI,gBAAf,CAAgCyZ,SAAhC,EAA2CD,EAA3C;;AACA,iBAAKL,mBAAL,GAA2BK,EAA3B;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ,cAAI,CAAC,KAAKN,oBAAV,EAAgC;AAC5B;AACA,gBAAM3hB,SAAS;AAAI;AAAkB,iBAAKA,SAA1C;;AACA,gBAAIA,SAAS,CAACoiB,iBAAd,EAAiC;AAC7B,mBAAKT,oBAAL,GAA4B,kBAA5B;AACH,aAFD,MAGK,IAAI3hB,SAAS,CAACqiB,uBAAd,EAAuC;AACxC,mBAAKV,oBAAL,GAA4B,wBAA5B;AACH,aAFI,MAGA,IAAI3hB,SAAS,CAACsiB,oBAAd,EAAoC;AACrC,mBAAKX,oBAAL,GAA4B,qBAA5B;AACH,aAFI,MAGA,IAAI3hB,SAAS,CAACuiB,mBAAd,EAAmC;AACpC,mBAAKZ,oBAAL,GAA4B,oBAA5B;AACH;AACJ;;AACD,iBAAO,KAAKA,oBAAZ;AACH;AACD;;;;;;;;+CAKuB;AACnB;AACA,cAAM3hB,SAAS;AAAI;AAAkB,eAAKA,SAA1C;AACA,iBAAOA,SAAS,CAAC+hB,iBAAV,IACH/hB,SAAS,CAACwiB,uBADP,IAEHxiB,SAAS,CAACyiB,oBAFP,IAGHziB,SAAS,CAAC0iB,mBAHP,IAIH,IAJJ;AAKH;;;;MApGoCjZ,gB;;AAsGzCiY,8BAA0B,CAACrc,IAA3B,GAAkC,SAASsd,kCAAT,CAA4Cpd,CAA5C,EAA+C;AAAE,aAAO,KAAKA,CAAC,IAAImc,0BAAV,EAAsC,uDAAgB,wDAAhB,CAAtC,EAAiE,uDAAgB,8DAAhB,CAAjE,CAAP;AAA4G,KAA/L;AACA;;;AACAA,8BAA0B,CAAClc,cAA3B,GAA4C;AAAA,aAAM,CAC9C;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAD8C,EAE9C;AAAEH,YAAI,EAAE;AAAR,OAF8C,CAAN;AAAA,KAA5C;AAIA;;;AAAmBic,8BAA0B,CAAC7b,KAA3B,GAAmC,yEAAmB;AAAEC,aAAO,EAAE,SAAS6c,kCAAT,GAA8C;AAAE,eAAO,IAAIjB,0BAAJ,CAA+B,+DAAS,wDAAT,CAA/B,EAAmD,+DAAS,8DAAT,CAAnD,CAAP;AAAgF,OAA3I;AAA6I3b,WAAK,EAAE2b,0BAApJ;AAAgL1b,gBAAU,EAAE;AAA5L,KAAnB,CAAnC;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyB0b,0BAAzB,EAAqD,CAAC;AAC3Ejc,YAAI,EAAE,wDADqE;AAE3EG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFqE,OAAD,CAArD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGyB,OANlB,EAMoB,IANpB;AAM4B,KAN3C;;AAOd,QAAI,KAAJ,EAAW,CAWV;AAED;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AClqKA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;;AAKA;;;;;;AAMA,QAAMmd,eAAe,GAAG,8FAAgC;AAAEC,aAAO,EAAE;AAAX,KAAhC,CAAxB;AACA;;;;;;QAKMC,e;AACF;;;;AAIA,+BAAYpZ,SAAZ,EAAuB1H,OAAvB,EAAgC;AAAA;;AAC5B,aAAK0H,SAAL,GAAiBA,SAAjB;AACA,aAAK1H,OAAL,GAAeA,OAAf;AACA,aAAK+gB,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACH;AACD;;;;;;;;gCAIQC,Y,EAAc;AAAA;;AAClB,cAAI,CAAC,KAAKvZ,SAAL,CAAeM,SAApB,EAA+B;AAC3B,mBAAO,0CAAP;AACH;AACD;;;AACA,cAAM1G,OAAO,GAAG,4EAAc2f,YAAd,CAAhB;AACA;;AACA,cAAMC,IAAI,GAAG,KAAKH,kBAAL,CAAwBtF,GAAxB,CAA4Bna,OAA5B,CAAb;;AACA,cAAI4f,IAAJ,EAAU;AACN,mBAAOA,IAAI,CAACC,OAAL,CAAa3W,YAAb,EAAP;AACH;AACD;;;AACA,cAAM4W,MAAM,GAAG,IAAI,4CAAJ,EAAf;AACA;;AACA,cAAMrU,QAAQ,GAAG,2BAAjB;AACA;;AACA,cAAMsU,QAAQ;AAAI;;AAAoB;;;;AAItC,mBAJMA,QAIN,CAACpb,KAAD,EAAW;AACP;AACA;AACA;AACA,gBAAIA,KAAK,CAACqb,aAAN,KAAwB,+BAAxB,IACA,CAAChgB,OAAO,CAAC/C,SAAR,CAAkBY,QAAlB,CAA2B4N,QAA3B,CADL,EAC2C;AACvCzL,qBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsBuO,QAAtB;;AACA,qBAAI,CAAC/M,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,uBAAM6gB,MAAM,CAAC7a,IAAP,CAAY;AAAEgb,wBAAM;AAAG;AAAkBtb,uBAAK,CAACsb,MAAnC;AAA6CC,8BAAY,EAAE;AAA3D,iBAAZ,CAAN;AAAA,eAHA;AAIH,aAPD,MAQK,IAAIvb,KAAK,CAACqb,aAAN,KAAwB,6BAAxB,IACLhgB,OAAO,CAAC/C,SAAR,CAAkBY,QAAlB,CAA2B4N,QAA3B,CADC,EACqC;AACtCzL,qBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB+N,QAAzB;;AACA,qBAAI,CAAC/M,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,uBAAM6gB,MAAM,CAAC7a,IAAP,CAAY;AAAEgb,wBAAM;AAAG;AAAkBtb,uBAAK,CAACsb,MAAnC;AAA6CC,8BAAY,EAAE;AAA3D,iBAAZ,CAAN;AAAA,eAHA;AAIH;AACJ,WAxBD;;AAyBA,eAAKxhB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF/K,mBAAO,CAACmF,gBAAR,CAAyB,gBAAzB,EAA2C4a,QAA3C,EAAqDT,eAArD;AACAtf,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsB,mCAAtB;AACH,WAND;;AAOA,eAAKuiB,kBAAL,CAAwBU,GAAxB,CAA4BngB,OAA5B,EAAqC;AACjC6f,mBAAO,EAAEC,MADwB;AAEjCM,oBAAQ;AAAG;;;AAGX,gCAAM;AACFpgB,qBAAO,CAACwF,mBAAR,CAA4B,gBAA5B,EAA8Cua,QAA9C,EAAwDT,eAAxD;AACH;AAPgC,WAArC;;AASA,iBAAOQ,MAAM,CAAC5W,YAAP,EAAP;AACH;AACD;;;;;;;uCAIeyW,Y,EAAc;AACzB;AACA,cAAM3f,OAAO,GAAG,4EAAc2f,YAAd,CAAhB;AACA;;AACA,cAAMC,IAAI,GAAG,KAAKH,kBAAL,CAAwBtF,GAAxB,CAA4Bna,OAA5B,CAAb;;AACA,cAAI4f,IAAJ,EAAU;AACNA,gBAAI,CAACQ,QAAL;AACAR,gBAAI,CAACC,OAAL,CAAahW,QAAb;AACA7J,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,mCAAzB;AACAsC,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,2BAAzB;;AACA,iBAAK+hB,kBAAL,WAA+Bzf,OAA/B;AACH;AACJ;AACD;;;;;;sCAGc;AAAA;;AACV,eAAKyf,kBAAL,CAAwBjU,OAAxB;AAAiC;;;;;AAKjC,oBAAC6U,KAAD,EAAQrgB,OAAR;AAAA,mBAAoB,OAAI,CAACsgB,cAAL,CAAoBtgB,OAApB,CAApB;AAAA,WALA;AAMH;;;;;;AAELwf,mBAAe,CAACzd,IAAhB,GAAuB,SAASwe,uBAAT,CAAiCte,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAIud,eAAV,EAA2B,uDAAgB,8DAAhB,CAA3B,EAA6D,uDAAgB,oDAAhB,CAA7D,CAAP;AAAsG,KAAnK;AACA;;;AACAA,mBAAe,CAACtd,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEC,YAAI,EAAE;AAAR,OADmC,EAEnC;AAAEA,YAAI,EAAE;AAAR,OAFmC,CAAN;AAAA,KAAjC;AAIA;;;AAAmBqd,mBAAe,CAACjd,KAAhB,GAAwB,yEAAmB;AAAEC,aAAO,EAAE,SAAS+d,uBAAT,GAAmC;AAAE,eAAO,IAAIf,eAAJ,CAAoB,+DAAS,8DAAT,CAApB,EAAwC,+DAAS,oDAAT,CAAxC,CAAP;AAAmE,OAAnH;AAAqH/c,WAAK,EAAE+c,eAA5H;AAA6I9c,gBAAU,EAAE;AAAzJ,KAAnB,CAAxB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyB8c,eAAzB,EAA0C,CAAC;AAChErd,YAAI,EAAE,wDAD0D;AAEhEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF0D,OAAD,CAA1C,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAA4B;AAAEA,cAAI,EAAE;AAAR,SAA5B,CAAP;AAA8D,OAHvD,EAGyD,IAHzD;AAGiE,KAHhF;;AAId,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;QAGMqe,W;AACF;;;;AAIA,2BAAYC,WAAZ,EAAyBC,gBAAzB,EAA2C;AAAA;;AACvC,aAAKD,WAAL,GAAmBA,WAAnB;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA;;;;AAGA,aAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;AACH;AACD;;;;;;;mCAGW;AAAA;;AACP,eAAKD,gBAAL,CACKE,OADL,CACa,KAAKH,WADlB,EAEKjhB,SAFL;AAEgB;;;;AAIhB,oBAAAmF,KAAK;AAAA,mBAAI,OAAI,CAACgc,WAAL,CAAiB1D,IAAjB,CAAsBtY,KAAtB,CAAJ;AAAA,WANL;AAOH;AACD;;;;;;sCAGc;AACV,eAAK+b,gBAAL,CAAsBJ,cAAtB,CAAqC,KAAKG,WAA1C;AACH;;;;;;AAELD,eAAW,CAACze,IAAZ,GAAmB,SAAS8e,mBAAT,CAA6B5e,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIue,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyBhB,eAAzB,CAApE,CAAP;AAAwH,KAA7K;;AACAgB,eAAW,CAAC9F,IAAZ,GAAmB,gEAAyB;AAAEvY,UAAI,EAAEqe,WAAR;AAAqB7F,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2D0C,aAAO,EAAE;AAAEsD,mBAAW,EAAE;AAAf;AAApE,KAAzB,CAAnB;AACA;;AACAH,eAAW,CAACte,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAEqd;AAAR,OAF+B,CAAN;AAAA,KAA7B;;AAIAgB,eAAW,CAACjD,cAAZ,GAA6B;AACzBoD,iBAAW,EAAE,CAAC;AAAExe,YAAI,EAAE;AAAR,OAAD;AADY,KAA7B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqe,WAAzB,EAAsC,CAAC;AAC5Dre,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFsD,OAAD,CAAtC,EAKrB,YAAY;AAAE,eAAO,CAAC;AAAEnO,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEqd;AAAR,SAA9B,CAAP;AAAkE,OAL3D,EAK6D;AAAEmB,mBAAW,EAAE,CAAC;AAC9Fxe,cAAI,EAAE;AADwF,SAAD;AAAf,OAL7D;AAOb,KAPF;;AAQd,QAAI,KAAJ,EAAW,CAgBV;AAED;;;;;;AAKA;;;;;QAGM2e,mB;AACF;;;;;;AAMA,mCAAYL,WAAZ,EAAyBra,SAAzB,EAAoC1H,OAApC;AACA;AACArC,cAFA,EAEU;AAAA;;AACN,aAAKokB,WAAL,GAAmBA,WAAnB;AACA,aAAKra,SAAL,GAAiBA,SAAjB;AACA,aAAK1H,OAAL,GAAeA,OAAf;AACA,aAAKqiB,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,aAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,aAAKvkB,SAAL,GAAiBL,QAAjB;AACA,aAAK6kB,gBAAL;AAAyB;AAAkB,aAAKT,WAAL,CAAiBxL,aAA5D;AACH;AACD;;;;;;;;;AA2CA;;;;wCAIgB;AACZ;AACA,cAAM1K,SAAS,GAAG,KAAK4W,OAAL,IAAgB,KAAKC,iBAArB,aACX,KAAKD,OAAL,GAAe,KAAKC,iBADT,UACiC,IADnD;;AAEA,cAAI7W,SAAJ,EAAe;AACX,iBAAK2W,gBAAL,CAAsBlkB,KAAtB,CAA4BuN,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ;AACA,cAAME,SAAS,GAAG,KAAK4W,OAAL,IAAgB,KAAKD,iBAArB,aACX,KAAKC,OAAL,GAAe,KAAKD,iBADT,UACiC,IADnD;;AAEA,cAAI3W,SAAJ,EAAe;AACX,iBAAKyW,gBAAL,CAAsBlkB,KAAtB,CAA4ByN,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;;;0CAGkB;AAAA;;AACd,cAAI,KAAKrE,SAAL,CAAeM,SAAnB,EAA8B;AAC1B;AACA,iBAAK4a,cAAL,GAAsB,KAAKJ,gBAAL,CAAsBlkB,KAAtB,CAA4BiB,MAAlD;AACA,iBAAKsjB,kBAAL;;AACA,iBAAK7iB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACF;AACA,kBAAMpN,MAAM,GAAG,OAAI,CAAC6jB,UAAL,EAAf;;AACA,qEAAU7jB,MAAV,EAAkB,QAAlB,EACKwL,IADL,CACU,iEAAU,EAAV,CADV,EACyB,iEAAU,OAAI,CAAC4X,UAAf,CADzB,EAEKvhB,SAFL;AAEgB;;;AAGhB;AAAA,uBAAM,OAAI,CAAC+hB,kBAAL,CAAwB,IAAxB,CAAN;AAAA,eALA;AAMH,aAZD;AAaH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKR,UAAL,CAAgB9b,IAAhB;;AACA,eAAK8b,UAAL,CAAgBlX,QAAhB;AACH;AACD;;;;;;;;;;;;mDAS2B;AACvB,cAAI,KAAKuX,iBAAT,EAA4B;AACxB;AACH,WAHsB,CAIvB;;AACA;;;AACA,cAAIK,aAAa;AAAI;AAAkB,eAAKP,gBAAL,CAAsBQ,SAAtB,CAAgC,KAAhC,CAAvC;;AACAD,uBAAa,CAACE,IAAd,GAAqB,CAArB,CAPuB,CAQvB;AACA;AACA;;AACAF,uBAAa,CAACzkB,KAAd,CAAoB+R,QAApB,GAA+B,UAA/B;AACA0S,uBAAa,CAACzkB,KAAd,CAAoB4kB,UAApB,GAAiC,QAAjC;AACAH,uBAAa,CAACzkB,KAAd,CAAoB6kB,MAApB,GAA6B,MAA7B;AACAJ,uBAAa,CAACzkB,KAAd,CAAoB8kB,OAApB,GAA8B,GAA9B;AACAL,uBAAa,CAACzkB,KAAd,CAAoBiB,MAApB,GAA6B,EAA7B;AACAwjB,uBAAa,CAACzkB,KAAd,CAAoBuN,SAApB,GAAgC,EAAhC;AACAkX,uBAAa,CAACzkB,KAAd,CAAoByN,SAApB,GAAgC,EAAhC,CAjBuB,CAkBvB;AACA;AACA;AACA;AACA;;AACAgX,uBAAa,CAACzkB,KAAd,CAAoB+kB,QAApB,GAA+B,QAA/B;;AACC;AAAkB,eAAKb,gBAAL,CAAsB3a,UAAzC,CAAsDS,WAAtD,CAAkEya,aAAlE;;AACA,eAAKL,iBAAL,GAAyBK,aAAa,CAAClN,YAAvC;;AACC;AAAkB,eAAK2M,gBAAL,CAAsB3a,UAAzC,CAAsDC,WAAtD,CAAkEib,aAAlE,EA1BuB,CA2BvB;;;AACA,eAAKO,aAAL;;AACA,eAAKC,aAAL;AACH;AACD;;;;;;oCAGY;AACR,cAAI,KAAK7b,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAK6a,kBAAL;AACH;AACJ;AACD;;;;;;;;;6CAMkC;AAAA;;AAAA,cAAfW,KAAe,uEAAP,KAAO;;AAC9B;AACA,cAAI,CAAC,KAAKlB,QAAV,EAAoB;AAChB;AACH;;AACD,eAAKmB,wBAAL,GAL8B,CAM9B;AACA;;;AACA,cAAI,CAAC,KAAKf,iBAAV,EAA6B;AACzB;AACH;AACD;;;AACA,cAAMgB,QAAQ;AAAI;AAAkB,eAAK3B,WAAL,CAAiBxL,aAArD;AACA;;AACA,cAAM3Q,KAAK,GAAG8d,QAAQ,CAAC9d,KAAvB,CAd8B,CAe9B;;AACA,cAAI,CAAC4d,KAAD,IAAU,KAAKG,QAAL,KAAkB,KAAKpB,gBAAjC,IAAqD3c,KAAK,KAAK,KAAKge,cAAxE,EAAwF;AACpF;AACH;AACD;;;AACA,cAAMC,eAAe,GAAGH,QAAQ,CAACI,WAAjC,CApB8B,CAqB9B;AACA;AACA;AACA;AACA;;AACAJ,kBAAQ,CAACnlB,SAAT,CAAmBC,GAAnB,CAAuB,iCAAvB;AACAklB,kBAAQ,CAACI,WAAT,GAAuB,EAAvB,CA3B8B,CA4B9B;AACA;;AACA;;AACA,cAAMvkB,MAAM,GAAGmkB,QAAQ,CAACpkB,YAAT,GAAwB,CAAvC,CA/B8B,CAgC9B;;AACAokB,kBAAQ,CAACplB,KAAT,CAAeiB,MAAf,aAA2BA,MAA3B;AACAmkB,kBAAQ,CAACnlB,SAAT,CAAmBS,MAAnB,CAA0B,iCAA1B;AACA0kB,kBAAQ,CAACI,WAAT,GAAuBD,eAAvB;;AACA,eAAK7jB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF,gBAAI,OAAOD,qBAAP,KAAiC,WAArC,EAAkD;AAC9CA,mCAAqB;AAAE;;;AAGvB;AAAA,uBAAM,OAAI,CAAC2X,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,eAHqB,CAArB;AAIH,aALD,MAMK;AACD/W,wBAAU;AAAE;;;AAGZ;AAAA,uBAAM,OAAI,CAACoX,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,eAHU,CAAV;AAIH;AACJ,WAhBD;;AAiBA,eAAKE,cAAL,GAAsBhe,KAAtB;AACA,eAAK2c,gBAAL,GAAwB,KAAKoB,QAA7B;AACH;AACD;;;;;;;gCAIQ;AACJ;AACA;AACA,cAAI,KAAKf,cAAL,KAAwBlf,SAA5B,EAAuC;AACnC,iBAAK8e,gBAAL,CAAsBlkB,KAAtB,CAA4BiB,MAA5B,GAAqC,KAAKqjB,cAA1C;AACH;AACJ,S,CACD;AACA;AACA;AACA;;AACA;;;;;;4CAGoB,CAEnB,C,CADG;;AAEJ;;;;;;;;uCAKe;AACX,iBAAO,KAAK5kB,SAAL,IAAkBL,QAAzB;AACH;AACD;;;;;;;;qCAKa;AACT;AACA,cAAMqmB,GAAG,GAAG,KAAKC,YAAL,EAAZ;;AACA,iBAAOD,GAAG,CAACE,WAAJ,IAAmBjlB,MAA1B;AACH;AACD;;;;;;;;;;;+CAQuBykB,Q,EAAU;AAAA,cACrBS,cADqB,GACYT,QADZ,CACrBS,cADqB;AAAA,cACLC,YADK,GACYV,QADZ,CACLU,YADK;AAE7B;;AACA,cAAMzmB,QAAQ,GAAG,KAAKsmB,YAAL,EAAjB,CAH6B,CAI7B;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAI,CAAC,KAAK5B,UAAL,CAAgBgC,SAAjB,IAA8B1mB,QAAQ,CAAC2mB,aAAT,KAA2BZ,QAA7D,EAAuE;AACnEA,oBAAQ,CAACa,iBAAT,CAA2BJ,cAA3B,EAA2CC,YAA3C;AACH;AACJ;;;4BAvQa;AAAE,iBAAO,KAAKT,QAAZ;AAAuB;AACvC;;;;;0BAIY/d,K,EAAO;AACf,eAAK+d,QAAL,GAAgB,mFAAqB/d,KAArB,CAAhB;;AACA,eAAK0d,aAAL;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKkB,QAAZ;AAAuB;AACvC;;;;;0BAIY5e,K,EAAO;AACf,eAAK4e,QAAL,GAAgB,mFAAqB5e,KAArB,CAAhB;;AACA,eAAK2d,aAAL;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKjB,QAAZ;AAAuB;AACvC;;;;;0BAIY1c,K,EAAO;AACfA,eAAK,GAAG,oFAAsBA,KAAtB,CAAR,CADe,CAEf;AACA;;AACA,cAAI,KAAK0c,QAAL,KAAkB1c,KAAtB,EAA6B;AACzB,aAAC,KAAK0c,QAAL,GAAgB1c,KAAjB,IAA0B,KAAKid,kBAAL,CAAwB,IAAxB,CAA1B,GAA0D,KAAK4B,KAAL,EAA1D;AACH;AACJ;;;;;;AAmOLrC,uBAAmB,CAAC/e,IAApB,GAA2B,SAASqhB,2BAAT,CAAqCnhB,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAI6e,mBAAV,EAA+B,gEAAyB,wDAAzB,CAA/B,EAA4E,gEAAyB,8DAAzB,CAA5E,EAAuH,gEAAyB,oDAAzB,CAAvH,EAAgK,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAhK,CAAP;AAAgN,KAArR;;AACAA,uBAAmB,CAACpG,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE2e,mBAAR;AAA6BnG,eAAS,EAAE,CAAC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAD,CAAxC;AAAmF0I,eAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,CAA9F;AAAyIC,kBAAY,EAAE,SAASC,gCAAT,CAA0CC,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACpQ,mEAAkB,OAAlB,EAA2B,SAASE,4CAAT,GAAwD;AAAE,mBAAOD,GAAG,CAACE,iBAAJ,EAAP;AAAiC,WAAtH;AACH;AAAE,OAF6C;AAE3CvG,YAAM,EAAE;AAAE+D,eAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAX;AAA8CE,eAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAvD;AAA0FuC,eAAO,EAAE,CAAC,qBAAD,EAAwB,SAAxB;AAAnG,OAFmC;AAEsGhJ,cAAQ,EAAE,CAAC,qBAAD;AAFhH,KAAzB,CAA3B;AAGA;;AACAkG,uBAAmB,CAAC5e,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAE;AAAR,OADuC,EAEvC;AAAEA,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAE;AAAR,OAHuC,EAIvC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAJuC,CAAN;AAAA,KAArC;;AAMAwe,uBAAmB,CAACvD,cAApB,GAAqC;AACjC4D,aAAO,EAAE,CAAC;AAAEhf,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,oBAAD;AAArB,OAAD,CADwB;AAEjC+e,aAAO,EAAE,CAAC;AAAElf,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,oBAAD;AAArB,OAAD,CAFwB;AAGjCshB,aAAO,EAAE,CAAC;AAAEzhB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,qBAAD;AAArB,OAAD,CAHwB;AAIjCqhB,uBAAiB,EAAE,CAAC;AAAExhB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD;AAA5B,OAAD;AAJc,KAArC;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyBwe,mBAAzB,EAA8C,CAAC;AACpE3e,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,+BADX;AAECsK,kBAAQ,EAAE,qBAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,uBADP;AAEF;AACA;AACA,oBAAQ;AAJN;AAHP,SAAD;AAF8D,OAAD,CAA9C,EAYrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAyD;AAAEA,cAAI,EAAE;AAAR,SAAzD,EAAkF;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC/HF,gBAAI,EAAE;AADyH,WAAD,EAE/H;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAF+H;AAA/B,SAAlF,CAAP;AAKF,OAjBS,EAiBP;AAAE6e,eAAO,EAAE,CAAC;AACtBhf,cAAI,EAAE,mDADgB;AAEtBG,cAAI,EAAE,CAAC,oBAAD;AAFgB,SAAD,CAAX;AAGV+e,eAAO,EAAE,CAAC;AACVlf,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,oBAAD;AAFI,SAAD,CAHC;AAMVshB,eAAO,EAAE,CAAC;AACVzhB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,qBAAD;AAFI,SAAD,CANC;AASVqhB,yBAAiB,EAAE,CAAC;AACpBxhB,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAAC,OAAD;AAFc,SAAD;AATT,OAjBO;AA6Bb,KA7BF;;AA8Bd,QAAI,KAAJ,EAAW,CA8EV;AAED;;;;;;;QAKMuhB,e;;;;AAENA,mBAAe,CAAClG,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAE0hB;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAACjG,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAASshB,uBAAT,CAAiC7hB,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI4hB,eAAV,GAAP;AAAsC,OAAvF;AAAyF9F,aAAO,EAAE,CAAC,CAAC,oEAAD,CAAD;AAAlG,KAAxB,CAAvB;;AACA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B6F,eAA1B,EAA2C;AAAE5F,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACuC,WAAD,EAC1IM,mBAD0I,CAAP;AAC5G,SAD8E;AAC5E/C,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,oEAAD,CAAP;AAA0B,SAD2B;AACzBG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACsC,WAAD,EAC1GM,mBAD0G,CAAP;AAC5E;AAF8E,OAA3C,CAAnD;AAEsB,KAFrC;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB+C,eAAzB,EAA0C,CAAC;AAChE1hB,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CAACuC,WAAD,EAAcM,mBAAd,CADf;AAEC/C,iBAAO,EAAE,CAAC,oEAAD,CAFV;AAGCG,iBAAO,EAAE,CAACsC,WAAD,EAAcM,mBAAd;AAHV,SAAD;AAF0D,OAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC9qBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;AAKA;;;;;;AAQA,QAAMiD,GAAG,GAAG,CAAC,YAAD,EAAe,EAAf,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,QAAMC,0BAA0B,GAAG,QAAnC;AACA;;;;;;AAKA,QAAMC,sBAAsB,GAAG,CAC3B,YAD2B,EAE3B,iBAF2B,EAG3B,iBAH2B,EAI3B,mBAJ2B,EAK3B,oBAL2B,EAM3B,cAN2B,EAO3B,SAP2B,CAA/B,C,CASA;;AACA;;;;QAGMC,a;AACF;;;AAGA,2BAAY1D,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAM2D,mBAAmB,GAAG,0EAAW,6EAAc,kFAAmBD,aAAnB,CAAd,CAAX,CAA5B;AACA;;;;;QAGME,S;;;;;AACF;;;;;AAKA,yBAAYpL,UAAZ,EAAwBqL,aAAxB,EAAuCC,cAAvC,EAAuD;AAAA;;AAAA;;AACnD,qCAAMtL,UAAN;AACA,gBAAKqL,aAAL,GAAqBA,aAArB;AACA,gBAAKC,cAAL,GAAsBA,cAAtB;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,QAAKC,kBAAL,CAAwB,SAAxB,EAAmC,cAAnC,CAArB;AACA;;;;AAGA,gBAAKC,YAAL,GAAoB,QAAKD,kBAAL,CAAwB,iBAAxB,CAApB,CAXmD,CAYnD;AACA;;AAbmD,oDAchCP,sBAdgC;AAAA;;AAAA;AAcnD,iEAA2C;AAAA,gBAAhCS,IAAgC;;AACvC,gBAAI,QAAKF,kBAAL,CAAwBE,IAAxB,CAAJ,EAAmC;AAC7B;AAAkB,sBAAKC,eAAL,EAApB,CAA8C3nB,SAA9C,CAAwDC,GAAxD,CAA4DynB,IAA5D;AACH;AACJ,WAlBkD,CAmBnD;AACA;AACA;;AArBmD;AAAA;AAAA;AAAA;AAAA;;AAsBnD1L,kBAAU,CAAChE,aAAX,CAAyBhY,SAAzB,CAAmCC,GAAnC,CAAuC,iBAAvC;;AACA,gBAAKonB,aAAL,CAAmB1D,OAAnB,CAA2B,QAAKH,WAAhC,EAA6C,IAA7C;;AACA,YAAI,QAAK+D,aAAT,EAAwB;AACpB,kBAAKK,KAAL,GAAaZ,0BAAb;AACH;;AA1BkD;AA2BtD;AACD;;;;;;;sCAGc;AACV,eAAKK,aAAL,CAAmBhE,cAAnB,CAAkC,KAAKG,WAAvC;AACH;AACD;;;;;;;;;gCAMmC;AAAA,cAA7Bjd,MAA6B,uEAApB,SAAoB;AAAA,cAATshB,OAAS;;AAC/B,eAAKR,aAAL,CAAmBS,QAAnB,CAA4B,KAAKH,eAAL,EAA5B,EAAoDphB,MAApD,EAA4DshB,OAA5D;AACH;AACD;;;;;;0CAGkB;AACd,iBAAO,KAAKrE,WAAL,CAAiBxL,aAAxB;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,KAAK+P,aAAL,IAAsB,KAAKC,QAAlC;AACH;AACD;;;;;;;;6CAKkC;AAAA;;AAAA,6CAAZC,UAAY;AAAZA,sBAAY;AAAA;;AAC9B,iBAAOA,UAAU,CAAChlB,IAAX;AAAiB;;;;AAIxB,oBAAAilB,SAAS;AAAA,mBAAI,OAAI,CAACP,eAAL,GAAuBQ,YAAvB,CAAoCD,SAApC,CAAJ;AAAA,WAJF,CAAP;AAKH;;;;MAxEmBf,mB;;AA0ExBC,aAAS,CAACtiB,IAAV,GAAiB,SAASsjB,iBAAT,CAA2BpjB,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIoiB,SAAV,EAAqB,gEAAyB,wDAAzB,CAArB,EAAkE,gEAAyB,8DAAzB,CAAlE,EAAiH,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,KAA/N;;AACAA,aAAS,CAACiB,IAAV,GAAiB,gEAAyB;AAAEnjB,UAAI,EAAEkiB,SAAR;AAAmB1J,eAAS,EAAE,CAAC,CAAC,QAAD,EAAW,YAAX,EAAyB,EAAzB,CAAD,EAA+B,CAAC,QAAD,EAAW,mBAAX,EAAgC,EAAhC,CAA/B,EAAoE,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAApE,EAAuG,CAAC,QAAD,EAAW,SAAX,EAAsB,EAAtB,CAAvG,EAAkI,CAAC,QAAD,EAAW,cAAX,EAA2B,EAA3B,CAAlI,EAAkK,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAlK,EAAwM,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAAxM,CAA9B;AAA0Q4K,eAAS,EAAE,SAASC,eAAT,CAAyBhC,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvW,oEAAmB,gEAAnB,EAA8B,IAA9B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACiC,MAAJ,GAAaD,EAAE,CAACE,KAArE;AACH;AAAE,OALmC;AAKjCtC,eAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CALsB;AAKMuC,cAAQ,EAAE,CALhB;AAKmBtC,kBAAY,EAAE,SAASuC,sBAAT,CAAgCrC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1H,oEAAmB,UAAnB,EAA+BC,GAAG,CAACwB,QAAJ,IAAgB,IAA/C;;AACA,oEAAmB,yBAAnB,EAA8CxB,GAAG,CAACc,cAAJ,KAAuB,gBAArE;AACH;AAAE,OARmC;AAQjCnH,YAAM,EAAE;AAAE6H,gBAAQ,EAAE,UAAZ;AAAwBD,qBAAa,EAAE,eAAvC;AAAwDH,aAAK,EAAE;AAA/D,OARyB;AAQiDjK,cAAQ,EAAE,CAAC,WAAD,CAR3D;AAQ0E0C,cAAQ,EAAE,CAAC,wEAAD,CARpF;AAQyHwI,WAAK,EAAE/B,GARhI;AAQqIgC,wBAAkB,EAAE/B,GARzJ;AAQ8JgC,WAAK,EAAE,CARrK;AAQwKC,UAAI,EAAE,CAR9K;AAQiLC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CARzL;AAQmWC,cAAQ,EAAE,SAASC,kBAAT,CAA4B5C,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClc;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,qEAAoB,CAApB;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,oEAAmB,yBAAnB,EAA8CC,GAAG,CAACe,aAAJ,IAAqBf,GAAG,CAACiB,YAAvE;;AACA,mEAAkB,mBAAlB,EAAuCjB,GAAG,CAAC4C,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqF5C,GAAG,CAACiB,YAAzF,EAAuG,kBAAvG,EAA2HjB,GAAG,CAACmB,eAAJ,EAA3H;AACH;AAAE,OAnBmC;AAmBjC0B,gBAAU,EAAE,CAAC,gEAAD,CAnBqB;AAmBD5S,YAAM,EAAE,CAAC,21MAAD,CAnBP;AAmBs2M6S,mBAAa,EAAE,CAnBr3M;AAmBw3MC,qBAAe,EAAE;AAnBz4M,KAAzB,CAAjB;AAoBA;;AACAnC,aAAS,CAACniB,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAH6B,CAAN;AAAA,KAA3B;;AAKA+hB,aAAS,CAAC9G,cAAV,GAA2B;AACvBmI,YAAM,EAAE,CAAC;AAAEvjB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,gEAAD;AAAzB,OAAD;AADe,KAA3B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+hB,SAAzB,EAAoC,CAAC;AAC1DliB,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,kMADT;AAICsK,kBAAQ,EAAE,WAJX;AAKClB,cAAI,EAAE;AACF,+BAAmB,kBADjB;AAEF,+CAAmC,qCAFjC;AAGF,qBAAS;AAHP,WALP;AAUCyM,kBAAQ,EAAE,8XAVX;AAWC/I,gBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,CAXT;AAYCmJ,uBAAa,EAAE,gEAAkBG,IAZlC;AAaCF,yBAAe,EAAE,sEAAwBG,MAb1C;AAcCjT,gBAAM,EAAE,CAAC,21MAAD;AAdT,SAAD;AAFoD,OAAD,CAApC,EAkBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAA6D;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACvGF,gBAAI,EAAE;AADiG,WAAD,EAEvG;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAFuG;AAA5B,SAA7D,CAAP;AAKF,OAvBS,EAuBP;AAAEojB,cAAM,EAAE,CAAC;AACrBvjB,cAAI,EAAE,uDADe;AAErBG,cAAI,EAAE,CAAC,gEAAD;AAFe,SAAD;AAAV,OAvBO;AA0Bb,KA1BF;;AA2Bd,QAAI,KAAJ,EAAW,CA2BV;AACD;;;;;QAGMskB,S;;;;;AACF;;;;;AAKA,yBAAYC,YAAZ,EAA0B5N,UAA1B,EAAsC6N,aAAtC,EAAqD;AAAA;;AAAA,kCAC3C7N,UAD2C,EAC/B4N,YAD+B,EACjBC,aADiB;AAEpD;AACD;;;;;;;;4CAIoBniB,K,EAAO;AACvB;AACA,cAAI,KAAKsgB,QAAT,EAAmB;AACftgB,iBAAK,CAAC6X,cAAN;AACA7X,iBAAK,CAACoiB,wBAAN;AACH;AACJ;;;;MAnBmB1C,S;;AAqBxBuC,aAAS,CAAC7kB,IAAV,GAAiB,SAASilB,iBAAT,CAA2B/kB,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAI2kB,SAAV,EAAqB,gEAAyB,8DAAzB,CAArB,EAAoE,gEAAyB,wDAAzB,CAApE,EAAiH,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,KAA/N;;AACAA,aAAS,CAACtB,IAAV,GAAiB,gEAAyB;AAAEnjB,UAAI,EAAEykB,SAAR;AAAmBjM,eAAS,EAAE,CAAC,CAAC,GAAD,EAAM,YAAN,EAAoB,EAApB,CAAD,EAA0B,CAAC,GAAD,EAAM,mBAAN,EAA2B,EAA3B,CAA1B,EAA0D,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1D,EAAwF,CAAC,GAAD,EAAM,SAAN,EAAiB,EAAjB,CAAxF,EAA8G,CAAC,GAAD,EAAM,cAAN,EAAsB,EAAtB,CAA9G,EAAyI,CAAC,GAAD,EAAM,oBAAN,EAA4B,EAA5B,CAAzI,EAA0K,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1K,CAA9B;AAAuO0I,eAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAAlP;AAA8QuC,cAAQ,EAAE,CAAxR;AAA2RtC,kBAAY,EAAE,SAAS2D,sBAAT,CAAgCzD,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClY,mEAAkB,OAAlB,EAA2B,SAAS0D,kCAAT,CAA4CC,MAA5C,EAAoD;AAAE,mBAAO1D,GAAG,CAAC2D,mBAAJ,CAAwBD,MAAxB,CAAP;AAAyC,WAA1H;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,UAAnB,EAA+BC,GAAG,CAACwB,QAAJ,GAAe,IAAI,CAAnB,GAAuBxB,GAAG,CAAC4D,QAAJ,IAAgB,CAAtE,EAAyE,UAAzE,EAAqF5D,GAAG,CAACwB,QAAJ,IAAgB,IAArG,EAA2G,eAA3G,EAA4HxB,GAAG,CAACwB,QAAJ,CAAaqC,QAAb,EAA5H;;AACA,oEAAmB,yBAAnB,EAA8C7D,GAAG,CAACc,cAAJ,KAAuB,gBAArE;AACH;AAAE,OALmC;AAKjCnH,YAAM,EAAE;AAAE6H,gBAAQ,EAAE,UAAZ;AAAwBD,qBAAa,EAAE,eAAvC;AAAwDH,aAAK,EAAE,OAA/D;AAAwEwC,gBAAQ,EAAE;AAAlF,OALyB;AAKuEzM,cAAQ,EAAE,CAAC,WAAD,EAAc,WAAd,CALjF;AAK6G0C,cAAQ,EAAE,CAAC,wEAAD,CALvH;AAK4JwI,WAAK,EAAE/B,GALnK;AAKwKgC,wBAAkB,EAAE/B,GAL5L;AAKiMgC,WAAK,EAAE,CALxM;AAK2MC,UAAI,EAAE,CALjN;AAKoNC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CAL5N;AAKsYC,cAAQ,EAAE,SAASoB,kBAAT,CAA4B/D,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACre;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,qEAAoB,CAApB;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,oEAAmB,yBAAnB,EAA8CC,GAAG,CAACe,aAAJ,IAAqBf,GAAG,CAACiB,YAAvE;;AACA,mEAAkB,mBAAlB,EAAuCjB,GAAG,CAAC4C,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqF5C,GAAG,CAACiB,YAAzF,EAAuG,kBAAvG,EAA2HjB,GAAG,CAACmB,eAAJ,EAA3H;AACH;AAAE,OAhBmC;AAgBjC0B,gBAAU,EAAE,CAAC,gEAAD,CAhBqB;AAgBD5S,YAAM,EAAE,CAAC,21MAAD,CAhBP;AAgBs2M6S,mBAAa,EAAE,CAhBr3M;AAgBw3MC,qBAAe,EAAE;AAhBz4M,KAAzB,CAAjB;AAiBA;;AACAI,aAAS,CAAC1kB,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAH6B,CAAN;AAAA,KAA3B;;AAKAskB,aAAS,CAACrJ,cAAV,GAA2B;AACvB8J,cAAQ,EAAE,CAAC;AAAEllB,YAAI,EAAE;AAAR,OAAD;AADa,KAA3B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBykB,SAAzB,EAAoC,CAAC;AAC1DzkB,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,iJADT;AAGCsK,kBAAQ,EAAE,sBAHX;AAIClB,cAAI,EAAE;AACF;AACA;AACA;AACA,+BAAmB,iCAJjB;AAKF,+BAAmB,kBALjB;AAMF,oCAAwB,qBANtB;AAOF,uBAAW,6BAPT;AAQF,+CAAmC,qCARjC;AASF,qBAAS;AATP,WAJP;AAeC0D,gBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,CAfT;AAgBC+I,kBAAQ,EAAE,8XAhBX;AAiBCI,uBAAa,EAAE,gEAAkBG,IAjBlC;AAkBCF,yBAAe,EAAE,sEAAwBG,MAlB1C;AAmBCjT,gBAAM,EAAE,CAAC,21MAAD;AAnBT,SAAD;AAFoD,OAAD,CAApC,EAuBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAAgC;AAAEA,cAAI,EAAE;AAAR,SAAhC,EAA6D;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACvGF,gBAAI,EAAE;AADiG,WAAD,EAEvG;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAFuG;AAA5B,SAA7D,CAAP;AAKF,OA5BS,EA4BP;AAAE+kB,gBAAQ,EAAE,CAAC;AACvBllB,cAAI,EAAE;AADiB,SAAD;AAAZ,OA5BO;AA8Bb,KA9BF;;AA+Bd,QAAI,KAAJ,EAAW,CAMV;AAED;;;;;;;QAKMqlB,e;;;;AAENA,mBAAe,CAAC7J,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEqlB;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAAC5J,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAASilB,uBAAT,CAAiCxlB,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIulB,eAAV,GAAP;AAAsC,OAAvF;AAAyFzJ,aAAO,EAAE,CAAC,CACtI,sEADsI,EAEtI,sEAFsI,CAAD,EAIzI,sEAJyI;AAAlG,KAAxB,CAAvB;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BwJ,eAA1B,EAA2C;AAAEvJ,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACoG,SAAD,EAC1IuC,SAD0I,CAAP;AACtH,SADwF;AACtF7I,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EAC7C,sEAD6C,CAAP;AACnB,SAFkF;AAEhFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACmG,SAAD,EACnDuC,SADmD,EAEnD,sEAFmD,CAAP;AAEzB;AAJkF,OAA3C,CAAnD;AAIkB,KAJjC;AAKA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBY,eAAzB,EAA0C,CAAC;AAChErlB,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,sEADK,EAEL,sEAFK,CADV;AAKCG,iBAAO,EAAE,CACLmG,SADK,EAELuC,SAFK,EAGL,sEAHK,CALV;AAUC3I,sBAAY,EAAE,CACVoG,SADU,EAEVuC,SAFU;AAVf,SAAD;AAF0D,OAAD,CAA1C,EAiBrB,IAjBqB,EAiBf,IAjBe;AAiBP,KAjBR;AAmBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AClWA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;AAKA;;;;;;AASA,QAAM7C,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,QAAMC,GAAG,GAAG,SAANA,GAAM,GAAY;AAAE,aAAO;AAAE0D,qBAAa,EAAE;AAAjB,OAAP;AAAgC,KAA1D;;AACA,QAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASC,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,QAAMC,4BAA4B,GAAG,IAAI,4DAAJ,CAAmB,8BAAnB,EAAmD;AACpFnlB,gBAAU,EAAE,MADwE;AAEpFF,aAAO,EAAEslB;AAF2E,KAAnD,CAArC;AAIA;;;;;AAIA,aAASA,oCAAT,GAAgD;AAC5C,aAAO;AACHjD,aAAK,EAAE,QADJ;AAEHkD,mBAAW,EAAE;AAFV,OAAP;AAIH;AACD;;;;;;;;AAMA,QAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;;;;;AAKA;;AACA;;AACA,QAAI7O,YAAY,GAAG,CAAnB;AACA;;;;;;;AAMA,QAAM8O,mCAAmC,GAAG;AACxCpiB,aAAO,EAAE,gEAD+B;AAExCqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMC,WAAN;AAAA,OAHa,CAF2B;AAMxCC,WAAK,EAAE;AANiC,KAA5C;AAQA;;AACA,QAAMC,oBAAoB,GAAG;AACzB;AACAC,UAAI,EAAE,CAFmB;;AAGzB;AACAC,aAAO,EAAE,CAJgB;;AAKzB;AACAC,eAAS,EAAE,CANc;;AAOzB;AACAC,mBAAa,EAAE;AARU,KAA7B;AAUA;;;;QAGMC,iB;;;;AAEN,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGMC,e;AACF;;;AAGA,6BAAYlI,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAMmI,qBAAqB,GAAG,6EAAc,0EAAW,kFAAmB,6EAAcD,eAAd,CAAnB,CAAX,CAAd,CAA9B;AACA;;;;;;;;;;QAQMR,W;;;;;AACF;;;;;;;;;;AAUA,2BAAYlP,UAAZ,EAAwB4P,kBAAxB,EAA4CvE,aAA5C,EAA2D5lB,OAA3D,EAAoE2oB,QAApE,EAA8EyB,YAA9E,EAA4FvE,cAA5F,EAA4GwE,QAA5G,EAAsH;AAAA;;AAAA;;AAClH,qCAAM9P,UAAN;AACA,gBAAK4P,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKvE,aAAL,GAAqBA,aAArB;AACA,gBAAK5lB,OAAL,GAAeA,OAAf;AACA,gBAAKoqB,YAAL,GAAoBA,YAApB;AACA,gBAAKvE,cAAL,GAAsBA,cAAtB;AACA,gBAAKwE,QAAL,GAAgBA,QAAhB;AACA;;;;;AAIA,gBAAKC,SAAL,GAAiB,EAAjB;AACA;;;;AAGA,gBAAKC,cAAL,GAAsB,IAAtB;AACA,gBAAKC,SAAL,0BAAiC,EAAE/P,YAAnC;AACA;;;;AAGA,gBAAKc,EAAL,GAAU,QAAKiP,SAAf;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,OAArB;AACA;;;;AAGA,gBAAKC,IAAL,GAAY,IAAZ;AACA;;;;AAGA,gBAAK7b,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,gBAAK8b,mBAAL,GAA2B,IAAI,0DAAJ,EAA3B;AACA;;;;;AAIA,gBAAKC,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;;AAIA,gBAAKC,sBAAL,GAA8B,EAA9B;AACA,gBAAKC,kBAAL,GAA0B;AAAE;AAA5B;;AACA,gBAAKC,6BAAL;AAAsC;;;AAGtC,oBAAM,CAAG,CAHT;;AAIA,gBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,cAAL,GAAsB,KAAtB;AACA,gBAAKb,QAAL,GAAgB,QAAKA,QAAL,IAAiB,EAAjC;;AACA,YAAI,QAAKA,QAAL,CAAclE,KAAlB,EAAyB;AACrB,kBAAKA,KAAL,GAAa,QAAKkE,QAAL,CAAclE,KAA3B;AACH;;AACD,gBAAKwC,QAAL,GAAgBwC,QAAQ,CAACxC,QAAD,CAAR,IAAsB,CAAtC;;AACA,gBAAK/C,aAAL,CAAmB1D,OAAnB,CAA2B3H,UAA3B,EAAuC,IAAvC,EAA6CzZ,SAA7C;AAAwD;;;;AAIxD,kBAAAsqB,WAAW,EAAI;AACX,cAAI,CAACA,WAAL,EAAkB;AACd;AACA;AACA;AACA;AACA;AACAC,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF,sBAAKX,UAAL;;AACAT,gCAAkB,CAACqB,YAAnB;AACH,aAND;AAOH;AACJ,SAnBD,EA5DkH,CAgFlH;;;AACA,gBAAKpB,YAAL,GAAoB,QAAKA,YAAL,IAAqB,QAAKC,QAAL,CAAchB,WAAvD;AAjFkH;AAkFrH;AACD;;;;;;;;;AAeA;;;0CAGkB;AACd,eAAKoC,kBAAL,CAAwB,KAAKP,cAA7B;AACH,S,CACD;;AACA;;;;;;6CAGqB,CAAG;AACxB;;;;;;sCAGc;AACV,eAAKtF,aAAL,CAAmBhE,cAAnB,CAAkC,KAAKG,WAAvC;AACH;AACD;;;;;;;;AA4DA;;;4CAGoB;AAChB,iBAAO,KAAKuE,aAAL,IAAsB,KAAKC,QAAlC;AACH;AACD;;;;;;;6CAIqB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAK4D,kBAAL,CAAwBuB,aAAxB;AACH,S,CACD;;AACA;;;;;;;mCAIW9lB,K,EAAO;AACd,eAAK+lB,OAAL,GAAe,CAAC,CAAC/lB,KAAjB;AACH,S,CACD;;AACA;;;;;;;yCAIiBqa,E,EAAI;AACjB,eAAK8K,6BAAL,GAAqC9K,EAArC;AACH,S,CACD;;AACA;;;;;;;0CAIkBA,E,EAAI;AAClB,eAAK2K,UAAL,GAAkB3K,EAAlB;AACH,S,CACD;;AACA;;;;;;;yCAIiB2L,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;AACH;AACD;;;;;;0CAGkB;AACd,cAAI,KAAKD,OAAT,EAAkB;AACd,mBAAO,MAAP;AACH;;AACD,iBAAO,KAAKE,aAAL,GAAqB,OAArB,GAA+B,OAAtC;AACH;AACD;;;;;;;;8CAKsBC,Q,EAAU;AAC5B;AACA,cAAIC,QAAQ,GAAG,KAAKjB,kBAApB;AACA;;AACA,cAAIxpB,OAAO,GAAG,KAAKygB,WAAL,CAAiBxL,aAA/B;;AACA,cAAIwV,QAAQ,KAAKD,QAAjB,EAA2B;AACvB;AACH;;AACD,cAAI,KAAKjB,sBAAL,CAA4BzkB,MAA5B,GAAqC,CAAzC,EAA4C;AACxC9E,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,KAAK6rB,sBAA9B;AACH;;AACD,eAAKA,sBAAL,GAA8B,KAAKmB,yCAAL,CAA+CD,QAA/C,EAAyDD,QAAzD,CAA9B;AACA,eAAKhB,kBAAL,GAA0BgB,QAA1B;;AACA,cAAI,KAAKjB,sBAAL,CAA4BzkB,MAA5B,GAAqC,CAAzC,EAA4C;AACxC9E,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsB,KAAKqsB,sBAA3B,EADwC,CAExC;;AACA;;AACA,gBAAMoB,cAAc,GAAG,KAAKpB,sBAA5B;;AACA,iBAAK7qB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACFM,wBAAU;AAAE;;;AAGZ,0BAAM;AACFrL,uBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyBitB,cAAzB;AACH,eALS,EAKN,IALM,CAAV;AAMH,aAVD;AAWH;AACJ;AACD;;;;;;;2CAImB;AACf;AACA,cAAMhmB,KAAK,GAAG,IAAI+jB,iBAAJ,EAAd;AACA/jB,eAAK,CAACyR,MAAN,GAAe,IAAf;AACAzR,eAAK,CAAC0lB,OAAN,GAAgB,KAAKA,OAArB;;AACA,eAAKZ,6BAAL,CAAmC,KAAKY,OAAxC;;AACA,eAAK9c,MAAL,CAAY0P,IAAZ,CAAiBtY,KAAjB;AACH;AACD;;;;;;;iCAIS;AACL,eAAK0lB,OAAL,GAAe,CAAC,KAAKA,OAArB;AACH;AACD;;;;;;;;;;;sCAQc1lB,K,EAAO;AAAA;;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,eAAK,CAACimB,eAAN,GARiB,CASjB;;AACA,cAAI,CAAC,KAAK3F,QAAN,IAAkB,KAAK6D,YAAL,KAAsB,MAA5C,EAAoD;AAChD;AACA,gBAAI,KAAKyB,aAAL,IAAsB,KAAKzB,YAAL,KAAsB,OAAhD,EAAyD;AACrDiB,qBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,0BAAM;AACF,uBAAI,CAACL,cAAL,GAAsB,KAAtB;;AACA,uBAAI,CAACP,mBAAL,CAAyBpM,IAAzB,CAA8B,OAAI,CAAC2M,cAAnC;AACH,eAND;AAOH;;AACD,iBAAKiB,MAAL;;AACA,iBAAKC,qBAAL,CAA2B,KAAKpB,QAAL,GAAgB;AAAE;AAAlB,cAAkC;AAAE;AAA/D,cAZgD,CAahD;AACA;AACA;;;AACA,iBAAKqB,gBAAL;AACH,WAjBD,MAkBK,IAAI,CAAC,KAAK9F,QAAN,IAAkB,KAAK6D,YAAL,KAAsB,MAA5C,EAAoD;AACrD;AACA;AACA,iBAAKkC,aAAL,CAAmB/V,aAAnB,CAAiCoV,OAAjC,GAA2C,KAAKA,OAAhD;AACA,iBAAKW,aAAL,CAAmB/V,aAAnB,CAAiCsV,aAAjC,GAAiD,KAAKA,aAAtD;AACH;AACJ;AACD;;;;;;;;;gCAMoC;AAAA,cAA9B/mB,MAA8B,uEAArB,UAAqB;AAAA,cAATshB,OAAS;;AAChC,eAAKR,aAAL,CAAmBS,QAAnB,CAA4B,KAAKiG,aAAjC,EAAgDxnB,MAAhD,EAAwDshB,OAAxD;AACH;AACD;;;;;;;4CAIoBngB,K,EAAO;AACvB;AACA;AACA;AACAA,eAAK,CAACimB,eAAN;AACH;AACD;;;;;;;;;kEAM0CH,Q,EAAUD,Q,EAAU;AAC1D;AACA,cAAI,KAAKjG,cAAL,KAAwB,gBAA5B,EAA8C;AAC1C,mBAAO,EAAP;AACH;AACD;;;AACA,cAAI0G,UAAU,GAAG,EAAjB;;AACA,kBAAQR,QAAR;AACI,iBAAK;AAAE;AAAP;AACI;AACA;AACA,kBAAID,QAAQ,KAAK;AAAE;AAAnB,gBAAkC;AAC9BS,4BAAU,GAAG,mBAAb;AACH,iBAFD,MAGK,IAAIT,QAAQ,IAAI;AAAE;AAAlB,gBAAuC;AACxCS,4BAAU,GAAG,yBAAb;AACH,iBAFI,MAGA;AACD,uBAAO,EAAP;AACH;;AACD;;AACJ,iBAAK;AAAE;AAAP;AACIA,wBAAU,GAAGT,QAAQ,KAAK;AAAE;AAAf,gBACT,mBADS,GACa,yBAD1B;AAEA;;AACJ,iBAAK;AAAE;AAAP;AACIS,wBAAU,GAAGT,QAAQ,KAAK;AAAE;AAAf,gBACT,mBADS,GACa,uBAD1B;AAEA;;AACJ,iBAAK;AAAE;AAAP;AACIS,wBAAU,GAAGT,QAAQ,KAAK;AAAE;AAAf,gBACT,uBADS,GACiB,yBAD9B;AAEA;AAzBR;;AA2BA,6CAA4BS,UAA5B;AACH;AACD;;;;;;;;;;;;;;2CAWmB3mB,K,EAAO;AACtB;AACA,cAAM4mB,cAAc,GAAG,KAAKF,aAA5B;;AACA,cAAIE,cAAJ,EAAoB;AAChBA,0BAAc,CAACjW,aAAf,CAA6BsV,aAA7B,GAA6CjmB,KAA7C;AACH;AACJ;;;4BAnUa;AAAE,2BAAU,KAAK2V,EAAL,IAAW,KAAKiP,SAA1B;AAA8C;AAC9D;;;;;;;4BAIe;AAAE,iBAAO,KAAKiC,SAAZ;AAAwB;AACzC;;;;;0BAIa7mB,K,EAAO;AAAE,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;AAAgD;;;4BAsBxD;AAAE,iBAAO,KAAKolB,QAAZ;AAAuB;AACvC;;;;;0BAIYplB,K,EAAO;AACf,cAAIA,KAAK,IAAI,KAAK+lB,OAAlB,EAA2B;AACvB,iBAAKX,QAAL,GAAgBplB,KAAhB;;AACA,iBAAKukB,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;AACD;;;;;;;;4BAKe;AAAE,iBAAO,KAAKP,SAAZ;AAAwB;AACzC;;;;;0BAIarlB,K,EAAO;AAChB;AACA,cAAM8mB,QAAQ,GAAG,oFAAsB9mB,KAAtB,CAAjB;;AACA,cAAI8mB,QAAQ,KAAK,KAAKnG,QAAtB,EAAgC;AAC5B,iBAAK0E,SAAL,GAAiByB,QAAjB;;AACA,iBAAKvC,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;AACD;;;;;;;;;;4BAOoB;AAAE,iBAAO,KAAKN,cAAZ;AAA6B;AACnD;;;;;0BAIkBtlB,K,EAAO;AACrB;AACA,cAAM+mB,OAAO,GAAG/mB,KAAK,IAAI,KAAKslB,cAA9B;AACA,eAAKA,cAAL,GAAsB,oFAAsBtlB,KAAtB,CAAtB;;AACA,cAAI+mB,OAAJ,EAAa;AACT,gBAAI,KAAKzB,cAAT,EAAyB;AACrB,mBAAKkB,qBAAL,CAA2B;AAAE;AAA7B;AACH,aAFD,MAGK;AACD,mBAAKA,qBAAL,CAA2B,KAAKT,OAAL,GAAe;AAAE;AAAjB,gBAAiC;AAAE;AAA9D;AACH;;AACD,iBAAKhB,mBAAL,CAAyBpM,IAAzB,CAA8B,KAAK2M,cAAnC;AACH;;AACD,eAAKO,kBAAL,CAAwB,KAAKP,cAA7B;AACH;;;;MAzLqBhB,qB;;AAua1BT,eAAW,CAACpmB,IAAZ,GAAmB,SAASupB,mBAAT,CAA6BrpB,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIkmB,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,8DAAzB,CAAxH,EAAuK,gEAAyB,oDAAzB,CAAvK,EAAgN,gEAAyB,UAAzB,CAAhN,EAAsP,gEAAyBH,yBAAzB,EAAoD,CAApD,CAAtP,EAA8S,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA9S,EAAkW,gEAAyBH,4BAAzB,EAAuD,CAAvD,CAAlW,CAAP;AAAsa,KAA3d;;AACAM,eAAW,CAAC7C,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAEgmB,WAAR;AAAqBxN,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoD4K,eAAS,EAAE,SAASgG,iBAAT,CAA2B/H,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,oEAAmBO,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB,gEAAnB,EAA8B,IAA9B;AACH;;AAAC,YAAIP,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACuH,aAAJ,GAAoBvF,EAAE,CAACE,KAA5E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACiC,MAAJ,GAAaD,EAAE,CAACE,KAArE;AACH;AAAE,OAPqC;AAOnCtC,eAAS,EAAE,CAAC,CAAD,EAAI,cAAJ,CAPwB;AAOHuC,cAAQ,EAAE,EAPP;AAOWtC,kBAAY,EAAE,SAASkI,wBAAT,CAAkChI,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtH,uEAAsB,IAAtB,EAA4BC,GAAG,CAACxJ,EAAhC;;AACA,oEAAmB,UAAnB,EAA+B,IAA/B;;AACA,oEAAmB,4BAAnB,EAAiDwJ,GAAG,CAAC8G,aAArD,EAAoE,sBAApE,EAA4F9G,GAAG,CAAC4G,OAAhG,EAAyG,uBAAzG,EAAkI5G,GAAG,CAACwB,QAAtI,EAAgJ,2BAAhJ,EAA6KxB,GAAG,CAAC0F,aAAJ,IAAqB,QAAlM,EAA4M,yBAA5M,EAAuO1F,GAAG,CAACc,cAAJ,KAAuB,gBAA9P;AACH;AAAE,OAXqC;AAWnCnH,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCH,aAAK,EAAE,OAAzC;AAAkDwC,gBAAQ,EAAE,UAA5D;AAAwE2B,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAnF;AAAgHC,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAhI;AAAuKhP,UAAE,EAAE,IAA3K;AAAiLkP,qBAAa,EAAE,eAAhM;AAAiNC,YAAI,EAAE,MAAvN;AAA+NqC,gBAAQ,EAAE,UAAzO;AAAqPpB,eAAO,EAAE,SAA9P;AAAyQpF,gBAAQ,EAAE,UAAnR;AAA+RsF,qBAAa,EAAE,eAA9S;AAA+TjmB,aAAK,EAAE;AAAtU,OAX2B;AAWsT+Y,aAAO,EAAE;AAAE9P,cAAM,EAAE,QAAV;AAAoB8b,2BAAmB,EAAE;AAAzC,OAX/T;AAWiYzO,cAAQ,EAAE,CAAC,aAAD,CAX3Y;AAW4Z0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC2K,mCAAD,CAA1B,CAAD,EAAmE,wEAAnE,CAXta;AAW6gBlC,wBAAkB,EAAE4B,GAXjiB;AAWsiB3B,WAAK,EAAE,EAX7iB;AAWijBC,UAAI,EAAE,EAXvjB;AAW2jBC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,qBAAJ,CAAD,EAA6B,CAAC,OAAD,EAAU,EAAV,CAA7B,EAA4C,CAAC,CAAD,EAAI,8BAAJ,CAA5C,EAAiF,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,oBAAxB,EAA8C,qBAA9C,EAAqE,CAArE,EAAwE,IAAxE,EAA8E,UAA9E,EAA0F,SAA1F,EAAqG,UAArG,EAAiH,UAAjH,EAA6H,QAA7H,EAAuI,OAAvI,CAAjF,EAAkO,CAAC,OAAD,EAAU,EAAV,CAAlO,EAAiP,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,qBAArB,EAA4C,qBAA5C,EAAmE,CAAnE,EAAsE,kBAAtE,EAA0F,mBAA1F,EAA+G,iBAA/G,EAAkI,mBAAlI,EAAuJ,oBAAvJ,CAAjP,EAA+Z,CAAC,CAAD,EAAI,oBAAJ,EAA0B,gCAA1B,CAA/Z,EAA4d,CAAC,CAAD,EAAI,oBAAJ,CAA5d,EAAuf,CAAC,CAAD,EAAI,yBAAJ,CAAvf,EAAuhB,CAAC,SAAD,EAAY,KAAZ,EAAmB,WAAnB,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,WAApD,EAAiE,CAAjE,EAAoE,KAApE,EAA2E,OAA3E,EAAoF,UAApF,EAAgG,CAAhG,EAAmG,wBAAnG,CAAvhB,EAAqpB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,GAApC,EAAyC,2BAAzC,EAAsE,CAAtE,EAAyE,6BAAzE,CAArpB,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,oBAAJ,EAA0B,CAA1B,EAA6B,mBAA7B,CAA7xB,EAAg1B,CAAC,eAAD,EAAkB,EAAlB,CAAh1B,EAAu2B,CAAC,CAAD,EAAI,SAAJ,EAAe,MAAf,CAAv2B,CAXnkB;AAWm8CC,cAAQ,EAAE,SAASuF,oBAAT,CAA8BlI,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtiD;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,mEAAkB,QAAlB,EAA4B,SAASmI,4CAAT,CAAsDxE,MAAtD,EAA8D;AAAE,mBAAO1D,GAAG,CAACmI,mBAAJ,CAAwBzE,MAAxB,CAAP;AAAyC,WAArI,EAAuI,OAAvI,EAAgJ,SAAS0E,2CAAT,CAAqD1E,MAArD,EAA6D;AAAE,mBAAO1D,GAAG,CAACqI,aAAJ,CAAkB3E,MAAlB,CAAP;AAAmC,WAAlP;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,EAAjB,EAAqB,MAArB,EAA6B,EAA7B;;AACA;;AACA;;AACA,kEAAiB,EAAjB,EAAqB,KAArB,EAA4B,EAA5B;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,mEAAkB,mBAAlB,EAAuC,SAAS4E,uDAAT,GAAmE;AAAE,mBAAOtI,GAAG,CAACuI,kBAAJ,EAAP;AAAkC,WAA9I;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC;;AACA,+DAAc,EAAd,EAAkB,MAAlB;;AACA;;AACA,qEAAoB,EAApB;;AACA;;AACA;AACH;;AAAC,YAAIxI,EAAE,GAAG,CAAT,EAAY;AACV,cAAMyI,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,cAAMC,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AACA,oEAAmB,KAAnB,EAA0BzI,GAAG,CAAC0I,OAA9B;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,6CAAnB,EAAkE,CAACD,GAAG,CAACE,WAAL,IAAoB,CAACF,GAAG,CAACE,WAAJ,CAAgBlY,IAAhB,EAAvF;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,IAAlB,EAAwBuP,GAAG,CAAC0I,OAA5B,EAAqC,UAArC,EAAiD1I,GAAG,CAACgI,QAArD,EAA+D,SAA/D,EAA0EhI,GAAG,CAAC4G,OAA9E,EAAuF,UAAvF,EAAmG5G,GAAG,CAACwB,QAAvG,EAAiH,UAAjH,EAA6HxB,GAAG,CAAC4D,QAAjI;;AACA,oEAAmB,OAAnB,EAA4B5D,GAAG,CAACnf,KAAhC,EAAuC,MAAvC,EAA+Cmf,GAAG,CAAC2F,IAAnD,EAAyD,YAAzD,EAAuE3F,GAAG,CAACuF,SAAJ,IAAiB,IAAxF,EAA8F,iBAA9F,EAAiHvF,GAAG,CAACwF,cAArH,EAAqI,cAArI,EAAqJxF,GAAG,CAAC4I,eAAJ,EAArJ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCJ,GAAtC,EAA2C,mBAA3C,EAAgExI,GAAG,CAAC4C,iBAAJ,EAAhE,EAAyF,iBAAzF,EAA4G,EAA5G,EAAgH,mBAAhH,EAAqI,IAArI,EAA2I,oBAA3I,EAAiK,8DAAuB,EAAvB,EAA2BrC,GAA3B,CAAjK;AACH;AAAE,OAlDqC;AAkDnCsC,gBAAU,EAAE,CAAC,gEAAD,EAAmB,wEAAnB,CAlDuB;AAkDuB5S,YAAM,EAAE,CAAC,ozNAAD,CAlD/B;AAkDu1N6S,mBAAa,EAAE,CAlDt2N;AAkDy2NC,qBAAe,EAAE;AAlD13N,KAAzB,CAAnB;AAmDA;;AACA2B,eAAW,CAACjmB,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAE;AAAR,OAH+B,EAI/B;AAAEA,YAAI,EAAE;AAAR,OAJ+B,EAK/B;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAL+B,EAM/B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC0lB,yBAAD;AAAtB,SAArB;AAA/B,OAN+B,EAO/B;AAAE7lB,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAP+B,EAQ/B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACulB,4BAAD;AAAtB,SAArB;AAA/B,OAR+B,CAAN;AAAA,KAA7B;;AAUAM,eAAW,CAAC5K,cAAZ,GAA6B;AACzByL,eAAS,EAAE,CAAC;AAAE7mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CADc;AAEzB2mB,oBAAc,EAAE,CAAC;AAAE9mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAFS;AAGzB2X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAHqB;AAIzBspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CAJe;AAKzBgnB,mBAAa,EAAE,CAAC;AAAEhnB,YAAI,EAAE;AAAR,OAAD,CALU;AAMzBinB,UAAI,EAAE,CAAC;AAAEjnB,YAAI,EAAE;AAAR,OAAD,CANmB;AAOzBoL,YAAM,EAAE,CAAC;AAAEpL,YAAI,EAAE;AAAR,OAAD,CAPiB;AAQzBknB,yBAAmB,EAAE,CAAC;AAAElnB,YAAI,EAAE;AAAR,OAAD,CARI;AASzBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CATkB;AAUzB6oB,mBAAa,EAAE,CAAC;AAAE7oB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CAVU;AAWzBojB,YAAM,EAAE,CAAC;AAAEvjB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,gEAAD;AAAzB,OAAD,CAXiB;AAYzB+nB,aAAO,EAAE,CAAC;AAAEloB,YAAI,EAAE;AAAR,OAAD,CAZgB;AAazB8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CAbe;AAczBooB,mBAAa,EAAE,CAAC;AAAEpoB,YAAI,EAAE;AAAR,OAAD;AAdU,KAA7B;AAgBA;;AAAc,KAAC,YAAY;AAAE,sEAAyBgmB,WAAzB,EAAsC,CAAC;AAC5DhmB,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAEC6V,kBAAQ,EAAE,giEAFX;AAGCvL,kBAAQ,EAAE,aAHX;AAIClB,cAAI,EAAE;AACF,qBAAS,cADP;AAEF,oBAAQ,IAFN;AAGF,+BAAmB,MAHjB;AAIF,kDAAsC,eAJpC;AAKF,4CAAgC,SAL9B;AAMF,6CAAiC,UAN/B;AAOF,iDAAqC,2BAPnC;AAQF;AARE,WAJP;AAcCoE,mBAAS,EAAE,CAACmK,mCAAD,CAdZ;AAeC7K,gBAAM,EAAE,CAAC,eAAD,EAAkB,OAAlB,EAA2B,UAA3B,CAfT;AAgBCmJ,uBAAa,EAAE,gEAAkBG,IAhBlC;AAiBCF,yBAAe,EAAE,sEAAwBG,MAjB1C;AAkBCjT,gBAAM,EAAE,CAAC,ozNAAD;AAlBT,SAAD;AAFsD,OAAD,CAAtC,EAsBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE;AAAR,SAAlE,EAAiG;AAAEA,cAAI,EAAE;AAAR,SAAjG,EAA0H;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACpKF,gBAAI,EAAE,uDAD8J;AAEpKG,gBAAI,EAAE,CAAC,UAAD;AAF8J,WAAD;AAA5B,SAA1H,EAGX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC0lB,yBAAD;AAFP,WAFkC;AAA/B,SAHW,EAQX;AAAE7lB,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AAC/BF,gBAAI,EAAE;AADyB,WAAD,EAE/B;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF+B;AAA5B,SARW,EAaX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACulB,4BAAD;AAFP,WAFkC;AAA/B,SAbW,CAAP;AAkBF,OAxCS,EAwCP;AAAEmB,iBAAS,EAAE,CAAC;AACxB7mB,cAAI,EAAE,mDADkB;AAExBG,cAAI,EAAE,CAAC,YAAD;AAFkB,SAAD,CAAb;AAGV2mB,sBAAc,EAAE,CAAC;AACjB9mB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAHN;AAMV2X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD,CANM;AAQVgnB,qBAAa,EAAE,CAAC;AAChBhnB,cAAI,EAAE;AADU,SAAD,CARL;AAUVinB,YAAI,EAAE,CAAC;AACPjnB,cAAI,EAAE;AADC,SAAD,CAVI;AAYVoL,cAAM,EAAE,CAAC;AACTpL,cAAI,EAAE;AADG,SAAD,CAZE;AAcVknB,2BAAmB,EAAE,CAAC;AACtBlnB,cAAI,EAAE;AADgB,SAAD,CAdX;AAgBVspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAhBA;AAkBVkoB,eAAO,EAAE,CAAC;AACVloB,cAAI,EAAE;AADI,SAAD,CAlBC;AAoBV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CApBA;AAsBVooB,qBAAa,EAAE,CAAC;AAChBpoB,cAAI,EAAE;AADU,SAAD,CAtBL;AAwBVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAxBG;AA0BV6oB,qBAAa,EAAE,CAAC;AAChB7oB,cAAI,EAAE,uDADU;AAEhBG,cAAI,EAAE,CAAC,OAAD;AAFU,SAAD,CA1BL;AA6BVojB,cAAM,EAAE,CAAC;AACTvjB,cAAI,EAAE,uDADG;AAETG,cAAI,EAAE,CAAC,gEAAD;AAFG,SAAD;AA7BE,OAxCO;AAwEb,KAxEF;;AAyEd,QAAI,KAAJ,EAAW,CAwIV;AAED;;;;;;AAKA;;;AACA,QAAMgqB,+BAA+B,GAAG;AACpCzmB,aAAO,EAAE,4DAD2B;AAEpCqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMqE,4BAAN;AAAA,OAHa,CAFuB;AAMpCnE,WAAK,EAAE;AAN6B,KAAxC;AAQA;;;;;;QAKMmE,4B;;;;;;;;;;;;MAAqC,wE;;AAE3CA,gCAA4B,CAACxqB,IAA7B,GAAoC,SAASyqB,oCAAT,CAA8CvqB,CAA9C,EAAiD;AAAE,aAAOwqB,yCAAyC,CAACxqB,CAAC,IAAIsqB,4BAAN,CAAhD;AAAsF,KAA7K;;AACAA,gCAA4B,CAAC7R,IAA7B,GAAoC,gEAAyB;AAAEvY,UAAI,EAAEoqB,4BAAR;AAAsC5R,eAAS,EAAE,CAAC,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,iBAAjC,EAAoD,EAApD,CAAD,EAA0D,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,aAAjC,EAAgD,EAAhD,CAA1D,EAA+G,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,SAAjC,EAA4C,EAA5C,CAA/G,CAAjD;AAAkN2C,cAAQ,EAAE,CAAC,iEAA0B,CAACgP,+BAAD,CAA1B,CAAD,EAA+D,wEAA/D;AAA5N,KAAzB,CAApC;;AACA,QAAMG,yCAAyC,GAAG,oEAA6BF,4BAA7B,CAAlD;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,4BAAzB,EAAuD,CAAC;AAC7EpqB,YAAI,EAAE,uDADuE;AAE7EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,+HADT;AAGCwN,mBAAS,EAAE,CAACwO,+BAAD;AAHZ,SAAD;AAFuE,OAAD,CAAvD,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAKA;;;AAGA;;;QACMI,mC;;;;AAENA,uCAAmC,CAAC/O,IAApC,GAA2C,+DAAwB;AAAExb,UAAI,EAAEuqB;AAAR,KAAxB,CAA3C;AACAA,uCAAmC,CAAC9O,IAApC,GAA2C,+DAAwB;AAAEpb,aAAO,EAAE,SAASmqB,2CAAT,CAAqD1qB,CAArD,EAAwD;AAAE,eAAO,KAAKA,CAAC,IAAIyqB,mCAAV,GAAP;AAA0D;AAA/H,KAAxB,CAA3C;;AACA,KAAC,YAAY;AAAE,OAAC,OAAO1O,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B0O,mCAA1B,EAA+D;AAAEzO,oBAAY,EAAE,CAACsO,4BAAD,CAAhB;AAAgDrO,eAAO,EAAE,CAACqO,4BAAD;AAAzD,OAA/D,CAAnD;AAA+M,KAA9N;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBG,mCAAzB,EAA8D,CAAC;AACpFvqB,YAAI,EAAE,sDAD8E;AAEpFG,YAAI,EAAE,CAAC;AACC4b,iBAAO,EAAE,CAACqO,4BAAD,CADV;AAECtO,sBAAY,EAAE,CAACsO,4BAAD;AAFf,SAAD;AAF8E,OAAD,CAA9D,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;;QAORK,iB;;;;AAENA,qBAAiB,CAACjP,IAAlB,GAAyB,+DAAwB;AAAExb,UAAI,EAAEyqB;AAAR,KAAxB,CAAzB;AACAA,qBAAiB,CAAChP,IAAlB,GAAyB,+DAAwB;AAAEpb,aAAO,EAAE,SAASqqB,yBAAT,CAAmC5qB,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI2qB,iBAAV,GAAP;AAAwC,OAA3F;AAA6F7O,aAAO,EAAE,CAAC,CAC5I,sEAD4I,EAC3H,sEAD2H,EAC1G,sEAD0G,EAE5I2O,mCAF4I,CAAD,EAI/I,sEAJ+I,EAK/IA,mCAL+I;AAAtG,KAAxB,CAAzB;;AAMA,KAAC,YAAY;AAAE,OAAC,OAAO1O,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B4O,iBAA1B,EAA6C;AAAE3O,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACkK,WAAD,CAAP;AAAuB,SAArD;AAAuDpK,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EAAkB,sEAAlB,EAAmC,sEAAnC,EAC5L2O,mCAD4L,CAAP;AAC9I,SADgE;AAC9DxO,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACiK,WAAD,EACvE,sEADuE,EAEvEuE,mCAFuE,CAAP;AAEzB;AAHgE,OAA7C,CAAnD;AAGsC,KAHrD;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBE,iBAAzB,EAA4C,CAAC;AAClEzqB,YAAI,EAAE,sDAD4D;AAElEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,sEADK,EACY,sEADZ,EAC6B,sEAD7B,EAEL2O,mCAFK,CADV;AAKCxO,iBAAO,EAAE,CAACiK,WAAD,EAAc,sEAAd,EAA+BuE,mCAA/B,CALV;AAMCzO,sBAAY,EAAE,CAACkK,WAAD;AANf,SAAD;AAF4D,OAAD,CAA5C,EAUrB,IAVqB,EAUf,IAVe;AAUP,KAVR;AAYd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC16BA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAeA;;;;;;AAKA;;;;;;AAUA,QAAMpE,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAAS+I,YAAT,GAAwB,CAAG;;AAC3B,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;QAGMC,sB;AACF;;;;;AAKA,oCAAY3W,MAAZ,EAAoB4W,QAApB,EAAmD;AAAA,UAArBC,WAAqB,uEAAP,KAAO;;AAAA;;AAC/C,WAAK7W,MAAL,GAAcA,MAAd;AACA,WAAK4W,QAAL,GAAgBA,QAAhB;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAgBV,C,CACD;;AACA;;;;;QAGMC,W;AACF;;;AAGA,yBAAYzM,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAM0M,iBAAiB,GAAG,6EAAc,0EAAW,kFAAmB,6EAAcD,WAAd,CAAnB,CAAX,EAA2D,SAA3D,CAAd,EAAqF,CAAC,CAAtF,CAA1B;AACA;;;;;;QAIME,a;;;;AAENA,iBAAa,CAACrrB,IAAd,GAAqB,SAASsrB,qBAAT,CAA+BprB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAImrB,aAAV,GAAP;AAAoC,KAA7F;;AACAA,iBAAa,CAAC1S,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEirB,aAAR;AAAuBzS,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAtB,CAAlC;AAAoF0I,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAA/F,KAAzB,CAArB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+J,aAAzB,EAAwC,CAAC;AAC9DjrB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,kCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwD,OAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIM4T,mB;;;;AAENA,uBAAmB,CAACvrB,IAApB,GAA2B,SAASwrB,2BAAT,CAAqCtrB,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAIqrB,mBAAV,GAAP;AAA0C,KAA/G;;AACAA,uBAAmB,CAAC5S,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAEmrB,mBAAR;AAA6B3S,eAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,EAA6B,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAA7B,CAAxC;AAAuG0I,eAAS,EAAE,CAAC,CAAD,EAAI,wBAAJ;AAAlH,KAAzB,CAA3B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBiK,mBAAzB,EAA8C,CAAC;AACpEnrB,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,+CADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAF8D,OAAD,CAA9C,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;QAGM8T,O;;;;;AACF;;;;;;;;;;AAUA,uBAAY/M,WAAZ,EAAyB/hB,OAAzB,EAAkCoY,QAAlC,EAA4C2W,mBAA5C,EACA;AACA3G,mBAFA,EAEe+B,kBAFf,EAEmCxB,QAFnC,EAGA;AACA3qB,eAJA,EAIW;AAAA;;AAAA;;AACP,qCAAM+jB,WAAN;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAK/hB,OAAL,GAAeA,OAAf;AACA,gBAAKmqB,kBAAL,GAA0BA,kBAA1B;AACA;;;;AAGA,gBAAK6E,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKC,kBAAL,GAA0B,IAA1B;AACA;;;;AAGA,gBAAKC,iBAAL,GAAyB,KAAzB;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,WAAL,GAAmB,IAAnB;AACA,gBAAKC,UAAL,GAAkB,IAAlB;AACA;;;;AAGA,gBAAKC,QAAL,GAAgB,IAAI,4CAAJ,EAAhB;AACA;;;;AAGA,gBAAKC,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;;;AAGA,gBAAKC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;AAGA,gBAAKC,SAAL,GAAiB,IAAI,0DAAJ,EAAjB;AACA;;;;AAGA,gBAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;;AACA,gBAAKC,iBAAL,GAxCO,CAyCP;AACA;AACA;;;AACA,gBAAKC,iBAAL,GAAyB,CAAC5xB,SAAS,IAAIL,QAAd,EAAwByK,aAAxB,CAAsC,KAAtC,CAAzB;;AACA,gBAAKwnB,iBAAL,CAAuBrxB,SAAvB,CAAiCC,GAAjC,CAAqC,iBAArC;;AACA,gBAAKujB,WAAL,CAAiBxL,aAAjB,CAA+BjO,WAA/B,CAA2C,QAAKsnB,iBAAhD;;AACA,gBAAKC,WAAL,GAAmB,IAAI,qEAAJ,kCAAyB7vB,OAAzB,EAAkC,QAAK4vB,iBAAvC,EAA0DxX,QAA1D,CAAnB;;AACA,gBAAKyX,WAAL,CAAiBC,kBAAjB,CAAoC/N,WAApC;;AACA,gBAAKgO,YAAL,GAAoBhB,mBAAmB,IAAI,EAA3C;AACA,gBAAKiB,mBAAL,GAA2B5H,aAAa,KAAK,gBAA7C;AACA,gBAAKO,QAAL,GAAgBA,QAAQ,IAAI,IAAZ,GAAoBwC,QAAQ,CAACxC,QAAD,CAAR,IAAsB,CAAC,CAA3C,GAAgD,CAAC,CAAjE;AAnDO;AAoDV;AACD;;;;;;;;;;AA4EA;;;4CAGoB;AAChB;AACA,cAAMsH,iBAAiB,GAAG,gBAA1B;AACA;;AACA,cAAM3uB,OAAO;AAAI;AAAkB,eAAKygB,WAAL,CAAiBxL,aAApD;;AACA,cAAIjV,OAAO,CAAColB,YAAR,CAAqBuJ,iBAArB,KACA3uB,OAAO,CAAC4uB,OAAR,CAAgBC,WAAhB,OAAkCF,iBADtC,EACyD;AACrD3uB,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsByxB,iBAAtB;AACA;AACH,WAJD,MAKK;AACD3uB,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsB,mBAAtB;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKixB,SAAL,CAAelR,IAAf,CAAoB;AAAE6R,gBAAI,EAAE;AAAR,WAApB;;AACA,eAAKP,WAAL,CAAiBQ,oBAAjB;AACH;AACD;;;;;;;iCAIS;AACL,cAAI,CAAC,KAAKlB,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,iBAAKmB,wBAAL;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;mCAIW;AACP,cAAI,KAAKpB,SAAT,EAAoB;AAChB,iBAAKA,SAAL,GAAiB,KAAjB;;AACA,iBAAKmB,wBAAL;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;+CAIuB;AACnB,cAAI,CAAC,KAAKpB,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,iBAAKmB,wBAAL,CAA8B,IAA9B;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;;yCAKoC;AAAA,cAArBhC,WAAqB,uEAAP,KAAO;AAChC,eAAKY,SAAL,GAAiB,CAAC,KAAKb,QAAvB;;AACA,eAAKgC,wBAAL,CAA8B/B,WAA9B;;AACA,eAAKgC,aAAL;;AACA,iBAAO,KAAKjC,QAAZ;AACH;AACD;;;;;;;gCAIQ;AACJ,cAAI,CAAC,KAAKU,SAAV,EAAqB;AACjB,iBAAKjN,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B;;AACA,iBAAKlB,QAAL,CAAc/oB,IAAd,CAAmB;AAAE6pB,kBAAI,EAAE;AAAR,aAAnB;AACH;;AACD,eAAKpB,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;;;;;;iCAOS;AACL,cAAI,KAAKyB,SAAT,EAAoB;AAChB,iBAAKf,OAAL,CAAanR,IAAb,CAAkB;AAAE6R,kBAAI,EAAE;AAAR,aAAlB;AACH;AACJ;AACD;;;;;;;;qCAKanqB,K,EAAO;AAChB,cAAI,KAAKsgB,QAAT,EAAmB;AACftgB,iBAAK,CAAC6X,cAAN;AACH,WAFD,MAGK;AACD7X,iBAAK,CAACimB,eAAN;AACH;AACJ;AACD;;;;;;;;uCAKejmB,K,EAAO;AAClB,cAAI,KAAKsgB,QAAT,EAAmB;AACf;AACH;;AACD,kBAAQtgB,KAAK,CAAC4X,OAAd;AACI,iBAAK,4DAAL;AACA,iBAAK,+DAAL;AACI;AACA,mBAAK7e,MAAL,GAFJ,CAGI;;AACAiH,mBAAK,CAAC6X,cAAN;AACA;;AACJ,iBAAK,2DAAL;AACI;AACA,kBAAI,KAAK4S,UAAT,EAAqB;AACjB,qBAAKC,cAAL,CAAoB,IAApB;AACH,eAJL,CAKI;;;AACA1qB,mBAAK,CAAC6X,cAAN;AACA;AAfR;AAiBH;AACD;;;;;;gCAGQ;AAAA;;AACJ;AACA;AACA;AACA;AACA,eAAK9d,OAAL,CAAauK,QAAb,CACKC,YADL,GAEKC,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGK3J,SAHL;AAGgB;;;AAGhB,sBAAM;AACF,mBAAI,CAACd,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB,wBAAM;AACF,qBAAI,CAACyuB,SAAL,GAAiB,KAAjB;;AACA,qBAAI,CAACO,OAAL,CAAahpB,IAAb,CAAkB;AAAE6pB,oBAAI,EAAE;AAAR,eAAlB;AACH,aAND;AAOH,WAdD;AAeH;AACD;;;;;;;;mDAK8C;AAAA,cAArB7B,WAAqB,uEAAP,KAAO;AAC1C,eAAKiB,eAAL,CAAqBjR,IAArB,CAA0B;AACtB7G,kBAAM,EAAE,IADc;AAEtB6W,uBAAW,EAAXA,WAFsB;AAGtBD,oBAAQ,EAAE,KAAKa;AAHO,WAA1B;AAKH;AACD;;;;;;;wCAIgB;AACZ;AACA,cAAI,KAAKhF,kBAAT,EAA6B;AACzB,iBAAKA,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;;;4BAvPoB;AACjB,iBAAO,KAAKjF,QAAL,IAAiB,KAAKD,aAAtB,IAAuC,CAAC,CAAC,KAAKyJ,YAAL,CAAkBxJ,QAAlE;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK4I,SAAZ;AAAwB;AACzC;;;;;0BAIavpB,K,EAAO;AAChB;AACA,cAAMgrB,YAAY,GAAG,oFAAsBhrB,KAAtB,CAArB;;AACA,cAAIgrB,YAAY,KAAK,KAAKzB,SAA1B,EAAqC;AACjC,iBAAKA,SAAL,GAAiByB,YAAjB;;AACA,iBAAKN,wBAAL;AACH;AACJ;AACD;;;;;;;4BAIY;AACR,iBAAO,KAAKO,MAAL,KAAgBntB,SAAhB,GACD,KAAKmtB,MADJ,GAED,KAAK9O,WAAL,CAAiBxL,aAAjB,CAA+BmX,WAFrC;AAGH;AACD;;;;;0BAIU9nB,K,EAAO;AAAE,eAAKirB,MAAL,GAAcjrB,KAAd;AAAsB;AACzC;;;;;;;;;;4BAOiB;AAAE,iBAAO,KAAKwpB,WAAL,IAAoB,KAAKH,kBAAhC;AAAqD;AACxE;;;;;0BAIerpB,K,EAAO;AAClB,eAAKwpB,WAAL,GAAmB,oFAAsBxpB,KAAtB,CAAnB;AACH;AACD;;;;;;;4BAIgB;AAAE,iBAAO,KAAKypB,UAAZ;AAAyB;AAC3C;;;;;0BAIczpB,K,EAAO;AACjB,eAAKypB,UAAL,GAAkB,oFAAsBzpB,KAAtB,CAAlB;AACH;AACD;;;;;;;4BAImB;AACf;AACA;AACA,iBAAO,KAAK8qB,UAAL,KAAoB,KAAKxB,iBAAL,IAA0B,KAAKZ,QAAnD,IACH,KAAKA,QAAL,CAAc1F,QAAd,EADG,GACwB,IAD/B;AAEH;;;;MA/IiB6F,iB;;AAkUtBK,WAAO,CAACzrB,IAAR,GAAe,SAASytB,eAAT,CAAyBvtB,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIurB,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,EAAgE,gEAAyB,oDAAzB,CAAhE,EAAyG,gEAAyB,8DAAzB,CAAzG,EAAoJ,gEAAyB,gFAAzB,EAAoD,CAApD,CAApJ,EAA4M,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA5M,EAAgQ,gEAAyB,+DAAzB,CAAhQ,EAAoT,gEAAyB,UAAzB,CAApT,EAA0V,gEAAyB,wDAAzB,EAAmC,CAAnC,CAA1V,CAAP;AAA0Y,KAAvb;;AACAA,WAAO,CAAC9S,IAAR,GAAe,gEAAyB;AAAEvY,UAAI,EAAEqrB,OAAR;AAAiB7S,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,UAAD,CAAjD,EAA+D,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAA/D,CAA5B;AAAkH8U,oBAAc,EAAE,SAASC,sBAAT,CAAgClM,EAAhC,EAAoCC,GAApC,EAAyCkM,QAAzC,EAAmD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AACnO,uEAAsBmM,QAAtB,EAAgCvC,aAAhC,EAA+C,IAA/C;;AACA,uEAAsBuC,QAAtB,EAAgCrC,mBAAhC,EAAqD,IAArD;;AACA,uEAAsBqC,QAAtB,EAAgCC,aAAhC,EAA+C,IAA/C;AACH;;AAAC,YAAIpM,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACoM,MAAJ,GAAapK,EAAE,CAACE,KAArE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACqM,YAAJ,GAAmBrK,EAAE,CAACE,KAA3E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACsM,UAAJ,GAAiBtK,EAAE,CAACE,KAAzE;AACH;AAAE,OATiC;AAS/BtC,eAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,UAAtB,EAAkC,qBAAlC,CAToB;AASsCuC,cAAQ,EAAE,EAThD;AASoDtC,kBAAY,EAAE,SAAS0M,oBAAT,CAA8BxM,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvJ,mEAAkB,OAAlB,EAA2B,SAASyM,gCAAT,CAA0C9I,MAA1C,EAAkD;AAAE,mBAAO1D,GAAG,CAACyM,YAAJ,CAAiB/I,MAAjB,CAAP;AAAkC,WAAjH,EAAmH,SAAnH,EAA8H,SAASgJ,kCAAT,CAA4ChJ,MAA5C,EAAoD;AAAE,mBAAO1D,GAAG,CAAC2M,cAAJ,CAAmBjJ,MAAnB,CAAP;AAAoC,WAAxN,EAA0N,OAA1N,EAAmO,SAASkJ,gCAAT,GAA4C;AAAE,mBAAO5M,GAAG,CAACyL,KAAJ,EAAP;AAAqB,WAAtS,EAAwS,MAAxS,EAAgT,SAASoB,+BAAT,GAA2C;AAAE,mBAAO7M,GAAG,CAAC8M,KAAJ,EAAP;AAAqB,WAAlX;AACH;;AAAC,YAAI/M,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,UAAnB,EAA+BC,GAAG,CAACwB,QAAJ,GAAe,IAAf,GAAsBxB,GAAG,CAAC4D,QAAzD,EAAmE,UAAnE,EAA+E5D,GAAG,CAACwB,QAAJ,IAAgB,IAA/F,EAAqG,eAArG,EAAsHxB,GAAG,CAACwB,QAAJ,CAAaqC,QAAb,EAAtH,EAA+I,eAA/I,EAAgK7D,GAAG,CAAC+M,YAApK;;AACA,oEAAmB,mBAAnB,EAAwC/M,GAAG,CAACuJ,QAA5C,EAAsD,sBAAtD,EAA8EvJ,GAAG,CAACoM,MAAlF,EAA0F,6BAA1F,EAAyHpM,GAAG,CAACqM,YAAJ,IAAoBrM,GAAG,CAACsM,UAAjJ,EAA6J,mBAA7J,EAAkLtM,GAAG,CAACwB,QAAtL,EAAgM,yBAAhM,EAA2NxB,GAAG,CAACiL,mBAA/N;AACH;AAAE,OAdiC;AAc/BtR,YAAM,EAAE;AAAEyH,aAAK,EAAE,OAAT;AAAkBI,gBAAQ,EAAE,UAA5B;AAAwCD,qBAAa,EAAE,eAAvD;AAAwEqC,gBAAQ,EAAE,UAAlF;AAA8F2F,gBAAQ,EAAE,UAAxG;AAAoH1oB,aAAK,EAAE,OAA3H;AAAoI8qB,kBAAU,EAAE,YAAhJ;AAA8JD,iBAAS,EAAE;AAAzK,OAduB;AAciK9R,aAAO,EAAE;AAAE6Q,uBAAe,EAAE,iBAAnB;AAAsCC,iBAAS,EAAE,WAAjD;AAA8DC,eAAO,EAAE;AAAvE,OAd1K;AAc8PxT,cAAQ,EAAE,CAAC,SAAD,CAdxQ;AAcqR0C,cAAQ,EAAE,CAAC,wEAAD;AAd/R,KAAzB,CAAf;AAeA;;AACAkQ,WAAO,CAACtrB,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAE;AAAR,OAD2B,EAE3B;AAAEA,YAAI,EAAE;AAAR,OAF2B,EAG3B;AAAEA,YAAI,EAAE;AAAR,OAH2B,EAI3B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,gFAAD;AAAtB,SAArB;AAA/B,OAJ2B,EAK3B;AAAEH,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAL2B,EAM3B;AAAEH,YAAI,EAAE;AAAR,OAN2B,EAO3B;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAP2B,EAQ3B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAR2B,CAAN;AAAA,KAAzB;;AAUAkrB,WAAO,CAACjQ,cAAR,GAAyB;AACrBsS,YAAM,EAAE,CAAC;AAAE1tB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC8qB,aAAD;AAA5B,OAAD,CADa;AAErB0C,kBAAY,EAAE,CAAC;AAAE3tB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACgrB,mBAAD;AAA5B,OAAD,CAFO;AAGrByC,gBAAU,EAAE,CAAC;AAAE5tB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC;AAAY;;;AAG1C;AAAA,iBAAMstB,aAAN;AAAA,SAH8B,CAAD;AAA5B,OAAD,CAHS;AAOrB5C,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAPW;AAQrBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CARc;AASrBitB,gBAAU,EAAE,CAAC;AAAEjtB,YAAI,EAAE;AAAR,OAAD,CATS;AAUrBgtB,eAAS,EAAE,CAAC;AAAEhtB,YAAI,EAAE;AAAR,OAAD,CAVU;AAWrB+rB,qBAAe,EAAE,CAAC;AAAE/rB,YAAI,EAAE;AAAR,OAAD,CAXI;AAYrBgsB,eAAS,EAAE,CAAC;AAAEhsB,YAAI,EAAE;AAAR,OAAD,CAZU;AAarBisB,aAAO,EAAE,CAAC;AAAEjsB,YAAI,EAAE;AAAR,OAAD;AAbY,KAAzB;AAeA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqrB,OAAzB,EAAkC,CAAC;AACxDrrB,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,0DADT;AAEC8M,gBAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,eAAtB,EAAuC,UAAvC,CAFT;AAGCxC,kBAAQ,EAAE,SAHX;AAIClB,cAAI,EAAE;AACF,qBAAS,8BADP;AAEF,+BAAmB,4BAFjB;AAGF,oBAAQ,QAHN;AAIF,yCAA6B,UAJ3B;AAKF,4CAAgC,QAL9B;AAMF,mDAAuC,4BANrC;AAOF,yCAA6B,UAP3B;AAQF,+CAAmC,qBARjC;AASF,+BAAmB,kBATjB;AAUF,oCAAwB,qBAVtB;AAWF,oCAAwB,cAXtB;AAYF,uBAAW,sBAZT;AAaF,yBAAa,wBAbX;AAcF,uBAAW,SAdT;AAeF,sBAAU;AAfR;AAJP,SAAD;AAFkD,OAAD,CAAlC,EAwBrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAuD;AAAEA,cAAI,EAAE;AAAR,SAAvD,EAAkF;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC/HF,gBAAI,EAAE;AADyH,WAAD,EAE/H;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,gFAAD;AAFP,WAF+H;AAA/B,SAAlF,EAKX;AAAEH,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AAC/BF,gBAAI,EAAE;AADyB,WAAD,EAE/B;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF+B;AAA5B,SALW,EAUX;AAAEH,cAAI,EAAE;AAAR,SAVW,EAUyB;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACnEF,gBAAI,EAAE,uDAD6D;AAEnEG,gBAAI,EAAE,CAAC,UAAD;AAF6D,WAAD;AAA5B,SAVzB,EAaX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAFkC;AAA/B,SAbW,CAAP;AAkBF,OA1CS,EA0CP;AAAE4rB,uBAAe,EAAE,CAAC;AAC9B/rB,cAAI,EAAE;AADwB,SAAD,CAAnB;AAEVgsB,iBAAS,EAAE,CAAC;AACZhsB,cAAI,EAAE;AADM,SAAD,CAFD;AAIVisB,eAAO,EAAE,CAAC;AACVjsB,cAAI,EAAE;AADI,SAAD,CAJC;AAMV6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CANA;AAQVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CARG;AAUVitB,kBAAU,EAAE,CAAC;AACbjtB,cAAI,EAAE;AADO,SAAD,CAVF;AAYVgtB,iBAAS,EAAE,CAAC;AACZhtB,cAAI,EAAE;AADM,SAAD,CAZD;AAcV0tB,cAAM,EAAE,CAAC;AACT1tB,cAAI,EAAE,0DADG;AAETG,cAAI,EAAE,CAAC8qB,aAAD;AAFG,SAAD,CAdE;AAiBV0C,oBAAY,EAAE,CAAC;AACf3tB,cAAI,EAAE,0DADS;AAEfG,cAAI,EAAE,CAACgrB,mBAAD;AAFS,SAAD,CAjBJ;AAoBVyC,kBAAU,EAAE,CAAC;AACb5tB,cAAI,EAAE,0DADO;AAEbG,cAAI,EAAE,CAAC;AAAa;;;AAED;AAAA,mBAAMstB,aAAN;AAAA,WAFZ,CAAD;AAFO,SAAD;AApBF,OA1CO;AAmEb,KAnEF;;AAoEd,QAAI,KAAJ,EAAW,CA6HV;AACD;;;;;;;;;;;;;;;QAaMA,a;AACF;;;;AAIA,6BAAYa,WAAZ,EACA;AACAxX,gBAFA,EAEY;AAAA;;AACR,aAAKwX,WAAL,GAAmBA,WAAnB,CADQ,CAER;;AACA,YAAIxX,UAAU,IAAIA,UAAU,CAAChE,aAAX,CAAyByb,QAAzB,KAAsC,QAAxD,EAAkE;AAC9DzX,oBAAU,CAAChE,aAAX,CAAyBlO,YAAzB,CAAsC,MAAtC,EAA8C,QAA9C;AACH;AACJ;AACD;;;;;;;;;qCAKapC,K,EAAO;AAChB;AACA,cAAMgsB,UAAU,GAAG,KAAKF,WAAxB;;AACA,cAAIE,UAAU,CAACxB,SAAX,IAAwB,CAACwB,UAAU,CAAC1L,QAAxC,EAAkD;AAC9C0L,sBAAU,CAACjzB,MAAX;AACH,WALe,CAMhB;AACA;AACA;AACA;AACA;;;AACAiH,eAAK,CAACimB,eAAN;AACH;;;;;;AAELgF,iBAAa,CAAC7tB,IAAd,GAAqB,SAAS6uB,qBAAT,CAA+B3uB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI2tB,aAAV,EAAyB,gEAAyBpC,OAAzB,CAAzB,EAA4D,gEAAyB,wDAAzB,CAA5D,CAAP;AAAkH,KAA3K;;AACAoC,iBAAa,CAAClV,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEytB,aAAR;AAAuBjV,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAlC;AAA+D0I,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,EAAuB,wBAAvB,CAA1E;AAA4HC,kBAAY,EAAE,SAASuN,0BAAT,CAAoCrN,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3O,mEAAkB,OAAlB,EAA2B,SAASsN,sCAAT,CAAgD3J,MAAhD,EAAwD;AAAE,mBAAO1D,GAAG,CAACyM,YAAJ,CAAiB/I,MAAjB,CAAP;AAAkC,WAAvH;AACH;AAAE;AAFuC,KAAzB,CAArB;AAGA;;AACAyI,iBAAa,CAAC1tB,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAEqrB;AAAR,OADiC,EAEjC;AAAErrB,YAAI,EAAE;AAAR,OAFiC,CAAN;AAAA,KAA/B;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBytB,aAAzB,EAAwC,CAAC;AAC9DztB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAECoJ,cAAI,EAAE;AACF,qBAAS,wCADP;AAEF,uBAAW;AAFT;AAFP,SAAD;AAFwD,OAAD,CAAxC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAEqrB;AAAR,SAAD,EAAoB;AAAErrB,cAAI,EAAE;AAAR,SAApB,CAAP;AAA0D,OATnD,EASqD,IATrD;AAS6D,KAT5E;;AAUd,QAAI,KAAJ,EAAW,CAMV;AAED;;;;;;AAKA;;;;;;AAIA,aAAS4uB,sBAAT,GAAkC,CAAG;;AACrC,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;AAIA,QAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;;;;;AAKA;;AACA;;;;QAGMC,e;AACF;;;;;;AAMA,6BAAYC,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD,EAAsEC,SAAtE,EAAiF;AAAA;;AAC7E,WAAKH,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAYV;AACD;;;AACA,QAAMC,qBAAqB,GAAG,+EAAgBL,eAAhB,CAA9B,C,CACA;;AACA;;;AACA,QAAI9X,YAAY,GAAG,CAAnB;AACA;;;;QAGMoY,iB;AACF;;;;AAIA,+BAAYnb,MAAZ,EAAoB9R,KAApB,EAA2B;AAAA;;AACvB,WAAK8R,MAAL,GAAcA,MAAd;AACA,WAAK9R,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;QAGMktB,W;;;;;AACF;;;;;;;;;AASA,2BAAY/Q,WAAZ,EAAyBoI,kBAAzB,EAA6C3N,IAA7C,EAAmDiW,WAAnD,EAAgEC,gBAAhE,EAAkFF,yBAAlF,EAA6GG,SAA7G,EAAwH;AAAA;;AAAA;;AACpH,qCAAMH,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE;AACA,gBAAK5Q,WAAL,GAAmBA,WAAnB;AACA,gBAAKoI,kBAAL,GAA0BA,kBAA1B;AACA,gBAAK3N,IAAL,GAAYA,IAAZ;AACA,gBAAKmW,SAAL,GAAiBA,SAAjB;AACA;;;;;AAIA,gBAAKI,WAAL,GAAmB,eAAnB;AACA;;;;;;AAKA,gBAAKC,uBAAL,GAA+B,IAA/B;AACA;;;;AAGA,gBAAK3Q,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,gBAAK4Q,IAAL,2BAA6BxY,YAAY,EAAzC;AACA;;;;AAGA,gBAAKyY,SAAL,GAAiB,CAAjB;AACA;;;;;AAIA,gBAAKC,aAAL,GAAqB,IAArB;AACA;;;;AAGA,gBAAKvI,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,gBAAKwI,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;;AAIA,gBAAKC,SAAL,GAAiB,KAAjB;;AACA,gBAAKC,YAAL;AAAqB;;;;;AAKrB,kBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;;AAMA,gBAAK/G,SAAL,GAAiB,KAAjB;AACA,gBAAKxB,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKwI,eAAL,GAAuB,YAAvB;AACA,gBAAKrE,WAAL,GAAmB,IAAnB;AACA;;;;AAGA,gBAAKvgB,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;;;AAKA,gBAAK6kB,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,YAAI,QAAKf,SAAT,EAAoB;AAChB,kBAAKA,SAAL,CAAegB,aAAf;AACH;;AA1EmH;AA2EvH;AACD;;;;;;;;;AA0MA;;;6CAGqB;AAAA;;AACjB,eAAKC,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKC,KAAzB,EACdC,QADc,GAEdC,uBAFc,GAGdC,yBAHc,CAGY,KAAKxX,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAtB,GAA8B,KAH1C,CAAnB;;AAIA,cAAI,KAAK4W,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAU3N,MAAV,CACKpE,IADL,CACU,iEAAU,KAAK4X,UAAf,CADV,EAEKvhB,SAFL;AAEgB;;;;AAIhB,sBAAA0K,GAAG;AAAA,qBAAI,OAAI,CAACooB,WAAL,CAAiBI,yBAAjB,CAA2CxoB,GAA3C,CAAJ;AAAA,aANH;AAOH;;AACD,eAAKooB,WAAL,CAAiBK,MAAjB,CAAwBxpB,IAAxB,CAA6B,iEAAU,KAAK4X,UAAf,CAA7B,EAAyDvhB,SAAzD;AAAoE;;;AAGpE,sBAAM;AACF,mBAAI,CAACozB,iBAAL;AACH,WALD,EAdiB,CAoBjB;;;AACA,eAAKL,KAAL,CAAWxW,OAAX,CAAmB5S,IAAnB,CAAwB,iEAAU,IAAV,CAAxB,EAAyC,iEAAU,KAAK4X,UAAf,CAAzC,EAAqEvhB,SAArE;AAAgF;;;AAGhF,sBAAM;AACF,gBAAI,OAAI,CAACylB,QAAT,EAAmB;AACf;AACA;AACA8E,qBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,0BAAM;AACF,uBAAI,CAAC4I,eAAL;AACH,eALD;AAMH;;AACD,mBAAI,CAACC,WAAL,GAXE,CAYF;;;AACA,mBAAI,CAACC,oBAAL,GAbE,CAcF;;;AACA,mBAAI,CAACC,eAAL,GAfE,CAgBF;;;AACA,mBAAI,CAACC,6BAAL;;AACA,mBAAI,CAACC,YAAL,CAAkBjuB,IAAlB;AACH,WAtBD;AAuBH;AACD;;;;;;mCAGW;AACP,eAAKkuB,eAAL,GAAuB,IAAI,wEAAJ,CAAmB,KAAKC,QAAxB,EAAkChxB,SAAlC,EAA6C,KAA7C,CAAvB;AACA,eAAK8wB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;oCAGY;AACR,cAAI,KAAKosB,SAAT,EAAoB;AAChB;AACA;AACA;AACA,iBAAKgC,gBAAL;;AACA,gBAAI,KAAKhC,SAAL,CAAepM,QAAf,KAA4B,KAAK0E,SAArC,EAAgD;AAC5C,mBAAK1E,QAAL,GAAgB,CAAC,CAAC,KAAKoM,SAAL,CAAepM,QAAjC;AACH;AACJ;AACJ;AACD;;;;;;sCAGc;AACV,eAAKlE,UAAL,CAAgB9b,IAAhB;;AACA,eAAK8b,UAAL,CAAgBlX,QAAhB;;AACA,eAAKqpB,YAAL,CAAkBrpB,QAAlB;;AACA,eAAKypB,kBAAL;AACH;AACD;;;;;;;;sCAKcC,Y,EAAc;AACxB,eAAKC,UAAL,GAAkBD,YAAlB;AACH;AACD;;;;;;;;;0CAMkBE,G,EAAK;AAAE,eAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AAAwC,S,CACjE;;AACA;;;;;;;mCAIWrvB,K,EAAO;AACd,cAAI,KAAKiuB,KAAT,EAAgB;AACZ,iBAAKqB,oBAAL,CAA0BtvB,KAA1B,EAAiC,KAAjC;AACH;AACJ,S,CACD;;AACA;;;;;;;yCAIiBqa,E,EAAI;AACjB,eAAKmT,SAAL,GAAiBnT,EAAjB;AACH,S,CACD;;AACA;;;;;;;0CAIkBA,E,EAAI;AAClB,eAAK2K,UAAL,GAAkB3K,EAAlB;AACH,S,CACD;;AACA;;;;;;;yCAIiB2L,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;AACA,eAAK4I,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;;yCAMiBN,K,EAAO;AACpB,cAAI,CAAC,KAAKkvB,mBAAL,CAAyBlvB,KAAzB,CAAL,EAAsC;AAClC,iBAAKuqB,KAAL;AACH;AACJ;AACD;;;;;;;;;8BAMMpK,O,EAAS;AACX,cAAI,KAAKG,QAAT,EAAmB;AACf;AACH,WAHU,CAIX;AACA;;;AACA,cAAI,KAAKuO,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAvC,EAAgD,CAC5C;AACH,WAFD,MAGK,IAAI,KAAKvB,KAAL,CAAWztB,MAAX,GAAoB,CAAxB,EAA2B;AAC5B,iBAAKwtB,WAAL,CAAiByB,kBAAjB;;AACA,iBAAKb,YAAL,CAAkBjuB,IAAlB;AACH,WAHI,MAIA;AACD,iBAAK+uB,WAAL,CAAiBlP,OAAjB;;AACA,iBAAKoO,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;oCAKY6f,O,EAAS;AACjB,cAAI,KAAK0O,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBtE,KAAhB,CAAsBpK,OAAtB;AACH;AACJ;AACD;;;;;;;;iCAKSngB,K,EAAO;AACZ;AACA,cAAMsb,MAAM;AAAI;AAAkBtb,eAAK,CAACsb,MAAxC,CAFY,CAGZ;;AACA,cAAItb,KAAK,CAAC4X,OAAN,KAAkB,+DAAlB,IAA+B,KAAK0X,aAAL,CAAmBhU,MAAnB,CAAnC,EAA+D;AAC3D,iBAAKqS,WAAL,CAAiB4B,iBAAjB;;AACAvvB,iBAAK,CAAC6X,cAAN;AACH,WAHD,MAIK,IAAIyD,MAAM,IAAIA,MAAM,CAAChjB,SAAP,CAAiBY,QAAjB,CAA0B,UAA1B,CAAd,EAAqD;AACtD,gBAAI8G,KAAK,CAAC4X,OAAN,KAAkB,0DAAtB,EAA4B;AACxB,mBAAK+V,WAAL,CAAiByB,kBAAjB;;AACApvB,mBAAK,CAAC6X,cAAN;AACH,aAHD,MAIK,IAAI7X,KAAK,CAAC4X,OAAN,KAAkB,yDAAtB,EAA2B;AAC5B,mBAAK+V,WAAL,CAAiB4B,iBAAjB;;AACAvvB,mBAAK,CAAC6X,cAAN;AACH,aAHI,MAIA;AACD,mBAAK8V,WAAL,CAAiB6B,SAAjB,CAA2BxvB,KAA3B;AACH;;AACD,iBAAKuuB,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;0CAKkB;AACd;AACA,eAAK2sB,SAAL,GAAiB,KAAKC,aAAL,KAAuB,KAAKU,KAAL,CAAWztB,MAAX,KAAsB,CAAtB,GAA0B,CAAC,CAA3B,GAA+B,CAAtD,CAAjB;AACH;AACD;;;;;;;;;wDAMgC;AAC5B;AACA,cAAI,KAAK4sB,uBAAL,IAAgC,IAApC,EAA0C;AACtC,gBAAI,KAAKa,KAAL,CAAWztB,MAAf,EAAuB;AACnB;AACA,kBAAMsvB,YAAY,GAAG10B,IAAI,CAAC2T,GAAL,CAAS,KAAKqe,uBAAd,EAAuC,KAAKa,KAAL,CAAWztB,MAAX,GAAoB,CAA3D,CAArB;;AACA,mBAAKwtB,WAAL,CAAiB+B,aAAjB,CAA+BD,YAA/B;AACH,aAJD,MAKK;AACD,mBAAKlF,KAAL;AACH;AACJ;;AACD,eAAKwC,uBAAL,GAA+B,IAA/B;AACH;AACD;;;;;;;;;;sCAOcrsB,K,EAAO;AACjB,iBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKktB,KAAL,CAAWztB,MAAxC;AACH;AACD;;;;;;;;sCAKc9E,O,EAAS;AACnB,cAAIA,OAAO,IAAIA,OAAO,CAAC0wB,QAAR,CAAiB7B,WAAjB,OAAmC,OAAlD,EAA2D;AACvD;AACA,gBAAIvY,KAAK;AAAI;AAAkBtW,mBAA/B;AACA,mBAAO,CAACsW,KAAK,CAAChS,KAAd;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;6CAKqBA,K,EAA2B;AAAA;;AAAA,cAApB2oB,WAAoB,uEAAN,IAAM;;AAC5C,eAAKqH,eAAL;;AACA,eAAK/B,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,oBAAAsjB,IAAI;AAAA,mBAAIA,IAAI,CAACyF,QAAL,EAAJ;AAAA,WAJJ;;AAKA,cAAIC,KAAK,CAACC,OAAN,CAAcnwB,KAAd,CAAJ,EAA0B;AACtBA,iBAAK,CAACkH,OAAN;AAAe;;;;AAIf,sBAAAgK,YAAY;AAAA,qBAAI,OAAI,CAACkf,YAAL,CAAkBlf,YAAlB,EAAgCyX,WAAhC,CAAJ;AAAA,aAJZ;;AAKA,iBAAK0H,WAAL;AACH,WAPD,MAQK;AACD;AACA,gBAAMC,iBAAiB,GAAG,KAAKF,YAAL,CAAkBpwB,KAAlB,EAAyB2oB,WAAzB,CAA1B,CAFC,CAGD;AACA;;;AACA,gBAAI2H,iBAAJ,EAAuB;AACnB,kBAAI3H,WAAJ,EAAiB;AACb,qBAAKqF,WAAL,CAAiB+B,aAAjB,CAA+BO,iBAA/B;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;;;;qCAOatwB,K,EAA2B;AAAA;;AAAA,cAApB2oB,WAAoB,uEAAN,IAAM;;AACpC;AACA,cAAM2H,iBAAiB,GAAG,KAAKrC,KAAL,CAAWsC,IAAX;AAAiB;;;;AAI3C,oBAAA/F,IAAI,EAAI;AACJ,mBAAOA,IAAI,CAACxqB,KAAL,IAAc,IAAd,IAAsB,OAAI,CAAC0tB,YAAL,CAAkBlD,IAAI,CAACxqB,KAAvB,EAA8BA,KAA9B,CAA7B;AACH,WANyB,CAA1B;;AAOA,cAAIswB,iBAAJ,EAAuB;AACnB3H,uBAAW,GAAG2H,iBAAiB,CAACE,oBAAlB,EAAH,GAA8CF,iBAAiB,CAACG,MAAlB,EAAzD;;AACA,iBAAK5B,eAAL,CAAqB4B,MAArB,CAA4BH,iBAA5B;AACH;;AACD,iBAAOA,iBAAP;AACH;AACD;;;;;;;+CAIuB;AAAA;;AACnB;AACA;AACA7K,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,gBAAI,OAAI,CAACoH,SAAL,IAAkB,OAAI,CAAC9B,MAA3B,EAAmC;AAC/B,qBAAI,CAACqE,oBAAL,CAA0B,OAAI,CAACvC,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAe/sB,KAAhC,GAAwC,OAAI,CAACirB,MAAvE,EAA+E,KAA/E;;AACA,qBAAI,CAAC2D,YAAL,CAAkBjuB,IAAlB;AACH;AACJ,WARD;AASH;AACD;;;;;;;;;wCAMgB+vB,I,EAAM;AAClB,eAAK7B,eAAL,CAAqB8B,KAArB;;AACA,eAAK1C,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,oBAAAsjB,IAAI,EAAI;AACJ,gBAAIA,IAAI,KAAKkG,IAAb,EAAmB;AACflG,kBAAI,CAACyF,QAAL;AACH;AACJ,WARD;AASA,eAAKrB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;;sCAMc;AAAA;;AACV,cAAI,KAAK8sB,SAAT,EAAoB;AAChB,iBAAKoB,eAAL,CAAqB8B,KAArB;;AACA,iBAAK1C,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,sBAAAsjB,IAAI,EAAI;AACJ,kBAAIA,IAAI,CAAC9B,QAAT,EAAmB;AACf,uBAAI,CAACmG,eAAL,CAAqB4B,MAArB,CAA4BjG,IAA5B;AACH;AACJ,aARD;AASA,iBAAKoE,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;;0CAMkBiwB,a,EAAe;AAC7B;AACA,cAAIC,WAAW,GAAG,IAAlB;;AACA,cAAIX,KAAK,CAACC,OAAN,CAAc,KAAKzH,QAAnB,CAAJ,EAAkC;AAC9BmI,uBAAW,GAAG,KAAKnI,QAAL,CAAclY,GAAd;AAAmB;;;;AAIjC,sBAAAga,IAAI;AAAA,qBAAIA,IAAI,CAACxqB,KAAT;AAAA,aAJU,CAAd;AAKH,WAND,MAOK;AACD6wB,uBAAW,GAAG,KAAKnI,QAAL,GAAgB,KAAKA,QAAL,CAAc1oB,KAA9B,GAAsC4wB,aAApD;AACH;;AACD,eAAK3F,MAAL,GAAc4F,WAAd;AACA,eAAK5nB,MAAL,CAAY0P,IAAZ,CAAiB,IAAIsU,iBAAJ,CAAsB,IAAtB,EAA4B4D,WAA5B,CAAjB;AACA,eAAK/C,WAAL,CAAiBnV,IAAjB,CAAsBkY,WAAtB;;AACA,eAAKrD,SAAL,CAAeqD,WAAf;;AACA,eAAKtM,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;gCAIQ;AAAA;;AACJ,cAAI,CAAC,KAAKkL,eAAL,EAAL,EAA6B;AACzB,iBAAK9C,WAAL,CAAiB+B,aAAjB,CAA+B,CAAC,CAAhC;AACH;;AACD,cAAI,CAAC,KAAKpP,QAAV,EAAoB;AAChB,gBAAI,KAAKuO,UAAT,EAAqB;AACjB;AACA;AACA;AACA;AACAnoB,wBAAU;AAAE;;;AAGZ,0BAAM;AACF,oBAAI,CAAC,OAAI,CAACyoB,OAAV,EAAmB;AACf,yBAAI,CAACuB,cAAL;AACH;AACJ,eAPS,CAAV;AAQH,aAbD,MAcK;AACD;AACA,mBAAKA,cAAL;AACH;AACJ;AACJ;AACD;;;;;;;yCAIiB;AACb,eAAK/L,UAAL;;AACA,eAAKT,kBAAL,CAAwBqB,YAAxB;;AACA,eAAKgJ,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;;4CAMoB;AAAA;;AAChB,cAAI,KAAK2sB,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,iBAAKA,SAAL,GAAiB,CAAC,CAAlB;AACAvmB,sBAAU;AAAE;;;AAGZ,wBAAM;AACF,qBAAI,CAACumB,SAAL,GAAiB,OAAI,CAACC,aAAL,IAAsB,CAAvC;;AACA,qBAAI,CAAChJ,kBAAL,CAAwBqB,YAAxB;AACH,aANS,CAAV;AAOH;AACJ;AACD;;;;;;;sCAIc;AACV,eAAKoJ,kBAAL;;AACA,eAAKgC,mBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAKC,qBAAL;AACH;AACD;;;;;;;6CAIqB;AACjB,cAAI,KAAKC,sBAAT,EAAiC;AAC7B,iBAAKA,sBAAL,CAA4B51B,WAA5B;;AACA,iBAAK41B,sBAAL,GAA8B,IAA9B;AACH;;AACD,cAAI,KAAKC,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,CAA2B71B,WAA3B;;AACA,iBAAK61B,qBAAL,GAA6B,IAA7B;AACH;;AACD,cAAI,KAAKC,0BAAT,EAAqC;AACjC,iBAAKA,0BAAL,CAAgC91B,WAAhC;;AACA,iBAAK81B,0BAAL,GAAkC,IAAlC;AACH;;AACD,cAAI,KAAKC,uBAAT,EAAkC;AAC9B,iBAAKA,uBAAL,CAA6B/1B,WAA7B;;AACA,iBAAK+1B,uBAAL,GAA+B,IAA/B;AACH;AACJ;AACD;;;;;;;;kDAK0B;AAAA;;AACtB,eAAKD,0BAAL,GAAkC,KAAKE,oBAAL,CAA0Br2B,SAA1B;AAAqC;;;;AAIvE,oBAAAmF,KAAK,EAAI;AACLA,iBAAK,CAACyR,MAAN,CAAa4W,QAAb,GACM,OAAI,CAACmG,eAAL,CAAqB4B,MAArB,CAA4BpwB,KAAK,CAACyR,MAAlC,CADN,GAEM,OAAI,CAAC+c,eAAL,CAAqBoB,QAArB,CAA8B5vB,KAAK,CAACyR,MAApC,CAFN,CADK,CAIL;;AACA,gBAAI,CAAC,OAAI,CAACgd,QAAV,EAAoB;AAChB,qBAAI,CAACb,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,wBAAAsjB,IAAI,EAAI;AACJ,oBAAI,CAAC,OAAI,CAACqE,eAAL,CAAqB2C,UAArB,CAAgChH,IAAhC,CAAD,IAA0CA,IAAI,CAAC9B,QAAnD,EAA6D;AACzD8B,sBAAI,CAACyF,QAAL;AACH;AACJ,eARD;AASH;;AACD,gBAAI5vB,KAAK,CAACsoB,WAAV,EAAuB;AACnB,qBAAI,CAAC8I,iBAAL;AACH;AACJ,WAvBiC,CAAlC;AAwBH;AACD;;;;;;;;8CAKsB;AAAA;;AAClB,eAAKN,sBAAL,GAA8B,KAAKO,gBAAL,CAAsBx2B,SAAtB;AAAiC;;;;AAI/D,oBAAAmF,KAAK,EAAI;AACL;AACA,gBAAIsxB,SAAS,GAAG,OAAI,CAAC1D,KAAL,CAAW2D,OAAX,GAAqB5wB,OAArB,CAA6BX,KAAK,CAACmqB,IAAnC,CAAhB;;AACA,gBAAI,OAAI,CAACqH,aAAL,CAAmBF,SAAnB,CAAJ,EAAmC;AAC/B,qBAAI,CAAC3D,WAAL,CAAiB8D,gBAAjB,CAAkCH,SAAlC;AACH;;AACD,mBAAI,CAAC/C,YAAL,CAAkBjuB,IAAlB;AACH,WAX6B,CAA9B;AAYA,eAAKywB,qBAAL,GAA6B,KAAKW,eAAL,CAAqB72B,SAArB;AAAgC;;;AAG7D,sBAAM;AACF,mBAAI,CAAC+wB,KAAL;;AACA,mBAAI,CAAC2C,YAAL,CAAkBjuB,IAAlB;AACH,WAN4B,CAA7B;AAOH;AACD;;;;;;;gDAIwB;AAAA;;AACpB,eAAK2wB,uBAAL,GAA+B,KAAKU,iBAAL,CAAuB92B,SAAvB;AAAkC;;;;AAIjE,oBAAAmF,KAAK,EAAI;AACL;AACA,gBAAMmqB,IAAI,GAAGnqB,KAAK,CAACmqB,IAAnB;AACA;;AACA,gBAAMmH,SAAS,GAAG,OAAI,CAAC1D,KAAL,CAAW2D,OAAX,GAAqB5wB,OAArB,CAA6BX,KAAK,CAACmqB,IAAnC,CAAlB,CAJK,CAKL;AACA;AACA;;;AACA,gBAAI,OAAI,CAACqH,aAAL,CAAmBF,SAAnB,KAAiCnH,IAAI,CAACpB,SAA1C,EAAqD;AACjD,qBAAI,CAACgE,uBAAL,GAA+BuE,SAA/B;AACH;AACJ,WAf8B,CAA/B;AAgBH;AACD;;;;;;;;;4CAMoBtxB,K,EAAO;AACvB;AACA,cAAI4xB,cAAc;AAAI;AAAkB5xB,eAAK,CAACsb,MAA9C;;AACA,iBAAOsW,cAAc,IAAIA,cAAc,KAAK,KAAK9V,WAAL,CAAiBxL,aAA7D,EAA4E;AACxE,gBAAIshB,cAAc,CAACt5B,SAAf,CAAyBY,QAAzB,CAAkC,UAAlC,CAAJ,EAAmD;AAC/C,qBAAO,IAAP;AACH;;AACD04B,0BAAc,GAAGA,cAAc,CAAC5tB,aAAhC;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;0CAKkB;AACd,iBAAO,KAAK4pB,KAAL,CAAWryB,IAAX;AAAiB;;;;AAIxB,oBAAA4uB,IAAI;AAAA,mBAAIA,IAAI,CAACpB,SAAT;AAAA,WAJG,CAAP;AAKH;AACD;;;;;;;;0CAKkB;AAAA;;AACd,cAAI,KAAK6E,KAAT,EAAgB;AACZ,iBAAKA,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,sBAAAsjB,IAAI,EAAI;AACJA,kBAAI,CAAC7J,QAAL,GAAgB,OAAI,CAAC0E,SAArB;AACAmF,kBAAI,CAAClB,iBAAL,GAAyB,OAAI,CAACwF,QAA9B;AACH,aAPD;AAQH;AACJ;;;4BA/xBc;AACX,iBAAO,KAAKA,QAAL,GAAgB,KAAKD,eAAL,CAAqBnG,QAArC,GAAgD,KAAKmG,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;;;;4BAIW;AAAE,iBAAO,KAAKwJ,KAAL,GAAa,IAAb,GAAoB,SAA3B;AAAuC;AACpD;;;;;;;4BAIe;AAAE,iBAAO,KAAKzE,SAAZ;AAAwB;AACzC;;;;;0BAIaztB,K,EAAO;AAChB,eAAKytB,SAAL,GAAiB,oFAAsBztB,KAAtB,CAAjB;;AACA,eAAKuuB,eAAL;AACH;AACD;;;;;;;;;4BAMkB;AAAE,iBAAO,KAAKb,YAAZ;AAA2B;AAC/C;;;;;0BAIgBrT,E,EAAI;AAChB,eAAKqT,YAAL,GAAoBrT,EAApB;;AACA,cAAI,KAAKwU,eAAT,EAA0B;AACtB;AACA,iBAAKJ,oBAAL;AACH;AACJ;AACD;;;;;;;;4BAKY;AAAE,iBAAO,KAAKxD,MAAZ;AAAqB;AACnC;;;;;0BAIUjrB,K,EAAO;AACb,eAAKmyB,UAAL,CAAgBnyB,KAAhB;AACA,eAAKirB,MAAL,GAAcjrB,KAAd;AACH;AACD;;;;;;;;4BAKS;AACL,iBAAO,KAAKkvB,UAAL,GAAkB,KAAKA,UAAL,CAAgBvZ,EAAlC,GAAuC,KAAK0X,IAAnD;AACH;AACD;;;;;;;;4BAKe;AAAE,iBAAO,KAAKxG,SAAZ;AAAwB;AACzC;;;;;0BAIa7mB,K,EAAO;AAChB,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;AACA,eAAK4uB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;4BAKkB;AACd,iBAAO,KAAKuuB,UAAL,GAAkB,KAAKA,UAAL,CAAgBhR,WAAlC,GAAgD,KAAKkU,YAA5D;AACH;AACD;;;;;0BAIgBpyB,K,EAAO;AACnB,eAAKoyB,YAAL,GAAoBpyB,KAApB;AACA,eAAK4uB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;4BAIc;AACV,iBAAQ,KAAKuuB,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAApC,IAAgD,KAAKsB,eAAL,EAAvD;AACH;AACD;;;;;;;;4BAKY;AACR,iBAAO,CAAC,CAAC,KAAK5B,UAAN,IAAoB,KAAKA,UAAL,CAAgBgD,KAArC,KAA+C,KAAKjE,KAAL,CAAWztB,MAAX,KAAsB,CAA5E;AACH;AACD;;;;;;;;4BAKuB;AAAE,iBAAO,CAAC,KAAK0xB,KAAN,IAAe,KAAK1C,OAA3B;AAAqC;AAC9D;;;;;;;;4BAKe;AAAE,iBAAO,KAAKzC,SAAL,GAAiB,CAAC,CAAC,KAAKA,SAAL,CAAepM,QAAlC,GAA6C,KAAK0E,SAAzD;AAAqE;AACtF;;;;;0BAIarlB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB;;AACA,eAAKuuB,eAAL;AACH;AACD;;;;;;;;4BAKiB;AAAE,iBAAO,KAAK/E,WAAZ;AAA0B;AAC7C;;;;;0BAIexpB,K,EAAO;AAAA;;AAClB,eAAKwpB,WAAL,GAAmB,oFAAsBxpB,KAAtB,CAAnB;;AACA,cAAI,KAAKiuB,KAAT,EAAgB;AACZ,iBAAKA,KAAL,CAAW/mB,OAAX;AAAoB;;;;AAIpB,sBAAAsjB,IAAI;AAAA,qBAAIA,IAAI,CAACnB,kBAAL,GAA0B,OAAI,CAACG,WAAnC;AAAA,aAJJ;AAKH;AACJ;AACD;;;;;;;0BAIaxpB,K,EAAO;AAChB,eAAKutB,aAAL,GAAqBvtB,KAArB;AACA,eAAKstB,SAAL,GAAiBttB,KAAjB;AACH;AACD;;;;;;;4BAI2B;AACvB,iBAAO,oFAAS,KAAKiuB,KAAL,CAAWzd,GAAX;AAAgB;;;;AAIhC,oBAAAga,IAAI;AAAA,mBAAIA,IAAI,CAACZ,eAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIuB;AACnB,iBAAO,oFAAS,KAAKqE,KAAL,CAAWzd,GAAX;AAAgB;;;;AAIhC,oBAAAga,IAAI;AAAA,mBAAIA,IAAI,CAACd,QAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIsB;AAClB,iBAAO,oFAAS,KAAKuE,KAAL,CAAWzd,GAAX;AAAgB;;;;AAIhC,oBAAAga,IAAI;AAAA,mBAAIA,IAAI,CAACb,OAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIwB;AACpB,iBAAO,oFAAS,KAAKsE,KAAL,CAAWzd,GAAX;AAAgB;;;;AAIhC,oBAAAga,IAAI;AAAA,mBAAIA,IAAI,CAACX,SAAT;AAAA,WAJY,CAAT,EAAP;AAKH;;;;MA/RqBmD,qB;;AA23B1BE,eAAW,CAACzvB,IAAZ,GAAmB,SAAS40B,mBAAT,CAA6B10B,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIuvB,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,iEAAzB,EAAgD,CAAhD,CAAxH,EAA4K,gEAAyB,sDAAzB,EAAwC,CAAxC,CAA5K,EAAwN,gEAAyB,kEAAzB,EAAoD,CAApD,CAAxN,EAAgR,gEAAyB,wEAAzB,CAAhR,EAAoU,gEAAyB,yDAAzB,EAA2C,EAA3C,CAApU,CAAP;AAA6X,KAAlb;;AACAA,eAAW,CAAClM,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAEqvB,WAAR;AAAqB7W,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqD8U,oBAAc,EAAE,SAASmH,0BAAT,CAAoCpT,EAApC,EAAwCC,GAAxC,EAA6CkM,QAA7C,EAAuD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAC9K,uEAAsBmM,QAAtB,EAAgCnC,OAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAIhK,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC8O,KAAJ,GAAY9M,EAAjE;AACH;AAAE,OALqC;AAKnCpC,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CALwB;AAKFuC,cAAQ,EAAE,EALR;AAKYtC,kBAAY,EAAE,SAASuT,wBAAT,CAAkCrT,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvH,mEAAkB,OAAlB,EAA2B,SAASsT,oCAAT,GAAgD;AAAE,mBAAOrT,GAAG,CAACyL,KAAJ,EAAP;AAAqB,WAAlG,EAAoG,MAApG,EAA4G,SAAS6H,mCAAT,GAA+C;AAAE,mBAAOtT,GAAG,CAAC8M,KAAJ,EAAP;AAAqB,WAAlL,EAAoL,SAApL,EAA+L,SAASyG,sCAAT,CAAgD7P,MAAhD,EAAwD;AAAE,mBAAO1D,GAAG,CAACwT,QAAJ,CAAa9P,MAAb,CAAP;AAA8B,WAAvR;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,IAAtB,EAA4BC,GAAG,CAACkO,IAAhC;;AACA,oEAAmB,UAAnB,EAA+BlO,GAAG,CAACwB,QAAJ,GAAe,IAAf,GAAsBxB,GAAG,CAACmO,SAAzD,EAAoE,kBAApE,EAAwFnO,GAAG,CAACiQ,gBAAJ,IAAwB,IAAhH,EAAsH,eAAtH,EAAuIjQ,GAAG,CAACyT,IAAJ,GAAWzT,GAAG,CAACgI,QAAf,GAA0B,IAAjK,EAAuK,eAAvK,EAAwLhI,GAAG,CAACwB,QAAJ,CAAaqC,QAAb,EAAxL,EAAiN,cAAjN,EAAiO7D,GAAG,CAAC0T,UAArO,EAAiP,sBAAjP,EAAyQ1T,GAAG,CAAC2P,QAA7Q,EAAuR,MAAvR,EAA+R3P,GAAG,CAACyT,IAAnS,EAAyS,kBAAzS,EAA6TzT,GAAG,CAAC0O,eAAjU;;AACA,oEAAmB,wBAAnB,EAA6C1O,GAAG,CAACwB,QAAjD,EAA2D,uBAA3D,EAAoFxB,GAAG,CAAC0T,UAAxF,EAAoG,wBAApG,EAA8H1T,GAAG,CAACgI,QAAlI;AACH;AAAE,OAXqC;AAWnCrO,YAAM,EAAE;AAAE+U,uBAAe,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CAAnB;AAA4DiB,gBAAQ,EAAE,UAAtE;AAAkFgE,mBAAW,EAAE,aAA/F;AAA8G9yB,aAAK,EAAE,OAArH;AAA8HmnB,gBAAQ,EAAE,UAAxI;AAAoJjJ,mBAAW,EAAE,aAAjK;AAAgLyC,gBAAQ,EAAE,UAA1L;AAAsMmK,kBAAU,EAAE,YAAlN;AAAgO/H,gBAAQ,EAAE,UAA1O;AAAsPgQ,yBAAiB,EAAE;AAAzQ,OAX2B;AAWqQha,aAAO,EAAE;AAAE9P,cAAM,EAAE,QAAV;AAAoB6kB,mBAAW,EAAE;AAAjC,OAX9Q;AAWgUxX,cAAQ,EAAE,CAAC,aAAD,CAX1U;AAW2V0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEzX,eAAO,EAAE,iFAAX;AAAgCqiB,mBAAW,EAAEsJ;AAA7C,OAAD,CAA1B,CAAD,EAA0F,wEAA1F,CAXrW;AAWmezL,wBAAkB,EAAEhC,GAXvf;AAW4fiC,WAAK,EAAE,CAXngB;AAWsgBC,UAAI,EAAE,CAX5gB;AAW+gBC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,CAXvhB;AAWujBC,cAAQ,EAAE,SAASmR,oBAAT,CAA8B9T,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1pB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB;;AACA;AACH;AAAE,OAhBqC;AAgBnC9P,YAAM,EAAE,CAAC,6/FAAD,CAhB2B;AAgBs+F6S,mBAAa,EAAE,CAhBr/F;AAgBw/FC,qBAAe,EAAE;AAhBzgG,KAAzB,CAAnB;AAiBA;;AACAgL,eAAW,CAACtvB,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAE,iEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAH+B,EAI/B;AAAEA,YAAI,EAAE,sDAAR;AAAgBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA5B,OAJ+B,EAK/B;AAAEA,YAAI,EAAE,kEAAR;AAA4BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAxC,OAL+B,EAM/B;AAAEA,YAAI,EAAE;AAAR,OAN+B,EAO/B;AAAEA,YAAI,EAAE,yDAAR;AAAmBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB;AAA/B,OAP+B,CAAN;AAAA,KAA7B;;AASAqvB,eAAW,CAACjU,cAAZ,GAA6B;AACzB8Z,uBAAiB,EAAE,CAAC;AAAEl1B,YAAI,EAAE;AAAR,OAAD,CADM;AAEzBixB,cAAQ,EAAE,CAAC;AAAEjxB,YAAI,EAAE;AAAR,OAAD,CAFe;AAGzBi1B,iBAAW,EAAE,CAAC;AAAEj1B,YAAI,EAAE;AAAR,OAAD,CAHY;AAIzBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAJkB;AAKzBspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CALe;AAMzBqgB,iBAAW,EAAE,CAAC;AAAErgB,YAAI,EAAE;AAAR,OAAD,CANY;AAOzB8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CAPe;AAQzBgwB,qBAAe,EAAE,CAAC;AAAEhwB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kBAAD;AAArB,OAAD,CARQ;AASzB8sB,gBAAU,EAAE,CAAC;AAAEjtB,YAAI,EAAE;AAAR,OAAD,CATa;AAUzBklB,cAAQ,EAAE,CAAC;AAAEllB,YAAI,EAAE;AAAR,OAAD,CAVe;AAWzBoL,YAAM,EAAE,CAAC;AAAEpL,YAAI,EAAE;AAAR,OAAD,CAXiB;AAYzBiwB,iBAAW,EAAE,CAAC;AAAEjwB,YAAI,EAAE;AAAR,OAAD,CAZY;AAazBowB,WAAK,EAAE,CAAC;AAAEpwB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACkrB,OAAD,EAAU;AACjC;AACA;AACA+J,qBAAW,EAAE;AAHoB,SAAV;AAA/B,OAAD;AAbkB,KAA7B;AAmBA;;AAAc,KAAC,YAAY;AAAE,sEAAyB/F,WAAzB,EAAsC,CAAC;AAC5DrvB,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,eADX;AAEC6V,kBAAQ,wEAFT;AAGCvL,kBAAQ,EAAE,aAHX;AAIClB,cAAI,EAAE;AACF,+BAAmB,6BADjB;AAEF,uCAA2B,0BAFzB;AAGF,oCAAwB,wBAHtB;AAIF,oCAAwB,qBAJtB;AAKF,mCAAuB,YALrB;AAMF,2CAA+B,UAN7B;AAOF,2BAAe,MAPb;AAQF,8CAAkC,UARhC;AASF,6CAAiC,YAT/B;AAUF,8CAAkC,UAVhC;AAWF,uCAA2B,iBAXzB;AAYF,qBAAS,eAZP;AAaF,uBAAW,SAbT;AAcF,sBAAU,SAdR;AAeF,yBAAa,kBAfX;AAgBF,oBAAQ;AAhBN,WAJP;AAsBCoE,mBAAS,EAAE,CAAC;AAAEjY,mBAAO,EAAE,iFAAX;AAAgCqiB,uBAAW,EAAEsJ;AAA7C,WAAD,CAtBZ;AAuBCjL,uBAAa,EAAE,gEAAkBG,IAvBlC;AAwBCF,yBAAe,EAAE,sEAAwBG,MAxB1C;AAyBCjT,gBAAM,EAAE,CAAC,6/FAAD;AAzBT,SAAD;AAFsD,OAAD,CAAtC,EA6BrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE,iEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC3HF,gBAAI,EAAE;AADqH,WAAD;AAA3C,SAAlE,EAEX;AAAEA,cAAI,EAAE,sDAAR;AAAuBE,oBAAU,EAAE,CAAC;AACtCF,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAFW,EAIX;AAAEA,cAAI,EAAE,kEAAR;AAAmCE,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SAJW,EAMX;AAAEA,cAAI,EAAE;AAAR,SANW,EAMyB;AAAEA,cAAI,EAAE,yDAAR;AAA0BE,oBAAU,EAAE,CAAC;AAC7EF,gBAAI,EAAE;AADuE,WAAD,EAE7E;AACCA,gBAAI,EAAE;AADP,WAF6E;AAAtC,SANzB,CAAP;AAUF,OAvCS,EAuCP;AAAEgwB,uBAAe,EAAE,CAAC;AAC9BhwB,cAAI,EAAE,mDADwB;AAE9BG,cAAI,EAAE,CAAC,kBAAD;AAFwB,SAAD,CAAnB;AAGViL,cAAM,EAAE,CAAC;AACTpL,cAAI,EAAE;AADG,SAAD,CAHE;AAKViwB,mBAAW,EAAE,CAAC;AACdjwB,cAAI,EAAE;AADQ,SAAD,CALH;AAOVixB,gBAAQ,EAAE,CAAC;AACXjxB,cAAI,EAAE;AADK,SAAD,CAPA;AASVi1B,mBAAW,EAAE,CAAC;AACdj1B,cAAI,EAAE;AADQ,SAAD,CATH;AAWVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAXG;AAaVspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAbA;AAeVqgB,mBAAW,EAAE,CAAC;AACdrgB,cAAI,EAAE;AADQ,SAAD,CAfH;AAiBV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAjBA;AAmBVitB,kBAAU,EAAE,CAAC;AACbjtB,cAAI,EAAE;AADO,SAAD,CAnBF;AAqBVklB,gBAAQ,EAAE,CAAC;AACXllB,cAAI,EAAE;AADK,SAAD,CArBA;AAuBVk1B,yBAAiB,EAAE,CAAC;AACpBl1B,cAAI,EAAE;AADc,SAAD,CAvBT;AAyBVowB,aAAK,EAAE,CAAC;AACRpwB,cAAI,EAAE,6DADE;AAERG,cAAI,EAAE,CAACkrB,OAAD,EAAU;AACR;AACA;AACA+J,uBAAW,EAAE;AAHL,WAAV;AAFE,SAAD;AAzBG,OAvCO;AAuEb,KAvEF;;AAwEd,QAAI,KAAJ,EAAW,CAmLV;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;AACA,QAAIC,cAAc,GAAG,CAArB;AACA;;;;;QAIMC,Y;AACF;;;;AAIA,4BAAYjX,WAAZ,EAAyBkX,eAAzB,EAA0C;AAAA;;AACtC,aAAKlX,WAAL,GAAmBA,WAAnB;AACA,aAAKkX,eAAL,GAAuBA,eAAvB;AACA;;;;AAGA,aAAK7D,OAAL,GAAe,KAAf;AACA,aAAK8D,UAAL,GAAkB,KAAlB;AACA;;;;;;AAKA,aAAKC,iBAAL,GAAyB,KAAKF,eAAL,CAAqBE,iBAA9C;AACA;;;;AAGA,aAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;AACA;;;;AAGA,aAAKtV,WAAL,GAAmB,EAAnB;AACA;;;;AAGA,aAAKvI,EAAL,iCAAiCwd,cAAc,EAA/C;AACA,aAAK9N,SAAL,GAAiB,KAAjB;AACA,aAAKqB,aAAL;AAAsB;AAAkB,aAAKvK,WAAL,CAAiBxL,aAAzD;AACH;AACD;;;;;;;;;;AAoCA;;;sCAGc;AACV,eAAK8iB,SAAL,CAAe7E,YAAf,CAA4BjuB,IAA5B;AACH;AACD;;;;;;;;iCAKSN,K,EAAO;AACZ;AACA;AACA,cAAIA,KAAK,IAAIA,KAAK,CAAC4X,OAAN,KAAkB,yDAA3B,IAAkC,CAAC,6EAAe5X,KAAf,EAAsB,UAAtB,CAAvC,EAA0E;AACtE,iBAAKozB,SAAL,CAAenF,iBAAf;AACH;;AACD,eAAKoF,YAAL,CAAkBrzB,KAAlB;AACH;AACD;;;;;;;gCAIQ;AACJ,cAAI,KAAKszB,SAAT,EAAoB;AAChB,iBAAKD,YAAL;AACH;;AACD,eAAKlE,OAAL,GAAe,KAAf,CAJI,CAKJ;;AACA,cAAI,CAAC,KAAKiE,SAAL,CAAejE,OAApB,EAA6B;AACzB,iBAAKiE,SAAL,CAAexH,KAAf;AACH;;AACD,eAAKwH,SAAL,CAAe7E,YAAf,CAA4BjuB,IAA5B;AACH;AACD;;;;;;iCAGS;AACL,eAAK6uB,OAAL,GAAe,IAAf;;AACA,eAAKiE,SAAL,CAAe7E,YAAf,CAA4BjuB,IAA5B;AACH;AACD;;;;;;;;qCAKaN,K,EAAO;AAChB,cAAI,CAAC,KAAKqmB,aAAL,CAAmB1mB,KAApB,IAA6B,CAAC,CAACK,KAAnC,EAA0C;AACtC,iBAAKozB,SAAL,CAAed,QAAf,CAAwBtyB,KAAxB;AACH;;AACD,cAAI,CAACA,KAAD,IAAU,KAAKuzB,eAAL,CAAqBvzB,KAArB,CAAd,EAA2C;AACvC,iBAAKmzB,OAAL,CAAa7a,IAAb,CAAkB;AAAE3G,mBAAK,EAAE,KAAK0U,aAAd;AAA6B1mB,mBAAK,EAAE,KAAK0mB,aAAL,CAAmB1mB;AAAvD,aAAlB;;AACA,gBAAIK,KAAJ,EAAW;AACPA,mBAAK,CAAC6X,cAAN;AACH;AACJ;AACJ;AACD;;;;;;mCAGW;AACP;AACA,eAAKub,SAAL,CAAe7E,YAAf,CAA4BjuB,IAA5B;AACH;AACD;;;;;;;;8BAKM6f,O,EAAS;AACX,eAAKkG,aAAL,CAAmBkE,KAAnB,CAAyBpK,OAAzB;AACH;AACD;;;;;;;;;wCAMgBngB,K,EAAO;AACnB,cAAI,6EAAeA,KAAf,CAAJ,EAA2B;AACvB,mBAAO,KAAP;AACH;AACD;;;AACA,cAAMwzB,UAAU,GAAG,KAAKN,iBAAxB;AACA;;AACA,cAAMtb,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA,iBAAOiY,KAAK,CAACC,OAAN,CAAc0D,UAAd,IAA4BA,UAAU,CAAC7yB,OAAX,CAAmBiX,OAAnB,IAA8B,CAAC,CAA3D,GAA+D4b,UAAU,CAACC,GAAX,CAAe7b,OAAf,CAAtE;AACH;;;0BAtHYjY,K,EAAO;AAChB,cAAIA,KAAJ,EAAW;AACP,iBAAKyzB,SAAL,GAAiBzzB,KAAjB;;AACA,iBAAKyzB,SAAL,CAAeM,aAAf,CAA6B,IAA7B;AACH;AACJ;AACD;;;;;;;4BAIgB;AAAE,iBAAO,KAAKT,UAAZ;AAAyB;AAC3C;;;;;0BAIctzB,K,EAAO;AAAE,eAAKszB,UAAL,GAAkB,oFAAsBtzB,KAAtB,CAAlB;AAAiD;AACxE;;;;;;;4BAIe;AAAE,iBAAO,KAAKqlB,SAAL,IAAmB,KAAKoO,SAAL,IAAkB,KAAKA,SAAL,CAAe9S,QAA3D;AAAuE;AACxF;;;;;0BAIa3gB,K,EAAO;AAAE,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIY;AAAE,iBAAO,CAAC,KAAK0mB,aAAL,CAAmB1mB,KAA3B;AAAmC;;;;;;AA0FrDozB,gBAAY,CAAC31B,IAAb,GAAoB,SAASu2B,oBAAT,CAA8Br2B,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAIy1B,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB1G,yBAAzB,CAArE,CAAP;AAAmI,KAA1L;;AACA0G,gBAAY,CAAChd,IAAb,GAAoB,gEAAyB;AAAEvY,UAAI,EAAEu1B,YAAR;AAAsB/c,eAAS,EAAE,CAAC,CAAC,OAAD,EAAU,iBAAV,EAA6B,EAA7B,CAAD,CAAjC;AAAqE0I,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,EAAsB,mBAAtB,CAAhF;AAA4HuC,cAAQ,EAAE,CAAtI;AAAyItC,kBAAY,EAAE,SAASiV,yBAAT,CAAmC/U,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtP,mEAAkB,SAAlB,EAA6B,SAASgV,uCAAT,CAAiDrR,MAAjD,EAAyD;AAAE,mBAAO1D,GAAG,CAACwT,QAAJ,CAAa9P,MAAb,CAAP;AAA8B,WAAtH,EAAwH,MAAxH,EAAgI,SAASsR,oCAAT,GAAgD;AAAE,mBAAOhV,GAAG,CAAC8M,KAAJ,EAAP;AAAqB,WAAvM,EAAyM,OAAzM,EAAkN,SAASmI,qCAAT,GAAiD;AAAE,mBAAOjV,GAAG,CAACkV,MAAJ,EAAP;AAAsB,WAA3R,EAA6R,OAA7R,EAAsS,SAASC,qCAAT,GAAiD;AAAE,mBAAOnV,GAAG,CAACoV,QAAJ,EAAP;AAAwB,WAAjX;AACH;;AAAC,YAAIrV,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,IAAtB,EAA4BC,GAAG,CAACxJ,EAAhC;;AACA,oEAAmB,UAAnB,EAA+BwJ,GAAG,CAACwB,QAAJ,IAAgB,IAA/C,EAAqD,aAArD,EAAoExB,GAAG,CAACjB,WAAJ,IAAmB,IAAvF,EAA6F,cAA7F,EAA6GiB,GAAG,CAACsU,SAAJ,IAAiBtU,GAAG,CAACsU,SAAJ,CAAc1G,SAA/B,GAA2C5N,GAAG,CAACsU,SAAJ,CAAc1G,SAAd,CAAwByH,OAAnE,GAA6E,IAA1L,EAAgM,eAAhM,EAAiNrV,GAAG,CAACsU,SAAJ,IAAiBtU,GAAG,CAACsU,SAAJ,CAActM,QAA/B,IAA2C,IAA5P;AACH;AAAE,OALsC;AAKpCrO,YAAM,EAAE;AAAEya,yBAAiB,EAAE,CAAC,+BAAD,EAAkC,mBAAlC,CAArB;AAA6ErV,mBAAW,EAAE,aAA1F;AAAyGvI,UAAE,EAAE,IAA7G;AAAmH8e,gBAAQ,EAAE,CAAC,iBAAD,EAAoB,UAApB,CAA7H;AAA8Jd,iBAAS,EAAE,CAAC,uBAAD,EAA0B,WAA1B,CAAzK;AAAiNhT,gBAAQ,EAAE;AAA3N,OAL4B;AAK6M5H,aAAO,EAAE;AAAEya,eAAO,EAAE;AAAX,OALtN;AAK2Pld,cAAQ,EAAE,CAAC,cAAD,EAAiB,iBAAjB,CALrQ;AAK0S0C,cAAQ,EAAE,CAAC,kEAAD;AALpT,KAAzB,CAApB;AAMA;;AACAoa,gBAAY,CAACx1B,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEC,YAAI,EAAE;AAAR,OADgC,EAEhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC0uB,yBAAD;AAAtB,SAAD;AAA/B,OAFgC,CAAN;AAAA,KAA9B;;AAIA0G,gBAAY,CAACna,cAAb,GAA8B;AAC1Bwb,cAAQ,EAAE,CAAC;AAAE52B,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CADgB;AAE1B21B,eAAS,EAAE,CAAC;AAAE91B,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,uBAAD;AAArB,OAAD,CAFe;AAG1Bu1B,uBAAiB,EAAE,CAAC;AAAE11B,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,+BAAD;AAArB,OAAD,CAHO;AAI1Bw1B,aAAO,EAAE,CAAC;AAAE31B,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,sBAAD;AAAtB,OAAD,CAJiB;AAK1BkgB,iBAAW,EAAE,CAAC;AAAErgB,YAAI,EAAE;AAAR,OAAD,CALa;AAM1B8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CANsB;AAO1B8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD;AAPgB,KAA9B;AASA;;AAAc,KAAC,YAAY;AAAE,sEAAyBu1B,YAAzB,EAAuC,CAAC;AAC7Dv1B,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAECsK,kBAAQ,EAAE,+BAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,kCADP;AAEF,yBAAa,kBAFX;AAGF,sBAAU,SAHR;AAIF,uBAAW,UAJT;AAKF,uBAAW,YALT;AAMF,oBAAQ,IANN;AAOF,+BAAmB,kBAPjB;AAQF,kCAAsB,qBARpB;AASF,mCAAuB,uEATrB;AAUF,oCAAwB;AAVtB;AAHP,SAAD;AAFuD,OAAD,CAAvC,EAkBrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC3EF,gBAAI,EAAE,oDADqE;AAE3EG,gBAAI,EAAE,CAAC0uB,yBAAD;AAFqE,WAAD;AAA/B,SAA9B,CAAP;AAGF,OArBS,EAqBP;AAAE6G,yBAAiB,EAAE,CAAC;AAChC11B,cAAI,EAAE,mDAD0B;AAEhCG,cAAI,EAAE,CAAC,+BAAD;AAF0B,SAAD,CAArB;AAGVw1B,eAAO,EAAE,CAAC;AACV31B,cAAI,EAAE,oDADI;AAEVG,cAAI,EAAE,CAAC,sBAAD;AAFI,SAAD,CAHC;AAMVkgB,mBAAW,EAAE,CAAC;AACdrgB,cAAI,EAAE;AADQ,SAAD,CANH;AAQV8X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD,CARM;AAUV42B,gBAAQ,EAAE,CAAC;AACX52B,cAAI,EAAE,mDADK;AAEXG,cAAI,EAAE,CAAC,iBAAD;AAFK,SAAD,CAVA;AAaV21B,iBAAS,EAAE,CAAC;AACZ91B,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,uBAAD;AAFM,SAAD,CAbD;AAgBV2iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD;AAhBA,OArBO;AAuCb,KAvCF;;AAwCd,QAAI,KAAJ,EAAW,CAyDV;AAED;;;;;;AAKA;;;AACA,QAAM62B,iBAAiB,GAAG,CACtBxH,WADsB,EAEtBhE,OAFsB,EAGtBkK,YAHsB,EAItB9H,aAJsB,EAKtBxC,aALsB,EAMtBE,mBANsB,CAA1B;AAQA,QAAM2L,EAAE,GAAI;AACRpB,uBAAiB,EAAE,CAAC,2DAAD;AADX,KAAZ;;QAGMqB,c;;;;AAENA,kBAAc,CAACvb,IAAf,GAAsB,+DAAwB;AAAExb,UAAI,EAAE+2B;AAAR,KAAxB,CAAtB;AACAA,kBAAc,CAACtb,IAAf,GAAsB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS22B,sBAAT,CAAgCl3B,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIi3B,cAAV,GAAP;AAAqC,OAArF;AAAuFpb,eAAS,EAAE,CACxI,wEADwI,EAExI;AACIjY,eAAO,EAAEmrB,yBADb;AAEIoI,gBAAQ;AAAI;AAAiBH;AAFjC,OAFwI;AAAlG,KAAxB,CAAtB;;AAOA,KAAC,YAAY;AAAE,OAAC,OAAOjb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bkb,cAA1B,EAA0C;AAAEjb,oBAAY,EAAE,CAACuT,WAAD,EACpHhE,OADoH,EAEpHkK,YAFoH,EAGpH9H,aAHoH,EAIpHxC,aAJoH,EAKpHE,mBALoH,CAAhB;AAK9EpP,eAAO,EAAE,CAACsT,WAAD,EAC/BhE,OAD+B,EAE/BkK,YAF+B,EAG/B9H,aAH+B,EAI/BxC,aAJ+B,EAK/BE,mBAL+B;AALqE,OAA1C,CAAnD;AAUmB,KAVlC;AAWA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB4L,cAAzB,EAAyC,CAAC;AAC/D/2B,YAAI,EAAE,sDADyD;AAE/DG,YAAI,EAAE,CAAC;AACC4b,iBAAO,EAAE8a,iBADV;AAEC/a,sBAAY,EAAE+a,iBAFf;AAGClb,mBAAS,EAAE,CACP,wEADO,EAEP;AACIjY,mBAAO,EAAEmrB,yBADb;AAEIoI,oBAAQ;AAAI;AAAiBH;AAFjC,WAFO;AAHZ,SAAD;AAFyD,OAAD,CAAzC,EAarB,IAbqB,EAaf,IAbe;AAaP,KAbR;AAed;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACzmBA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAgBA,QAAMlV,GAAG,GAAG,CAAC,mBAAD,EAAsB,EAAtB,CAAZ;;AACA,aAASsV,6BAAT,CAAuC7V,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,6DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8V,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,aAAnB,EAAkCA,MAAM,CAACC,YAAzC,EAAuD,gBAAvD,EAAyED,MAAM,CAACC,YAAhF;;AACA,kEAAmB,SAAnB,EAA8BD,MAAM,CAACE,OAArC;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,GAA1B,EAA+BF,MAAM,CAACG,KAAtC,EAA6C,GAA7C;AACH;AAAE;;AACH,aAASC,kCAAT,CAA4ClW,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmW,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,kEAAmB,aAAnB,EAAkCA,MAAM,CAACJ,YAAzC,EAAuD,gBAAvD,EAAyEI,MAAM,CAACJ,YAAhF;;AACA,kEAAmB,SAAnB,EAA8BI,MAAM,CAACC,eAArC;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,GAA1B,EAA+BD,MAAM,CAACC,eAAP,IAA0BD,MAAM,CAACE,qBAAjC,GAAyDF,MAAM,CAACF,KAAhE,GAAwE,EAAvG,EAA2G,GAA3G;AACH;AAAE;;AACH,aAASK,kCAAT,CAA4CtW,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,YAAMuW,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,sDAAT,GAAkE;AAAE,sEAAqBD,GAArB;;AAA2B,cAAME,OAAO,GAAGxW,GAAG,CAACyW,SAApB;;AAA+B,cAAMC,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AAAwC,iBAAOA,MAAM,CAACC,YAAP,CAAoBH,OAApB,CAAP;AAAsC,SAAvO;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,6DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,UAAIzW,EAAE,GAAG,CAAT,EAAY;AACV,YAAMyW,OAAO,GAAGxW,GAAG,CAACyW,SAApB;AACA,YAAMG,WAAW,GAAG5W,GAAG,CAACpe,KAAxB;;AACA,YAAMi1B,WAAW,GAAG,8DAAuBj1B,KAA3C;;AACA,YAAMk1B,MAAM,GAAG,6DAAf;;AACA,kEAAmB,OAAnB,EAA4BA,MAAM,CAACC,UAAnC,EAA+C,aAA/C,EAA8DD,MAAM,CAAChB,YAArE,EAAmF,gBAAnF,EAAqGgB,MAAM,CAAChB,YAA5G;;AACA,kEAAmB,4BAAnB,EAAiD,CAACU,OAAO,CAACrW,OAA1D,EAAmE,0BAAnE,EAA+F2W,MAAM,CAACE,aAAP,CAAqBH,WAArB,EAAkCD,WAAlC,CAA/F;;AACA,iEAAkB,SAAlB,EAA6BJ,OAAO,CAAC3uB,UAArC,EAAiD,UAAjD,EAA6DivB,MAAM,CAACE,aAAP,CAAqBH,WAArB,EAAkCD,WAAlC,IAAiD,CAAjD,GAAqD,IAAI,CAAtH;;AACA,kEAAmB,YAAnB,EAAiCJ,OAAO,CAACjR,SAAzC,EAAoD,eAApD,EAAqE,CAACiR,OAAO,CAACrW,OAAT,IAAoB,IAAzF,EAA+F,eAA/F,EAAgH2W,MAAM,CAACG,aAAP,KAAyBT,OAAO,CAAC31B,KAAjJ;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,4BAAnB,EAAiDi2B,MAAM,CAACG,aAAP,KAAyBT,OAAO,CAAC31B,KAAlF,EAAyF,yBAAzF,EAAoHi2B,MAAM,CAACI,UAAP,KAAsBV,OAAO,CAAC31B,KAAlJ;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,GAA1B,EAA+B21B,OAAO,CAACW,YAAvC,EAAqD,GAArD;AACH;AAAE;;AACH,aAASC,6BAAT,CAAuCrX,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqBkW,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,IAA/D,EAAqE,CAArE;;AACA,iEAAkB,CAAlB,EAAqBI,kCAArB,EAAyD,CAAzD,EAA4D,EAA5D,EAAgE,IAAhE,EAAsE,CAAtE;;AACA;AACH;;AAAC,UAAItW,EAAE,GAAG,CAAT,EAAY;AACV,YAAMsX,MAAM,GAAGrX,GAAG,CAACyW,SAAnB;AACA,YAAMI,WAAW,GAAG7W,GAAG,CAACpe,KAAxB;;AACA,YAAM01B,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BT,WAAW,KAAK,CAAhB,IAAqBS,MAAM,CAACnB,eAAtD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BkB,MAA7B;AACH;AAAE;;AACH,aAASE,0BAAT,CAAoCxX,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvD,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMyX,MAAM,GAAGxX,GAAG,CAACyW,SAAnB;;AACA,kEAAmB,YAAnB,EAAiCe,MAAM,QAAvC;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACC,MAAhC;AACH;AAAE;;AACH,QAAMlX,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASmX,kCAAT,CAA4C3X,EAA5C,EAAgDC,GAAhD,EAAqD,CAAG;;AACxD,aAAS2X,qCAAT,CAA+C5X,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClE,YAAM6X,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,gBAAzB,EAA2C,CAA3C;;AACA,iEAAkB,kBAAlB,EAAsC,SAASC,gFAAT,CAA0FnU,MAA1F,EAAkG;AAAE,sEAAqBkU,GAArB;;AAA2B,cAAM1B,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC4B,UAAP,GAAoBpU,MAA3B;AAAoC,SAAhP,EAAkP,gBAAlP,EAAoQ,SAASqU,8EAAT,CAAwFrU,MAAxF,EAAgG;AAAE,sEAAqBkU,GAArB;;AAA2B,cAAMI,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACC,aAAP,CAAqBvU,MAArB,CAAP;AAAsC,SAA9c,EAAgd,gBAAhd,EAAke,SAASwU,8EAAT,GAA0F;AAAE,sEAAqBN,GAArB;;AAA2B,cAAMO,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACC,aAAP,EAAP;AAAgC,SAAhqB;;AACA;AACH;;AAAC,UAAIrY,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuX,MAAM,GAAG,6DAAf;;AACA,iEAAkB,YAAlB,EAAgCA,MAAM,CAACQ,UAAvC,EAAmD,UAAnD,EAA+DR,MAAM,CAAC/N,QAAtE,EAAgF,YAAhF,EAA8F+N,MAAM,CAACe,UAArG,EAAiH,SAAjH,EAA4Hf,MAAM,CAACgB,OAAnI,EAA4I,SAA5I,EAAuJhB,MAAM,CAACiB,OAA9J,EAAuK,WAAvK,EAAoLjB,MAAM,CAACkB,SAA3L;AACH;AAAE;;AACH,aAASC,oCAAT,CAA8C1Y,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,YAAMuW,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,eAAzB,EAA0C,CAA1C;;AACA,iEAAkB,kBAAlB,EAAsC,SAASoC,8EAAT,CAAwFhV,MAAxF,EAAgG;AAAE,sEAAqB4S,GAArB;;AAA2B,cAAMI,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACoB,UAAP,GAAoBpU,MAA3B;AAAoC,SAA9O,EAAgP,eAAhP,EAAiQ,SAASiV,2EAAT,CAAqFjV,MAArF,EAA6F;AAAE,sEAAqB4S,GAArB;;AAA2B,cAAMsC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,wBAAR,CAAiCnV,MAAjC,CAAP;AAAkD,SAArd,EAAud,gBAAvd,EAAye,SAASoV,4EAAT,CAAsFpV,MAAtF,EAA8F;AAAE,sEAAqB4S,GAArB;;AAA2B,cAAMyC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,eAAR,CAAwBtV,MAAxB,EAAgC,OAAhC,CAAP;AAAkD,SAA9rB;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkZ,MAAM,GAAG,6DAAf;;AACA,iEAAkB,YAAlB,EAAgCA,MAAM,CAACnB,UAAvC,EAAmD,UAAnD,EAA+DmB,MAAM,CAAC1P,QAAtE,EAAgF,YAAhF,EAA8F0P,MAAM,CAACZ,UAArG,EAAiH,SAAjH,EAA4HY,MAAM,CAACX,OAAnI,EAA4I,SAA5I,EAAuJW,MAAM,CAACV,OAA9J;AACH;AAAE;;AACH,aAASW,0CAAT,CAAoDnZ,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvE,YAAMoZ,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,qBAAzB,EAAgD,CAAhD;;AACA,iEAAkB,kBAAlB,EAAsC,SAASC,0FAAT,CAAoG1V,MAApG,EAA4G;AAAE,sEAAqByV,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACvB,UAAR,GAAqBpU,MAA5B;AAAqC,SAA7P,EAA+P,cAA/P,EAA+Q,SAAS4V,sFAAT,CAAgG5V,MAAhG,EAAwG;AAAE,sEAAqByV,IAArB;;AAA4B,cAAMI,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,4BAAR,CAAqC9V,MAArC,CAAP;AAAsD,SAAnf,EAAqf,gBAArf,EAAugB,SAAS+V,wFAAT,CAAkG/V,MAAlG,EAA0G;AAAE,sEAAqByV,IAArB;;AAA4B,cAAMO,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACV,eAAR,CAAwBtV,MAAxB,EAAgC,MAAhC,CAAP;AAAiD,SAAxuB;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4Z,MAAM,GAAG,6DAAf;;AACA,iEAAkB,YAAlB,EAAgCA,MAAM,CAAC7B,UAAvC,EAAmD,UAAnD,EAA+D6B,MAAM,CAACpQ,QAAtE,EAAgF,YAAhF,EAA8FoQ,MAAM,CAACtB,UAArG,EAAiH,SAAjH,EAA4HsB,MAAM,CAACrB,OAAnI,EAA4I,SAA5I,EAAuJqB,MAAM,CAACpB,OAA9J;AACH;AAAE;;AACH,QAAMrU,GAAG,GAAG,CAAC,QAAD,CAAZ;;AACA,aAAS0V,uCAAT,CAAiD7Z,EAAjD,EAAqDC,GAArD,EAA0D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpE;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA;AACH;AAAE;;AACH,QAAM8Z,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,yBAAL,EAAgC,EAAhC,CAAD,CAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,2BAAD,CAAZ;;AACA,aAASC,0BAAT,CAAoCC,QAApC,EAA8C;AAC1C,aAAOn/B,KAAK,CAAC,+CAAwCm/B,QAAxC,qKAAD,CAAZ;AAGH;AAED;;;;;;AAKA;;;;;QAGMC,iB;AACF,mCAAc;AAAA;;AACV;;;;AAIA,aAAK3hB,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;;;AAGA,aAAK4hB,aAAL,GAAqB,UAArB;AACA;;;;AAGA,aAAKC,iBAAL,GAAyB,eAAzB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,gBAAtB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,YAAtB;AACA;;;;AAGA,aAAKC,aAAL,GAAqB,eAArB;AACA;;;;AAGA,aAAKC,aAAL,GAAqB,WAArB;AACA;;;;AAGA,aAAKC,kBAAL,GAA0B,mBAA1B;AACA;;;;AAGA,aAAKC,kBAAL,GAA0B,eAA1B;AACA;;;;AAGA,aAAKC,sBAAL,GAA8B,aAA9B;AACA;;;;AAGA,aAAKC,0BAAL,GAAkC,uBAAlC;AACH;AACD;;;;;;;;;;wCAMgBpsB,K,EAAOqsB,G,EAAK;AACxB,2BAAUrsB,KAAV,qBAA0BqsB,GAA1B;AACH;;;;;;AAELX,qBAAiB,CAAC37B,IAAlB,GAAyB,SAASu8B,yBAAT,CAAmCr8B,CAAnC,EAAsC;AAAE,aAAO,KAAKA,CAAC,IAAIy7B,iBAAV,GAAP;AAAwC,KAAzG;AACA;;;AAAmBA,qBAAiB,CAACn7B,KAAlB,GAA0B,yEAAmB;AAAEC,aAAO,EAAE,SAAS87B,yBAAT,GAAqC;AAAE,eAAO,IAAIZ,iBAAJ,EAAP;AAAiC,OAAnF;AAAqFj7B,WAAK,EAAEi7B,iBAA5F;AAA+Gh7B,gBAAU,EAAE;AAA3H,KAAnB,CAA1B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBg7B,iBAAzB,EAA4C,CAAC;AAClEv7B,YAAI,EAAE,wDAD4D;AAElEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF4D,OAAD,CAA5C,EAGrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAHL,EAGO,IAHP;AAGe,KAH9B;;AAId,QAAI,KAAJ,EAAW,CAyDV;AAED;;;;;;AAKA;;;;;;QAIM67B,e;AACF;;;;;;;AAOA,6BAAYj6B,KAAZ,EAAmBs2B,YAAnB,EAAiC5R,SAAjC,EAA4CpF,OAA5C,EAAsE;AAAA,UAAjBtY,UAAiB,uEAAJ,EAAI;;AAAA;;AAClE,WAAKhH,KAAL,GAAaA,KAAb;AACA,WAAKs2B,YAAL,GAAoBA,YAApB;AACA,WAAK5R,SAAL,GAAiBA,SAAjB;AACA,WAAKpF,OAAL,GAAeA,OAAf;AACA,WAAKtY,UAAL,GAAkBA,UAAlB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;QAIMkzB,e;AACF;;;;AAIA,+BAAY/d,WAAZ,EAAyB/hB,OAAzB,EAAkC;AAAA;;AAC9B,aAAK+hB,WAAL,GAAmBA,WAAnB;AACA,aAAK/hB,OAAL,GAAeA,OAAf;AACA;;;;AAGA,aAAK86B,OAAL,GAAe,CAAf;AACA;;;;AAGA,aAAKiF,UAAL,GAAkB,CAAlB;AACA;;;;;AAIA,aAAKC,eAAL,GAAuB,CAAvB;AACA;;;;AAGA,aAAKC,mBAAL,GAA2B,IAAI,0DAAJ,EAA3B;AACH;AACD;;;;;;;;qCAIaC,I,EAAM;AACf,cAAIA,IAAI,CAAChb,OAAT,EAAkB;AACd,iBAAK+a,mBAAL,CAAyB1hB,IAAzB,CAA8B2hB,IAAI,CAACt6B,KAAnC;AACH;AACJ;AACD;;;;;;;oCAIYyX,O,EAAS;AACjB;AACA,cAAM8iB,aAAa,GAAG9iB,OAAO,CAAC,SAAD,CAA7B;AAFiB,cAGT4F,IAHS,GAGS,IAHT,CAGTA,IAHS;AAAA,cAGH6X,OAHG,GAGS,IAHT,CAGHA,OAHG;;AAIjB,cAAIzd,OAAO,CAAC,MAAD,CAAP,IAAmB8iB,aAAvB,EAAsC;AAClC,iBAAKjF,eAAL,GAAuBjY,IAAI,IAAIA,IAAI,CAAC7c,MAAb,IAAuB6c,IAAI,CAAC,CAAD,CAAJ,CAAQ7c,MAA/B,GAAwC00B,OAAO,GAAG7X,IAAI,CAAC,CAAD,CAAJ,CAAQ7c,MAA1D,GAAmE,CAA1F;AACH;;AACD,cAAIiX,OAAO,CAAC,iBAAD,CAAP,IAA8B8iB,aAA9B,IAA+C,CAAC,KAAKtF,YAAzD,EAAuE;AACnE,iBAAKA,YAAL,aAAuB,KAAK,KAAKmF,eAAV,GAA4BlF,OAAnD;AACH;;AACD,cAAIqF,aAAa,IAAI,CAAC,KAAKrE,UAA3B,EAAuC;AACnC,iBAAKA,UAAL,aAAqB,MAAMhB,OAA3B;AACH;AACJ;AACD;;;;;;;;sCAKcsF,Q,EAAUC,Q,EAAU;AAC9B;AACA,cAAIC,UAAU,GAAGF,QAAQ,GAAG,KAAKtF,OAAhB,GAA0BuF,QAA3C,CAF8B,CAG9B;;AACA,cAAID,QAAJ,EAAc;AACVE,sBAAU,IAAI,KAAKpF,eAAnB;AACH;;AACD,iBAAOoF,UAAU,IAAI,KAAKP,UAA1B;AACH;AACD;;;;;;;2CAImB;AAAA;;AACf,eAAK//B,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF,mBAAI,CAACrM,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,6DAAK,CAAL,CAA1C,EAAmD3J,SAAnD;AAA8D;;;AAG9D,wBAAM;AACF;AACA,kBAAMi/B,UAAU,GAAG,OAAI,CAAChe,WAAL,CAAiBxL,aAAjB,CAA+BgqB,aAA/B,CAA6C,2BAA7C,CAAnB;;AACA,kBAAIR,UAAJ,EAAgB;AACZA,0BAAU,CAACvP,KAAX;AACH;AACJ,aATD;AAUH,WAdD;AAeH;;;;;;AAELsP,mBAAe,CAACz8B,IAAhB,GAAuB,SAASm9B,uBAAT,CAAiCj9B,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAIu8B,eAAV,EAA2B,gEAAyB,wDAAzB,CAA3B,EAAwE,gEAAyB,oDAAzB,CAAxE,CAAP;AAA0H,KAAvL;;AACAA,mBAAe,CAAClZ,IAAhB,GAAuB,gEAAyB;AAAEnjB,UAAI,EAAEq8B,eAAR;AAAyB7jB,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,CAApC;AAAqE0I,eAAS,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,eAAjB,EAAkC,MAAlC,EAA0C,CAA1C,EAA6C,mBAA7C,CAAhF;AAAmJjG,YAAM,EAAE;AAAEoc,eAAO,EAAE,SAAX;AAAsBiF,kBAAU,EAAE,YAAlC;AAAgDC,uBAAe,EAAE,iBAAjE;AAAoFjF,aAAK,EAAE,OAA3F;AAAoG9X,YAAI,EAAE,MAA1G;AAAkHgZ,kBAAU,EAAE,YAA9H;AAA4ID,qBAAa,EAAE,eAA3J;AAA4Kb,6BAAqB,EAAE;AAAnM,OAA3J;AAAyXxc,aAAO,EAAE;AAAEshB,2BAAmB,EAAE;AAAvB,OAAlY;AAAkb/jB,cAAQ,EAAE,CAAC,iBAAD,CAA5b;AAAid0C,cAAQ,EAAE,CAAC,kEAAD,CAA3d;AAA0fwI,WAAK,EAAE/B,GAAjgB;AAAsgBiC,WAAK,EAAE,CAA7gB;AAAghBC,UAAI,EAAE,CAAthB;AAAyhBC,YAAM,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,MAA3B,CAAD,EAAqC,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,OAAnB,EAA4B,SAA5B,CAArC,EAA6E,CAAC,aAAD,EAAgB,MAAhB,CAA7E,EAAsG,CAAC,CAAD,EAAI,yBAAJ,CAAtG,EAAsI,CAAC,MAAD,EAAS,KAAT,CAAtI,EAAuJ,CAAC,aAAD,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,yBAAjC,EAA4D,CAA5D,EAA+D,YAA/D,EAA6E,eAA7E,EAA8F,CAA9F,EAAiG,MAAjG,CAAvJ,EAAiQ,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8B,4CAA9B,EAA4E,CAA5E,EAA+E,SAA/E,EAA0F,UAA1F,EAAsG,4BAAtG,EAAoI,0BAApI,EAAgK,OAAhK,EAAyK,YAAzK,EAAuL,eAAvL,EAAwM,OAAxM,EAAiN,CAAjN,EAAoN,OAApN,EAA6N,SAA7N,CAAjQ,EAA0e,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,yBAA3B,CAA1e,EAAiiB,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,wBAAxB,EAAkD,qBAAlD,EAAyE,CAAzE,EAA4E,SAA5E,EAAuF,UAAvF,EAAmG,OAAnG,CAAjiB,EAA8oB,CAAC,CAAD,EAAI,gCAAJ,CAA9oB,CAAjiB;AAAutCC,cAAQ,EAAE,SAASgZ,wBAAT,CAAkC3b,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACl0C,mEAAkB,CAAlB,EAAqB6V,6BAArB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,IAA1D,EAAgE,CAAhE;;AACA,mEAAkB,CAAlB,EAAqBwB,6BAArB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,IAA1D,EAAgE,CAAhE;AACH;;AAAC,YAAIrX,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,MAAlB,EAA0BC,GAAG,CAACmW,eAAJ,GAAsBnW,GAAG,CAACoW,qBAApD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BpW,GAAG,CAAC9B,IAAjC;AACH;AAAE,OAPyC;AAOvC2E,gBAAU,EAAE,CAAC,oDAAD,EAAc,uDAAd,EAA8B,uDAA9B,CAP2B;AAOoB5S,YAAM,EAAE,CAAC,+zCAAD,CAP5B;AAO+1C6S,mBAAa,EAAE,CAP92C;AAOi3CC,qBAAe,EAAE;AAPl4C,KAAzB,CAAvB;AAQA;;AACAgY,mBAAe,CAACt8B,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEC,YAAI,EAAE;AAAR,OADmC,EAEnC;AAAEA,YAAI,EAAE;AAAR,OAFmC,CAAN;AAAA,KAAjC;;AAIAq8B,mBAAe,CAACjhB,cAAhB,GAAiC;AAC7Bkc,WAAK,EAAE,CAAC;AAAEt3B,YAAI,EAAE;AAAR,OAAD,CADsB;AAE7Bwf,UAAI,EAAE,CAAC;AAAExf,YAAI,EAAE;AAAR,OAAD,CAFuB;AAG7Bw4B,gBAAU,EAAE,CAAC;AAAEx4B,YAAI,EAAE;AAAR,OAAD,CAHiB;AAI7Bu4B,mBAAa,EAAE,CAAC;AAAEv4B,YAAI,EAAE;AAAR,OAAD,CAJc;AAK7B03B,2BAAqB,EAAE,CAAC;AAAE13B,YAAI,EAAE;AAAR,OAAD,CALM;AAM7Bq3B,aAAO,EAAE,CAAC;AAAEr3B,YAAI,EAAE;AAAR,OAAD,CANoB;AAO7Bs8B,gBAAU,EAAE,CAAC;AAAEt8B,YAAI,EAAE;AAAR,OAAD,CAPiB;AAQ7Bu8B,qBAAe,EAAE,CAAC;AAAEv8B,YAAI,EAAE;AAAR,OAAD,CARY;AAS7Bw8B,yBAAmB,EAAE,CAAC;AAAEx8B,YAAI,EAAE;AAAR,OAAD;AATQ,KAAjC;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyBq8B,eAAzB,EAA0C,CAAC;AAChEr8B,YAAI,EAAE,uDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,qBADX;AAEC6V,kBAAQ,EAAE,stEAFX;AAGCzM,cAAI,EAAE;AACF,qBAAS,mBADP;AAEF,oBAAQ,MAFN;AAGF,6BAAiB;AAHf,WAHP;AAQCkB,kBAAQ,EAAE,iBARX;AASC2L,uBAAa,EAAE,gEAAkBG,IATlC;AAUCF,yBAAe,EAAE,sEAAwBG,MAV1C;AAWCjT,gBAAM,EAAE,CAAC,+zCAAD;AAXT,SAAD;AAF0D,OAAD,CAA1C,EAerB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,CAAP;AAAgE,OAfzD,EAe2D;AAAEq3B,eAAO,EAAE,CAAC;AACxFr3B,cAAI,EAAE;AADkF,SAAD,CAAX;AAE5Es8B,kBAAU,EAAE,CAAC;AACbt8B,cAAI,EAAE;AADO,SAAD,CAFgE;AAI5Eu8B,uBAAe,EAAE,CAAC;AAClBv8B,cAAI,EAAE;AADY,SAAD,CAJ2D;AAM5Ew8B,2BAAmB,EAAE,CAAC;AACtBx8B,cAAI,EAAE;AADgB,SAAD,CANuD;AAQ5Es3B,aAAK,EAAE,CAAC;AACRt3B,cAAI,EAAE;AADE,SAAD,CARqE;AAU5Ewf,YAAI,EAAE,CAAC;AACPxf,cAAI,EAAE;AADC,SAAD,CAVsE;AAY5Ew4B,kBAAU,EAAE,CAAC;AACbx4B,cAAI,EAAE;AADO,SAAD,CAZgE;AAc5Eu4B,qBAAa,EAAE,CAAC;AAChBv4B,cAAI,EAAE;AADU,SAAD,CAd6D;AAgB5E03B,6BAAqB,EAAE,CAAC;AACxB13B,cAAI,EAAE;AADkB,SAAD;AAhBqD,OAf3D;AAiCb,KAjCF;;AAkCd,QAAI,KAAJ,EAAW,CAwEV;AAED;;;;;;AAKA;;;AACA,QAAMi9B,aAAa,GAAG,CAAtB;AACA;;;;;;QAKMC,Y;AACF;;;;;;AAMA,4BAAYxW,kBAAZ,EAAgCyW,YAAhC,EAA8CC,YAA9C,EAA4DrkB,IAA5D,EAAkE;AAAA;;AAC9D,aAAK2N,kBAAL,GAA0BA,kBAA1B;AACA,aAAKyW,YAAL,GAAoBA,YAApB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKrkB,IAAL,GAAYA,IAAZ;AACA,aAAKskB,qBAAL,GAA6B,kDAAax3B,KAA1C;AACA;;;;AAGA,aAAKy3B,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAKC,gBAAL,GAAwB,IAAI,0DAAJ,EAAxB;;AACA,YAAI,CAAC,KAAKJ,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,YAAI,CAAC,KAAK8B,YAAV,EAAwB;AACpB,gBAAM9B,0BAA0B,CAAC,kBAAD,CAAhC;AACH;;AACD,aAAKoC,WAAL,GAAmB,KAAKL,YAAL,CAAkBM,KAAlB,EAAnB;AACH;AACD;;;;;;;;;AAwDA;;;6CAGqB;AAAA;;AACjB,eAAKL,qBAAL,GAA6B,KAAKD,YAAL,CAAkBO,aAAlB,CACxB32B,IADwB,CACnB,kEAAU,IAAV,CADmB,EAExB3J,SAFwB;AAEb;;;AAGhB;AAAA,mBAAM,OAAI,CAACugC,KAAL,EAAN;AAAA,WAL6B,CAA7B;AAMH;AACD;;;;;;sCAGc;AACV,eAAKP,qBAAL,CAA2B3/B,WAA3B;AACH;AACD;;;;;;;;sCAKcmgC,I,EAAM;AAChB,cAAI,KAAKC,aAAL,IAAsBD,IAA1B,EAAgC;AAC5B;AACA,gBAAME,YAAY,GAAG,KAAKX,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAArB;AACA;;;AACA,gBAAM6E,aAAa,GAAG,KAAKb,YAAL,CAAkBc,QAAlB,CAA2B,KAAK9E,UAAhC,CAAtB;AACA;;;AACA,gBAAM+E,YAAY,GAAG,KAAKf,YAAL,CAAkBgB,UAAlB,CAA6BL,YAA7B,EAA2CE,aAA3C,EAA0DJ,IAA1D,CAArB;;AACA,iBAAKP,cAAL,CAAoBxiB,IAApB,CAAyBqjB,YAAzB;AACH;;AACD,eAAKZ,cAAL,CAAoBziB,IAApB;AACH;AACD;;;;;;;;mDAK2BtY,K,EAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,cAAM67B,aAAa,GAAG,KAAKZ,WAA3B;AACA;;AACA,cAAMzsB,KAAK,GAAG,KAAKzC,MAAL,EAAd;;AACA,kBAAQ/L,KAAK,CAAC4X,OAAd;AACI,iBAAK,iEAAL;AACI,mBAAKgf,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAoDzsB,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjE,CAAlB;AACA;;AACJ,iBAAK,kEAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAoDzsB,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAjE,CAAlB;AACA;;AACJ,iBAAK,+DAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAoD,CAAC,CAArD,CAAlB;AACA;;AACJ,iBAAK,iEAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAoD,CAApD,CAAlB;AACA;;AACJ,iBAAK,2DAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAoD,IAAI,KAAKL,YAAL,CAAkBmB,OAAlB,CAA0B,KAAKd,WAA/B,CAAxD,CAAlB;AACA;;AACJ,iBAAK,0DAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBkB,eAAlB,CAAkC,KAAKb,WAAvC,EAAqD,KAAKL,YAAL,CAAkBoB,iBAAlB,CAAoC,KAAKf,WAAzC,IACnE,KAAKL,YAAL,CAAkBmB,OAAlB,CAA0B,KAAKd,WAA/B,CADc,CAAlB;AAEA;;AACJ,iBAAK,8DAAL;AACI,mBAAKrE,UAAL,GAAkB52B,KAAK,CAACi8B,MAAN,GACd,KAAKrB,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqD,CAAC,CAAtD,CADc,GAEd,KAAKL,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,CAAC,CAAvD,CAFJ;AAGA;;AACJ,iBAAK,gEAAL;AACI,mBAAKrE,UAAL,GAAkB52B,KAAK,CAACi8B,MAAN,GACd,KAAKrB,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqD,CAArD,CADc,GAEd,KAAKL,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,CAAtD,CAFJ;AAGA;;AACJ,iBAAK,4DAAL;AACA,iBAAK,4DAAL;AACI,kBAAI,CAAC,KAAK9D,UAAN,IAAoB,KAAKA,UAAL,CAAgB,KAAK8D,WAArB,CAAxB,EAA2D;AACvD,qBAAKlE,aAAL,CAAmB,KAAK6D,YAAL,CAAkBmB,OAAlB,CAA0B,KAAKd,WAA/B,CAAnB;;AACA,qBAAKF,cAAL,CAAoBziB,IAApB,GAFuD,CAGvD;;;AACAtY,qBAAK,CAAC6X,cAAN;AACH;;AACD;;AACJ;AACI;AACA;AAzCR;;AA2CA,cAAI,KAAK+iB,YAAL,CAAkBwB,WAAlB,CAA8BP,aAA9B,EAA6C,KAAKjF,UAAlD,CAAJ,EAAmE;AAC/D,iBAAKoE,gBAAL,CAAsB1iB,IAAtB,CAA2B,KAAKse,UAAhC;AACH;;AACD,eAAKyF,gBAAL,GAzD8B,CA0D9B;;;AACAr8B,eAAK,CAAC6X,cAAN;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAKyjB,aAAL,GAAqB,KAAKgB,sBAAL,CAA4B,KAAKjU,QAAjC,CAArB;AACA,eAAKkU,UAAL,GAAkB,KAAKD,sBAAL,CAA4B,KAAK1B,YAAL,CAAkBM,KAAlB,EAA5B,CAAlB;AACA,eAAKsB,WAAL,GACI,KAAK5B,YAAL,CAAkB6B,aAAlB,CAAgC,OAAhC,EAAyC,KAAK7B,YAAL,CAAkBc,QAAlB,CAA2B,KAAK9E,UAAhC,CAAzC,EACK8F,iBADL,EADJ;AAGA;;AACA,cAAIC,YAAY,GAAG,KAAK/B,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKhB,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA7B,EAAyE,KAAKgE,YAAL,CAAkBc,QAAlB,CAA2B,KAAK9E,UAAhC,CAAzE,EAAsH,CAAtH,CAAnB;;AACA,eAAKgG,gBAAL,GACI,CAACnC,aAAa,GAAG,KAAKG,YAAL,CAAkBiC,YAAlB,CAA+BF,YAA/B,CAAhB,GACG,KAAK/B,YAAL,CAAkBkC,iBAAlB,EADJ,IAC6CrC,aAFjD;;AAGA,eAAKsC,aAAL;;AACA,eAAKC,gBAAL;;AACA,eAAK9Y,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;2CAImB;AACf,eAAK0X,gBAAL,CAAsBZ,gBAAtB;AACH;AACD;;;;;;;;wCAKgB;AACZ;AACA,cAAMa,cAAc,GAAG,KAAKtC,YAAL,CAAkBkC,iBAAlB,EAAvB;AACA;;;AACA,cAAMK,cAAc,GAAG,KAAKvC,YAAL,CAAkBwC,iBAAlB,CAAoC,QAApC,CAAvB;AACA;;;AACA,cAAMC,YAAY,GAAG,KAAKzC,YAAL,CAAkBwC,iBAAlB,CAAoC,MAApC,CAArB,CANY,CAOZ;;AACA;;;AACA,cAAIE,QAAQ,GAAGD,YAAY,CAACltB,GAAb;AAAkB;;;;;AAKjC,oBAACotB,KAAD,EAAOr9B,CAAP,EAAa;AACT,mBAAO;AAAE,sBAAAq9B,KAAF;AAAQhH,oBAAM,EAAE4G,cAAc,CAACj9B,CAAD;AAA9B,aAAP;AACH,WAPc,CAAf;AAQA,eAAKs9B,SAAL,GAAiBF,QAAQ,CAACtqB,KAAT,CAAekqB,cAAf,EAA+BO,MAA/B,CAAsCH,QAAQ,CAACtqB,KAAT,CAAe,CAAf,EAAkBkqB,cAAlB,CAAtC,CAAjB;AACH;AACD;;;;;;;;2CAKmB;AACf;AACA,cAAMQ,WAAW,GAAG,KAAK9C,YAAL,CAAkBoB,iBAAlB,CAAoC,KAAKpF,UAAzC,CAApB;AACA;;;AACA,cAAM+G,SAAS,GAAG,KAAK/C,YAAL,CAAkBgD,YAAlB,EAAlB;;AACA,eAAKC,MAAL,GAAc,CAAC,EAAD,CAAd;;AACA,eAAK,IAAI39B,CAAC,GAAG,CAAR,EAAW+5B,IAAI,GAAG,KAAK2C,gBAA5B,EAA8C18B,CAAC,GAAGw9B,WAAlD,EAA+Dx9B,CAAC,IAAI+5B,IAAI,EAAxE,EAA4E;AACxE,gBAAIA,IAAI,IAAIQ,aAAZ,EAA2B;AACvB,mBAAKoD,MAAL,CAAYp9B,IAAZ,CAAiB,EAAjB;;AACAw5B,kBAAI,GAAG,CAAP;AACH;AACD;;;AACA,gBAAMoB,IAAI,GAAG,KAAKT,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKhB,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA7B,EAAyE,KAAKgE,YAAL,CAAkBc,QAAlB,CAA2B,KAAK9E,UAAhC,CAAzE,EAAsH12B,CAAC,GAAG,CAA1H,CAAb;AACA;;;AACA,gBAAM+e,OAAO,GAAG,KAAK6e,iBAAL,CAAuBzC,IAAvB,CAAhB;AACA;;;AACA,gBAAMhX,SAAS,GAAG,KAAKuW,YAAL,CAAkBmD,MAAlB,CAAyB1C,IAAzB,EAA+B,KAAKV,YAAL,CAAkBqD,OAAlB,CAA0BC,aAAzD,CAAlB;AACA;;;AACA,gBAAMC,WAAW,GAAG,KAAK5G,SAAL,GAAiB,KAAKA,SAAL,CAAe+D,IAAf,CAAjB,GAAwC59B,SAA5D;;AACA,iBAAKogC,MAAL,CAAY,KAAKA,MAAL,CAAY19B,MAAZ,GAAqB,CAAjC,EACKM,IADL,CACU,IAAIm5B,eAAJ,CAAoB15B,CAAC,GAAG,CAAxB,EAA2By9B,SAAS,CAACz9B,CAAD,CAApC,EAAyCmkB,SAAzC,EAAoDpF,OAApD,EAA6Dif,WAA7D,CADV;AAEH;AACJ;AACD;;;;;;;;;0CAMkB7C,I,EAAM;AACpB,iBAAO,CAAC,CAACA,IAAF,KACF,CAAC,KAAKhE,OAAN,IAAiB,KAAKuD,YAAL,CAAkBwB,WAAlB,CAA8Bf,IAA9B,EAAoC,KAAKhE,OAAzC,KAAqD,CADpE,MAEF,CAAC,KAAKD,OAAN,IAAiB,KAAKwD,YAAL,CAAkBwB,WAAlB,CAA8Bf,IAA9B,EAAoC,KAAKjE,OAAzC,KAAqD,CAFpE,MAGF,CAAC,KAAKD,UAAN,IAAoB,KAAKA,UAAL,CAAgBkE,IAAhB,CAHlB,CAAP;AAIH;AACD;;;;;;;;;;+CAOuBA,I,EAAM;AACzB,iBAAOA,IAAI,IAAI,KAAK8C,oBAAL,CAA0B9C,IAA1B,EAAgC,KAAKzE,UAArC,CAAR,GACH,KAAKgE,YAAL,CAAkBmB,OAAlB,CAA0BV,IAA1B,CADG,GAC+B,IADtC;AAEH;AACD;;;;;;;;;;6CAOqB+C,E,EAAIC,E,EAAI;AACzB,iBAAO,CAAC,EAAED,EAAE,IAAIC,EAAN,IAAY,KAAKzD,YAAL,CAAkBc,QAAlB,CAA2B0C,EAA3B,KAAkC,KAAKxD,YAAL,CAAkBc,QAAlB,CAA2B2C,EAA3B,CAA9C,IACN,KAAKzD,YAAL,CAAkBY,OAAlB,CAA0B4C,EAA1B,KAAiC,KAAKxD,YAAL,CAAkBY,OAAlB,CAA0B6C,EAA1B,CAD7B,CAAR;AAEH;AACD;;;;;;;;4CAKoBC,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;AACD;;;;;;;;iCAKS;AACL,iBAAO,KAAK/nB,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAxC;AACH;;;4BAvRgB;AAAE,iBAAO,KAAKs7B,WAAZ;AAA0B;AAC7C;;;;;0BAIet7B,K,EAAO;AAClB;AACA,cAAMk8B,aAAa,GAAG,KAAKZ,WAA3B;AACA;;AACA,cAAMwD,SAAS,GAAG,KAAKC,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,KAAkE,KAAKi7B,YAAL,CAAkBM,KAAlB,EAApF;;AACA,eAAKD,WAAL,GAAmB,KAAKL,YAAL,CAAkBgE,SAAlB,CAA4BH,SAA5B,EAAuC,KAAKpH,OAA5C,EAAqD,KAAKD,OAA1D,CAAnB;;AACA,cAAI,CAAC,KAAK+G,oBAAL,CAA0BtC,aAA1B,EAAyC,KAAKZ,WAA9C,CAAL,EAAiE;AAC7D,iBAAKG,KAAL;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKlS,SAAZ;AAAwB;AACzC;;;;;0BAIavpB,K,EAAO;AAChB,eAAKupB,SAAL,GAAiB,KAAKwV,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAjB;AACA,eAAK27B,aAAL,GAAqB,KAAKgB,sBAAL,CAA4B,KAAKpT,SAAjC,CAArB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAK2V,QAAZ;AAAuB;AACvC;;;;;0BAIYl/B,K,EAAO;AACf,eAAKk/B,QAAL,GAAgB,KAAKH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKm/B,QAAZ;AAAuB;AACvC;;;;;0BAIYn/B,K,EAAO;AACf,eAAKm/B,QAAL,GAAgB,KAAKJ,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;;;;;;AAsOL+6B,gBAAY,CAACt9B,IAAb,GAAoB,SAAS2hC,oBAAT,CAA8BzhC,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAIo9B,YAAV,EAAwB,gEAAyB,+DAAzB,CAAxB,EAA4E,gEAAyB,uEAAzB,EAA2C,CAA3C,CAA5E,EAA2H,gEAAyB,kEAAzB,EAA6C,CAA7C,CAA3H,EAA4K,gEAAyB,iEAAzB,EAAgD,CAAhD,CAA5K,CAAP;AAAyO,KAAhS;;AACAA,gBAAY,CAAC/Z,IAAb,GAAoB,gEAAyB;AAAEnjB,UAAI,EAAEk9B,YAAR;AAAsB1kB,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuD4K,eAAS,EAAE,SAASoe,kBAAT,CAA4BngB,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1J,oEAAmBgb,eAAnB,EAAoC,IAApC;AACH;;AAAC,YAAIhb,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACme,gBAAJ,GAAuBnc,EAAE,CAACE,KAA/E;AACH;AAAE,OALsC;AAKpCvI,YAAM,EAAE;AAAEme,kBAAU,EAAE,YAAd;AAA4BvO,gBAAQ,EAAE,UAAtC;AAAkDgP,eAAO,EAAE,SAA3D;AAAsED,eAAO,EAAE,SAA/E;AAA0FD,kBAAU,EAAE,YAAtG;AAAoHG,iBAAS,EAAE;AAA/H,OAL4B;AAKkH5e,aAAO,EAAE;AAAEoiB,sBAAc,EAAE,gBAAlB;AAAoCC,sBAAc,EAAE,gBAApD;AAAsEC,wBAAgB,EAAE;AAAxF,OAL3H;AAKyO/kB,cAAQ,EAAE,CAAC,cAAD,CALnP;AAKqQoL,WAAK,EAAE,CAL5Q;AAK+QC,UAAI,EAAE,CALrR;AAKwRC,YAAM,EAAE,CAAC,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,oBAA5B,CAAD,EAAoD,CAAC,CAAD,EAAI,2BAAJ,CAApD,EAAsF,CAAC,OAAD,EAAU,KAAV,EAAiB,CAAjB,EAAoB,OAApB,EAA6B,SAA7B,CAAtF,EAA+H,CAAC,SAAD,EAAY,GAAZ,EAAiB,aAAjB,EAAgC,MAAhC,EAAwC,CAAxC,EAA2C,mCAA3C,CAA/H,EAAgN,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,YAA9C,EAA4D,eAA5D,EAA6E,uBAA7E,EAAsG,YAAtG,EAAoH,qBAApH,EAA2I,SAA3I,CAAhN,EAAuW,CAAC,OAAD,EAAU,KAAV,CAAvW,CALhS;AAK0pBC,cAAQ,EAAE,SAASyd,qBAAT,CAA+BpgB,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/vB,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB;;AACA,mEAAkB,CAAlB,EAAqBwX,0BAArB,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,IAAvD,EAA6D,CAA7D;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB;;AACA,kEAAiB,CAAjB,EAAoB,IAApB,EAA0B,CAA1B;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,mEAAkB,qBAAlB,EAAyC,SAAS6I,0DAAT,CAAoE1c,MAApE,EAA4E;AAAE,mBAAO1D,GAAG,CAACiY,aAAJ,CAAkBvU,MAAlB,CAAP;AAAmC,WAA1J,EAA4J,SAA5J,EAAuK,SAAS2c,8CAAT,CAAwD3c,MAAxD,EAAgE;AAAE,mBAAO1D,GAAG,CAACsgB,0BAAJ,CAA+B5c,MAA/B,CAAP;AAAgD,WAAzR;;AACA;;AACA;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BC,GAAG,CAAC0e,SAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,OAAlB,EAA2B1e,GAAG,CAAC0d,WAA/B,EAA4C,MAA5C,EAAoD1d,GAAG,CAAC+e,MAAxD,EAAgE,YAAhE,EAA8E/e,GAAG,CAACyd,UAAlF,EAA8F,eAA9F,EAA+Gzd,GAAG,CAACwc,aAAnH,EAAkI,uBAAlI,EAA2J,CAA3J,EAA8J,YAA9J,EAA4Kxc,GAAG,CAAC8b,YAAJ,CAAiBmB,OAAjB,CAAyBjd,GAAG,CAAC8X,UAA7B,IAA2C,CAAvN;AACH;AAAE,OAxBsC;AAwBpCjV,gBAAU,EAAE,CAAC,uDAAD,EAAiBkY,eAAjB,CAxBwB;AAwBWjY,mBAAa,EAAE,CAxB1B;AAwB6BC,qBAAe,EAAE;AAxB9C,KAAzB,CAApB;AAyBA;;AACA6Y,gBAAY,CAACn9B,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEC,YAAI,EAAE;AAAR,OADgC,EAEhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,uEAAD;AAAtB,SAArB;AAA/B,OAFgC,EAGhC;AAAEH,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OAHgC,EAIhC;AAAEA,YAAI,EAAE,iEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAJgC,CAAN;AAAA,KAA9B;;AAMAk9B,gBAAY,CAAC9hB,cAAb,GAA8B;AAC1Bge,gBAAU,EAAE,CAAC;AAAEp5B,YAAI,EAAE;AAAR,OAAD,CADc;AAE1B6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAFgB;AAG1B65B,aAAO,EAAE,CAAC;AAAE75B,YAAI,EAAE;AAAR,OAAD,CAHiB;AAI1B45B,aAAO,EAAE,CAAC;AAAE55B,YAAI,EAAE;AAAR,OAAD,CAJiB;AAK1B25B,gBAAU,EAAE,CAAC;AAAE35B,YAAI,EAAE;AAAR,OAAD,CALc;AAM1B85B,eAAS,EAAE,CAAC;AAAE95B,YAAI,EAAE;AAAR,OAAD,CANe;AAO1Bs9B,oBAAc,EAAE,CAAC;AAAEt9B,YAAI,EAAE;AAAR,OAAD,CAPU;AAQ1Bu9B,oBAAc,EAAE,CAAC;AAAEv9B,YAAI,EAAE;AAAR,OAAD,CARU;AAS1Bw9B,sBAAgB,EAAE,CAAC;AAAEx9B,YAAI,EAAE;AAAR,OAAD,CATQ;AAU1By/B,sBAAgB,EAAE,CAAC;AAAEz/B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAACk8B,eAAD;AAAzB,OAAD;AAVQ,KAA9B;AAYA;;AAAc,KAAC,YAAY;AAAE,sEAAyBa,YAAzB,EAAuC,CAAC;AAC7Dl9B,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gBADX;AAEC6V,kBAAQ,EAAE,mwBAFX;AAGCvL,kBAAQ,EAAE,cAHX;AAIC2L,uBAAa,EAAE,gEAAkBG,IAJlC;AAKCF,yBAAe,EAAE,sEAAwBG;AAL1C,SAAD;AAFuD,OAAD,CAAvC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAE;AAAR,SAAD,EAAqC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClFF,gBAAI,EAAE;AAD4E,WAAD,EAElF;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,uEAAD;AAFP,WAFkF;AAA/B,SAArC,EAKX;AAAEH,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAC3CF,gBAAI,EAAE;AADqC,WAAD;AAAxC,SALW,EAOX;AAAEA,cAAI,EAAE,iEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SAPW,CAAP;AASF,OAlBS,EAkBP;AAAEs9B,sBAAc,EAAE,CAAC;AAC7Bt9B,cAAI,EAAE;AADuB,SAAD,CAAlB;AAEVu9B,sBAAc,EAAE,CAAC;AACjBv9B,cAAI,EAAE;AADW,SAAD,CAFN;AAIVw9B,wBAAgB,EAAE,CAAC;AACnBx9B,cAAI,EAAE;AADa,SAAD,CAJR;AAMVo5B,kBAAU,EAAE,CAAC;AACbp5B,cAAI,EAAE;AADO,SAAD,CANF;AAQV6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CARA;AAUV65B,eAAO,EAAE,CAAC;AACV75B,cAAI,EAAE;AADI,SAAD,CAVC;AAYV45B,eAAO,EAAE,CAAC;AACV55B,cAAI,EAAE;AADI,SAAD,CAZC;AAcV25B,kBAAU,EAAE,CAAC;AACb35B,cAAI,EAAE;AADO,SAAD,CAdF;AAgBV85B,iBAAS,EAAE,CAAC;AACZ95B,cAAI,EAAE;AADM,SAAD,CAhBD;AAkBVy/B,wBAAgB,EAAE,CAAC;AACnBz/B,cAAI,EAAE,uDADa;AAEnBG,cAAI,EAAE,CAACk8B,eAAD;AAFa,SAAD;AAlBR,OAlBO;AAuCb,KAvCF;;AAwCd,QAAI,KAAJ,EAAW,CAwGV;AAED;;;;;;AAKA;;;AACA,QAAMwF,YAAY,GAAG,EAArB;AACA;;AACA,QAAMC,WAAW,GAAG,CAApB;AACA;;;;;;QAKMC,gB;AACF;;;;;AAKA,gCAAYrb,kBAAZ,EAAgC0W,YAAhC,EAA8CrkB,IAA9C,EAAoD;AAAA;;AAChD,aAAK2N,kBAAL,GAA0BA,kBAA1B;AACA,aAAK0W,YAAL,GAAoBA,YAApB;AACA,aAAKrkB,IAAL,GAAYA,IAAZ;AACA,aAAKskB,qBAAL,GAA6B,kDAAax3B,KAA1C;AACA;;;;AAGA,aAAKy3B,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAK0E,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,aAAKxE,gBAAL,GAAwB,IAAI,0DAAJ,EAAxB;;AACA,YAAI,CAAC,KAAKJ,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,aAAKoC,WAAL,GAAmB,KAAKL,YAAL,CAAkBM,KAAlB,EAAnB;AACH;AACD;;;;;;;;;AAwDA;;;6CAGqB;AAAA;;AACjB,eAAKL,qBAAL,GAA6B,KAAKD,YAAL,CAAkBO,aAAlB,CACxB32B,IADwB,CACnB,kEAAU,IAAV,CADmB,EAExB3J,SAFwB;AAEb;;;AAGhB;AAAA,mBAAM,OAAI,CAACugC,KAAL,EAAN;AAAA,WAL6B,CAA7B;AAMH;AACD;;;;;;sCAGc;AACV,eAAKP,qBAAL,CAA2B3/B,WAA3B;AACH;AACD;;;;;;;gCAIQ;AAAA;;AACJ,eAAKukC,UAAL,GAAkB,KAAK7E,YAAL,CAAkBY,OAAlB,CAA0B,KAAKZ,YAAL,CAAkBM,KAAlB,EAA1B,CAAlB,CADI,CAEJ;AACA;AACA;AACA;AACA;;AACA;;AACA,cAAMwE,UAAU,GAAG,KAAK9E,YAAL,CAAkBY,OAAlB,CAA0B,KAAKP,WAA/B,CAAnB;AACA;;;AACA,cAAM0E,aAAa,GAAGD,UAAU,GAAGE,eAAe,CAAC,KAAKhF,YAAN,EAAoB,KAAKhE,UAAzB,EAAqC,KAAKS,OAA1C,EAAmD,KAAKD,OAAxD,CAAlD;AACA,eAAKyI,MAAL,GAAc,EAAd;;AACA,eAAK,IAAI3/B,CAAC,GAAG,CAAR,EAAW4/B,GAAG,GAAG,EAAtB,EAA0B5/B,CAAC,GAAGm/B,YAA9B,EAA4Cn/B,CAAC,EAA7C,EAAiD;AAC7C4/B,eAAG,CAACr/B,IAAJ,CAASk/B,aAAa,GAAGz/B,CAAzB;;AACA,gBAAI4/B,GAAG,CAAC3/B,MAAJ,IAAcm/B,WAAlB,EAA+B;AAC3B,mBAAKO,MAAL,CAAYp/B,IAAZ,CAAiBq/B,GAAG,CAAC3vB,GAAJ;AAAS;;;;AAI1B,wBAAA4vB,IAAI;AAAA,uBAAI,OAAI,CAACC,kBAAL,CAAwBD,IAAxB,CAAJ;AAAA,eAJa,CAAjB;;AAKAD,iBAAG,GAAG,EAAN;AACH;AACJ;;AACD,eAAK5b,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;;sCAKcwa,I,EAAM;AAChB,eAAKP,YAAL,CAAkBlnB,IAAlB,CAAuB,KAAKsiB,YAAL,CAAkBgB,UAAlB,CAA6BmE,IAA7B,EAAmC,CAAnC,EAAsC,CAAtC,CAAvB;AACA;;AACA,cAAIE,KAAK,GAAG,KAAKrF,YAAL,CAAkBc,QAAlB,CAA2B,KAAK9E,UAAhC,CAAZ;AACA;;;AACA,cAAI8G,WAAW,GAAG,KAAK9C,YAAL,CAAkBoB,iBAAlB,CAAoC,KAAKpB,YAAL,CAAkBgB,UAAlB,CAA6BmE,IAA7B,EAAmCE,KAAnC,EAA0C,CAA1C,CAApC,CAAlB;;AACA,eAAKnF,cAAL,CAAoBxiB,IAApB,CAAyB,KAAKsiB,YAAL,CAAkBgB,UAAlB,CAA6BmE,IAA7B,EAAmCE,KAAnC,EAA0CllC,IAAI,CAAC2T,GAAL,CAAS,KAAKksB,YAAL,CAAkBmB,OAAlB,CAA0B,KAAKnF,UAA/B,CAAT,EAAqD8G,WAArD,CAA1C,CAAzB;AACH;AACD;;;;;;;;mDAK2B19B,K,EAAO;AAC9B;AACA,cAAM67B,aAAa,GAAG,KAAKZ,WAA3B;AACA;;AACA,cAAMzsB,KAAK,GAAG,KAAKzC,MAAL,EAAd;;AACA,kBAAQ/L,KAAK,CAAC4X,OAAd;AACI,iBAAK,iEAAL;AACI,mBAAKgf,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDzsB,KAAK,GAAG,CAAH,GAAO,CAAC,CAAlE,CAAlB;AACA;;AACJ,iBAAK,kEAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDzsB,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAlE,CAAlB;AACA;;AACJ,iBAAK,+DAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqD,CAACqE,WAAtD,CAAlB;AACA;;AACJ,iBAAK,iEAAL;AACI,mBAAK1I,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDqE,WAArD,CAAlB;AACA;;AACJ,iBAAK,2DAAL;AACI,mBAAK1I,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqD,CAAC2E,eAAe,CAAC,KAAKhF,YAAN,EAAoB,KAAKhE,UAAzB,EAAqC,KAAKS,OAA1C,EAAmD,KAAKD,OAAxD,CAArE,CAAlB;AACA;;AACJ,iBAAK,0DAAL;AACI,mBAAKR,UAAL,GAAkB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDoE,YAAY,GAAGO,eAAe,CAAC,KAAKhF,YAAN,EAAoB,KAAKhE,UAAzB,EAAqC,KAAKS,OAA1C,EAAmD,KAAKD,OAAxD,CAA9B,GAAiG,CAAtJ,CAAlB;AACA;;AACJ,iBAAK,8DAAL;AACI,mBAAKR,UAAL,GACI,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDj7B,KAAK,CAACi8B,MAAN,GAAe,CAACoD,YAAD,GAAgB,EAA/B,GAAoC,CAACA,YAA1F,CADJ;AAEA;;AACJ,iBAAK,gEAAL;AACI,mBAAKzI,UAAL,GACI,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDj7B,KAAK,CAACi8B,MAAN,GAAeoD,YAAY,GAAG,EAA9B,GAAmCA,YAAxF,CADJ;AAEA;;AACJ,iBAAK,4DAAL;AACA,iBAAK,4DAAL;AACI,mBAAKa,aAAL,CAAmB,KAAKtF,YAAL,CAAkBY,OAAlB,CAA0B,KAAKP,WAA/B,CAAnB;;AACA;;AACJ;AACI;AACA;AAjCR;;AAmCA,cAAI,KAAKL,YAAL,CAAkBwB,WAAlB,CAA8BP,aAA9B,EAA6C,KAAKjF,UAAlD,CAAJ,EAAmE;AAC/D,iBAAKoE,gBAAL,CAAsB1iB,IAAtB,CAA2B,KAAKse,UAAhC;AACH;;AACD,eAAKyF,gBAAL,GA3C8B,CA4C9B;;;AACAr8B,eAAK,CAAC6X,cAAN;AACH;AACD;;;;;;yCAGiB;AACb,iBAAO+nB,eAAe,CAAC,KAAKhF,YAAN,EAAoB,KAAKhE,UAAzB,EAAqC,KAAKS,OAA1C,EAAmD,KAAKD,OAAxD,CAAtB;AACH;AACD;;;;;;;2CAImB;AACf,eAAK6F,gBAAL,CAAsBZ,gBAAtB;AACH;AACD;;;;;;;;;2CAMmB0D,I,EAAM;AACrB;AACA,cAAII,QAAQ,GAAG,KAAKvF,YAAL,CAAkBwF,WAAlB,CAA8B,KAAKxF,YAAL,CAAkBgB,UAAlB,CAA6BmE,IAA7B,EAAmC,CAAnC,EAAsC,CAAtC,CAA9B,CAAf;;AACA,iBAAO,IAAInG,eAAJ,CAAoBmG,IAApB,EAA0BI,QAA1B,EAAoCA,QAApC,EAA8C,KAAKE,iBAAL,CAAuBN,IAAvB,CAA9C,CAAP;AACH;AACD;;;;;;;;;0CAMkBA,I,EAAM;AACpB;AACA,cAAIA,IAAI,KAAKtiC,SAAT,IAAsBsiC,IAAI,KAAK,IAA/B,IACC,KAAK3I,OAAL,IAAgB2I,IAAI,GAAG,KAAKnF,YAAL,CAAkBY,OAAlB,CAA0B,KAAKpE,OAA/B,CADxB,IAEC,KAAKC,OAAL,IAAgB0I,IAAI,GAAG,KAAKnF,YAAL,CAAkBY,OAAlB,CAA0B,KAAKnE,OAA/B,CAF5B,EAEsE;AAClE,mBAAO,KAAP;AACH,WANmB,CAOpB;;;AACA,cAAI,CAAC,KAAKF,UAAV,EAAsB;AAClB,mBAAO,IAAP;AACH;AACD;;;AACA,cAAMmJ,WAAW,GAAG,KAAK1F,YAAL,CAAkBgB,UAAlB,CAA6BmE,IAA7B,EAAmC,CAAnC,EAAsC,CAAtC,CAApB,CAZoB,CAapB;;;AACA,eAAK,IAAI1E,IAAI,GAAGiF,WAAhB,EAA6B,KAAK1F,YAAL,CAAkBY,OAAlB,CAA0BH,IAA1B,KAAmC0E,IAAhE,EAAsE1E,IAAI,GAAG,KAAKT,YAAL,CAAkBkB,eAAlB,CAAkCT,IAAlC,EAAwC,CAAxC,CAA7E,EAAyH;AACrH,gBAAI,KAAKlE,UAAL,CAAgBkE,IAAhB,CAAJ,EAA2B;AACvB,qBAAO,IAAP;AACH;AACJ;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;4CAKoBiD,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;AACD;;;;;;;;iCAKS;AACL,iBAAO,KAAK/nB,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAxC;AACH;;;4BArOgB;AAAE,iBAAO,KAAKs7B,WAAZ;AAA0B;AAC7C;;;;;0BAIet7B,K,EAAO;AAClB;AACA,cAAIk8B,aAAa,GAAG,KAAKZ,WAAzB;AACA;;AACA,cAAMwD,SAAS,GAAG,KAAKC,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,KAAkE,KAAKi7B,YAAL,CAAkBM,KAAlB,EAApF;;AACA,eAAKD,WAAL,GAAmB,KAAKL,YAAL,CAAkBgE,SAAlB,CAA4BH,SAA5B,EAAuC,KAAKpH,OAA5C,EAAqD,KAAKD,OAA1D,CAAnB;;AACA,cAAI,CAACmJ,mBAAmB,CAAC,KAAK3F,YAAN,EAAoBiB,aAApB,EAAmC,KAAKZ,WAAxC,EAAqD,KAAK5D,OAA1D,EAAmE,KAAKD,OAAxE,CAAxB,EAA0G;AACtG,iBAAKgE,KAAL;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKlS,SAAZ;AAAwB;AACzC;;;;;0BAIavpB,K,EAAO;AAChB,eAAKupB,SAAL,GAAiB,KAAKwV,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAjB;AACA,eAAK6gC,aAAL,GAAqB,KAAKtX,SAAL,IAAkB,KAAK0R,YAAL,CAAkBY,OAAlB,CAA0B,KAAKtS,SAA/B,CAAvC;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAK2V,QAAZ;AAAuB;AACvC;;;;;0BAIYl/B,K,EAAO;AACf,eAAKk/B,QAAL,GAAgB,KAAKH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKm/B,QAAZ;AAAuB;AACvC;;;;;0BAIYn/B,K,EAAO;AACf,eAAKm/B,QAAL,GAAgB,KAAKJ,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;;;;;;AAoLL4/B,oBAAgB,CAACniC,IAAjB,GAAwB,SAASqjC,wBAAT,CAAkCnjC,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIiiC,gBAAV,EAA4B,gEAAyB,+DAAzB,CAA5B,EAAgF,gEAAyB,kEAAzB,EAA6C,CAA7C,CAAhF,EAAiI,gEAAyB,iEAAzB,EAAgD,CAAhD,CAAjI,CAAP;AAA8L,KAA7P;;AACAA,oBAAgB,CAAC5e,IAAjB,GAAwB,gEAAyB;AAAEnjB,UAAI,EAAE+hC,gBAAR;AAA0BvpB,eAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAArC;AAAgE4K,eAAS,EAAE,SAAS8f,sBAAT,CAAgC7hB,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3K,oEAAmBgb,eAAnB,EAAoC,IAApC;AACH;;AAAC,YAAIhb,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACme,gBAAJ,GAAuBnc,EAAE,CAACE,KAA/E;AACH;AAAE,OAL0C;AAKxCvI,YAAM,EAAE;AAAEme,kBAAU,EAAE,YAAd;AAA4BvO,gBAAQ,EAAE,UAAtC;AAAkDgP,eAAO,EAAE,SAA3D;AAAsED,eAAO,EAAE,SAA/E;AAA0FD,kBAAU,EAAE;AAAtG,OALgC;AAKsFze,aAAO,EAAE;AAAEoiB,sBAAc,EAAE,gBAAlB;AAAoC0E,oBAAY,EAAE,cAAlD;AAAkExE,wBAAgB,EAAE;AAApF,OAL/F;AAKyM/kB,cAAQ,EAAE,CAAC,kBAAD,CALnN;AAKyOoL,WAAK,EAAE,CALhP;AAKmPC,UAAI,EAAE,CALzP;AAK4PC,YAAM,EAAE,CAAC,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,oBAA5B,CAAD,EAAoD,CAAC,CAAD,EAAI,2BAAJ,CAApD,EAAsF,CAAC,SAAD,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,mCAApB,CAAtF,EAAgJ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,MAA7B,EAAqC,YAArC,EAAmD,eAAnD,EAAoE,SAApE,EAA+E,iBAA/E,EAAkG,YAAlG,EAAgH,qBAAhH,EAAuI,SAAvI,CAAhJ,CALpQ;AAKwiBC,cAAQ,EAAE,SAASmf,yBAAT,CAAmC9hB,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrpB,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB;;AACA,kEAAiB,CAAjB,EAAoB,IAApB,EAA0B,CAA1B;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,mEAAkB,qBAAlB,EAAyC,SAAS+hB,8DAAT,CAAwEpe,MAAxE,EAAgF;AAAE,mBAAO1D,GAAG,CAACohB,aAAJ,CAAkB1d,MAAlB,CAAP;AAAmC,WAA9J,EAAgK,SAAhK,EAA2K,SAASqe,kDAAT,CAA4Dre,MAA5D,EAAoE;AAAE,mBAAO1D,GAAG,CAACsgB,0BAAJ,CAA+B5c,MAA/B,CAAP;AAAgD,WAAjS;;AACA;;AACA;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BC,GAAG,CAAC+gB,MAA9B,EAAsC,YAAtC,EAAoD/gB,GAAG,CAAC2gB,UAAxD,EAAoE,eAApE,EAAqF3gB,GAAG,CAAC0hB,aAAzF,EAAwG,SAAxG,EAAmH,CAAnH,EAAsH,iBAAtH,EAAyI,IAAI,CAA7I,EAAgJ,YAAhJ,EAA8J1hB,GAAG,CAACgiB,cAAJ,EAA9J;AACH;AAAE,OAnB0C;AAmBxCnf,gBAAU,EAAE,CAACkY,eAAD,CAnB4B;AAmBTjY,mBAAa,EAAE,CAnBN;AAmBSC,qBAAe,EAAE;AAnB1B,KAAzB,CAAxB;AAoBA;;AACA0d,oBAAgB,CAAChiC,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAE;AAAR,OADoC,EAEpC;AAAEA,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OAFoC,EAGpC;AAAEA,YAAI,EAAE,iEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAHoC,CAAN;AAAA,KAAlC;;AAKA+hC,oBAAgB,CAAC3mB,cAAjB,GAAkC;AAC9Bge,gBAAU,EAAE,CAAC;AAAEp5B,YAAI,EAAE;AAAR,OAAD,CADkB;AAE9B6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAFoB;AAG9B65B,aAAO,EAAE,CAAC;AAAE75B,YAAI,EAAE;AAAR,OAAD,CAHqB;AAI9B45B,aAAO,EAAE,CAAC;AAAE55B,YAAI,EAAE;AAAR,OAAD,CAJqB;AAK9B25B,gBAAU,EAAE,CAAC;AAAE35B,YAAI,EAAE;AAAR,OAAD,CALkB;AAM9Bs9B,oBAAc,EAAE,CAAC;AAAEt9B,YAAI,EAAE;AAAR,OAAD,CANc;AAO9BgiC,kBAAY,EAAE,CAAC;AAAEhiC,YAAI,EAAE;AAAR,OAAD,CAPgB;AAQ9Bw9B,sBAAgB,EAAE,CAAC;AAAEx9B,YAAI,EAAE;AAAR,OAAD,CARY;AAS9By/B,sBAAgB,EAAE,CAAC;AAAEz/B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAACk8B,eAAD;AAAzB,OAAD;AATY,KAAlC;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyB0F,gBAAzB,EAA2C,CAAC;AACjE/hC,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,qBADX;AAEC6V,kBAAQ,EAAE,8kBAFX;AAGCvL,kBAAQ,EAAE,kBAHX;AAIC2L,uBAAa,EAAE,gEAAkBG,IAJlC;AAKCF,yBAAe,EAAE,sEAAwBG;AAL1C,SAAD;AAF2D,OAAD,CAA3C,EASrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAE;AAAR,SAAD,EAAqC;AAAEA,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAC3FF,gBAAI,EAAE;AADqF,WAAD;AAAxC,SAArC,EAEX;AAAEA,cAAI,EAAE,iEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SAFW,CAAP;AAIF,OAbS,EAaP;AAAEs9B,sBAAc,EAAE,CAAC;AAC7Bt9B,cAAI,EAAE;AADuB,SAAD,CAAlB;AAEVgiC,oBAAY,EAAE,CAAC;AACfhiC,cAAI,EAAE;AADS,SAAD,CAFJ;AAIVw9B,wBAAgB,EAAE,CAAC;AACnBx9B,cAAI,EAAE;AADa,SAAD,CAJR;AAMVo5B,kBAAU,EAAE,CAAC;AACbp5B,cAAI,EAAE;AADO,SAAD,CANF;AAQV6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CARA;AAUV65B,eAAO,EAAE,CAAC;AACV75B,cAAI,EAAE;AADI,SAAD,CAVC;AAYV45B,eAAO,EAAE,CAAC;AACV55B,cAAI,EAAE;AADI,SAAD,CAZC;AAcV25B,kBAAU,EAAE,CAAC;AACb35B,cAAI,EAAE;AADO,SAAD,CAdF;AAgBVy/B,wBAAgB,EAAE,CAAC;AACnBz/B,cAAI,EAAE,uDADa;AAEnBG,cAAI,EAAE,CAACk8B,eAAD;AAFa,SAAD;AAhBR,OAbO;AAgCb,KAhCF;;AAiCd,QAAI,KAAJ,EAAW,CA8EV;AACD;;;;;;;;;;;AASA,aAAS0G,mBAAT,CAA6BQ,WAA7B,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwD5J,OAAxD,EAAiED,OAAjE,EAA0E;AACtE;AACA,UAAM8J,KAAK,GAAGH,WAAW,CAACvF,OAAZ,CAAoBwF,KAApB,CAAd;AACA;;AACA,UAAMG,KAAK,GAAGJ,WAAW,CAACvF,OAAZ,CAAoByF,KAApB,CAAd;AACA;;AACA,UAAMG,YAAY,GAAGC,eAAe,CAACN,WAAD,EAAc1J,OAAd,EAAuBD,OAAvB,CAApC;AACA,aAAOr8B,IAAI,CAACumC,KAAL,CAAW,CAACJ,KAAK,GAAGE,YAAT,IAAyB/B,YAApC,MACHtkC,IAAI,CAACumC,KAAL,CAAW,CAACH,KAAK,GAAGC,YAAT,IAAyB/B,YAApC,CADJ;AAEH;AACD;;;;;;;;;;;;;AAWA,aAASO,eAAT,CAAyBmB,WAAzB,EAAsCnK,UAAtC,EAAkDS,OAAlD,EAA2DD,OAA3D,EAAoE;AAChE;AACA,UAAMsI,UAAU,GAAGqB,WAAW,CAACvF,OAAZ,CAAoB5E,UAApB,CAAnB;AACA,aAAO2K,eAAe,CAAE7B,UAAU,GAAG2B,eAAe,CAACN,WAAD,EAAc1J,OAAd,EAAuBD,OAAvB,CAA9B,EAAgEiI,YAAhE,CAAtB;AACH;AACD;;;;;;;;;;;AASA,aAASgC,eAAT,CAAyBN,WAAzB,EAAsC1J,OAAtC,EAA+CD,OAA/C,EAAwD;AACpD;AACA,UAAIgK,YAAY,GAAG,CAAnB;;AACA,UAAIhK,OAAJ,EAAa;AACT;AACA,YAAMoK,OAAO,GAAGT,WAAW,CAACvF,OAAZ,CAAoBpE,OAApB,CAAhB;AACAgK,oBAAY,GAAGI,OAAO,GAAGnC,YAAV,GAAyB,CAAxC;AACH,OAJD,MAKK,IAAIhI,OAAJ,EAAa;AACd+J,oBAAY,GAAGL,WAAW,CAACvF,OAAZ,CAAoBnE,OAApB,CAAf;AACH;;AACD,aAAO+J,YAAP;AACH;AACD;;;;;;;;AAMA,aAASG,eAAT,CAAyBE,CAAzB,EAA4BC,CAA5B,EAA+B;AAC3B,aAAO,CAACD,CAAC,GAAGC,CAAJ,GAAQA,CAAT,IAAcA,CAArB;AACH;AAED;;;;;;AAKA;;;;;;;QAKMC,W;AACF;;;;;;AAMA,2BAAYzd,kBAAZ,EAAgCyW,YAAhC,EAA8CC,YAA9C,EAA4DrkB,IAA5D,EAAkE;AAAA;;AAC9D,aAAK2N,kBAAL,GAA0BA,kBAA1B;AACA,aAAKyW,YAAL,GAAoBA,YAApB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKrkB,IAAL,GAAYA,IAAZ;AACA,aAAKskB,qBAAL,GAA6B,kDAAax3B,KAA1C;AACA;;;;AAGA,aAAKy3B,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAK8G,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,aAAK5G,gBAAL,GAAwB,IAAI,0DAAJ,EAAxB;;AACA,YAAI,CAAC,KAAKJ,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,YAAI,CAAC,KAAK8B,YAAV,EAAwB;AACpB,gBAAM9B,0BAA0B,CAAC,kBAAD,CAAhC;AACH;;AACD,aAAKoC,WAAL,GAAmB,KAAKL,YAAL,CAAkBM,KAAlB,EAAnB;AACH;AACD;;;;;;;;;AAwDA;;;6CAGqB;AAAA;;AACjB,eAAKL,qBAAL,GAA6B,KAAKD,YAAL,CAAkBO,aAAlB,CACxB32B,IADwB,CACnB,kEAAU,IAAV,CADmB,EAExB3J,SAFwB;AAEb;;;AAGhB;AAAA,mBAAM,OAAI,CAACugC,KAAL,EAAN;AAAA,WAL6B,CAA7B;AAMH;AACD;;;;;;sCAGc;AACV,eAAKP,qBAAL,CAA2B3/B,WAA3B;AACH;AACD;;;;;;;;uCAKe+kC,K,EAAO;AAClB;AACA,cAAM4B,cAAc,GAAG,KAAKjH,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKhB,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA7B,EAAyEqJ,KAAzE,EAAgF,CAAhF,CAAvB;;AACA,eAAK2B,aAAL,CAAmBtpB,IAAnB,CAAwBupB,cAAxB;AACA;;AACA,cAAMnE,WAAW,GAAG,KAAK9C,YAAL,CAAkBoB,iBAAlB,CAAoC6F,cAApC,CAApB;;AACA,eAAK/G,cAAL,CAAoBxiB,IAApB,CAAyB,KAAKsiB,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKhB,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA7B,EAAyEqJ,KAAzE,EAAgFllC,IAAI,CAAC2T,GAAL,CAAS,KAAKksB,YAAL,CAAkBmB,OAAlB,CAA0B,KAAKnF,UAA/B,CAAT,EAAqD8G,WAArD,CAAhF,CAAzB;AACH;AACD;;;;;;;;mDAK2B19B,K,EAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,cAAM67B,aAAa,GAAG,KAAKZ,WAA3B;AACA;;AACA,cAAMzsB,KAAK,GAAG,KAAKzC,MAAL,EAAd;;AACA,kBAAQ/L,KAAK,CAAC4X,OAAd;AACI,iBAAK,iEAAL;AACI,mBAAKgf,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsDzsB,KAAK,GAAG,CAAH,GAAO,CAAC,CAAnE,CAAlB;AACA;;AACJ,iBAAK,kEAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsDzsB,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAnE,CAAlB;AACA;;AACJ,iBAAK,+DAAL;AACI,mBAAKooB,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,CAAC,CAAvD,CAAlB;AACA;;AACJ,iBAAK,iEAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,CAAtD,CAAlB;AACA;;AACJ,iBAAK,2DAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,CAAC,KAAKL,YAAL,CAAkBc,QAAlB,CAA2B,KAAKT,WAAhC,CAAvD,CAAlB;AACA;;AACJ,iBAAK,0DAAL;AACI,mBAAKrE,UAAL,GAAkB,KAAKgE,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKlB,WAAzC,EAAsD,KAAK,KAAKL,YAAL,CAAkBc,QAAlB,CAA2B,KAAKT,WAAhC,CAA3D,CAAlB;AACA;;AACJ,iBAAK,8DAAL;AACI,mBAAKrE,UAAL,GACI,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDj7B,KAAK,CAACi8B,MAAN,GAAe,CAAC,EAAhB,GAAqB,CAAC,CAA3E,CADJ;AAEA;;AACJ,iBAAK,gEAAL;AACI,mBAAKrF,UAAL,GACI,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKjB,WAAxC,EAAqDj7B,KAAK,CAACi8B,MAAN,GAAe,EAAf,GAAoB,CAAzE,CADJ;AAEA;;AACJ,iBAAK,4DAAL;AACA,iBAAK,4DAAL;AACI,mBAAK6F,cAAL,CAAoB,KAAKlH,YAAL,CAAkBc,QAAlB,CAA2B,KAAKT,WAAhC,CAApB;;AACA;;AACJ;AACI;AACA;AAjCR;;AAmCA,cAAI,KAAKL,YAAL,CAAkBwB,WAAlB,CAA8BP,aAA9B,EAA6C,KAAKjF,UAAlD,CAAJ,EAAmE;AAC/D,iBAAKoE,gBAAL,CAAsB1iB,IAAtB,CAA2B,KAAKse,UAAhC;AACH;;AACD,eAAKyF,gBAAL,GAjD8B,CAkD9B;;;AACAr8B,eAAK,CAAC6X,cAAN;AACH;AACD;;;;;;;gCAIQ;AAAA;;AACJ,eAAKkqB,cAAL,GAAsB,KAAKC,sBAAL,CAA4B,KAAK3Z,QAAjC,CAAtB;AACA,eAAK4Z,WAAL,GAAmB,KAAKD,sBAAL,CAA4B,KAAKpH,YAAL,CAAkBM,KAAlB,EAA5B,CAAnB;AACA,eAAKgH,UAAL,GAAkB,KAAKtH,YAAL,CAAkBwF,WAAlB,CAA8B,KAAKxJ,UAAnC,CAAlB;AACA;;AACA,cAAIuL,UAAU,GAAG,KAAKvH,YAAL,CAAkB6B,aAAlB,CAAgC,OAAhC,CAAjB,CALI,CAMJ;;;AACA,eAAK2F,OAAL,GAAe,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,EAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,EAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAA7B,EAA6CjyB,GAA7C;AAAkD;;;;AAIjE,oBAAA2vB,GAAG;AAAA,mBAAIA,GAAG,CAAC3vB,GAAJ;AAAS;;;;AAIhB,sBAAA8vB,KAAK;AAAA,qBAAI,OAAI,CAACoC,mBAAL,CAAyBpC,KAAzB,EAAgCkC,UAAU,CAAClC,KAAD,CAA1C,CAAJ;AAAA,aAJE,CAAJ;AAAA,WAJY,CAAf;;AASA,eAAK/b,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;2CAImB;AACf,eAAK0X,gBAAL,CAAsBZ,gBAAtB;AACH;AACD;;;;;;;;;;+CAOuBhB,I,EAAM;AACzB,iBAAOA,IAAI,IAAI,KAAKT,YAAL,CAAkBY,OAAlB,CAA0BH,IAA1B,KAAmC,KAAKT,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA3C,GACH,KAAKgE,YAAL,CAAkBc,QAAlB,CAA2BL,IAA3B,CADG,GACgC,IADvC;AAEH;AACD;;;;;;;;;;4CAOoB4E,K,EAAOqC,S,EAAW;AAClC;AACA,cAAIje,SAAS,GAAG,KAAKuW,YAAL,CAAkBmD,MAAlB,CAAyB,KAAKnD,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKhB,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAA7B,EAAyEqJ,KAAzE,EAAgF,CAAhF,CAAzB,EAA6G,KAAKtF,YAAL,CAAkBqD,OAAlB,CAA0BuE,kBAAvI,CAAhB;;AACA,iBAAO,IAAI3I,eAAJ,CAAoBqG,KAApB,EAA2BqC,SAAS,CAAC5F,iBAAV,EAA3B,EAA0DrY,SAA1D,EAAqE,KAAKme,kBAAL,CAAwBvC,KAAxB,CAArE,CAAP;AACH;AACD;;;;;;;;;2CAMmBA,K,EAAO;AACtB;AACA,cAAMP,UAAU,GAAG,KAAK9E,YAAL,CAAkBY,OAAlB,CAA0B,KAAK5E,UAA/B,CAAnB;;AACA,cAAIqJ,KAAK,KAAKxiC,SAAV,IAAuBwiC,KAAK,KAAK,IAAjC,IACA,KAAKwC,2BAAL,CAAiC/C,UAAjC,EAA6CO,KAA7C,CADA,IAEA,KAAKyC,4BAAL,CAAkChD,UAAlC,EAA8CO,KAA9C,CAFJ,EAE0D;AACtD,mBAAO,KAAP;AACH;;AACD,cAAI,CAAC,KAAK9I,UAAV,EAAsB;AAClB,mBAAO,IAAP;AACH;AACD;;;AACA,cAAMwF,YAAY,GAAG,KAAK/B,YAAL,CAAkBgB,UAAlB,CAA6B8D,UAA7B,EAAyCO,KAAzC,EAAgD,CAAhD,CAArB,CAZsB,CAatB;;;AACA,eAAK,IAAI5E,IAAI,GAAGsB,YAAhB,EAA8B,KAAK/B,YAAL,CAAkBc,QAAlB,CAA2BL,IAA3B,KAAoC4E,KAAlE,EAAyE5E,IAAI,GAAG,KAAKT,YAAL,CAAkBkB,eAAlB,CAAkCT,IAAlC,EAAwC,CAAxC,CAAhF,EAA4H;AACxH,gBAAI,KAAKlE,UAAL,CAAgBkE,IAAhB,CAAJ,EAA2B;AACvB,qBAAO,IAAP;AACH;AACJ;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;;;;oDAQ4B0E,I,EAAME,K,EAAO;AACrC,cAAI,KAAK7I,OAAT,EAAkB;AACd;AACA,gBAAMoK,OAAO,GAAG,KAAK5G,YAAL,CAAkBY,OAAlB,CAA0B,KAAKpE,OAA/B,CAAhB;AACA;;;AACA,gBAAMuL,QAAQ,GAAG,KAAK/H,YAAL,CAAkBc,QAAlB,CAA2B,KAAKtE,OAAhC,CAAjB;;AACA,mBAAO2I,IAAI,GAAGyB,OAAP,IAAmBzB,IAAI,KAAKyB,OAAT,IAAoBvB,KAAK,GAAG0C,QAAtD;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;;;;qDAQ6B5C,I,EAAME,K,EAAO;AACtC,cAAI,KAAK5I,OAAT,EAAkB;AACd;AACA,gBAAMuL,OAAO,GAAG,KAAKhI,YAAL,CAAkBY,OAAlB,CAA0B,KAAKnE,OAA/B,CAAhB;AACA;;;AACA,gBAAMwL,QAAQ,GAAG,KAAKjI,YAAL,CAAkBc,QAAlB,CAA2B,KAAKrE,OAAhC,CAAjB;;AACA,mBAAO0I,IAAI,GAAG6C,OAAP,IAAmB7C,IAAI,KAAK6C,OAAT,IAAoB3C,KAAK,GAAG4C,QAAtD;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;4CAKoBvE,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;AACD;;;;;;;;iCAKS;AACL,iBAAO,KAAK/nB,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAxC;AACH;;;4BA9QgB;AAAE,iBAAO,KAAKs7B,WAAZ;AAA0B;AAC7C;;;;;0BAIet7B,K,EAAO;AAClB;AACA,cAAIk8B,aAAa,GAAG,KAAKZ,WAAzB;AACA;;AACA,cAAMwD,SAAS,GAAG,KAAKC,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,KAAkE,KAAKi7B,YAAL,CAAkBM,KAAlB,EAApF;;AACA,eAAKD,WAAL,GAAmB,KAAKL,YAAL,CAAkBgE,SAAlB,CAA4BH,SAA5B,EAAuC,KAAKpH,OAA5C,EAAqD,KAAKD,OAA1D,CAAnB;;AACA,cAAI,KAAKwD,YAAL,CAAkBY,OAAlB,CAA0BK,aAA1B,MAA6C,KAAKjB,YAAL,CAAkBY,OAAlB,CAA0B,KAAKP,WAA/B,CAAjD,EAA8F;AAC1F,iBAAKG,KAAL;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKlS,SAAZ;AAAwB;AACzC;;;;;0BAIavpB,K,EAAO;AAChB,eAAKupB,SAAL,GAAiB,KAAKwV,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAjB;AACA,eAAKoiC,cAAL,GAAsB,KAAKC,sBAAL,CAA4B,KAAK9Y,SAAjC,CAAtB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAK2V,QAAZ;AAAuB;AACvC;;;;;0BAIYl/B,K,EAAO;AACf,eAAKk/B,QAAL,GAAgB,KAAKH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKm/B,QAAZ;AAAuB;AACvC;;;;;0BAIYn/B,K,EAAO;AACf,eAAKm/B,QAAL,GAAgB,KAAKJ,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;;;;;;AA6NLgiC,eAAW,CAACvkC,IAAZ,GAAmB,SAAS0lC,mBAAT,CAA6BxlC,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIqkC,WAAV,EAAuB,gEAAyB,+DAAzB,CAAvB,EAA2E,gEAAyB,uEAAzB,EAA2C,CAA3C,CAA3E,EAA0H,gEAAyB,kEAAzB,EAA6C,CAA7C,CAA1H,EAA2K,gEAAyB,iEAAzB,EAAgD,CAAhD,CAA3K,CAAP;AAAwO,KAA7R;;AACAA,eAAW,CAAChhB,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAEmkC,WAAR;AAAqB3rB,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqD4K,eAAS,EAAE,SAASmiB,iBAAT,CAA2BlkB,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtJ,oEAAmBgb,eAAnB,EAAoC,IAApC;AACH;;AAAC,YAAIhb,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACme,gBAAJ,GAAuBnc,EAAE,CAACE,KAA/E;AACH;AAAE,OALqC;AAKnCvI,YAAM,EAAE;AAAEme,kBAAU,EAAE,YAAd;AAA4BvO,gBAAQ,EAAE,UAAtC;AAAkDgP,eAAO,EAAE,SAA3D;AAAsED,eAAO,EAAE,SAA/E;AAA0FD,kBAAU,EAAE;AAAtG,OAL2B;AAK2Fze,aAAO,EAAE;AAAEoiB,sBAAc,EAAE,gBAAlB;AAAoC8G,qBAAa,EAAE,eAAnD;AAAoE5G,wBAAgB,EAAE;AAAtF,OALpG;AAKgN/kB,cAAQ,EAAE,CAAC,aAAD,CAL1N;AAK2OoL,WAAK,EAAE,CALlP;AAKqPC,UAAI,EAAE,CAL3P;AAK8PC,YAAM,EAAE,CAAC,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,oBAA5B,CAAD,EAAoD,CAAC,CAAD,EAAI,2BAAJ,CAApD,EAAsF,CAAC,SAAD,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,mCAApB,CAAtF,EAAgJ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,YAA9C,EAA4D,eAA5D,EAA6E,uBAA7E,EAAsG,SAAtG,EAAiH,iBAAjH,EAAoI,YAApI,EAAkJ,qBAAlJ,EAAyK,SAAzK,CAAhJ,CALtQ;AAK4kBC,cAAQ,EAAE,SAASwhB,oBAAT,CAA8BnkB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/qB,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB;;AACA,kEAAiB,CAAjB,EAAoB,IAApB,EAA0B,CAA1B;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,mEAAkB,qBAAlB,EAAyC,SAASokB,yDAAT,CAAmEzgB,MAAnE,EAA2E;AAAE,mBAAO1D,GAAG,CAACgjB,cAAJ,CAAmBtf,MAAnB,CAAP;AAAoC,WAA1J,EAA4J,SAA5J,EAAuK,SAAS0gB,6CAAT,CAAuD1gB,MAAvD,EAA+D;AAAE,mBAAO1D,GAAG,CAACsgB,0BAAJ,CAA+B5c,MAA/B,CAAP;AAAgD,WAAxR;;AACA;;AACA;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,OAAlB,EAA2BC,GAAG,CAACojB,UAA/B,EAA2C,MAA3C,EAAmDpjB,GAAG,CAACsjB,OAAvD,EAAgE,YAAhE,EAA8EtjB,GAAG,CAACmjB,WAAlF,EAA+F,eAA/F,EAAgHnjB,GAAG,CAACijB,cAApH,EAAoI,uBAApI,EAA6J,CAA7J,EAAgK,SAAhK,EAA2K,CAA3K,EAA8K,iBAA9K,EAAiM,IAAI,CAArM,EAAwM,YAAxM,EAAsNjjB,GAAG,CAAC8b,YAAJ,CAAiBc,QAAjB,CAA0B5c,GAAG,CAAC8X,UAA9B,CAAtN;AACH;AAAE,OAnBqC;AAmBnCjV,gBAAU,EAAE,CAACkY,eAAD,CAnBuB;AAmBJjY,mBAAa,EAAE,CAnBX;AAmBcC,qBAAe,EAAE;AAnB/B,KAAzB,CAAnB;AAoBA;;AACA8f,eAAW,CAACpkC,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,uEAAD;AAAtB,SAArB;AAA/B,OAF+B,EAG/B;AAAEH,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OAH+B,EAI/B;AAAEA,YAAI,EAAE,iEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAJ+B,CAAN;AAAA,KAA7B;;AAMAmkC,eAAW,CAAC/oB,cAAZ,GAA6B;AACzBge,gBAAU,EAAE,CAAC;AAAEp5B,YAAI,EAAE;AAAR,OAAD,CADa;AAEzB6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAFe;AAGzB65B,aAAO,EAAE,CAAC;AAAE75B,YAAI,EAAE;AAAR,OAAD,CAHgB;AAIzB45B,aAAO,EAAE,CAAC;AAAE55B,YAAI,EAAE;AAAR,OAAD,CAJgB;AAKzB25B,gBAAU,EAAE,CAAC;AAAE35B,YAAI,EAAE;AAAR,OAAD,CALa;AAMzBs9B,oBAAc,EAAE,CAAC;AAAEt9B,YAAI,EAAE;AAAR,OAAD,CANS;AAOzBokC,mBAAa,EAAE,CAAC;AAAEpkC,YAAI,EAAE;AAAR,OAAD,CAPU;AAQzBw9B,sBAAgB,EAAE,CAAC;AAAEx9B,YAAI,EAAE;AAAR,OAAD,CARO;AASzBy/B,sBAAgB,EAAE,CAAC;AAAEz/B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAACk8B,eAAD;AAAzB,OAAD;AATO,KAA7B;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyB8H,WAAzB,EAAsC,CAAC;AAC5DnkC,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,eADX;AAEC6V,kBAAQ,EAAE,6qBAFX;AAGCvL,kBAAQ,EAAE,aAHX;AAIC2L,uBAAa,EAAE,gEAAkBG,IAJlC;AAKCF,yBAAe,EAAE,sEAAwBG;AAL1C,SAAD;AAFsD,OAAD,CAAtC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAE;AAAR,SAAD,EAAqC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClFF,gBAAI,EAAE;AAD4E,WAAD,EAElF;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,uEAAD;AAFP,WAFkF;AAA/B,SAArC,EAKX;AAAEH,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAC3CF,gBAAI,EAAE;AADqC,WAAD;AAAxC,SALW,EAOX;AAAEA,cAAI,EAAE,iEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SAPW,CAAP;AASF,OAlBS,EAkBP;AAAEs9B,sBAAc,EAAE,CAAC;AAC7Bt9B,cAAI,EAAE;AADuB,SAAD,CAAlB;AAEVokC,qBAAa,EAAE,CAAC;AAChBpkC,cAAI,EAAE;AADU,SAAD,CAFL;AAIVw9B,wBAAgB,EAAE,CAAC;AACnBx9B,cAAI,EAAE;AADa,SAAD,CAJR;AAMVo5B,kBAAU,EAAE,CAAC;AACbp5B,cAAI,EAAE;AADO,SAAD,CANF;AAQV6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CARA;AAUV65B,eAAO,EAAE,CAAC;AACV75B,cAAI,EAAE;AADI,SAAD,CAVC;AAYV45B,eAAO,EAAE,CAAC;AACV55B,cAAI,EAAE;AADI,SAAD,CAZC;AAcV25B,kBAAU,EAAE,CAAC;AACb35B,cAAI,EAAE;AADO,SAAD,CAdF;AAgBVy/B,wBAAgB,EAAE,CAAC;AACnBz/B,cAAI,EAAE,uDADa;AAEnBG,cAAI,EAAE,CAACk8B,eAAD;AAFa,SAAD;AAhBR,OAlBO;AAqCb,KArCF;;AAsCd,QAAI,KAAJ,EAAW,CAyFV;AAED;;;;;;AAKA;;;;;;QAIMsJ,iB;AACF;;;;;;;AAOA,iCAAYC,KAAZ,EAAmBC,QAAnB,EAA6BzI,YAA7B,EAA2CD,YAA3C,EAAyD2I,iBAAzD,EAA4E;AAAA;;AACxE,aAAKF,KAAL,GAAaA,KAAb;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKzI,YAAL,GAAoBA,YAApB;AACA,aAAKD,YAAL,GAAoBA,YAApB;AACA,aAAK0I,QAAL,CAAc9U,YAAd,CAA2B1zB,SAA3B;AAAsC;;;AAGtC;AAAA,iBAAMyoC,iBAAiB,CAAC/d,YAAlB,EAAN;AAAA,SAHA;AAIH;AACD;;;;;;;;;AAyDA;;;;+CAIuB;AACnB,eAAK8d,QAAL,CAAcE,WAAd,GAA4B,KAAKF,QAAL,CAAcE,WAAd,IAA6B,OAA7B,GAAuC,YAAvC,GAAsD,OAAlF;AACH;AACD;;;;;;;0CAIkB;AACd,eAAKF,QAAL,CAAczM,UAAd,GAA2B,KAAKyM,QAAL,CAAcE,WAAd,IAA6B,OAA7B,GACvB,KAAK3I,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKkH,QAAL,CAAczM,UAAlD,EAA8D,CAAC,CAA/D,CADuB,GAEvB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKmH,QAAL,CAAczM,UAAjD,EAA6D,KAAKyM,QAAL,CAAcE,WAAd,IAA6B,MAA7B,GAAsC,CAAC,CAAvC,GAA2C,CAAClE,YAAzG,CAFJ;AAGH;AACD;;;;;;;sCAIc;AACV,eAAKgE,QAAL,CAAczM,UAAd,GAA2B,KAAKyM,QAAL,CAAcE,WAAd,IAA6B,OAA7B,GACvB,KAAK3I,YAAL,CAAkBuB,iBAAlB,CAAoC,KAAKkH,QAAL,CAAczM,UAAlD,EAA8D,CAA9D,CADuB,GAEvB,KAAKgE,YAAL,CAAkBsB,gBAAlB,CAAmC,KAAKmH,QAAL,CAAczM,UAAjD,EAA6D,KAAKyM,QAAL,CAAcE,WAAd,IAA6B,MAA7B,GAAsC,CAAtC,GAA0ClE,YAAvG,CAFJ;AAGH;AACD;;;;;;;0CAIkB;AACd,cAAI,CAAC,KAAKgE,QAAL,CAAchM,OAAnB,EAA4B;AACxB,mBAAO,IAAP;AACH;;AACD,iBAAO,CAAC,KAAKgM,QAAL,CAAchM,OAAf,IACH,CAAC,KAAKmM,WAAL,CAAiB,KAAKH,QAAL,CAAczM,UAA/B,EAA2C,KAAKyM,QAAL,CAAchM,OAAzD,CADL;AAEH;AACD;;;;;;;sCAIc;AACV,iBAAO,CAAC,KAAKgM,QAAL,CAAcjM,OAAf,IACH,CAAC,KAAKoM,WAAL,CAAiB,KAAKH,QAAL,CAAczM,UAA/B,EAA2C,KAAKyM,QAAL,CAAcjM,OAAzD,CADL;AAEH;AACD;;;;;;;;;;oCAOY4J,K,EAAOC,K,EAAO;AACtB,cAAI,KAAKoC,QAAL,CAAcE,WAAd,IAA6B,OAAjC,EAA0C;AACtC,mBAAO,KAAK3I,YAAL,CAAkBY,OAAlB,CAA0BwF,KAA1B,KAAoC,KAAKpG,YAAL,CAAkBY,OAAlB,CAA0ByF,KAA1B,CAApC,IACH,KAAKrG,YAAL,CAAkBc,QAAlB,CAA2BsF,KAA3B,KAAqC,KAAKpG,YAAL,CAAkBc,QAAlB,CAA2BuF,KAA3B,CADzC;AAEH;;AACD,cAAI,KAAKoC,QAAL,CAAcE,WAAd,IAA6B,MAAjC,EAAyC;AACrC,mBAAO,KAAK3I,YAAL,CAAkBY,OAAlB,CAA0BwF,KAA1B,KAAoC,KAAKpG,YAAL,CAAkBY,OAAlB,CAA0ByF,KAA1B,CAA3C;AACH,WAPqB,CAQtB;;;AACA,iBAAOV,mBAAmB,CAAC,KAAK3F,YAAN,EAAoBoG,KAApB,EAA2BC,KAA3B,EAAkC,KAAKoC,QAAL,CAAchM,OAAhD,EAAyD,KAAKgM,QAAL,CAAcjM,OAAvE,CAA1B;AACH;;;4BAlHsB;AACnB,cAAI,KAAKiM,QAAL,CAAcE,WAAd,IAA6B,OAAjC,EAA0C;AACtC,mBAAO,KAAK3I,YAAL,CACFmD,MADE,CACK,KAAKsF,QAAL,CAAczM,UADnB,EAC+B,KAAK+D,YAAL,CAAkBqD,OAAlB,CAA0ByF,cADzD,EAEF/G,iBAFE,EAAP;AAGH;;AACD,cAAI,KAAK2G,QAAL,CAAcE,WAAd,IAA6B,MAAjC,EAAyC;AACrC,mBAAO,KAAK3I,YAAL,CAAkBwF,WAAlB,CAA8B,KAAKiD,QAAL,CAAczM,UAA5C,CAAP;AACH,WARkB,CASnB;AACA;AACA;;AACA;;;AACA,cAAM8I,UAAU,GAAG,KAAK9E,YAAL,CAAkBY,OAAlB,CAA0B,KAAK6H,QAAL,CAAczM,UAAxC,CAAnB;AACA;;;AACA,cAAM+I,aAAa,GAAGD,UAAU,GAAGE,eAAe,CAAC,KAAKhF,YAAN,EAAoB,KAAKyI,QAAL,CAAczM,UAAlC,EAA8C,KAAKyM,QAAL,CAAchM,OAA5D,EAAqE,KAAKgM,QAAL,CAAcjM,OAAnF,CAAlD;AACA;;AACA,cAAMsM,aAAa,GAAG/D,aAAa,GAAGN,YAAhB,GAA+B,CAArD;AACA;;AACA,cAAMsE,WAAW,GAAG,KAAK/I,YAAL,CAAkBwF,WAAlB,CAA8B,KAAKxF,YAAL,CAAkBgB,UAAlB,CAA6B+D,aAA7B,EAA4C,CAA5C,EAA+C,CAA/C,CAA9B,CAApB;AACA;;;AACA,cAAMiE,WAAW,GAAG,KAAKhJ,YAAL,CAAkBwF,WAAlB,CAA8B,KAAKxF,YAAL,CAAkBgB,UAAlB,CAA6B8H,aAA7B,EAA4C,CAA5C,EAA+C,CAA/C,CAA9B,CAApB;;AACA,iBAAO,KAAKN,KAAL,CAAWS,eAAX,CAA2BF,WAA3B,EAAwCC,WAAxC,CAAP;AACH;AACD;;;;;;4BAGwB;AACpB,iBAAO,KAAKP,QAAL,CAAcE,WAAd,IAA6B,OAA7B,GACH,KAAKH,KAAL,CAAW3J,0BADR,GACqC,KAAK2J,KAAL,CAAW5J,sBADvD;AAEH;AACD;;;;;;;4BAIsB;AAClB,iBAAO;AACH,qBAAS,KAAK4J,KAAL,CAAWlK,cADjB;AAEH,oBAAQ,KAAKkK,KAAL,CAAWhK,aAFhB;AAGH,0BAAc,KAAKgK,KAAL,CAAW9J;AAHtB,YAIL,KAAK+J,QAAL,CAAcE,WAJT,CAAP;AAKH;AACD;;;;;;;4BAIsB;AAClB,iBAAO;AACH,qBAAS,KAAKH,KAAL,CAAWjK,cADjB;AAEH,oBAAQ,KAAKiK,KAAL,CAAW/J,aAFhB;AAGH,0BAAc,KAAK+J,KAAL,CAAW7J;AAHtB,YAIL,KAAK8J,QAAL,CAAcE,WAJT,CAAP;AAKH;;;;;;AAgELJ,qBAAiB,CAAC/lC,IAAlB,GAAyB,SAAS0mC,yBAAT,CAAmCxmC,CAAnC,EAAsC;AAAE,aAAO,KAAKA,CAAC,IAAI6lC,iBAAV,EAA6B,gEAAyBpK,iBAAzB,CAA7B,EAA0E,gEAAyB;AAAa;;;AAErK;AAAA,eAAMgL,WAAN;AAAA,OAFwJ,CAAzB,CAA1E,EAE/B,gEAAyB,kEAAzB,EAA6C,CAA7C,CAF+B,EAEkB,gEAAyB,uEAAzB,EAA2C,CAA3C,CAFlB,EAEiE,gEAAyB,+DAAzB,CAFjE,CAAP;AAE8H,KAF/L;;AAGAZ,qBAAiB,CAACxiB,IAAlB,GAAyB,gEAAyB;AAAEnjB,UAAI,EAAE2lC,iBAAR;AAA2BntB,eAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;AAAiEC,cAAQ,EAAE,CAAC,mBAAD,CAA3E;AAAkGmL,wBAAkB,EAAE/B,GAAtH;AAA2HgC,WAAK,EAAE,CAAlI;AAAqIC,UAAI,EAAE,CAA3I;AAA8IC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,qBAAJ,CAAD,EAA6B,CAAC,CAAD,EAAI,uBAAJ,CAA7B,EAA2D,CAAC,YAAD,EAAe,EAAf,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC,aAArC,EAAoD,QAApD,EAA8D,CAA9D,EAAiE,4BAAjE,EAA+F,CAA/F,EAAkG,OAAlG,CAA3D,EAAuK,CAAC,CAAD,EAAI,oBAAJ,CAAvK,EAAkM,CAAC,CAAD,EAAI,qBAAJ,CAAlM,EAA8N,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,8BAA7C,EAA6E,CAA7E,EAAgF,UAAhF,EAA4F,OAA5F,CAA9N,EAAoU,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,0BAA7C,EAAyE,CAAzE,EAA4E,UAA5E,EAAwF,OAAxF,CAApU,CAAtJ;AAA6jBC,cAAQ,EAAE,SAASwiB,0BAAT,CAAoCnlB,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5qB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASolB,kDAAT,GAA8D;AAAE,mBAAOnlB,GAAG,CAAColB,oBAAJ,EAAP;AAAoC,WAA/H;;AACA,+DAAc,CAAd;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASC,kDAAT,GAA8D;AAAE,mBAAOrlB,GAAG,CAACslB,eAAJ,EAAP;AAA+B,WAA1H;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASC,kDAAT,GAA8D;AAAE,mBAAOvlB,GAAG,CAACwlB,WAAJ,EAAP;AAA2B,WAAtH;;AACA;;AACA;;AACA;AACH;;AAAC,YAAIzlB,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,oEAAmB,YAAnB,EAAiCC,GAAG,CAACylB,iBAArC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BzlB,GAAG,CAAC0lB,gBAAnC,EAAqD,GAArD;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,qBAAnB,EAA0C1lB,GAAG,CAACukB,QAAJ,CAAaE,WAAb,IAA4B,OAAtE;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B,CAACzkB,GAAG,CAAC2lB,eAAJ,EAA/B;;AACA,oEAAmB,YAAnB,EAAiC3lB,GAAG,CAAC4lB,eAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B,CAAC5lB,GAAG,CAAC6lB,WAAJ,EAA/B;;AACA,oEAAmB,YAAnB,EAAiC7lB,GAAG,CAAC8lB,eAArC;AACH;AAAE,OAhC2C;AAgCzCjjB,gBAAU,EAAE,CAAC,kEAAD,EAAmB,6DAAnB,CAhC6B;AAgCWC,mBAAa,EAAE,CAhC1B;AAgC6BC,qBAAe,EAAE;AAhC9C,KAAzB,CAAzB;AAiCA;;AACAshB,qBAAiB,CAAC5lC,cAAlB,GAAmC;AAAA,aAAM,CACrC;AAAEC,YAAI,EAAEu7B;AAAR,OADqC,EAErC;AAAEv7B,YAAI,EAAEumC,WAAR;AAAqBrmC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAGrD;AAAA,mBAAMomC,WAAN;AAAA,WAHyC,CAAD;AAAtB,SAAD;AAAjC,OAFqC,EAMrC;AAAEvmC,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OANqC,EAOrC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,uEAAD;AAAtB,SAArB;AAA/B,OAPqC,EAQrC;AAAEH,YAAI,EAAE;AAAR,OARqC,CAAN;AAAA,KAAnC;AAUA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB2lC,iBAAzB,EAA4C,CAAC;AAClE3lC,YAAI,EAAE,uDAD4D;AAElEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,qBADX;AAEC6V,kBAAQ,EAAE,q+BAFX;AAGCvL,kBAAQ,EAAE,mBAHX;AAIC2L,uBAAa,EAAE,gEAAkBG,IAJlC;AAKCF,yBAAe,EAAE,sEAAwBG;AAL1C,SAAD;AAF4D,OAAD,CAA5C,EASrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAEu7B;AAAR,SAAD,EAA8B;AAAEv7B,cAAI,EAAEumC,WAAR;AAAqBrmC,oBAAU,EAAE,CAAC;AAC7EF,gBAAI,EAAE,oDADuE;AAE7EG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAMomC,WAAN;AAAA,aAFhB,CAAD;AAFuE,WAAD;AAAjC,SAA9B,EAKX;AAAEvmC,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAC3CF,gBAAI,EAAE;AADqC,WAAD;AAAxC,SALW,EAOX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,uEAAD;AAFP,WAFkC;AAA/B,SAPW,EAYX;AAAEH,cAAI,EAAE;AAAR,SAZW,CAAP;AAYkC,OArB3B,EAqB6B,IArB7B;AAqBqC,KArBpD;;AAsBd,QAAI,KAAJ,EAAW,CAkBV;AACD;;;;;;;QAKMumC,W;AACF;;;;;;AAMA,2BAAYX,KAAZ,EAAmBxI,YAAnB,EAAiCD,YAAjC,EAA+CzW,kBAA/C,EAAmE;AAAA;;AAAA;;AAC/D,aAAK0W,YAAL,GAAoBA,YAApB;AACA,aAAKD,YAAL,GAAoBA,YAApB;AACA,aAAKzW,kBAAL,GAA0BA,kBAA1B;AACA;;;;;;AAKA,aAAK2gB,oBAAL,GAA4B,KAA5B;AACA;;;;AAGA,aAAKC,SAAL,GAAiB,OAAjB;AACA;;;;AAGA,aAAKhK,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;;AAIA,aAAK0E,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;;AAIA,aAAKoC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,aAAK7G,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAKxM,YAAL,GAAoB,IAAI,4CAAJ,EAApB;;AACA,YAAI,CAAC,KAAKqM,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,YAAI,CAAC,KAAK8B,YAAV,EAAwB;AACpB,gBAAM9B,0BAA0B,CAAC,kBAAD,CAAhC;AACH;;AACD,aAAKkM,YAAL,GAAoB3B,KAAK,CAAChsB,OAAN,CAAcvc,SAAd;AAAyB;;;AAG7C,oBAAM;AACFqpB,4BAAkB,CAACqB,YAAnB;;AACA,iBAAI,CAACgJ,YAAL,CAAkBjuB,IAAlB;AACH,SANmB,CAApB;AAOH;AACD;;;;;;;;;AA6EA;;;6CAGqB;AACjB,eAAK0kC,qBAAL,GAA6B,IAAI,mEAAJ,CAAoB,KAAKC,eAAL,IAAwB9B,iBAA5C,CAA7B;AACA,eAAKvM,UAAL,GAAkB,KAAKsO,OAAL,IAAgB,KAAKtK,YAAL,CAAkBM,KAAlB,EAAlC,CAFiB,CAGjB;;AACA,eAAKiK,YAAL,GAAoB,KAAKL,SAAzB;AACH;AACD;;;;;;6CAGqB;AACjB,cAAI,KAAKD,oBAAT,EAA+B;AAC3B,iBAAKA,oBAAL,GAA4B,KAA5B;AACA,iBAAKO,eAAL;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKL,YAAL,CAAkB7pC,WAAlB;;AACA,eAAKqzB,YAAL,CAAkBrpB,QAAlB;AACH;AACD;;;;;;;oCAIYkS,O,EAAS;AACjB;AACA,cAAMxO,MAAM,GAAGwO,OAAO,CAAC,SAAD,CAAP,IAAsBA,OAAO,CAAC,SAAD,CAA7B,IAA4CA,OAAO,CAAC,YAAD,CAAlE;;AACA,cAAIxO,MAAM,IAAI,CAACA,MAAM,CAACy8B,WAAtB,EAAmC;AAC/B;AACA,gBAAMC,IAAI,GAAG,KAAKC,wBAAL,EAAb;;AACA,gBAAID,IAAJ,EAAU;AACN;AACA;AACA,mBAAKphB,kBAAL,CAAwBuB,aAAxB;;AACA6f,kBAAI,CAAClK,KAAL;AACH;AACJ;;AACD,eAAK7M,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;0CAGkB;AACd,eAAKilC,wBAAL,GAAgClJ,gBAAhC;AACH;AACD;;;;;;;2CAImB;AACf;AACA,cAAMkH,WAAW,GAAG,KAAKA,WAAzB;AACA;;AACA,cAAI+B,IAAJ;;AACA,cAAI/B,WAAW,KAAK,OAApB,EAA6B;AACzB+B,gBAAI,GAAG,KAAKE,SAAZ;AACH,WAFD,MAGK,IAAIjC,WAAW,KAAK,MAApB,EAA4B;AAC7B+B,gBAAI,GAAG,KAAKG,QAAZ;AACH,WAFI,MAGA;AACDH,gBAAI,GAAG,KAAKI,aAAZ;AACH;;AACDJ,cAAI,CAAClK,KAAL;AACH;AACD;;;;;;;;sCAKcC,I,EAAM;AAChB,cAAIA,IAAI,IAAI,CAAC,KAAKT,YAAL,CAAkB+K,QAAlB,CAA2BtK,IAA3B,EAAiC,KAAKhT,QAAtC,CAAb,EAA8D;AAC1D,iBAAKyS,cAAL,CAAoBxiB,IAApB,CAAyB+iB,IAAzB;AACH;AACJ;AACD;;;;;;;;qDAK6BuK,c,EAAgB;AACzC,eAAKpG,YAAL,CAAkBlnB,IAAlB,CAAuBstB,cAAvB;AACH;AACD;;;;;;;;iDAKyBC,e,EAAiB;AACtC,eAAKjE,aAAL,CAAmBtpB,IAAnB,CAAwButB,eAAxB;AACH;AACD;;;;;;wCAGgB;AACZ,eAAK9K,cAAL,CAAoBziB,IAApB;AACH;AACD;;;;;;;;;wCAMgB+iB,I,EAAMiK,I,EAAM;AACxB,eAAK1O,UAAL,GAAkByE,IAAlB;AACA,eAAKkI,WAAL,GAAmB+B,IAAnB;AACH;AACD;;;;;;;;4CAKoBhH,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;AACD;;;;;;;;mDAK2B;AACvB,iBAAO,KAAKkH,SAAL,IAAkB,KAAKC,QAAvB,IAAmC,KAAKC,aAA/C;AACH;;;4BAxMa;AAAE,iBAAO,KAAKI,QAAZ;AAAuB;AACvC;;;;;0BAIYnmC,K,EAAO;AACf,eAAKmmC,QAAL,GAAgB,KAAKpH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKupB,SAAZ;AAAwB;AACzC;;;;;0BAIavpB,K,EAAO;AAChB,eAAKupB,SAAL,GAAiB,KAAKwV,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAjB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKk/B,QAAZ;AAAuB;AACvC;;;;;0BAIYl/B,K,EAAO;AACf,eAAKk/B,QAAL,GAAgB,KAAKH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKm/B,QAAZ;AAAuB;AACvC;;;;;0BAIYn/B,K,EAAO;AACf,eAAKm/B,QAAL,GAAgB,KAAKJ,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;;4BAKiB;AAAE,iBAAO,KAAKomC,kBAAZ;AAAiC;AACpD;;;;;0BAIepmC,K,EAAO;AAClB,eAAKomC,kBAAL,GAA0B,KAAKnL,YAAL,CAAkBgE,SAAlB,CAA4Bj/B,KAA5B,EAAmC,KAAK03B,OAAxC,EAAiD,KAAKD,OAAtD,CAA1B;AACA,eAAK7I,YAAL,CAAkBjuB,IAAlB;;AACA,eAAK4jB,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAK4f,YAAZ;AAA2B;AAC/C;;;;;0BAIgBxlC,K,EAAO;AACnB,eAAKwlC,YAAL,GAAoBxlC,KAApB;AACA,eAAKklC,oBAAL,GAA4B,IAA5B;;AACA,eAAK3gB,kBAAL,CAAwBqB,YAAxB;AACH;;;;;;AAkILwe,eAAW,CAAC3mC,IAAZ,GAAmB,SAAS4oC,mBAAT,CAA6B1oC,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIymC,WAAV,EAAuB,gEAAyBhL,iBAAzB,CAAvB,EAAoE,gEAAyB,kEAAzB,EAA6C,CAA7C,CAApE,EAAqH,gEAAyB,uEAAzB,EAA2C,CAA3C,CAArH,EAAoK,gEAAyB,+DAAzB,CAApK,CAAP;AAAiO,KAAtR;;AACAgL,eAAW,CAACpjB,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAEumC,WAAR;AAAqB/tB,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoD4K,eAAS,EAAE,SAASqlB,iBAAT,CAA2BpnB,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,oEAAmB6b,YAAnB,EAAiC,IAAjC;;AACA,oEAAmBiH,WAAnB,EAAgC,IAAhC;;AACA,oEAAmBpC,gBAAnB,EAAqC,IAArC;AACH;;AAAC,YAAI1gB,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC0mB,SAAJ,GAAgB1kB,EAAE,CAACE,KAAxE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC2mB,QAAJ,GAAe3kB,EAAE,CAACE,KAAvE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC4mB,aAAJ,GAAoB5kB,EAAE,CAACE,KAA5E;AACH;AAAE,OATqC;AASnCtC,eAAS,EAAE,CAAC,CAAD,EAAI,cAAJ,CATwB;AASHjG,YAAM,EAAE;AAAEqsB,iBAAS,EAAE,WAAb;AAA0BI,eAAO,EAAE,SAAnC;AAA8C7c,gBAAQ,EAAE,UAAxD;AAAoEgP,eAAO,EAAE,SAA7E;AAAwFD,eAAO,EAAE,SAAjG;AAA4G6N,uBAAe,EAAE,iBAA7H;AAAgJ9N,kBAAU,EAAE,YAA5J;AAA0KG,iBAAS,EAAE;AAArL,OATL;AASyM5e,aAAO,EAAE;AAAEoiB,sBAAc,EAAE,gBAAlB;AAAoC0E,oBAAY,EAAE,cAAlD;AAAkEoC,qBAAa,EAAE,eAAjF;AAAkG7G,sBAAc,EAAE;AAAlH,OATlN;AASwV9kB,cAAQ,EAAE,CAAC,aAAD,CATlW;AASmX0C,cAAQ,EAAE,CAAC,kEAAD,CAT7X;AAS4Z0I,WAAK,EAAE,CATna;AASsaC,UAAI,EAAE,CAT5a;AAS+aC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,iBAAJ,CAAD,EAAyB,CAAC,wBAAD,EAA2B,EAA3B,EAA+B,UAA/B,EAA2C,IAA3C,EAAiD,CAAjD,EAAoD,sBAApD,EAA4E,CAA5E,EAA+E,UAA/E,CAAzB,EAAqH,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,WAAlE,EAA+E,kBAA/E,EAAmG,gBAAnG,EAAqH,gBAArH,EAAuI,CAAvI,EAA0I,cAA1I,CAArH,EAAgR,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,kBAAlE,EAAsF,eAAtF,EAAuG,gBAAvG,EAAyH,CAAzH,EAA4H,cAA5H,CAAhR,EAA6Z,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,kBAAlE,EAAsF,cAAtF,EAAsG,gBAAtG,EAAwH,CAAxH,EAA2H,cAA3H,CAA7Z,EAAyiB,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,WAAlE,EAA+E,kBAA/E,EAAmG,gBAAnG,EAAqH,gBAArH,CAAziB,EAAirB,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,kBAAlE,EAAsF,eAAtF,EAAuG,gBAAvG,CAAjrB,EAA2yB,CAAC,CAAD,EAAI,YAAJ,EAAkB,UAAlB,EAA8B,YAA9B,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,kBAAlE,EAAsF,cAAtF,EAAsG,gBAAtG,CAA3yB,CATvb;AAS41CC,cAAQ,EAAE,SAAS0kB,oBAAT,CAA8BrnB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/7C,mEAAkB,CAAlB,EAAqB2X,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,aAA/D,EAA8E,CAA9E;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBC,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,gBAAlE,EAAoF,CAApF;;AACA,mEAAkB,CAAlB,EAAqBc,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,eAAjE,EAAkF,CAAlF;;AACA,mEAAkB,CAAlB,EAAqBS,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,qBAAvE,EAA8F,CAA9F;;AACA;AACH;;AAAC,YAAInZ,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,iBAAlB,EAAqCC,GAAG,CAACkmB,qBAAzC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BlmB,GAAG,CAACykB,WAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,OAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,MAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,YAAlC;AACH;AAAE,OA1BqC;AA0BnC5hB,gBAAU,EAAE,CAAC,mEAAD,EAAyB,iEAAzB,EAAiD,wDAAjD,EAAkE,4DAAlE,EAAuF+Y,YAAvF,EACbiH,WADa,EAEbpC,gBAFa,CA1BuB;AA4BjBxwB,YAAM,EAAE,CAAC,whDAAD,CA5BS;AA4BmhD6S,mBAAa,EAAE,CA5BliD;AA4BqiDC,qBAAe,EAAE;AA5BtjD,KAAzB,CAAnB;AA6BA;;AACAkiB,eAAW,CAACxmC,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAEu7B;AAAR,OAD+B,EAE/B;AAAEv7B,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OAF+B,EAG/B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,uEAAD;AAAtB,SAArB;AAA/B,OAH+B,EAI/B;AAAEH,YAAI,EAAE;AAAR,OAJ+B,CAAN;AAAA,KAA7B;;AAMAumC,eAAW,CAACnrB,cAAZ,GAA6B;AACzBqsB,qBAAe,EAAE,CAAC;AAAEznC,YAAI,EAAE;AAAR,OAAD,CADQ;AAEzB0nC,aAAO,EAAE,CAAC;AAAE1nC,YAAI,EAAE;AAAR,OAAD,CAFgB;AAGzBsnC,eAAS,EAAE,CAAC;AAAEtnC,YAAI,EAAE;AAAR,OAAD,CAHc;AAIzB6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAJe;AAKzB65B,aAAO,EAAE,CAAC;AAAE75B,YAAI,EAAE;AAAR,OAAD,CALgB;AAMzB45B,aAAO,EAAE,CAAC;AAAE55B,YAAI,EAAE;AAAR,OAAD,CANgB;AAOzB25B,gBAAU,EAAE,CAAC;AAAE35B,YAAI,EAAE;AAAR,OAAD,CAPa;AAQzB85B,eAAS,EAAE,CAAC;AAAE95B,YAAI,EAAE;AAAR,OAAD,CARc;AASzBs9B,oBAAc,EAAE,CAAC;AAAEt9B,YAAI,EAAE;AAAR,OAAD,CATS;AAUzBgiC,kBAAY,EAAE,CAAC;AAAEhiC,YAAI,EAAE;AAAR,OAAD,CAVW;AAWzBokC,mBAAa,EAAE,CAAC;AAAEpkC,YAAI,EAAE;AAAR,OAAD,CAXU;AAYzBu9B,oBAAc,EAAE,CAAC;AAAEv9B,YAAI,EAAE;AAAR,OAAD,CAZS;AAazBgoC,eAAS,EAAE,CAAC;AAAEhoC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC+8B,YAAD;AAAzB,OAAD,CAbc;AAczB+K,cAAQ,EAAE,CAAC;AAAEjoC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAACgkC,WAAD;AAAzB,OAAD,CAde;AAezB+D,mBAAa,EAAE,CAAC;AAAEloC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC4hC,gBAAD;AAAzB,OAAD;AAfU,KAA7B;AAiBA;;AAAc,KAAC,YAAY;AAAE,sEAAyBwE,WAAzB,EAAsC,CAAC;AAC5DvmC,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAEC6V,kBAAQ,EAAE,mwCAFX;AAGCzM,cAAI,EAAE;AACF,qBAAS;AADP,WAHP;AAMCkB,kBAAQ,EAAE,aANX;AAOC2L,uBAAa,EAAE,gEAAkBG,IAPlC;AAQCF,yBAAe,EAAE,sEAAwBG,MAR1C;AASCjT,gBAAM,EAAE,CAAC,whDAAD;AATT,SAAD;AAFsD,OAAD,CAAtC,EAarB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEu7B;AAAR,SAAD,EAA8B;AAAEv7B,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AACpFF,gBAAI,EAAE;AAD8E,WAAD;AAAxC,SAA9B,EAEX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,uEAAD;AAFP,WAFkC;AAA/B,SAFW,EAOX;AAAEH,cAAI,EAAE;AAAR,SAPW,CAAP;AAOkC,OApB3B,EAoB6B;AAAEsnC,iBAAS,EAAE,CAAC;AAC5DtnC,cAAI,EAAE;AADsD,SAAD,CAAb;AAE9Cs9B,sBAAc,EAAE,CAAC;AACjBt9B,cAAI,EAAE;AADW,SAAD,CAF8B;AAI9CgiC,oBAAY,EAAE,CAAC;AACfhiC,cAAI,EAAE;AADS,SAAD,CAJgC;AAM9CokC,qBAAa,EAAE,CAAC;AAChBpkC,cAAI,EAAE;AADU,SAAD,CAN+B;AAQ9Cu9B,sBAAc,EAAE,CAAC;AACjBv9B,cAAI,EAAE;AADW,SAAD,CAR8B;AAU9C0nC,eAAO,EAAE,CAAC;AACV1nC,cAAI,EAAE;AADI,SAAD,CAVqC;AAY9C6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CAZoC;AAc9C65B,eAAO,EAAE,CAAC;AACV75B,cAAI,EAAE;AADI,SAAD,CAdqC;AAgB9C45B,eAAO,EAAE,CAAC;AACV55B,cAAI,EAAE;AADI,SAAD,CAhBqC;AAkB9CynC,uBAAe,EAAE,CAAC;AAClBznC,cAAI,EAAE;AADY,SAAD,CAlB6B;AAoB9C25B,kBAAU,EAAE,CAAC;AACb35B,cAAI,EAAE;AADO,SAAD,CApBkC;AAsB9C85B,iBAAS,EAAE,CAAC;AACZ95B,cAAI,EAAE;AADM,SAAD,CAtBmC;AAwB9CgoC,iBAAS,EAAE,CAAC;AACZhoC,cAAI,EAAE,uDADM;AAEZG,cAAI,EAAE,CAAC+8B,YAAD;AAFM,SAAD,CAxBmC;AA2B9C+K,gBAAQ,EAAE,CAAC;AACXjoC,cAAI,EAAE,uDADK;AAEXG,cAAI,EAAE,CAACgkC,WAAD;AAFK,SAAD,CA3BoC;AA8B9C+D,qBAAa,EAAE,CAAC;AAChBloC,cAAI,EAAE,uDADU;AAEhBG,cAAI,EAAE,CAAC4hC,gBAAD;AAFU,SAAD;AA9B+B,OApB7B;AAqDb,KArDF;;AAsDd,QAAI,KAAJ,EAAW,CA8HV;AAED;;;;;;AAKA;;;;;;;AAKA,QAAM4G,uBAAuB,GAAG;AAC5B;;;AAGAC,oBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAChBC,eAAO,EAAE,CADO;AAEhBp3B,iBAAS,EAAE;AAFK,OAAN,CAAd,CADsC,EAKtC,wEAAW,eAAX,EAA4B,qEAAQ,kCAAR,EAA4C,mEAAM;AAC1Eo3B,eAAO,EAAE,CADiE;AAE1Ep3B,iBAAS,EAAE;AAF+D,OAAN,CAA5C,CAA5B,CALsC,EAStC,wEAAW,WAAX,EAAwB,qEAAQ,cAAR,EAAwB,mEAAM;AAAEo3B,eAAO,EAAE;AAAX,OAAN,CAAxB,CAAxB,CATsC,CAA1B,CAJY;;AAe5B;;;AAGAC,oBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAAED,eAAO,EAAE;AAAX,OAAN,CAAd,CADsC,EAEtC,mEAAM,OAAN,EAAe,mEAAM;AAAEA,eAAO,EAAE;AAAX,OAAN,CAAf,CAFsC,EAGtC;AACA;AACA,8EAAW,WAAX,EAAwB,qEAAQ,8CAAR,CAAxB,CALsC,CAA1B;AAlBY,KAAhC;AA2BA;;;;;;AAKA;;;;;AAIA,QAAIE,aAAa,GAAG,CAApB;AACA;;;;;AAIA,QAAMC,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AACA;;;;;;AAKA,aAASC,sCAAT,CAAgD3nC,OAAhD,EAAyD;AACrD;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,QAAMupC,+CAA+C,GAAG;AACpDxlC,aAAO,EAAEslC,8BAD2C;AAEpDrlC,UAAI,EAAE,CAAC,4DAAD,CAF8C;AAGpDC,gBAAU,EAAEqlC;AAHwC,KAAxD,C,CAKA;;AACA;;;;QAGME,wB;AACF;;;AAGA,sCAAY7qB,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAM8qB,8BAA8B,GAAG,0EAAWD,wBAAX,CAAvC;AACA;;;;;;;;;;QAQME,oB;;;;;AACF;;;;AAIA,oCAAYvyB,UAAZ,EAAwB4P,kBAAxB,EAA4C;AAAA;;AAAA;;AACxC,qCAAM5P,UAAN;AACA,gBAAK4P,kBAAL,GAA0BA,kBAA1B;AACA;;;;AAGA,gBAAK4iB,eAAL,GAAuB,OAAvB;AACA;;;;AAGA,gBAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AAVwC;AAW3C;AACD;;;;;;;0CAGkB;AACd,eAAKC,SAAL,CAAe5B,eAAf;AACH;AACD;;;;;;sCAGc;AACV,eAAK2B,cAAL,CAAoB7hC,QAApB;AACH;AACD;;;;;;8CAGsB;AAClB,eAAK4hC,eAAL,GAAuB,MAAvB,CADkB,CAElB;;AACA,cAAI,KAAK5iB,kBAAT,EAA6B;AACzB,iBAAKA,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;;;;MAtC8BqhB,8B;;AAwCnCC,wBAAoB,CAACzpC,IAArB,GAA4B,SAAS6pC,4BAAT,CAAsC3pC,CAAtC,EAAyC;AAAE,aAAO,KAAKA,CAAC,IAAIupC,oBAAV,EAAgC,gEAAyB,wDAAzB,CAAhC,EAA6E,gEAAyB,+DAAzB,CAA7E,CAAP;AAA0I,KAAjN;;AACAA,wBAAoB,CAAClmB,IAArB,GAA4B,gEAAyB;AAAEnjB,UAAI,EAAEqpC,oBAAR;AAA8B7wB,eAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,CAAzC;AAAuE4K,eAAS,EAAE,SAASsmB,0BAAT,CAAoCroB,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1L,oEAAmBklB,WAAnB,EAAgC,IAAhC;AACH;;AAAC,YAAIllB,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACkoB,SAAJ,GAAgBlmB,EAAE,CAACE,KAAxE;AACH;AAAE,OAL8C;AAK5CtC,eAAS,EAAE,CAAC,CAAD,EAAI,wBAAJ,CALiC;AAKFuC,cAAQ,EAAE,CALR;AAKWtC,kBAAY,EAAE,SAASwoB,iCAAT,CAA2CtoB,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxI,yFAAwC,sBAAxC,EAAgE,SAASuoB,qEAAT,GAAiF;AAAE,mBAAOtoB,GAAG,CAACioB,cAAJ,CAAmBzmC,IAAnB,EAAP;AAAmC,WAAtL;AACH;;AAAC,YAAIue,EAAE,GAAG,CAAT,EAAY;AACV,qFAAoC,iBAApC,EAAuDC,GAAG,CAACgoB,eAA3D;;AACA,oEAAmB,8BAAnB,EAAmDhoB,GAAG,CAACuoB,UAAJ,CAAeC,OAAlE;AACH;AAAE,OAV8C;AAU5C7uB,YAAM,EAAE;AAAEyH,aAAK,EAAE;AAAT,OAVoC;AAUhBjK,cAAQ,EAAE,CAAC,sBAAD,CAVM;AAUoB0C,cAAQ,EAAE,CAAC,wEAAD,CAV9B;AAUmE0I,WAAK,EAAE,CAV1E;AAU6EC,UAAI,EAAE,EAVnF;AAUuFC,YAAM,EAAE,CAAC,CAAC,cAAD,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,IAAxB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD,WAApD,EAAiE,SAAjE,EAA4E,SAA5E,EAAuF,YAAvF,EAAqG,iBAArG,EAAwH,UAAxH,EAAoI,WAApI,EAAiJ,gBAAjJ,EAAmK,cAAnK,EAAmL,eAAnL,EAAoM,gBAApM,CAAD,CAV/F;AAUwTC,cAAQ,EAAE,SAAS+lB,6BAAT,CAAuC1oB,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7a,uEAAsB,CAAtB,EAAyB,cAAzB,EAAyC,CAAzC;;AACA,mEAAkB,gBAAlB,EAAoC,SAAS2oB,oEAAT,CAA8EhlB,MAA9E,EAAsF;AAAE,mBAAO1D,GAAG,CAACuoB,UAAJ,CAAejX,MAAf,CAAsB5N,MAAtB,CAAP;AAAuC,WAAnK,EAAqK,cAArK,EAAqL,SAASilB,kEAAT,CAA4EjlB,MAA5E,EAAoF;AAAE,mBAAO1D,GAAG,CAACuoB,UAAJ,CAAeK,WAAf,CAA2BllB,MAA3B,CAAP;AAA4C,WAAvT,EAAyT,eAAzT,EAA0U,SAASmlB,mEAAT,CAA6EnlB,MAA7E,EAAqF;AAAE,mBAAO1D,GAAG,CAACuoB,UAAJ,CAAeO,YAAf,CAA4BplB,MAA5B,CAAP;AAA6C,WAA9c,EAAgd,gBAAhd,EAAke,SAASqlB,oEAAT,GAAgF;AAAE,mBAAO/oB,GAAG,CAACuoB,UAAJ,CAAerqC,KAAf,EAAP;AAAgC,WAAplB;;AACA;AACH;;AAAC,YAAI6hB,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,IAAlB,EAAwBC,GAAG,CAACuoB,UAAJ,CAAe/xB,EAAvC,EAA2C,SAA3C,EAAsDwJ,GAAG,CAACuoB,UAAJ,CAAenpC,UAArE,EAAiF,SAAjF,EAA4F4gB,GAAG,CAACuoB,UAAJ,CAAenC,OAA3G,EAAoH,WAApH,EAAiIpmB,GAAG,CAACuoB,UAAJ,CAAevC,SAAhJ,EAA2J,SAA3J,EAAsKhmB,GAAG,CAACuoB,UAAJ,CAAexI,QAArL,EAA+L,SAA/L,EAA0M/f,GAAG,CAACuoB,UAAJ,CAAevI,QAAzN,EAAmO,YAAnO,EAAiPhgB,GAAG,CAACuoB,UAAJ,CAAeS,WAAhQ,EAA6Q,iBAA7Q,EAAgShpB,GAAG,CAACuoB,UAAJ,CAAeU,uBAA/S,EAAwU,UAAxU,EAAoVjpB,GAAG,CAACuoB,UAAJ,CAAene,SAAnW,EAA8W,WAA9W,EAA2XpK,GAAG,CAACuoB,UAAJ,CAAe/P,SAA1Y,EAAqZ,iBAArZ,EAAwa,OAAxa;AACH;AAAE,OAhB8C;AAgB5C3V,gBAAU,EAAE,CAACoiB,WAAD,EAAc,8DAAd,EAAmC,uDAAnC,CAhBgC;AAgBoBh1B,YAAM,EAAE,CAAC,whBAAD,CAhB5B;AAgBwjB6S,mBAAa,EAAE,CAhBvkB;AAgB0kBomB,UAAI,EAAE;AAAEC,iBAAS,EAAE,CACtoB9B,uBAAuB,CAACC,cAD8mB,EAEtoBD,uBAAuB,CAACG,cAF8mB;AAAb,OAhBhlB;AAmBxCzkB,qBAAe,EAAE;AAnBuB,KAAzB,CAA5B;AAoBA;;AACAglB,wBAAoB,CAACtpC,cAArB,GAAsC;AAAA,aAAM,CACxC;AAAEC,YAAI,EAAE;AAAR,OADwC,EAExC;AAAEA,YAAI,EAAE;AAAR,OAFwC,CAAN;AAAA,KAAtC;;AAIAqpC,wBAAoB,CAACjuB,cAArB,GAAsC;AAClCouB,eAAS,EAAE,CAAC;AAAExpC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAComC,WAAD;AAAzB,OAAD;AADuB,KAAtC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB8C,oBAAzB,EAA+C,CAAC;AACrErpC,YAAI,EAAE,uDAD+D;AAErEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAEC6V,kBAAQ,EAAE,qsBAFX;AAGCzM,cAAI,EAAE;AACF,qBAAS,wBADP;AAEF,iCAAqB,iBAFnB;AAGF,sCAA0B,uBAHxB;AAIF,oDAAwC;AAJtC,WAHP;AASCmzB,oBAAU,EAAE,CACR/B,uBAAuB,CAACC,cADhB,EAERD,uBAAuB,CAACG,cAFhB,CATb;AAaCrwB,kBAAQ,EAAE,sBAbX;AAcC2L,uBAAa,EAAE,gEAAkBG,IAdlC;AAeCF,yBAAe,EAAE,sEAAwBG,MAf1C;AAgBCvJ,gBAAM,EAAE,CAAC,OAAD,CAhBT;AAiBC1J,gBAAM,EAAE,CAAC,whBAAD;AAjBT,SAAD;AAF+D,OAAD,CAA/C,EAqBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,CAAP;AAA2E,OArBpE,EAqBsE;AAAEwpC,iBAAS,EAAE,CAAC;AACrGxpC,cAAI,EAAE,uDAD+F;AAErGG,cAAI,EAAE,CAAComC,WAAD;AAF+F,SAAD;AAAb,OArBtE;AAwBb,KAxBF;;AAyBd,QAAI,KAAJ,EAAW,CAiCV,C,CACD;AACA;AACA;;AACA;;;;;;QAIMoE,a;AACF;;;;;;;;;;AAUA,6BAAYC,OAAZ,EAAqBjyB,QAArB,EAA+Bpc,OAA/B,EAAwCsuC,iBAAxC,EAA2DpqC,cAA3D,EAA2E28B,YAA3E,EAAyFrkB,IAAzF,EAA+Fxe,SAA/F,EAA0G;AAAA;;AACtG,aAAKqwC,OAAL,GAAeA,OAAf;AACA,aAAKjyB,QAAL,GAAgBA,QAAhB;AACA,aAAKpc,OAAL,GAAeA,OAAf;AACA,aAAKsuC,iBAAL,GAAyBA,iBAAzB;AACA,aAAKzN,YAAL,GAAoBA,YAApB;AACA,aAAKrkB,IAAL,GAAYA,IAAZ;AACA,aAAKxe,SAAL,GAAiBA,SAAjB;AACA;;;;AAGA,aAAK+sC,SAAL,GAAiB,OAAjB;AACA,aAAKwD,QAAL,GAAgB,KAAhB;AACA;;;;;AAIA,aAAK9I,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;;AAIA,aAAKoC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,aAAK2G,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,aAAKC,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA,aAAKC,OAAL,GAAe,KAAf;AACA;;;;AAGA,aAAKnzB,EAAL,4BAA4BixB,aAAa,EAAzC;AACA,aAAKmC,cAAL,GAAsB,IAAtB;AACA;;;;AAGA,aAAKC,yBAAL,GAAiC,IAAjC;AACA;;;;AAGA,aAAKC,kBAAL,GAA0B,kDAAavlC,KAAvC;AACA;;;;AAGA,aAAKwlC,eAAL,GAAuB,IAAI,4CAAJ,EAAvB;AACA;;;;AAGA,aAAKC,gBAAL,GAAwB,IAAI,4CAAJ,EAAxB;;AACA,YAAI,CAAC,KAAKlO,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,aAAKn1B,eAAL,GAAuBzF,cAAvB;AACH;AACD;;;;;;;;;AAwGA;;;sCAGc;AACV,eAAK8qC,aAAL;;AACA,eAAK/rC,KAAL;;AACA,eAAK4rC,kBAAL,CAAwB1tC,WAAxB;;AACA,eAAK2tC,eAAL,CAAqB3jC,QAArB;AACH;AACD;;;;;;;;+BAKOm2B,I,EAAM;AACT;AACA,cAAI2N,QAAQ,GAAG,KAAK9f,SAApB;AACA,eAAKA,SAAL,GAAiBmS,IAAjB;;AACA,cAAI,CAAC,KAAKT,YAAL,CAAkB+K,QAAlB,CAA2BqD,QAA3B,EAAqC,KAAK9f,SAA1C,CAAL,EAA2D;AACvD,iBAAK4f,gBAAL,CAAsBxoC,IAAtB,CAA2B+6B,IAA3B;AACH;AACJ;AACD;;;;;;;;oCAKYuK,c,EAAgB;AACxB,eAAKpG,YAAL,CAAkBlnB,IAAlB,CAAuBstB,cAAvB;AACH;AACD;;;;;;;;qCAKaC,e,EAAiB;AAC1B,eAAKjE,aAAL,CAAmBtpB,IAAnB,CAAwButB,eAAxB;AACH;AACD;;;;;;;;uCAKel0B,K,EAAO;AAAA;;AAClB,cAAI,KAAKs3B,gBAAT,EAA2B;AACvB,kBAAMtvC,KAAK,CAAC,6DAAD,CAAX;AACH;;AACD,eAAKsvC,gBAAL,GAAwBt3B,KAAxB;AACA,eAAKi3B,kBAAL,GACI,KAAKK,gBAAL,CAAsBC,YAAtB,CAAmCruC,SAAnC;AAA8C;;;;AAI9C,oBAAC8E,KAAD;AAAA,mBAAW,OAAI,CAACupB,SAAL,GAAiBvpB,KAA5B;AAAA,WAJA,CADJ;AAMH;AACD;;;;;;;+BAIO;AACH,cAAI,KAAK8oC,OAAL,IAAgB,KAAKnoB,QAAzB,EAAmC;AAC/B;AACH;;AACD,cAAI,CAAC,KAAK2oB,gBAAV,EAA4B;AACxB,kBAAMtvC,KAAK,CAAC,8DAAD,CAAX;AACH;;AACD,cAAI,KAAK5B,SAAT,EAAoB;AAChB,iBAAK4wC,yBAAL,GAAiC,KAAK5wC,SAAL,CAAesmB,aAAhD;AACH;;AACD,eAAKipB,OAAL,GAAe,KAAK6B,aAAL,EAAf,GAAsC,KAAKC,YAAL,EAAtC;AACA,eAAKX,OAAL,GAAe,IAAf;AACA,eAAKF,YAAL,CAAkBjwB,IAAlB;AACH;AACD;;;;;;;gCAIQ;AAAA;;AACJ,cAAI,CAAC,KAAKmwB,OAAV,EAAmB;AACf;AACH;;AACD,cAAI,KAAKY,kBAAL,IAA2B,KAAKC,SAApC,EAA+C;AAC3C;AACA,gBAAMC,QAAQ,GAAG,KAAKF,kBAAL,CAAwBE,QAAzC;;AACAA,oBAAQ,CAACC,mBAAT;;AACAD,oBAAQ,CAACxC,cAAT,CAAwBviC,IAAxB,CAA6B,6DAAK,CAAL,CAA7B,EAAsC3J,SAAtC;AAAiD;;;AAGjD;AAAA,qBAAM,OAAI,CAACkuC,aAAL,EAAN;AAAA,aAHA;AAIH;;AACD,cAAI,KAAKU,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBzsC,KAAhB;;AACA,iBAAKysC,UAAL,GAAkB,IAAlB;AACH;AACD;;;AACA,cAAMC,aAAa;AAAI;;;AAGvB,mBAHMA,aAGN,GAAM;AACF;AACA;AACA,gBAAI,OAAI,CAACjB,OAAT,EAAkB;AACd,qBAAI,CAACA,OAAL,GAAe,KAAf;;AACA,qBAAI,CAACD,YAAL,CAAkBlwB,IAAlB;;AACA,qBAAI,CAACqwB,yBAAL,GAAiC,IAAjC;AACH;AACJ,WAXD;;AAYA,cAAI,KAAKA,yBAAL,IACA,OAAO,KAAKA,yBAAL,CAA+Bpe,KAAtC,KAAgD,UADpD,EACgE;AAC5D;AACA;AACA;AACA;AACA;AACA,iBAAKoe,yBAAL,CAA+Bpe,KAA/B;;AACA7jB,sBAAU,CAACgjC,aAAD,CAAV;AACH,WATD,MAUK;AACDA,yBAAa;AAChB;AACJ;AACD;;;;;;;;wCAKgB;AAAA;;AACZ;AACA;AACA;AACA;AACA,cAAI,KAAKD,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBzsC,KAAhB;AACH;;AACD,eAAKysC,UAAL,GAAkB,KAAKrB,OAAL,CAAatxB,IAAb,CAAkB+vB,oBAAlB,EAAwC;AACtDrhC,qBAAS,EAAE,KAAK+Q,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAtB,GAA8B,KADa;AAEtD0W,4BAAgB,EAAE,KAAKgyB,iBAF+B;AAGtDnqC,sBAAU,EAAE,uBAH0C;AAItD;AACA;AACAC,uBAAW,EAAE,IANyC;AAOtDwrC,wBAAY,EAAE,KAPwC;AAQtDnwC,iBAAK,EAAE,EAR+C;AAStDF,kBAAM,EAAE,EAT8C;AAUtDqM,oBAAQ,EAAE,EAV4C;AAWtDC,qBAAS,EAAE,EAX2C;AAYtDC,oBAAQ,EAAE,MAZ4C;AAatDC,qBAAS,EAAE,EAb2C;AActDsE,oBAAQ,EAAE,EAd4C;AAetDw/B,qBAAS,EAAE,IAf2C;AAgBtD;AACA;AACA;AACA;AACA;AACA;AACAC,wBAAY,EAAE;AAtBwC,WAAxC,CAAlB;;AAwBA,eAAKJ,UAAL,CAAgBK,WAAhB,GAA8BjvC,SAA9B;AAAyC;;;AAGzC;AAAA,mBAAM,OAAI,CAACmC,KAAL,EAAN;AAAA,WAHA;;AAIA,eAAKysC,UAAL,CAAgBM,iBAAhB,CAAkC1C,UAAlC,GAA+C,IAA/C;AACA,eAAKoC,UAAL,CAAgBM,iBAAhB,CAAkC7pB,KAAlC,GAA0C,KAAKA,KAA/C;AACH;AACD;;;;;;;;uCAKe;AAAA;;AACX;AACA,cAAMpc,MAAM,GAAG,IAAI,mEAAJ,CAAoB+iC,oBAApB,EAA0C,KAAKwB,iBAA/C,CAAf;;AACA,eAAKU,aAAL;;AACA,eAAKiB,YAAL;AACA;;;AACA,cAAMC,GAAG,GAAG,KAAKZ,kBAAL;AAA2B;AAAkB,eAAKC,SAAxB,CAAoC3lC,MAApC,CAA2CG,MAA3C,CAAtC;;AACAmmC,aAAG,CAACV,QAAJ,CAAalC,UAAb,GAA0B,IAA1B;AACA4C,aAAG,CAACV,QAAJ,CAAarpB,KAAb,GAAqB,KAAKA,KAA1B,CARW,CASX;;AACA,eAAKnmB,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,6DAAK,CAAL,CAA1C,EAAmD3J,SAAnD;AAA8D;;;AAG9D,sBAAM;AACD;AAAkB,mBAAI,CAACyuC,SAAxB,CAAoCruC,cAApC;AACH,WALD;AAMH;AACD;;;;;;;;uCAKe;AAAA;;AACX;AACA,cAAMoa,aAAa,GAAG,IAAI,kEAAJ,CAAkB;AACpCxR,4BAAgB,EAAE,KAAKqmC,4BAAL,EADkB;AAEpC/rC,uBAAW,EAAE,IAFuB;AAGpCC,yBAAa,EAAE,kCAHqB;AAIpCoH,qBAAS,EAAE,KAAK+Q,IAJoB;AAKpCtY,0BAAc,EAAE,KAAKyF,eAAL,EALoB;AAMpCxF,sBAAU,EAAE;AANwB,WAAlB,CAAtB;AAQA,eAAKorC,SAAL,GAAiB,KAAKnzB,QAAL,CAAcsB,MAAd,CAAqBpC,aAArB,CAAjB;;AACA,eAAKi0B,SAAL,CAAe3sC,cAAf,CAA8ByF,YAA9B,CAA2C,MAA3C,EAAmD,QAAnD;;AACA,6DAAM,KAAKknC,SAAL,CAAevyB,aAAf,EAAN,EAAsC,KAAKuyB,SAAL,CAAea,WAAf,EAAtC,EAAoE,KAAKb,SAAL,CAAe3xB,aAAf,GAA+BnT,IAA/B,CAAoC;AAAQ;;;;AAIhH,oBAAAxE,KAAK,EAAI;AACL;AACA,mBAAOA,KAAK,CAAC4X,OAAN,KAAkB,6DAAlB,IACF,OAAI,CAACqxB,gBAAL,IAAyBjpC,KAAK,CAACi8B,MAA/B,IAAyCj8B,KAAK,CAAC4X,OAAN,KAAkB,+DADhE;AAEH,WARuG,CAApC,CAApE,EAQM/c,SARN;AAQiB;;;;AAIjB,oBAAAmF,KAAK,EAAI;AACL,gBAAIA,KAAJ,EAAW;AACPA,mBAAK,CAAC6X,cAAN;AACH;;AACD,mBAAI,CAAC7a,KAAL;AACH,WAjBD;AAkBH;AACD;;;;;;;;wCAKgB;AACZ,cAAI,KAAKssC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe1kC,OAAf;;AACA,iBAAK0kC,SAAL,GAAiB,KAAKD,kBAAL,GAA0B,IAA3C;AACH;AACJ;AACD;;;;;;;;uDAK+B;AAC3B,iBAAO,KAAKlzB,QAAL,CAAc/L,QAAd,GACFgO,mBADE,CACkB,KAAK6wB,gBAAL,CAAsBmB,yBAAtB,EADlB,EAEFlyB,qBAFE,CAEoB,yBAFpB,EAGF7F,sBAHE,CAGqB,KAHrB,EAIFE,kBAJE,CAIiB,CAJjB,EAKFQ,kBALE,GAMFH,aANE,CAMY,CACf;AACI3T,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,QAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WADe,EAOf;AACIH,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,KAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WAPe,EAaf;AACIH,mBAAO,EAAE,KADb;AAEIC,mBAAO,EAAE,QAFb;AAGIC,oBAAQ,EAAE,KAHd;AAIIC,oBAAQ,EAAE;AAJd,WAbe,EAmBf;AACIH,mBAAO,EAAE,KADb;AAEIC,mBAAO,EAAE,KAFb;AAGIC,oBAAQ,EAAE,KAHd;AAIIC,oBAAQ,EAAE;AAJd,WAnBe,CANZ,CAAP;AAgCH;AACD;;;;;;;;4CAKoBk/B,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;;;4BA5Xa;AACV;AACA;AACA,iBAAO,KAAKwH,QAAL,KAAkB,KAAKmD,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBtpC,KAA9C,GAAsD,IAAxE,CAAP;AACH;AACD;;;;;0BAIYA,K,EAAO;AACf,eAAKmmC,QAAL,GAAgB,KAAKpH,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAhB;AACH;AACD;;;;;;;4BAIY;AACR,iBAAO,KAAK0qC,MAAL,KACF,KAAKpB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBqB,gBAAtB,EAAxB,GAAmE7sC,SADjE,CAAP;AAEH;AACD;;;;;0BAIUkC,K,EAAO;AACb,eAAK0qC,MAAL,GAAc1qC,KAAd;AACH;AACD;;;;;;;;4BAKc;AAAE,iBAAO,KAAK2oC,QAAZ;AAAuB;AACvC;;;;;0BAIY3oC,K,EAAO;AACf,eAAK2oC,QAAL,GAAgB,qFAAsB3oC,KAAtB,CAAhB;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKqlB,SAAL,KAAmBvnB,SAAnB,IAAgC,KAAKwrC,gBAArC,GACH,KAAKA,gBAAL,CAAsB3oB,QADnB,GAC8B,CAAC,CAAC,KAAK0E,SAD5C;AAEH;AACD;;;;;0BAIarlB,K,EAAO;AAChB;AACA,cAAM8mB,QAAQ,GAAG,qFAAsB9mB,KAAtB,CAAjB;;AACA,cAAI8mB,QAAQ,KAAK,KAAKzB,SAAtB,EAAiC;AAC7B,iBAAKA,SAAL,GAAiByB,QAAjB;;AACA,iBAAKoiB,eAAL,CAAqBvoC,IAArB,CAA0BmmB,QAA1B;AACH;AACJ;AACD;;;;;;;4BAIa;AAAE,iBAAO,KAAKgiB,OAAZ;AAAsB;AACrC;;;;;0BAIW9oC,K,EAAO;AAAEA,eAAK,GAAG,KAAKmX,IAAL,EAAH,GAAiB,KAAK9Z,KAAL,EAAtB;AAAqC;AACzD;;;;;;;4BAIgB;AAAE,iBAAO,KAAK0rC,cAAZ;AAA6B;AAC/C;;;;;0BAIc/oC,K,EAAO;AAAE,eAAK+oC,cAAL,GAAsB/oC,KAAtB;AAA8B;AACrD;;;;;;;4BAIe;AACX,iBAAO,KAAKspC,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBv6B,GAAtD;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKu6B,gBAAL,IAAyB,KAAKA,gBAAL,CAAsB17B,GAAtD;AACH;AACD;;;;;;4BAGkB;AACd,iBAAO,KAAK07B,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBnB,WAAtD;AACH;;;;;;AA2RLK,iBAAa,CAAC/qC,IAAd,GAAqB,SAASmtC,qBAAT,CAA+BjtC,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI6qC,aAAV,EAAyB,gEAAyB,kEAAzB,CAAzB,EAAqE,gEAAyB,4DAAzB,CAArE,EAA+G,gEAAyB,oDAAzB,CAA/G,EAAwJ,gEAAyB,8DAAzB,CAAxJ,EAA2M,gEAAyB3B,8BAAzB,CAA3M,EAAqQ,gEAAyB,kEAAzB,EAA6C,CAA7C,CAArQ,EAAsT,gEAAyB,iEAAzB,EAAgD,CAAhD,CAAtT,EAA0W,gEAAyB,wDAAzB,EAAmC,CAAnC,CAA1W,CAAP;AAA0Z,KAAnd;;AACA2B,iBAAa,CAACxnB,IAAd,GAAqB,gEAAyB;AAAEnjB,UAAI,EAAE2qC,aAAR;AAAuBnyB,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAlC;AAAwDyC,YAAM,EAAE;AAAEqsB,iBAAS,EAAE,WAAb;AAA0BI,eAAO,EAAE,SAAnC;AAA8ChlB,aAAK,EAAE,OAArD;AAA8DonB,eAAO,EAAE,SAAvE;AAAkFhnB,gBAAQ,EAAE,UAA5F;AAAwGkqB,cAAM,EAAE,QAAhH;AAA0HzC,+BAAuB,EAAE,yBAAnJ;AAA8K7pC,kBAAU,EAAE,YAA1L;AAAwMo5B,iBAAS,EAAE;AAAnN,OAAhE;AAAkS5e,aAAO,EAAE;AAAE8mB,oBAAY,EAAE,cAAhB;AAAgCoC,qBAAa,EAAE,eAA/C;AAAgE2G,oBAAY,EAAE,QAA9E;AAAwFC,oBAAY,EAAE;AAAtG,OAA3S;AAA6ZvyB,cAAQ,EAAE,CAAC,eAAD,CAAva;AAA0boL,WAAK,EAAE,CAAjc;AAAocC,UAAI,EAAE,CAA1c;AAA6cE,cAAQ,EAAE,SAASipB,sBAAT,CAAgC5rB,EAAhC,EAAoCC,GAApC,EAAyC,CAAG,CAAngB;AAAqgB8C,mBAAa,EAAE,CAAphB;AAAuhBC,qBAAe,EAAE;AAAxiB,KAAzB,CAArB;AACA;;AACAsmB,iBAAa,CAAC5qC,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAE;AAAR,OADiC,EAEjC;AAAEA,YAAI,EAAE;AAAR,OAFiC,EAGjC;AAAEA,YAAI,EAAE;AAAR,OAHiC,EAIjC;AAAEA,YAAI,EAAE;AAAR,OAJiC,EAKjC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC6oC,8BAAD;AAAtB,SAAD;AAA/B,OALiC,EAMjC;AAAEhpC,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OANiC,EAOjC;AAAEA,YAAI,EAAE,iEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAPiC,EAQjC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OARiC,CAAN;AAAA,KAA/B;;AAUAwqC,iBAAa,CAACvvB,cAAd,GAA+B;AAC3BmvB,6BAAuB,EAAE,CAAC;AAAEvqC,YAAI,EAAE;AAAR,OAAD,CADE;AAE3B0nC,aAAO,EAAE,CAAC;AAAE1nC,YAAI,EAAE;AAAR,OAAD,CAFkB;AAG3BsnC,eAAS,EAAE,CAAC;AAAEtnC,YAAI,EAAE;AAAR,OAAD,CAHgB;AAI3B0iB,WAAK,EAAE,CAAC;AAAE1iB,YAAI,EAAE;AAAR,OAAD,CAJoB;AAK3B8pC,aAAO,EAAE,CAAC;AAAE9pC,YAAI,EAAE;AAAR,OAAD,CALkB;AAM3B8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CANiB;AAO3BgiC,kBAAY,EAAE,CAAC;AAAEhiC,YAAI,EAAE;AAAR,OAAD,CAPa;AAQ3BokC,mBAAa,EAAE,CAAC;AAAEpkC,YAAI,EAAE;AAAR,OAAD,CARY;AAS3BU,gBAAU,EAAE,CAAC;AAAEV,YAAI,EAAE;AAAR,OAAD,CATe;AAU3B85B,eAAS,EAAE,CAAC;AAAE95B,YAAI,EAAE;AAAR,OAAD,CAVgB;AAW3B+qC,kBAAY,EAAE,CAAC;AAAE/qC,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CAXa;AAY3B6qC,kBAAY,EAAE,CAAC;AAAEhrC,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CAZa;AAa3B6sC,YAAM,EAAE,CAAC;AAAEhtC,YAAI,EAAE;AAAR,OAAD;AAbmB,KAA/B;AAeA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2qC,aAAzB,EAAwC,CAAC;AAC9D3qC,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gBADX;AAEC6V,kBAAQ,EAAE,EAFX;AAGCvL,kBAAQ,EAAE,eAHX;AAIC4L,yBAAe,EAAE,sEAAwBG,MAJ1C;AAKCJ,uBAAa,EAAE,gEAAkBG;AALlC,SAAD;AAFwD,OAAD,CAAxC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAEvkB,cAAI,EAAE;AAAR,SAAD,EAA6B;AAAEA,cAAI,EAAE;AAAR,SAA7B,EAAuD;AAAEA,cAAI,EAAE;AAAR,SAAvD,EAAgF;AAAEA,cAAI,EAAE;AAAR,SAAhF,EAAmH;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAChKF,gBAAI,EAAE,oDAD0J;AAEhKG,gBAAI,EAAE,CAAC6oC,8BAAD;AAF0J,WAAD;AAA/B,SAAnH,EAGX;AAAEhpC,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAC3CF,gBAAI,EAAE;AADqC,WAAD;AAAxC,SAHW,EAKX;AAAEA,cAAI,EAAE,iEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SALW,EAOX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAFkC;AAA/B,SAPW,CAAP;AAYF,OArBS,EAqBP;AAAEmnC,iBAAS,EAAE,CAAC;AACxBtnC,cAAI,EAAE;AADkB,SAAD,CAAb;AAEVgiC,oBAAY,EAAE,CAAC;AACfhiC,cAAI,EAAE;AADS,SAAD,CAFJ;AAIVokC,qBAAa,EAAE,CAAC;AAChBpkC,cAAI,EAAE;AADU,SAAD,CAJL;AAMV+qC,oBAAY,EAAE,CAAC;AACf/qC,cAAI,EAAE,oDADS;AAEfG,cAAI,EAAE,CAAC,QAAD;AAFS,SAAD,CANJ;AASV6qC,oBAAY,EAAE,CAAC;AACfhrC,cAAI,EAAE,oDADS;AAEfG,cAAI,EAAE,CAAC,QAAD;AAFS,SAAD,CATJ;AAYVunC,eAAO,EAAE,CAAC;AACV1nC,cAAI,EAAE;AADI,SAAD,CAZC;AAcV0iB,aAAK,EAAE,CAAC;AACR1iB,cAAI,EAAE;AADE,SAAD,CAdG;AAgBV8pC,eAAO,EAAE,CAAC;AACV9pC,cAAI,EAAE;AADI,SAAD,CAhBC;AAkBV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAlBA;AAoBVgtC,cAAM,EAAE,CAAC;AACThtC,cAAI,EAAE;AADG,SAAD,CApBE;AAsBVuqC,+BAAuB,EAAE,CAAC;AAC1BvqC,cAAI,EAAE;AADoB,SAAD,CAtBf;AAwBVU,kBAAU,EAAE,CAAC;AACbV,cAAI,EAAE;AADO,SAAD,CAxBF;AA0BV85B,iBAAS,EAAE,CAAC;AACZ95B,cAAI,EAAE;AADM,SAAD;AA1BD,OArBO;AAiDb,KAjDF;;AAkDd,QAAI,KAAJ,EAAW,CAoKV;AAED;;;;;;AAKA;;;;;;AAIA,QAAMktC,6BAA6B,GAAG;AAClCxpC,aAAO,EAAE,iEADyB;AAElCqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMonB,kBAAN;AAAA,OAHa,CAFqB;AAMlClnB,WAAK,EAAE;AAN2B,KAAtC;AAQA;;;;;AAIA,QAAMmnB,yBAAyB,GAAG;AAC9B1pC,aAAO,EAAE,6DADqB;AAE9BqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMonB,kBAAN;AAAA,OAHa,CAFiB;AAM9BlnB,WAAK,EAAE;AANuB,KAAlC;AAQA;;;;;;;QAMMonB,uB;AACF;;;;AAIA,qCAAYvvB,MAAZ,EAAoBwvB,aAApB,EAAmC;AAAA;;AAC/B,WAAKxvB,MAAL,GAAcA,MAAd;AACA,WAAKwvB,aAAL,GAAqBA,aAArB;AACA,WAAKnrC,KAAL,GAAa,KAAK2b,MAAL,CAAY3b,KAAzB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;;QAIMgrC,kB;AACF;;;;;;AAMA,kCAAY7uB,WAAZ,EAAyB8e,YAAzB,EAAuCD,YAAvC,EAAqDoQ,UAArD,EAAiE;AAAA;;AAAA;;AAC7D,aAAKjvB,WAAL,GAAmBA,WAAnB;AACA,aAAK8e,YAAL,GAAoBA,YAApB;AACA,aAAKD,YAAL,GAAoBA,YAApB;AACA,aAAKoQ,UAAL,GAAkBA,UAAlB;AACA;;;;AAGA,aAAKC,UAAL,GAAkB,IAAI,0DAAJ,EAAlB;AACA;;;;AAGA,aAAKC,SAAL,GAAiB,IAAI,0DAAJ,EAAjB;AACA;;;;AAGA,aAAK/B,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,aAAKL,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;;AACA,aAAKlkB,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;;AAIA,aAAKumB,YAAL;AAAqB;;;AAGrB,oBAAM,CAAG,CAHT;;AAIA,aAAKC,kBAAL;AAA2B;;;AAG3B,oBAAM,CAAG,CAHT;;AAIA,aAAKC,uBAAL,GAA+B,kDAAa/nC,KAA5C;AACA,aAAKgoC,mBAAL,GAA2B,kDAAahoC,KAAxC;AACA;;;;AAGA,aAAKioC,eAAL;AAAwB;;;AAGxB,oBAAM;AACF,iBAAO,OAAI,CAACC,eAAL,GACH,IADG,GACI;AAAE,kCAAsB;AAAE,sBAAQ,OAAI,CAACzvB,WAAL,CAAiBxL,aAAjB,CAA+B3Q;AAAzC;AAAxB,WADX;AAEH,SAND;AAOA;;;;;AAGA,aAAK6rC,aAAL;AAAsB;;;;AAItB,kBAACC,OAAD,EAAa;AACT;AACA,cAAMC,YAAY,GAAG,OAAI,CAAChN,mBAAL,CAAyB,OAAI,CAAC9D,YAAL,CAAkB+D,WAAlB,CAA8B8M,OAAO,CAAC9rC,KAAtC,CAAzB,CAArB;;AACA,iBAAQ,CAAC,OAAI,CAAC+O,GAAN,IAAa,CAACg9B,YAAd,IACJ,OAAI,CAAC9Q,YAAL,CAAkBwB,WAAlB,CAA8B,OAAI,CAAC1tB,GAAnC,EAAwCg9B,YAAxC,KAAyD,CADtD,GAEH,IAFG,GAEI;AAAE,gCAAoB;AAAE,qBAAO,OAAI,CAACh9B,GAAd;AAAmB,wBAAUg9B;AAA7B;AAAtB,WAFX;AAGH,SAVD;AAWA;;;;;AAGA,aAAKC,aAAL;AAAsB;;;;AAItB,kBAACF,OAAD,EAAa;AACT;AACA,cAAMC,YAAY,GAAG,OAAI,CAAChN,mBAAL,CAAyB,OAAI,CAAC9D,YAAL,CAAkB+D,WAAlB,CAA8B8M,OAAO,CAAC9rC,KAAtC,CAAzB,CAArB;;AACA,iBAAQ,CAAC,OAAI,CAAC4N,GAAN,IAAa,CAACm+B,YAAd,IACJ,OAAI,CAAC9Q,YAAL,CAAkBwB,WAAlB,CAA8B,OAAI,CAAC7uB,GAAnC,EAAwCm+B,YAAxC,KAAyD,CADtD,GAEH,IAFG,GAEI;AAAE,gCAAoB;AAAE,qBAAO,OAAI,CAACn+B,GAAd;AAAmB,wBAAUm+B;AAA7B;AAAtB,WAFX;AAGH,SAVD;AAWA;;;;;AAGA,aAAKE,gBAAL;AAAyB;;;;AAIzB,kBAACH,OAAD,EAAa;AACT;AACA,cAAMC,YAAY,GAAG,OAAI,CAAChN,mBAAL,CAAyB,OAAI,CAAC9D,YAAL,CAAkB+D,WAAlB,CAA8B8M,OAAO,CAAC9rC,KAAtC,CAAzB,CAArB;;AACA,iBAAO,CAAC,OAAI,CAACmoC,WAAN,IAAqB,CAAC4D,YAAtB,IAAsC,OAAI,CAAC5D,WAAL,CAAiB4D,YAAjB,CAAtC,GACH,IADG,GACI;AAAE,mCAAuB;AAAzB,WADX;AAEH,SATD;AAUA;;;;;AAGA,aAAKG,UAAL,GAAkB,2DAAWC,OAAX,CAAmB,CAAC,KAAKR,eAAN,EAAuB,KAAKE,aAA5B,EAA2C,KAAKG,aAAhD,EAA+D,KAAKC,gBAApE,CAAnB,CAAlB;AACA;;;;AAGA,aAAKL,eAAL,GAAuB,KAAvB;;AACA,YAAI,CAAC,KAAK3Q,YAAV,EAAwB;AACpB,gBAAM/B,0BAA0B,CAAC,aAAD,CAAhC;AACH;;AACD,YAAI,CAAC,KAAK8B,YAAV,EAAwB;AACpB,gBAAM9B,0BAA0B,CAAC,kBAAD,CAAhC;AACH,SAnG4D,CAoG7D;;;AACA,aAAKwS,mBAAL,GAA2BzQ,YAAY,CAACO,aAAb,CAA2BtgC,SAA3B;AAAsC;;;AAGjE,oBAAM;AACF,iBAAI,CAAC8E,KAAL,GAAa,OAAI,CAACA,KAAlB;AACH,SAL0B,CAA3B;AAMH;AACD;;;;;;;;;;AA6GA;;;0CAGkB;AACd,eAAKosC,cAAL,GAAsB,IAAtB;AACH;AACD;;;;;;sCAGc;AACV,eAAKX,uBAAL,CAA6BlwC,WAA7B;;AACA,eAAKmwC,mBAAL,CAAyBnwC,WAAzB;;AACA,eAAKguC,YAAL,CAAkBhkC,QAAlB;;AACA,eAAK2jC,eAAL,CAAqB3jC,QAArB;AACH;AACD;;;;;;;;kDAK0B8U,E,EAAI;AAC1B,eAAKmxB,kBAAL,GAA0BnxB,EAA1B;AACH;AACD;;;;;;;;iCAKSgyB,C,EAAG;AACR,iBAAO,KAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBG,CAAhB,CAAlB,GAAuC,IAA9C;AACH;AACD;;;;;;;;uDAK+B;AAC3B,iBAAO,KAAK5B,yBAAL,EAAP;AACH;AACD;;;;;;;oDAI4B;AACxB,iBAAO,KAAKW,UAAL,GAAkB,KAAKA,UAAL,CAAgBX,yBAAhB,EAAlB,GAAgE,KAAKtuB,WAA5E;AACH,S,CACD;;AACA;;;;;;;mCAIWnc,K,EAAO;AACd,eAAKA,KAAL,GAAaA,KAAb;AACH,S,CACD;;AACA;;;;;;;yCAIiBqa,E,EAAI;AACjB,eAAKkxB,YAAL,GAAoBlxB,EAApB;AACH,S,CACD;;AACA;;;;;;;0CAIkBA,E,EAAI;AAClB,eAAK2K,UAAL,GAAkB3K,EAAlB;AACH,S,CACD;;AACA;;;;;;;yCAIiB2L,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;AACH;AACD;;;;;;;mCAIW3lB,K,EAAO;AACd;AACA,cAAMisC,cAAc,GAAGjsC,KAAK,CAACi8B,MAAN,IAAgBj8B,KAAK,CAAC4X,OAAN,KAAkB,iEAAzD;;AACA,cAAI,KAAKs0B,WAAL,IAAoBD,cAApB,IAAsC,CAAC,KAAKnwB,WAAL,CAAiBxL,aAAjB,CAA+B67B,QAA1E,EAAoF;AAChF,iBAAKD,WAAL,CAAiBp1B,IAAjB;;AACA9W,iBAAK,CAAC6X,cAAN;AACH;AACJ;AACD;;;;;;;iCAISlY,K,EAAO;AACZ;AACA,cAAMysC,iBAAiB,GAAG,KAAKb,eAA/B;AACA;;AACA,cAAIlQ,IAAI,GAAG,KAAKT,YAAL,CAAkByR,KAAlB,CAAwB1sC,KAAxB,EAA+B,KAAKg7B,YAAL,CAAkB0R,KAAlB,CAAwBpB,SAAvD,CAAX;;AACA,eAAKM,eAAL,GAAuB,CAAClQ,IAAD,IAAS,KAAKT,YAAL,CAAkB4D,OAAlB,CAA0BnD,IAA1B,CAAhC;AACAA,cAAI,GAAG,KAAKqD,mBAAL,CAAyBrD,IAAzB,CAAP;;AACA,cAAI,CAAC,KAAKT,YAAL,CAAkB+K,QAAlB,CAA2BtK,IAA3B,EAAiC,KAAKzQ,MAAtC,CAAL,EAAoD;AAChD,iBAAKA,MAAL,GAAcyQ,IAAd;;AACA,iBAAK6P,YAAL,CAAkB7P,IAAlB;;AACA,iBAAK6N,YAAL,CAAkB5wB,IAAlB,CAAuB+iB,IAAvB;;AACA,iBAAK4P,SAAL,CAAe3yB,IAAf,CAAoB,IAAIuyB,uBAAJ,CAA4B,IAA5B,EAAkC,KAAK/uB,WAAL,CAAiBxL,aAAnD,CAApB;AACH,WALD,MAMK,IAAI87B,iBAAiB,KAAK,KAAKb,eAA/B,EAAgD;AACjD,iBAAKJ,kBAAL;AACH;AACJ;AACD;;;;;;oCAGY;AACR,eAAKH,UAAL,CAAgB1yB,IAAhB,CAAqB,IAAIuyB,uBAAJ,CAA4B,IAA5B,EAAkC,KAAK/uB,WAAL,CAAiBxL,aAAnD,CAArB;AACH;AACD;;;;;;;2CAImB;AACf,iBAAO,KAAKy6B,UAAL,GAAkB,KAAKA,UAAL,CAAgB7qB,KAAlC,GAA0CziB,SAAjD;AACH;AACD;;;;;;;kCAIU;AACN;AACA,cAAI,KAAKkC,KAAT,EAAgB;AACZ,iBAAK2sC,YAAL,CAAkB,KAAK3sC,KAAvB;AACH;;AACD,eAAKglB,UAAL;AACH;AACD;;;;;;;;;qCAMahlB,K,EAAO;AAChB,eAAKmc,WAAL,CAAiBxL,aAAjB,CAA+B3Q,KAA/B,GACIA,KAAK,GAAG,KAAKi7B,YAAL,CAAkBmD,MAAlB,CAAyBp+B,KAAzB,EAAgC,KAAKg7B,YAAL,CAAkBqD,OAAlB,CAA0BiN,SAA1D,CAAH,GAA0E,EADnF;AAEH;AACD;;;;;;;;4CAKoB3M,G,EAAK;AACrB,iBAAQ,KAAK1D,YAAL,CAAkB2D,cAAlB,CAAiCD,GAAjC,KAAyC,KAAK1D,YAAL,CAAkB4D,OAAlB,CAA0BF,GAA1B,CAA1C,GAA4EA,GAA5E,GAAkF,IAAzF;AACH;;;0BAhQiB3+B,K,EAAO;AAAA;;AACrB,cAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,eAAKusC,WAAL,GAAmBvsC,KAAnB;;AACA,eAAKusC,WAAL,CAAiBK,cAAjB,CAAgC,IAAhC;;AACA,eAAKnB,uBAAL,CAA6BlwC,WAA7B;;AACA,eAAKkwC,uBAAL,GAA+B,KAAKc,WAAL,CAAiBpD,gBAAjB,CAAkCjuC,SAAlC;AAA6C;;;;AAI5E,oBAACwtB,QAAD,EAAc;AACV,mBAAI,CAAC1oB,KAAL,GAAa0oB,QAAb;;AACA,mBAAI,CAAC6iB,YAAL,CAAkB7iB,QAAlB;;AACA,mBAAI,CAAC1D,UAAL;;AACA,mBAAI,CAACsmB,SAAL,CAAe3yB,IAAf,CAAoB,IAAIuyB,uBAAJ,CAA4B,OAA5B,EAAkC,OAAI,CAAC/uB,WAAL,CAAiBxL,aAAnD,CAApB;;AACA,mBAAI,CAAC06B,UAAL,CAAgB1yB,IAAhB,CAAqB,IAAIuyB,uBAAJ,CAA4B,OAA5B,EAAkC,OAAI,CAAC/uB,WAAL,CAAiBxL,aAAnD,CAArB;AACH,WAV8B,CAA/B;AAWH;AACD;;;;;;;;0BAKwB3Q,K,EAAO;AAC3B,eAAKmoC,WAAL,GAAmBnoC,KAAnB;;AACA,eAAKwrC,kBAAL;AACH;AACD;;;;;;;4BAIY;AAAE,iBAAO,KAAKvgB,MAAZ;AAAqB;AACnC;;;;;0BAIUjrB,K,EAAO;AACbA,eAAK,GAAG,KAAKi7B,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAR;AACA,eAAK4rC,eAAL,GAAuB,CAAC5rC,KAAD,IAAU,KAAKi7B,YAAL,CAAkB4D,OAAlB,CAA0B7+B,KAA1B,CAAjC;AACAA,eAAK,GAAG,KAAK++B,mBAAL,CAAyB/+B,KAAzB,CAAR;AACA;;AACA,cAAM6sC,OAAO,GAAG,KAAK7sC,KAArB;AACA,eAAKirB,MAAL,GAAcjrB,KAAd;;AACA,eAAK2sC,YAAL,CAAkB3sC,KAAlB;;AACA,cAAI,CAAC,KAAKi7B,YAAL,CAAkB+K,QAAlB,CAA2B6G,OAA3B,EAAoC7sC,KAApC,CAAL,EAAiD;AAC7C,iBAAKupC,YAAL,CAAkB5wB,IAAlB,CAAuB3Y,KAAvB;AACH;AACJ;AACD;;;;;;;4BAIU;AAAE,iBAAO,KAAK8sC,IAAZ;AAAmB;AAC/B;;;;;0BAIQ9sC,K,EAAO;AACX,eAAK8sC,IAAL,GAAY,KAAK/N,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAZ;;AACA,eAAKwrC,kBAAL;AACH;AACD;;;;;;;4BAIU;AAAE,iBAAO,KAAKuB,IAAZ;AAAmB;AAC/B;;;;;0BAIQ/sC,K,EAAO;AACX,eAAK+sC,IAAL,GAAY,KAAKhO,mBAAL,CAAyB,KAAK9D,YAAL,CAAkB+D,WAAlB,CAA8Bh/B,KAA9B,CAAzB,CAAZ;;AACA,eAAKwrC,kBAAL;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,CAAC,CAAC,KAAKnmB,SAAd;AAA0B;AAC3C;;;;;0BAIarlB,K,EAAO;AAChB;AACA,cAAM8mB,QAAQ,GAAG,qFAAsB9mB,KAAtB,CAAjB;AACA;;AACA,cAAMtE,OAAO,GAAG,KAAKygB,WAAL,CAAiBxL,aAAjC;;AACA,cAAI,KAAK0U,SAAL,KAAmByB,QAAvB,EAAiC;AAC7B,iBAAKzB,SAAL,GAAiByB,QAAjB;;AACA,iBAAKoiB,eAAL,CAAqBvwB,IAArB,CAA0BmO,QAA1B;AACH,WARe,CAShB;AACA;AACA;AACA;;;AACA,cAAIA,QAAQ,IAAI,KAAKslB,cAAjB,IAAmC1wC,OAAO,CAACsxC,IAA/C,EAAqD;AACjD;AACA;AACA;AACAtxC,mBAAO,CAACsxC,IAAR;AACH;AACJ;;;;;;AA2JLhC,sBAAkB,CAACvtC,IAAnB,GAA0B,SAASwvC,0BAAT,CAAoCtvC,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIqtC,kBAAV,EAA8B,gEAAyB,wDAAzB,CAA9B,EAA2E,gEAAyB,kEAAzB,EAA6C,CAA7C,CAA3E,EAA4H,gEAAyB,uEAAzB,EAA2C,CAA3C,CAA5H,EAA2K,gEAAyB,4EAAzB,EAAyC,CAAzC,CAA3K,CAAP;AAAiO,KAApS;;AACAA,sBAAkB,CAAC50B,IAAnB,GAA0B,gEAAyB;AAAEvY,UAAI,EAAEmtC,kBAAR;AAA4B30B,eAAS,EAAE,CAAC,CAAC,OAAD,EAAU,eAAV,EAA2B,EAA3B,CAAD,CAAvC;AAAyEiL,cAAQ,EAAE,CAAnF;AAAsFtC,kBAAY,EAAE,SAASkuB,+BAAT,CAAyChuB,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/M,mEAAkB,OAAlB,EAA2B,SAASiuB,2CAAT,CAAqDtqB,MAArD,EAA6D;AAAE,mBAAO1D,GAAG,CAACoV,QAAJ,CAAa1R,MAAM,CAAClH,MAAP,CAAc3b,KAA3B,CAAP;AAA2C,WAArI,EAAuI,QAAvI,EAAiJ,SAASotC,4CAAT,GAAwD;AAAE,mBAAOjuB,GAAG,CAACqO,SAAJ,EAAP;AAAyB,WAApO,EAAsO,MAAtO,EAA8O,SAAS6f,0CAAT,GAAsD;AAAE,mBAAOluB,GAAG,CAACwK,OAAJ,EAAP;AAAuB,WAA7T,EAA+T,SAA/T,EAA0U,SAAS2jB,6CAAT,CAAuDzqB,MAAvD,EAA+D;AAAE,mBAAO1D,GAAG,CAACouB,UAAJ,CAAe1qB,MAAf,CAAP;AAAgC,WAA3a;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,UAAtB,EAAkCC,GAAG,CAACwB,QAAtC;;AACA,oEAAmB,eAAnB,EAAoCxB,GAAG,CAACotB,WAAJ,GAAkB,QAAlB,GAA6B,IAAjE,EAAuE,WAAvE,EAAoF,CAACptB,GAAG,CAACotB,WAAJ,IAAmB,IAAnB,GAA0B,IAA1B,GAAiCptB,GAAG,CAACotB,WAAJ,CAAgB1B,MAAlD,KAA6D1rB,GAAG,CAACotB,WAAJ,CAAgB52B,EAA7E,IAAmF,IAAvK,EAA6K,KAA7K,EAAoLwJ,GAAG,CAACpQ,GAAJ,GAAUoQ,GAAG,CAAC8b,YAAJ,CAAiBuS,SAAjB,CAA2BruB,GAAG,CAACpQ,GAA/B,CAAV,GAAgD,IAApO,EAA0O,KAA1O,EAAiPoQ,GAAG,CAACvR,GAAJ,GAAUuR,GAAG,CAAC8b,YAAJ,CAAiBuS,SAAjB,CAA2BruB,GAAG,CAACvR,GAA/B,CAAV,GAAgD,IAAjS;AACH;AAAE,OAL4C;AAK1CkL,YAAM,EAAE;AAAE9Y,aAAK,EAAE,OAAT;AAAkBytC,qBAAa,EAAE,eAAjC;AAAkDC,2BAAmB,EAAE,qBAAvE;AAA8F3+B,WAAG,EAAE,KAAnG;AAA0GnB,WAAG,EAAE,KAA/G;AAAsH+S,gBAAQ,EAAE;AAAhI,OALkC;AAK4G5H,aAAO,EAAE;AAAEsyB,kBAAU,EAAE,YAAd;AAA4BC,iBAAS,EAAE;AAAvC,OALrH;AAK2Kh1B,cAAQ,EAAE,CAAC,oBAAD,CALrL;AAK6M0C,cAAQ,EAAE,CAAC,iEAA0B,CACzR+xB,6BADyR,EAEzRE,yBAFyR,EAGzR;AAAE1pC,eAAO,EAAE,iFAAX;AAAqCqiB,mBAAW,EAAEonB;AAAlD,OAHyR,CAA1B,CAAD;AALvN,KAAzB,CAA1B;AAUA;;AACAA,sBAAkB,CAACptC,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAE;AAAR,OADsC,EAEtC;AAAEA,YAAI,EAAE,kEAAR;AAAqBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAjC,OAFsC,EAGtC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,uEAAD;AAAtB,SAArB;AAA/B,OAHsC,EAItC;AAAEH,YAAI,EAAE,0EAAR;AAAsBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,4EAAD;AAAtB,SAArB;AAAlC,OAJsC,CAAN;AAAA,KAApC;;AAMAgtC,sBAAkB,CAAC/xB,cAAnB,GAAoC;AAChCw0B,mBAAa,EAAE,CAAC;AAAE5vC,YAAI,EAAE;AAAR,OAAD,CADiB;AAEhC6vC,yBAAmB,EAAE,CAAC;AAAE7vC,YAAI,EAAE;AAAR,OAAD,CAFW;AAGhCmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAHyB;AAIhCkR,SAAG,EAAE,CAAC;AAAElR,YAAI,EAAE;AAAR,OAAD,CAJ2B;AAKhC+P,SAAG,EAAE,CAAC;AAAE/P,YAAI,EAAE;AAAR,OAAD,CAL2B;AAMhC8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CANsB;AAOhCwtC,gBAAU,EAAE,CAAC;AAAExtC,YAAI,EAAE;AAAR,OAAD,CAPoB;AAQhCytC,eAAS,EAAE,CAAC;AAAEztC,YAAI,EAAE;AAAR,OAAD;AARqB,KAApC;AAUA;;AAAc,KAAC,YAAY;AAAE,sEAAyBmtC,kBAAzB,EAA6C,CAAC;AACnEntC,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sBADX;AAECwN,mBAAS,EAAE,CACPuxB,6BADO,EAEPE,yBAFO,EAGP;AAAE1pC,mBAAO,EAAE,iFAAX;AAAqCqiB,uBAAW,EAAEonB;AAAlD,WAHO,CAFZ;AAOC51B,cAAI,EAAE;AACF,oCAAwB,+BADtB;AAEF,gCAAoB,iDAFlB;AAGF,0BAAc,0CAHZ;AAIF,0BAAc,0CAJZ;AAKF,0BAAc,UALZ;AAMF,uBAAW,+BANT;AAOF,wBAAY,aAPV;AAQF,sBAAU,WARR;AASF,yBAAa;AATX,WAPP;AAkBCkB,kBAAQ,EAAE;AAlBX,SAAD;AAF6D,OAAD,CAA7C,EAsBrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AACpFF,gBAAI,EAAE;AAD8E,WAAD;AAAxC,SAA9B,EAEX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,uEAAD;AAFP,WAFkC;AAA/B,SAFW,EAOX;AAAEH,cAAI,EAAE,0EAAR;AAA6BE,oBAAU,EAAE,CAAC;AAC5CF,gBAAI,EAAE;AADsC,WAAD,EAE5C;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,4EAAD;AAFP,WAF4C;AAAzC,SAPW,CAAP;AAYF,OAlCS,EAkCP;AAAEqtC,kBAAU,EAAE,CAAC;AACzBxtC,cAAI,EAAE;AADmB,SAAD,CAAd;AAEVytC,iBAAS,EAAE,CAAC;AACZztC,cAAI,EAAE;AADM,SAAD,CAFD;AAIVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAJG;AAMV4vC,qBAAa,EAAE,CAAC;AAChB5vC,cAAI,EAAE;AADU,SAAD,CANL;AAQV6vC,2BAAmB,EAAE,CAAC;AACtB7vC,cAAI,EAAE;AADgB,SAAD,CARX;AAUVkR,WAAG,EAAE,CAAC;AACNlR,cAAI,EAAE;AADA,SAAD,CAVK;AAYV+P,WAAG,EAAE,CAAC;AACN/P,cAAI,EAAE;AADA,SAAD,CAZK;AAcV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD;AAdA,OAlCO;AAkDb,KAlDF;;AAmDd,QAAI,KAAJ,EAAW,CAkIV;AAED;;;;;;AAKA;;;;;QAGM8vC,uB;;;;AAENA,2BAAuB,CAAClwC,IAAxB,GAA+B,SAASmwC,+BAAT,CAAyCjwC,CAAzC,EAA4C;AAAE,aAAO,KAAKA,CAAC,IAAIgwC,uBAAV,GAAP;AAA8C,KAA3H;;AACAA,2BAAuB,CAACv3B,IAAxB,GAA+B,gEAAyB;AAAEvY,UAAI,EAAE8vC,uBAAR;AAAiCt3B,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,yBAAL,EAAgC,EAAhC,CAAD;AAA5C,KAAzB,CAA/B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBs3B,uBAAzB,EAAkD,CAAC;AACxE9vC,YAAI,EAAE,uDADkE;AAExEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFkE,OAAD,CAAlD,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAMd;;;;;QAGM6hC,mB;AACF;;;;;AAKA,mCAAYpK,KAAZ,EAAmBlf,kBAAnB,EAAuCupB,eAAvC,EAAwD;AAAA;;AACpD,aAAKrK,KAAL,GAAaA,KAAb;AACA,aAAKlf,kBAAL,GAA0BA,kBAA1B;AACA,aAAKwpB,aAAL,GAAqB,kDAAarqC,KAAlC;AACA;;AACA,YAAMsqC,cAAc,GAAGC,MAAM,CAACH,eAAD,CAA7B;AACA,aAAK/qB,QAAL,GAAiBirB,cAAc,IAAIA,cAAc,KAAK,CAAtC,GAA2CA,cAA3C,GAA4D,IAA5E;AACH;AACD;;;;;;;;;AAiBA;;;;oCAIYv2B,O,EAAS;AACjB,cAAIA,OAAO,CAAC,YAAD,CAAX,EAA2B;AACvB,iBAAKy2B,kBAAL;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKH,aAAL,CAAmBxyC,WAAnB;AACH;AACD;;;;;;6CAGqB;AACjB,eAAK2yC,kBAAL;AACH;AACD;;;;;;;8BAIM7tC,K,EAAO;AACT,cAAI,KAAKqnC,UAAL,IAAmB,CAAC,KAAK/mB,QAA7B,EAAuC;AACnC,iBAAK+mB,UAAL,CAAgBvwB,IAAhB;AACA9W,iBAAK,CAACimB,eAAN;AACH;AACJ;AACD;;;;;;;6CAIqB;AAAA;;AACjB;AACA,cAAM6nB,kBAAkB,GAAG,KAAKzG,UAAL,GAAkB,KAAKA,UAAL,CAAgBwB,eAAlC,GAAoD,iDAA/E;AACA;;AACA,cAAMkF,aAAa,GAAG,KAAK1G,UAAL,IAAmB,KAAKA,UAAL,CAAgB4B,gBAAnC,GAClB,KAAK5B,UAAL,CAAgB4B,gBAAhB,CAAiCJ,eADf,GACiC,iDADvD;AAEA;;AACA,cAAMmF,iBAAiB,GAAG,KAAK3G,UAAL,GACtB,mDAAM,KAAKA,UAAL,CAAgBkB,YAAtB,EAAoC,KAAKlB,UAAL,CAAgBmB,YAApD,CADsB,GAEtB,iDAFJ;;AAGA,eAAKkF,aAAL,CAAmBxyC,WAAnB;;AACA,eAAKwyC,aAAL,GAAqB,mDAAM,KAAKtK,KAAL,CAAWhsB,OAAjB,EAA0B02B,kBAA1B,EAA8CC,aAA9C,EAA6DC,iBAA7D,EAAgFnzC,SAAhF;AAA2F;;;AAGhH;AAAA,mBAAM,OAAI,CAACqpB,kBAAL,CAAwBqB,YAAxB,EAAN;AAAA,WAHqB,CAArB;AAIH;;;4BA/Dc;AACX,cAAI,KAAKP,SAAL,KAAmBvnB,SAAnB,IAAgC,KAAK4pC,UAAzC,EAAqD;AACjD,mBAAO,KAAKA,UAAL,CAAgB/mB,QAAvB;AACH;;AACD,iBAAO,CAAC,CAAC,KAAK0E,SAAd;AACH;AACD;;;;;0BAIarlB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,qFAAsBrlB,KAAtB,CAAjB;AACH;;;;;;AAqDL6tC,uBAAmB,CAACpwC,IAApB,GAA2B,SAAS6wC,2BAAT,CAAqC3wC,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAIkwC,mBAAV,EAA+B,gEAAyBzU,iBAAzB,CAA/B,EAA4E,gEAAyB,+DAAzB,CAA5E,EAAgI,gEAAyB,UAAzB,CAAhI,CAAP;AAA+K,KAApP;;AACAyU,uBAAmB,CAAC7sB,IAApB,GAA2B,gEAAyB;AAAEnjB,UAAI,EAAEgwC,mBAAR;AAA6Bx3B,eAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAAxC;AAAqE8U,oBAAc,EAAE,SAASojB,kCAAT,CAA4CrvB,EAA5C,EAAgDC,GAAhD,EAAqDkM,QAArD,EAA+D;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAC9M,uEAAsBmM,QAAtB,EAAgCsiB,uBAAhC,EAAyD,IAAzD;AACH;;AAAC,YAAIzuB,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACqvB,WAAJ,GAAkBrtB,EAAE,CAACE,KAA1E;AACH;AAAE,OAL6C;AAK3CJ,eAAS,EAAE,SAASwtB,yBAAT,CAAmCvvB,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtE,oEAAmBmE,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAInE,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACuvB,OAAJ,GAAcvtB,EAAE,CAACE,KAAtE;AACH;AAAE,OAV6C;AAU3CtC,eAAS,EAAE,CAAC,CAAD,EAAI,uBAAJ,CAVgC;AAUFuC,cAAQ,EAAE,CAVR;AAUWtC,kBAAY,EAAE,SAAS2vB,gCAAT,CAA0CzvB,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtI,mEAAkB,OAAlB,EAA2B,SAAS0vB,4CAAT,GAAwD;AAAE,mBAAOzvB,GAAG,CAACuvB,OAAJ,CAAY9jB,KAAZ,EAAP;AAA6B,WAAlH;AACH;;AAAC,YAAI1L,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,UAAnB,EAA+BC,GAAG,CAACwB,QAAJ,GAAe,IAAf,GAAsB,IAAI,CAAzD;;AACA,oEAAmB,8BAAnB,EAAmDxB,GAAG,CAACuoB,UAAJ,IAAkBvoB,GAAG,CAACuoB,UAAJ,CAAemD,MAApF,EAA4F,YAA5F,EAA0G1rB,GAAG,CAACuoB,UAAJ,IAAkBvoB,GAAG,CAACuoB,UAAJ,CAAennB,KAAf,KAAyB,QAArJ,EAA+J,UAA/J,EAA2KpB,GAAG,CAACuoB,UAAJ,IAAkBvoB,GAAG,CAACuoB,UAAJ,CAAennB,KAAf,KAAyB,MAAtN;AACH;AAAE,OAf6C;AAe3CzH,YAAM,EAAE;AAAEiK,gBAAQ,EAAE,UAAZ;AAAwBpC,gBAAQ,EAAE,UAAlC;AAA8C+mB,kBAAU,EAAE,CAAC,KAAD,EAAQ,YAAR,CAA1D;AAAiFhnB,qBAAa,EAAE;AAAhG,OAfmC;AAegFpK,cAAQ,EAAE,CAAC,qBAAD,CAf1F;AAemH0C,cAAQ,EAAE,CAAC,kEAAD,CAf7H;AAe4JyI,wBAAkB,EAAEwX,GAfhL;AAeqLvX,WAAK,EAAE,CAf5L;AAe+LC,UAAI,EAAE,CAfrM;AAewMC,YAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,UAA7C,EAAyD,eAAzD,EAA0E,OAA1E,CAAD,EAAqF,CAAC,QAAD,EAAW,EAAX,CAArF,EAAqG,CAAC,OAAD,EAAU,oCAAV,EAAgD,SAAhD,EAA2D,WAA3D,EAAwE,OAAxE,EAAiF,MAAjF,EAAyF,QAAzF,EAAmG,MAAnG,EAA2G,MAA3G,EAAmH,cAAnH,EAAmI,WAAnI,EAAgJ,OAAhJ,EAAyJ,CAAzJ,EAA4J,MAA5J,CAArG,EAA0Q,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,cAApE,EAAoF,WAApF,EAAiG,OAAjG,EAA0G,CAA1G,EAA6G,oCAA7G,CAA1Q,EAA8Z,CAAC,GAAD,EAAM,qIAAN,CAA9Z,CAfhN;AAe6vBC,cAAQ,EAAE,SAASgtB,4BAAT,CAAsC3vB,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACh3B,wEAAuB8Z,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC,EAAsC,CAAtC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS8V,oDAAT,CAA8DjsB,MAA9D,EAAsE;AAAE,mBAAO1D,GAAG,CAAC4vB,KAAJ,CAAUlsB,MAAV,CAAP;AAA2B,WAA9H;;AACA,mEAAkB,CAAlB,EAAqBkW,uCAArB,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,KAApE,EAA2E,CAA3E;;AACA,qEAAoB,CAApB;;AACA;AACH;;AAAC,YAAI7Z,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,UAAlB,EAA8BC,GAAG,CAACwB,QAAlC,EAA4C,eAA5C,EAA6DxB,GAAG,CAACuB,aAAjE;;AACA,oEAAmB,eAAnB,EAAoCvB,GAAG,CAACuoB,UAAJ,GAAiB,QAAjB,GAA4B,IAAhE,EAAsE,YAAtE,EAAoFvoB,GAAG,CAACskB,KAAJ,CAAUnK,iBAA9F,EAAiH,UAAjH,EAA6Hna,GAAG,CAACwB,QAAJ,GAAe,IAAI,CAAnB,GAAuBxB,GAAG,CAAC4D,QAAxJ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAC5D,GAAG,CAACqvB,WAA/B;AACH;AAAE,OA3B6C;AA2B3CxsB,gBAAU,EAAE,CAAC,kEAAD,EAAmB,oDAAnB,CA3B+B;AA2BE5S,YAAM,EAAE,CAAC,quBAAD,CA3BV;AA2BmvB6S,mBAAa,EAAE,CA3BlwB;AA2BqwBC,qBAAe,EAAE;AA3BtxB,KAAzB,CAA3B;AA4BA;;AACA2rB,uBAAmB,CAACjwC,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAEu7B;AAAR,OADuC,EAEvC;AAAEv7B,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAHuC,CAAN;AAAA,KAArC;;AAKA6vC,uBAAmB,CAAC50B,cAApB,GAAqC;AACjCyuB,gBAAU,EAAE,CAAC;AAAE7pC,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,KAAD;AAArB,OAAD,CADqB;AAEjC+kB,cAAQ,EAAE,CAAC;AAAEllB,YAAI,EAAE;AAAR,OAAD,CAFuB;AAGjC8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CAHuB;AAIjC6iB,mBAAa,EAAE,CAAC;AAAE7iB,YAAI,EAAE;AAAR,OAAD,CAJkB;AAKjC2wC,iBAAW,EAAE,CAAC;AAAE3wC,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC2vC,uBAAD;AAA5B,OAAD,CALoB;AAMjCe,aAAO,EAAE,CAAC;AAAE7wC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,QAAD;AAAzB,OAAD;AANwB,KAArC;AAQA;;AAAc,KAAC,YAAY;AAAE,sEAAyB6vC,mBAAzB,EAA8C,CAAC;AACpEhwC,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,uBADX;AAEC6V,kBAAQ,EAAE,qvBAFX;AAGCzM,cAAI,EAAE;AACF,qBAAS,uBADP;AAEF;AACA;AACA,+BAAmB,sBAJjB;AAKF,oDAAwC,iCALtC;AAMF,kCAAsB,6CANpB;AAOF,gCAAoB,2CAPlB;AAQF,uBAAW;AART,WAHP;AAaCkB,kBAAQ,EAAE,qBAbX;AAcC2L,uBAAa,EAAE,gEAAkBG,IAdlC;AAeCF,yBAAe,EAAE,sEAAwBG,MAf1C;AAgBCjT,gBAAM,EAAE,CAAC,quBAAD;AAhBT,SAAD;AAF8D,OAAD,CAA9C,EAoBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEu7B;AAAR,SAAD,EAA8B;AAAEv7B,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AAC5GF,gBAAI,EAAE,uDADsG;AAE5GG,gBAAI,EAAE,CAAC,UAAD;AAFsG,WAAD;AAA5B,SAAlE,CAAP;AAGF,OAvBS,EAuBP;AAAE+kB,gBAAQ,EAAE,CAAC;AACvBllB,cAAI,EAAE;AADiB,SAAD,CAAZ;AAEV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAFA;AAIV6pC,kBAAU,EAAE,CAAC;AACb7pC,cAAI,EAAE,mDADO;AAEbG,cAAI,EAAE,CAAC,KAAD;AAFO,SAAD,CAJF;AAOV0iB,qBAAa,EAAE,CAAC;AAChB7iB,cAAI,EAAE;AADU,SAAD,CAPL;AASV2wC,mBAAW,EAAE,CAAC;AACd3wC,cAAI,EAAE,0DADQ;AAEdG,cAAI,EAAE,CAAC2vC,uBAAD;AAFQ,SAAD,CATH;AAYVe,eAAO,EAAE,CAAC;AACV7wC,cAAI,EAAE,uDADI;AAEVG,cAAI,EAAE,CAAC,QAAD;AAFI,SAAD;AAZC,OAvBO;AAsCb,KAtCF;;AAuCd,QAAI,KAAJ,EAAW,CA6CV;AAED;;;;;;;QAKMgxC,mB;;;;AAENA,uBAAmB,CAAC31B,IAApB,GAA2B,+DAAwB;AAAExb,UAAI,EAAEmxC;AAAR,KAAxB,CAA3B;AACAA,uBAAmB,CAAC11B,IAApB,GAA2B,+DAAwB;AAAEpb,aAAO,EAAE,SAAS+wC,2BAAT,CAAqCtxC,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIqxC,mBAAV,GAAP;AAA0C,OAA/F;AAAiGx1B,eAAS,EAAE,CACvJ4f,iBADuJ,EAEvJ2N,+CAFuJ,CAA5G;AAG5CttB,aAAO,EAAE,CAAC,CACL,4DADK,EAEL,wEAFK,EAGL,wEAHK,EAIL,kEAJK,EAKL,4DALK,EAML,gEANK,CAAD,EAQR,0EARQ;AAHmC,KAAxB,CAA3B;;AAYA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bs1B,mBAA1B,EAA+C;AAAEr1B,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACyqB,WAAD,EAC9IlK,eAD8I,EAE9IsO,aAF8I,EAG9ItB,oBAH8I,EAI9I8D,kBAJ8I,EAK9I6C,mBAL8I,EAM9IF,uBAN8I,EAO9I5S,YAP8I,EAQ9IiH,WAR8I,EAS9IpC,gBAT8I,EAU9I4D,iBAV8I,CAAP;AAUlH,SAVoF;AAUlF/pB,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EACrD,wEADqD,EAErD,wEAFqD,EAGrD,kEAHqD,EAIrD,4DAJqD,EAKrD,gEALqD,CAAP;AAK9B,SAfyF;AAevFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,0EAAD,EAChDwqB,WADgD,EAEhDlK,eAFgD,EAGhDsO,aAHgD,EAIhDtB,oBAJgD,EAKhD8D,kBALgD,EAMhD6C,mBANgD,EAOhDF,uBAPgD,EAQhD5S,YARgD,EAShDiH,WATgD,EAUhDpC,gBAVgD,EAWhD4D,iBAXgD,CAAP;AAWpB;AA1BoF,OAA/C,CAAnD;AA0BoB,KA1BnC;AA2BA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBwL,mBAAzB,EAA8C,CAAC;AACpEnxC,YAAI,EAAE,sDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,4DADK,EAEL,wEAFK,EAGL,wEAHK,EAIL,kEAJK,EAKL,4DALK,EAML,gEANK,CADV;AASCG,iBAAO,EAAE,CACL,0EADK,EAELwqB,WAFK,EAGLlK,eAHK,EAILsO,aAJK,EAKLtB,oBALK,EAML8D,kBANK,EAOL6C,mBAPK,EAQLF,uBARK,EASL5S,YATK,EAULiH,WAVK,EAWLpC,gBAXK,EAYL4D,iBAZK,CATV;AAuBC7pB,sBAAY,EAAE,CACVyqB,WADU,EAEVlK,eAFU,EAGVsO,aAHU,EAIVtB,oBAJU,EAKV8D,kBALU,EAMV6C,mBANU,EAOVF,uBAPU,EAQV5S,YARU,EASViH,WATU,EAUVpC,gBAVU,EAWV4D,iBAXU,CAvBf;AAoCChqB,mBAAS,EAAE,CACP4f,iBADO,EAEP2N,+CAFO,CApCZ;AAwCCmI,yBAAe,EAAE,CACbhI,oBADa,EAEb1D,iBAFa;AAxClB,SAAD;AAF8D,OAAD,CAA9C,EA+CrB,IA/CqB,EA+Cf,IA/Ce;AA+CP,KA/CR;AAiDd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACvnaAAS2L,yCAAT,CAAmDjwB,EAAnD,EAAuDC,GAAvD,EAA4D,CAAG;;AAC/D,aAASiwB,cAAT,GAA0B,CAAG;;AAC7B,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;QAIMC,e,GACF,2BAAc;AAAA;;AACV;;;AAGA,WAAKzc,IAAL,GAAY,QAAZ;AACA;;;;AAGA,WAAKr0B,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,WAAKC,WAAL,GAAmB,IAAnB;AACA;;;;AAGA,WAAKC,aAAL,GAAqB,EAArB;AACA;;;;AAGA,WAAKurC,YAAL,GAAoB,KAApB;AACA;;;;AAGA,WAAKnwC,KAAL,GAAa,EAAb;AACA;;;;AAGA,WAAKF,MAAL,GAAc,EAAd;AACA;;;;AAGA,WAAKuM,QAAL,GAAgB,MAAhB;AACA;;;;AAGA,WAAKmiC,IAAL,GAAY,IAAZ;AACA;;;;AAGA,WAAKiH,eAAL,GAAuB,IAAvB;AACA;;;;AAGA,WAAKC,cAAL,GAAsB,IAAtB;AACA;;;;AAGA,WAAK7qB,SAAL,GAAiB,IAAjB;AACA;;;;AAGA,WAAKulB,SAAL,GAAiB,IAAjB;AACA;;;;;AAIA,WAAKC,YAAL,GAAoB,IAApB;AACA;;;;;;AAKA,WAAKsF,iBAAL,GAAyB,IAAzB,CA/DU,CAgEV;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CA+HV;AAED;;;;;;AAKA;;;;;;;AAKA,QAAMC,mBAAmB,GAAG;AACxB;;;AAGAC,qBAAe,EAAE,oEAAQ,iBAAR,EAA2B,CACxC;AACA;AACA;AACA,wEAAM,YAAN,EAAoB,kEAAM;AAAEhJ,eAAO,EAAE,CAAX;AAAcp3B,iBAAS,EAAE;AAAzB,OAAN,CAApB,CAJwC,EAKxC,kEAAM,OAAN,EAAe,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAAf,CALwC,EAMxC,uEAAW,YAAX,EAAyB,oEAAQ,kCAAR,EAA4C,kEAAM;AAAEA,iBAAS,EAAE,MAAb;AAAqBo3B,eAAO,EAAE;AAA9B,OAAN,CAA5C,CAAzB,CANwC,EAOxC,uEAAW,sBAAX,EAAmC,oEAAQ,qCAAR,EAA+C,kEAAM;AAAEA,eAAO,EAAE;AAAX,OAAN,CAA/C,CAAnC,CAPwC,CAA3B;AAJO,KAA5B;AAeA;;;;;;AAKA;;;;;;;AAMA,aAASiJ,yCAAT,GAAqD;AACjD,YAAM31C,KAAK,CAAC,uEAAD,CAAX;AACH;AACD;;;;;;;QAKM41C,kB;;;;;AACF;;;;;;;AAOA,kCAAYzzB,WAAZ,EAAyB0zB,iBAAzB,EAA4CtrB,kBAA5C,EAAgEnsB,SAAhE,EAA2EiC,OAA3E,EAAoF;AAAA;;AAAA;;AAChF;AACA,gBAAK8hB,WAAL,GAAmBA,WAAnB;AACA,gBAAK0zB,iBAAL,GAAyBA,iBAAzB;AACA,gBAAKtrB,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKlqB,OAAL,GAAeA,OAAf;AACA;;;;AAGA,gBAAKy1C,oCAAL,GAA4C,IAA5C;AACA;;;;AAGA,gBAAKC,MAAL,GAAc,OAAd;AACA;;;;AAGA,gBAAKC,sBAAL,GAA8B,IAAI,0DAAJ,EAA9B;AACA;;;;;;;AAMA,gBAAKC,eAAL;AAAwB;;;;AAIxB,kBAAC9rC,MAAD,EAAY;AACR,cAAI,QAAKnB,aAAL,CAAmBtI,WAAnB,EAAJ,EAAsC;AAClCi1C,qDAAyC;AAC5C;;AACD,kBAAKO,6BAAL;;AACA,iBAAO,QAAKltC,aAAL,CAAmBitC,eAAnB,CAAmC9rC,MAAnC,CAAP;AACH,SAVD;;AAWA,gBAAKgsC,eAAL,GAAuB91C,OAAO,CAACk1C,cAAR,IAA0B,IAAjD;AACA,gBAAKn3C,SAAL,GAAiBA,SAAjB;AApCgF;AAqCnF;AACD;;;;;;;;;;8CAMsB+L,M,EAAQ;AAC1B,cAAI,KAAKnB,aAAL,CAAmBtI,WAAnB,EAAJ,EAAsC;AAClCi1C,qDAAyC;AAC5C;;AACD,eAAKO,6BAAL;;AACA,iBAAO,KAAKltC,aAAL,CAAmBotC,qBAAnB,CAAyCjsC,MAAzC,CAAP;AACH;AACD;;;;;;;;;6CAMqBA,M,EAAQ;AACzB,cAAI,KAAKnB,aAAL,CAAmBtI,WAAnB,EAAJ,EAAsC;AAClCi1C,qDAAyC;AAC5C;;AACD,eAAKO,6BAAL;;AACA,iBAAO,KAAKltC,aAAL,CAAmBqtC,oBAAnB,CAAwClsC,MAAxC,CAAP;AACH;AACD;;;;;;;0CAIkB;AACd,cAAI,CAAC,KAAKmsC,cAAL,EAAL,EAA4B;AACxB;AACA,gBAAMC,eAAe,GAAG,KAAKC,aAAL,GAAqBC,mBAArB,EAAxB;;AACA,gBAAI,CAACF,eAAL,EAAsB;AAClB,mBAAKp0B,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B;AACH;AACJ;AACJ;AACD;;;;;;;;qCAKa;AACT;AACA;AACA;AACA,cAAI,KAAKvwB,OAAL,CAAa4vC,SAAjB,EAA4B;AACxB,iBAAKuG,aAAL,GAAqBE,4BAArB;AACH,WAFD,MAGK,IAAI,CAAC,KAAKJ,cAAL,EAAL,EAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAKn0B,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ;AACA,cAAM+lB,OAAO,GAAG,KAAKb,oCAArB,CAFY,CAGZ;;AACA,cAAI,KAAKz1C,OAAL,CAAa6vC,YAAb,IAA6ByG,OAA7B,IAAwC,OAAOA,OAAO,CAAC/lB,KAAf,KAAyB,UAArE,EAAiF;AAC7E;AACA,gBAAMlM,aAAa,GAAG,KAAKtmB,SAAL,CAAesmB,aAArC;AACA;;AACA,gBAAMhjB,OAAO,GAAG,KAAKygB,WAAL,CAAiBxL,aAAjC,CAJ6E,CAK7E;AACA;AACA;AACA;;AACA,gBAAI,CAAC+N,aAAD,IAAkBA,aAAa,KAAK,KAAKtmB,SAAL,CAAeU,IAAnD,IAA2D4lB,aAAa,KAAKhjB,OAA7E,IACAA,OAAO,CAACnC,QAAR,CAAiBmlB,aAAjB,CADJ,EACqC;AACjCiyB,qBAAO,CAAC/lB,KAAR;AACH;AACJ;;AACD,cAAI,KAAKgmB,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBC,OAAhB;AACH;AACJ;AACD;;;;;;;;wDAKgC;AAAA;;AAC5B,cAAI,KAAKz4C,SAAT,EAAoB;AAChB,iBAAK03C,oCAAL;AAA6C;AAAkB,iBAAK13C,SAAL,CAAesmB,aAA9E,CADgB,CAEhB;;AACA,gBAAI,KAAKvC,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAAnC,EAA0C;AACtC;AACA;AACA;AACAnF,qBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB;AAAA,uBAAM,OAAI,CAACxJ,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B,EAAN;AAAA,eAHA;AAIH;AACJ;AACJ;AACD;;;;;;;;yCAKiB;AACb;AACA,cAAMlvB,OAAO,GAAG,KAAKygB,WAAL,CAAiBxL,aAAjC;AACA;;AACA,cAAM+N,aAAa,GAAG,KAAKtmB,SAAL,CAAesmB,aAArC;AACA,iBAAOhjB,OAAO,KAAKgjB,aAAZ,IAA6BhjB,OAAO,CAACnC,QAAR,CAAiBmlB,aAAjB,CAApC;AACH;AACD;;;;;;;;wCAKgB;AACZ,cAAI,CAAC,KAAKkyB,UAAV,EAAsB;AAClB,iBAAKA,UAAL,GAAkB,KAAKf,iBAAL,CAAuB/3B,MAAvB,CAA8B,KAAKqE,WAAL,CAAiBxL,aAA/C,CAAlB;AACH;;AACD,iBAAO,KAAKigC,UAAZ;AACH;AACD;;;;;;;;yCAKiBvwC,K,EAAO;AACpB,cAAIA,KAAK,CAACywC,OAAN,KAAkB,OAAtB,EAA+B;AAC3B,iBAAKC,UAAL;AACH,WAFD,MAGK,IAAI1wC,KAAK,CAACywC,OAAN,KAAkB,MAAtB,EAA8B;AAC/B,iBAAKE,aAAL;AACH;;AACD,eAAKhB,sBAAL,CAA4Br3B,IAA5B,CAAiCtY,KAAjC;AACH;AACD;;;;;;;;0CAKkBA,K,EAAO;AACrB,eAAK2vC,sBAAL,CAA4Br3B,IAA5B,CAAiCtY,KAAjC;AACH;AACD;;;;;;;8CAIsB;AAClB,eAAK0vC,MAAL,GAAc,MAAd,CADkB,CAElB;AACA;;AACA,eAAKxrB,kBAAL,CAAwBqB,YAAxB;AACH;;;;MA/M4B,oE;;AAiNjCgqB,sBAAkB,CAACnyC,IAAnB,GAA0B,SAASwzC,0BAAT,CAAoCtzC,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIiyC,kBAAV,EAA8B,gEAAyB,wDAAzB,CAA9B,EAA2E,gEAAyB,kEAAzB,CAA3E,EAA8H,gEAAyB,+DAAzB,CAA9H,EAAkL,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAlL,EAAyN,gEAAyBP,eAAzB,CAAzN,CAAP;AAA6Q,KAAhV;;AACAO,sBAAkB,CAAC5uB,IAAnB,GAA0B,gEAAyB;AAAEnjB,UAAI,EAAE+xC,kBAAR;AAA4Bv5B,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;AAAmE4K,eAAS,EAAE,SAASiwB,wBAAT,CAAkChyB,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClL,0EAAyB,mEAAzB,EAA0C,IAA1C;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACnc,aAAJ,GAAoBme,EAAE,CAACE,KAA5E;AACH;AAAE,OAL4C;AAK1CtC,eAAS,EAAE,CAAC,UAAD,EAAa,IAAb,EAAmB,YAAnB,EAAiC,MAAjC,EAAyC,CAAzC,EAA4C,sBAA5C,CAL+B;AAKsCuC,cAAQ,EAAE,CALhD;AAKmDtC,kBAAY,EAAE,SAASmyB,+BAAT,CAAyCjyB,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5K,yFAAwC,wBAAxC,EAAkE,SAASkyB,qEAAT,CAA+EvuB,MAA/E,EAAuF;AAAE,mBAAO1D,GAAG,CAACkyB,iBAAJ,CAAsBxuB,MAAtB,CAAP;AAAuC,WAAlM,EAAoM,uBAApM,EAA6N,SAASyuB,oEAAT,CAA8EzuB,MAA9E,EAAsF;AAAE,mBAAO1D,GAAG,CAACoyB,gBAAJ,CAAqB1uB,MAArB,CAAP;AAAsC,WAA3V;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,IAAnB,EAAyBC,GAAG,CAACqyB,GAA7B,EAAkC,MAAlC,EAA0CryB,GAAG,CAAC9kB,OAAJ,CAAYu4B,IAAtD,EAA4D,iBAA5D,EAA+EzT,GAAG,CAAC9kB,OAAJ,CAAYqqB,SAAZ,GAAwB,IAAxB,GAA+BvF,GAAG,CAACgxB,eAAlH,EAAmI,YAAnI,EAAiJhxB,GAAG,CAAC9kB,OAAJ,CAAYqqB,SAA7J,EAAwK,kBAAxK,EAA4LvF,GAAG,CAAC9kB,OAAJ,CAAYi1C,eAAZ,IAA+B,IAA3N;;AACA,qFAAoC,kBAApC,EAAwDnwB,GAAG,CAAC4wB,MAA5D;AACH;AAAE,OAV4C;AAU1C/2B,cAAQ,EAAE,CAAC,wEAAD,CAVgC;AAUK0I,WAAK,EAAE,CAVZ;AAUeC,UAAI,EAAE,CAVrB;AAUwBC,YAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,CAVhC;AAU2DC,cAAQ,EAAE,SAAS4vB,2BAAT,CAAqCvyB,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5K,mEAAkB,CAAlB,EAAqBiwB,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,aAAtE,EAAqF,CAArF;AACH;AAAE,OAZ4C;AAY1CntB,gBAAU,EAAE,CAAC,mEAAD,CAZ8B;AAYJ5S,YAAM,EAAE,CAAC,o7BAAD,CAZJ;AAY47B6S,mBAAa,EAAE,CAZ38B;AAY88BomB,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAACmH,mBAAmB,CAACC,eAArB;AAAb;AAZp9B,KAAzB,CAA1B;AAaA;;AACAE,sBAAkB,CAAChyC,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAE;AAAR,OADsC,EAEtC;AAAEA,YAAI,EAAE;AAAR,OAFsC,EAGtC;AAAEA,YAAI,EAAE;AAAR,OAHsC,EAItC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAJsC,EAKtC;AAAEH,YAAI,EAAEwxC;AAAR,OALsC,CAAN;AAAA,KAApC;;AAOAO,sBAAkB,CAAC32B,cAAnB,GAAoC;AAChCjW,mBAAa,EAAE,CAAC;AAAEnF,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,mEAAD,EAAkB;AAAE,oBAAQ;AAAV,SAAlB;AAAzB,OAAD;AADiB,KAApC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4xC,kBAAzB,EAA6C,CAAC;AACnE/xC,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sBADX;AAEC6V,kBAAQ,EAAE,+CAFX;AAGCI,uBAAa,EAAE,gEAAkBG,IAHlC;AAIC;AACA;AACAF,yBAAe,EAAE,sEAAwBwvB,OAN1C;AAOCnJ,oBAAU,EAAE,CAACkH,mBAAmB,CAACC,eAArB,CAPb;AAQCt6B,cAAI,EAAE;AACF,qBAAS,sBADP;AAEF,wBAAY,IAFV;AAGF,0BAAc,MAHZ;AAIF,yBAAa,KAJX;AAKF,2BAAe,cALb;AAMF,sCAA0B,4CANxB;AAOF,iCAAqB,mBAPnB;AAQF,uCAA2B,iCARzB;AASF,kCAAsB,QATpB;AAUF,wCAA4B,2BAV1B;AAWF,uCAA2B;AAXzB,WARP;AAqBChG,gBAAM,EAAE,CAAC,o7BAAD;AArBT,SAAD;AAF6D,OAAD,CAA7C,EAyBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAiE;AAAEA,cAAI,EAAE;AAAR,SAAjE,EAAqG;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClJF,gBAAI,EAAE;AAD4I,WAAD,EAElJ;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAFkJ;AAA/B,SAArG,EAKX;AAAEH,cAAI,EAAEwxC;AAAR,SALW,CAAP;AAKyB,OA9BlB,EA8BoB;AAAErsC,qBAAa,EAAE,CAAC;AACvDnF,cAAI,EAAE,uDADiD;AAEvDG,cAAI,EAAE,CAAC,mEAAD,EAAkB;AAAE,sBAAQ;AAAV,WAAlB;AAFiD,SAAD;AAAjB,OA9BpB;AAiCb,KAjCF;;AAkCd,QAAI,KAAJ,EAAW,CAuEV;AAED;;;;;AAKA;AACA;;AACA;;;AACA,QAAI2zC,QAAQ,GAAG,CAAf;AACA;;AACA,QAAMC,cAAc,GAAG;AACnBC,UAAI,EAAE,CADa;AACVC,aAAO,EAAE,CADC;AACEC,YAAM,EAAE;AADV,KAAvB;AAGA;;;;;QAIMC,Y;AACF;;;;;AAKA,4BAAYv3C,WAAZ,EAAyBw3C,kBAAzB,EAA8E;AAAA;;AAAA,YAAjCt8B,EAAiC,4FAAdg8B,QAAQ,EAAM;;AAAA;;AAC1E,aAAKl3C,WAAL,GAAmBA,WAAnB;AACA,aAAKw3C,kBAAL,GAA0BA,kBAA1B;AACA,aAAKt8B,EAAL,GAAUA,EAAV;AACA;;;;AAGA,aAAKq0B,YAAL,GAAoB,KAAKiI,kBAAL,CAAwB53C,OAAxB,CAAgC2vC,YAApD;AACA;;;;AAGA,aAAKkI,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;;;AAGA,aAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;;;AAGA,aAAKC,aAAL,GAAqB,IAAI,4CAAJ,EAArB;AACA;;;;AAGA,aAAKrC,MAAL,GAAc;AAAE;AAAhB,SAvB0E,CAwB1E;;AACAkC,0BAAkB,CAACT,GAAnB,GAAyB77B,EAAzB,CAzB0E,CA0B1E;;AACAs8B,0BAAkB,CAACjC,sBAAnB,CAA0CnrC,IAA1C,CAA+C;AAAQ;;;;AAIvD,kBAAAxE,KAAK;AAAA,iBAAIA,KAAK,CAACgyC,SAAN,KAAoB,MAApB,IAA8BhyC,KAAK,CAACywC,OAAN,KAAkB,OAApD;AAAA,SAJ0C,CAA/C,EAIoE,4DAAK,CAAL,CAJpE,EAKK51C,SALL;AAKgB;;;AAGhB,oBAAM;AACF,iBAAI,CAACg3C,YAAL,CAAkBvxC,IAAlB;;AACA,iBAAI,CAACuxC,YAAL,CAAkB3sC,QAAlB;AACH,SAXD,EA3B0E,CAuC1E;;;AACA0sC,0BAAkB,CAACjC,sBAAnB,CAA0CnrC,IAA1C,CAA+C;AAAQ;;;;AAIvD,kBAAAxE,KAAK;AAAA,iBAAIA,KAAK,CAACgyC,SAAN,KAAoB,MAApB,IAA8BhyC,KAAK,CAACywC,OAAN,KAAkB,MAApD;AAAA,SAJ0C,CAA/C,EAImE,4DAAK,CAAL,CAJnE,EAI4E51C,SAJ5E;AAIuF;;;AAGvF,oBAAM;AACF4L,sBAAY,CAAC,OAAI,CAACwrC,qBAAN,CAAZ;;AACA,iBAAI,CAACC,kBAAL;AACH,SAVD;;AAWA93C,mBAAW,CAAC+vC,WAAZ,GAA0BtvC,SAA1B;AAAqC;;;AAGrC,oBAAM;AACF,iBAAI,CAACk3C,aAAL,CAAmBzxC,IAAnB,CAAwB,OAAI,CAAC6xC,OAA7B;;AACA,iBAAI,CAACJ,aAAL,CAAmB7sC,QAAnB;;AACA,iBAAI,CAAC4sC,YAAL,CAAkBxxC,IAAlB,CAAuB,OAAI,CAAC6xC,OAA5B;;AACA,iBAAI,CAACL,YAAL,CAAkB5sC,QAAlB;;AACA,iBAAI,CAAC6kC,iBAAL;AAA0B;AAAkB,cAA5C;;AACA,iBAAI,CAAC3vC,WAAL,CAAiBwK,OAAjB;AACH,SAVD;;AAWAxK,mBAAW,CAACud,aAAZ,GACKnT,IADL,CACU;AAAQ;;;;AAIlB,kBAAAxE,KAAK,EAAI;AACL,iBAAOA,KAAK,CAAC4X,OAAN,KAAkB,6DAAlB,IAA4B,CAAC,OAAI,CAAC+xB,YAAlC,IAAkD,CAAC,8EAAe3pC,KAAf,CAA1D;AACH,SANS,CADV,EAQKnF,SARL;AAQgB;;;;AAIhB,kBAAAmF,KAAK,EAAI;AACLA,eAAK,CAAC6X,cAAN;;AACA,iBAAI,CAAC7a,KAAL;AACH,SAfD;;AAgBA5C,mBAAW,CAAC2c,aAAZ,GAA4Blc,SAA5B;AAAuC;;;AAGvC,oBAAM;AACF,cAAI,OAAI,CAAC8uC,YAAT,EAAuB;AACnB,mBAAI,CAACiI,kBAAL,CAAwBQ,eAAxB;AACH,WAFD,MAGK;AACD,mBAAI,CAACp1C,KAAL;AACH;AACJ,SAVD;AAWH;AACD;;;;;;;;;8BAKMq1C,Y,EAAc;AAAA;;AAChB,eAAKF,OAAL,GAAeE,YAAf,CADgB,CAEhB;;AACA,eAAKT,kBAAL,CAAwBjC,sBAAxB,CAA+CnrC,IAA/C,CAAoD;AAAQ;;;;AAI5D,oBAAAxE,KAAK;AAAA,mBAAIA,KAAK,CAACgyC,SAAN,KAAoB,OAAxB;AAAA,WAJ+C,CAApD,EAIwC,4DAAK,CAAL,CAJxC,EAKKn3C,SALL;AAKgB;;;;AAIhB,oBAAAmF,KAAK,EAAI;AACL,mBAAI,CAAC+xC,aAAL,CAAmBzxC,IAAnB,CAAwB+xC,YAAxB;;AACA,mBAAI,CAACN,aAAL,CAAmB7sC,QAAnB;;AACA,mBAAI,CAAC9K,WAAL,CAAiByK,cAAjB,GAHK,CAIL;AACA;AACA;AACA;AACA;;;AACA,mBAAI,CAACotC,qBAAL,GAA6BvrC,UAAU;AAAE;;;AAGzC;AAAA,qBAAM,OAAI,CAACwrC,kBAAL,EAAN;AAAA,aAHuC,EAGLlyC,KAAK,CAACsyC,SAAN,GAAkB,GAHb,CAAvC;AAIH,WAtBD;;AAuBA,eAAKV,kBAAL,CAAwBpI,mBAAxB;;AACA,eAAKkG,MAAL,GAAc;AAAE;AAAhB;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKmC,YAAL,CAAkBttC,YAAlB,EAAP;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKutC,YAAL,CAAkBvtC,YAAlB,EAAP;AACH;AACD;;;;;;;uCAIe;AACX,iBAAO,KAAKwtC,aAAL,CAAmBxtC,YAAnB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAKnK,WAAL,CAAiB2c,aAAjB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAK3c,WAAL,CAAiBud,aAAjB,EAAP;AACH;AACD;;;;;;;;;;uCAOevN,Q,EAAU;AACrB;AACA,cAAIhF,QAAQ;AAAI;AAAkB,cAAnB,CAA0BmtC,oBAA1B,EAAf;;AACA,cAAInoC,QAAQ,KAAKA,QAAQ,CAACvS,IAAT,IAAiBuS,QAAQ,CAACvO,KAA/B,CAAZ,EAAmD;AAC/CuO,oBAAQ,CAACvS,IAAT,GAAgBuN,QAAQ,CAACvN,IAAT,CAAcuS,QAAQ,CAACvS,IAAvB,CAAhB,GAA+CuN,QAAQ,CAACvJ,KAAT,CAAeuO,QAAQ,CAACvO,KAAxB,CAA/C;AACH,WAFD,MAGK;AACDuJ,oBAAQ,CAACotC,kBAAT;AACH;;AACD,cAAIpoC,QAAQ,KAAKA,QAAQ,CAACxS,GAAT,IAAgBwS,QAAQ,CAAC1O,MAA9B,CAAZ,EAAmD;AAC/C0O,oBAAQ,CAACxS,GAAT,GAAewN,QAAQ,CAACxN,GAAT,CAAawS,QAAQ,CAACxS,GAAtB,CAAf,GAA4CwN,QAAQ,CAAC1J,MAAT,CAAgB0O,QAAQ,CAAC1O,MAAzB,CAA5C;AACH,WAFD,MAGK;AACD0J,oBAAQ,CAACqtC,gBAAT;AACH;;AACA;AAAkB,cAAnB,CAA0Br4C,WAA1B,CAAsCa,cAAtC;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;qCAQoC;AAAA,cAAzBzB,KAAyB,uEAAjB,EAAiB;AAAA,cAAbF,MAAa,uEAAJ,EAAI;;AAC/B;AAAkB,cAAnB,CAA0Bi5C,oBAA1B,GAAiD/4C,KAAjD,CAAuDA,KAAvD,EAA8DF,MAA9D,CAAqEA,MAArE;;AACC;AAAkB,cAAnB,CAA0Bc,WAA1B,CAAsCa,cAAtC;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcwK,O,EAAS;AAClB;AAAkB,cAAnB,CAA0BrL,WAA1B,CAAsCs4C,aAAtC,CAAoDjtC,OAApD;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;yCAOiBA,O,EAAS;AACrB;AAAkB,cAAnB,CAA0BrL,WAA1B,CAAsCu4C,gBAAtC,CAAuDltC,OAAvD;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;mCAIW;AACP,iBAAO,KAAKiqC,MAAZ;AACH;AACD;;;;;;;;;6CAMqB;AACjB,eAAKA,MAAL,GAAc;AAAE;AAAhB;;AACA,eAAKt1C,WAAL,CAAiBwK,OAAjB;AACH;AACD;;;;;;;;+CAKuB;AACnB;AAAQ;AAAkB,iBAAKxK,WAAL,CAAiB8S,SAAjB,GAA6BrJ;AAAvD;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CAwDV;AAED;;;;;;AAKA;;;;;;AAIA,QAAM+uC,eAAe,GAAG,IAAI,4DAAJ,CAAmB,eAAnB,CAAxB;AACA;;;;;AAIA,QAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;;;;AAIA,QAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;;;;;AAKA,aAASC,kCAAT,CAA4Cj0C,OAA5C,EAAqD;AACjD;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBxX,KAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;;AAKA,aAAS81C,2CAAT,CAAqDl0C,OAArD,EAA8D;AAC1D;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBxX,KAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,QAAM+1C,mCAAmC,GAAG;AACxC/xC,aAAO,EAAE4xC,0BAD+B;AAExC3xC,UAAI,EAAE,CAAC,4DAAD,CAFkC;AAGxCC,gBAAU,EAAE4xC;AAH4B,KAA5C;AAKA;;;;QAGME,S;AACF;;;;;;;;;AASA,yBAAY/8B,QAAZ,EAAsBtB,SAAtB;AACA;;;;AAIA9R,eALA,EAKWiwB,eALX,EAK4B/0B,cAL5B,EAK4Ck1C,aAL5C,EAK2D9rC,iBAL3D,EAK8E;AAAA;;AAAA;;AAC1E,aAAK8O,QAAL,GAAgBA,QAAhB;AACA,aAAKtB,SAAL,GAAiBA,SAAjB;AACA,aAAKme,eAAL,GAAuBA,eAAvB;AACA,aAAKmgB,aAAL,GAAqBA,aAArB;AACA,aAAK9rC,iBAAL,GAAyBA,iBAAzB;AACA,aAAK+rC,uBAAL,GAA+B,EAA/B;AACA,aAAKC,0BAAL,GAAkC,IAAI,4CAAJ,EAAlC;AACA,aAAKC,uBAAL,GAA+B,IAAI,4CAAJ,EAA/B;AACA,aAAKC,mBAAL,GAA2B,IAAIx4B,GAAJ,EAA3B,CAT0E,CAU1E;;AACA;;;;;AAIA,aAAKy4B,cAAL;AAAuB;AAAkB;AAAO;;;AAGhD;AAAA,iBAAM,OAAI,CAACC,WAAL,CAAiBtzC,MAAjB,GACF,OAAI,CAACuzC,eADH,GAEF,OAAI,CAACA,eAAL,CAAqBlvC,IAArB,CAA0B,iEAAU/G,SAAV,CAA1B,CAFJ;AAAA,SAHyC,CAAzC;AAMA,aAAKiG,eAAL,GAAuBzF,cAAvB;AACH;AACD;;;;;;;;;AAsBA;;;;;;;;6BAQK01C,sB,EAAwB12C,M,EAAQ;AAAA;;AACjCA,gBAAM,GAAG22C,oBAAoB,CAAC32C,MAAD,EAAS,KAAK+1B,eAAL,IAAwB,IAAIgc,eAAJ,EAAjC,CAA7B;;AACA,cAAI/xC,MAAM,CAACqY,EAAP,IAAa,KAAKu+B,aAAL,CAAmB52C,MAAM,CAACqY,EAA1B,CAAjB,EAAgD;AAC5C,kBAAM3b,KAAK,4BAAoBsD,MAAM,CAACqY,EAA3B,sDAAX;AACH;AACD;;;AACA,cAAM9a,UAAU,GAAG,KAAK+d,cAAL,CAAoBtb,MAApB,CAAnB;AACA;;;AACA,cAAMoyC,eAAe,GAAG,KAAKyE,sBAAL,CAA4Bt5C,UAA5B,EAAwCyC,MAAxC,CAAxB;AACA;;;AACA,cAAM82C,SAAS,GAAG,KAAKC,oBAAL,CAA0BL,sBAA1B,EAAkDtE,eAAlD,EAAmE70C,UAAnE,EAA+EyC,MAA/E,CAAlB,CAViC,CAWjC;;;AACA,cAAI,CAAC,KAAKw2C,WAAL,CAAiBtzC,MAAtB,EAA8B;AAC1B,iBAAK8zC,4CAAL;AACH;;AACD,eAAKR,WAAL,CAAiBhzC,IAAjB,CAAsBszC,SAAtB;AACAA,mBAAS,CAACjK,WAAV,GAAwBjvC,SAAxB;AAAmC;;;AAGnC;AAAA,mBAAM,OAAI,CAACq5C,iBAAL,CAAuBH,SAAvB,CAAN;AAAA,WAHA;AAIA,eAAKI,WAAL,CAAiB7zC,IAAjB,CAAsByzC,SAAtB;AACA,iBAAOA,SAAP;AACH;AACD;;;;;;;mCAIW;AACP,eAAKK,aAAL,CAAmB,KAAKX,WAAxB;AACH;AACD;;;;;;;;sCAKcn+B,E,EAAI;AACd,iBAAO,KAAKm+B,WAAL,CAAiBvjB,IAAjB;AAAuB;;;;AAI9B,oBAAAmkB,MAAM;AAAA,mBAAIA,MAAM,CAAC/+B,EAAP,KAAcA,EAAlB;AAAA,WAJC,CAAP;AAKH;AACD;;;;;;sCAGc;AACV;AACA;AACA,eAAK8+B,aAAL,CAAmB,KAAKhB,uBAAxB;;AACA,eAAKC,0BAAL,CAAgCnuC,QAAhC;;AACA,eAAKouC,uBAAL,CAA6BpuC,QAA7B;AACH;AACD;;;;;;;;;uCAMejI,M,EAAQ;AACnB;AACA,cAAMoY,aAAa,GAAG,KAAKi/B,iBAAL,CAAuBr3C,MAAvB,CAAtB;;AACA,iBAAO,KAAKkZ,QAAL,CAAcsB,MAAd,CAAqBpC,aAArB,CAAP;AACH;AACD;;;;;;;;;0CAMkBk/B,Y,EAAc;AAC5B;AACA,cAAMC,KAAK,GAAG,IAAI,kEAAJ,CAAkB;AAC5B3wC,4BAAgB,EAAE,KAAKsS,QAAL,CAAc/L,QAAd,GAAyBqqC,MAAzB,EADU;AAE5Bx2C,0BAAc,EAAEs2C,YAAY,CAACt2C,cAAb,IAA+B,KAAKyF,eAAL,EAFnB;AAG5BxF,sBAAU,EAAEq2C,YAAY,CAACr2C,UAHG;AAI5BC,uBAAW,EAAEo2C,YAAY,CAACp2C,WAJE;AAK5BqH,qBAAS,EAAE+uC,YAAY,CAAC/uC,SALI;AAM5BG,oBAAQ,EAAE4uC,YAAY,CAAC5uC,QANK;AAO5BC,qBAAS,EAAE2uC,YAAY,CAAC3uC,SAPI;AAQ5BC,oBAAQ,EAAE0uC,YAAY,CAAC1uC,QARK;AAS5BC,qBAAS,EAAEyuC,YAAY,CAACzuC,SATI;AAU5BzH,+BAAmB,EAAEk2C,YAAY,CAACpF;AAVN,WAAlB,CAAd;;AAYA,cAAIoF,YAAY,CAACn2C,aAAjB,EAAgC;AAC5Bo2C,iBAAK,CAACp2C,aAAN,GAAsBm2C,YAAY,CAACn2C,aAAnC;AACH;;AACD,iBAAOo2C,KAAP;AACH;AACD;;;;;;;;;;+CAOuB11C,O,EAAS7B,M,EAAQ;AACpC;AACA,cAAMy3C,YAAY,GAAGz3C,MAAM,IAAIA,MAAM,CAACoZ,gBAAjB,IAAqCpZ,MAAM,CAACoZ,gBAAP,CAAwBs+B,QAAlF;AACA;;AACA,cAAMA,QAAQ,GAAG,uDAASl9B,MAAT,CAAgB;AAC7BrD,kBAAM,EAAEsgC,YAAY,IAAI,KAAK7/B,SADA;AAE7BsE,qBAAS,EAAE,CAAC;AAAEjY,qBAAO,EAAE8tC,eAAX;AAA4Bva,sBAAQ,EAAEx3B;AAAtC,aAAD;AAFkB,WAAhB,CAAjB;AAIA;;;AACA,cAAM23C,eAAe,GAAG,IAAI,mEAAJ,CAAoBrF,kBAApB,EAAwCtyC,MAAM,CAACoZ,gBAA/C,EAAiEs+B,QAAjE,EAA2E13C,MAAM,CAAC43C,wBAAlF,CAAxB;AACA;;AACA,cAAMC,YAAY,GAAGh2C,OAAO,CAAC6E,MAAR,CAAeixC,eAAf,CAArB;AACA,iBAAOE,YAAY,CAACvL,QAApB;AACH;AACD;;;;;;;;;;;;;;6CAWqBoK,sB,EAAwBtE,e,EAAiB70C,U,EAAYyC,M,EAAQ;AAC9E;AACA;;AACA;AACA,cAAM82C,SAAS,GAAG,IAAIpC,YAAJ,CAAiBn3C,UAAjB,EAA6B60C,eAA7B,EAA8CpyC,MAAM,CAACqY,EAArD,CAAlB;;AACA,cAAIq+B,sBAAsB,YAAY,yDAAtC,EAAmD;AAC/CtE,2BAAe,CAACW,oBAAhB,CAAqC,IAAI,kEAAJ,CAAmB2D,sBAAnB;AAA4C;AAAkB,gBAA9D;AAAuE;AAAkB;AAAEpe,uBAAS,EAAEt4B,MAAM,CAAC+qC,IAApB;AAA0B+L,uBAAS,EAATA;AAA1B,aAAzF,CAArC;AACH,WAFD,MAGK;AACD;AACA,gBAAMY,QAAQ,GAAG,KAAKI,eAAL,CAAqB93C,MAArB,EAA6B82C,SAA7B,EAAwC1E,eAAxC,CAAjB;AACA;;;AACA,gBAAM2F,UAAU,GAAG3F,eAAe,CAACU,qBAAhB,CAAsC,IAAI,mEAAJ,CAAoB4D,sBAApB,EAA4C12C,MAAM,CAACoZ,gBAAnD,EAAqEs+B,QAArE,CAAtC,CAAnB;AACAZ,qBAAS,CAAChK,iBAAV,GAA8BiL,UAAU,CAACzL,QAAzC;AACH;;AACDwK,mBAAS,CACJngC,UADL,CACgB3W,MAAM,CAACzD,KADvB,EAC8ByD,MAAM,CAAC3D,MADrC,EAEK2B,cAFL,CAEoBgC,MAAM,CAACmN,QAF3B;AAGA,iBAAO2pC,SAAP;AACH;AACD;;;;;;;;;;;;;wCAUgB92C,M,EAAQ82C,S,EAAW1E,e,EAAiB;AAChD;AACA,cAAMqF,YAAY,GAAGz3C,MAAM,IAAIA,MAAM,CAACoZ,gBAAjB,IAAqCpZ,MAAM,CAACoZ,gBAAP,CAAwBs+B,QAAlF,CAFgD,CAGhD;AACA;AACA;AACA;;AACA;;AACA,cAAMx7B,SAAS,GAAG,CACd;AAAEjY,mBAAO,EAAEquC,kBAAX;AAA+B9a,oBAAQ,EAAE4a;AAAzC,WADc,EAEd;AAAEnuC,mBAAO,EAAE0xC,eAAX;AAA4Bne,oBAAQ,EAAEx3B,MAAM,CAAC+qC;AAA7C,WAFc,EAGd;AAAE9mC,mBAAO,EAAEywC,YAAX;AAAyBld,oBAAQ,EAAEsf;AAAnC,WAHc,CAAlB;;AAKA,cAAI92C,MAAM,CAACuI,SAAP,KACC,CAACkvC,YAAD,IAAiB,CAACA,YAAY,CAACl/B,GAAb,CAAiB,gEAAjB,EAAiC,IAAjC,CADnB,CAAJ,EACgE;AAC5D2D,qBAAS,CAAC1Y,IAAV,CAAe;AACXS,qBAAO,EAAE,gEADE;AAEXuzB,sBAAQ,EAAE;AAAE90B,qBAAK,EAAE1C,MAAM,CAACuI,SAAhB;AAA2BoD,sBAAM,EAAE;AAAnC;AAFC,aAAf;AAIH;;AACD,iBAAO,uDAAS6O,MAAT,CAAgB;AAAErD,kBAAM,EAAEsgC,YAAY,IAAI,KAAK7/B,SAA/B;AAA0CsE,qBAAS,EAATA;AAA1C,WAAhB,CAAP;AACH;AACD;;;;;;;;;0CAMkB46B,S,EAAW;AACzB;AACA,cAAMrzC,KAAK,GAAG,KAAK+yC,WAAL,CAAiB9yC,OAAjB,CAAyBozC,SAAzB,CAAd;;AACA,cAAIrzC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,iBAAK+yC,WAAL,CAAiB7yC,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B,EADY,CAEZ;AACA;;AACA,gBAAI,CAAC,KAAK+yC,WAAL,CAAiBtzC,MAAtB,EAA8B;AAC1B,mBAAKozC,mBAAL,CAAyB1sC,OAAzB;AAAkC;;;;;AAKlC,wBAACouC,aAAD,EAAgB55C,OAAhB,EAA4B;AACxB,oBAAI45C,aAAJ,EAAmB;AACf55C,yBAAO,CAAC+G,YAAR,CAAqB,aAArB,EAAoC6yC,aAApC;AACH,iBAFD,MAGK;AACD55C,yBAAO,CAAC65C,eAAR,CAAwB,aAAxB;AACH;AACJ,eAZD;;AAaA,mBAAK3B,mBAAL,CAAyBjjB,KAAzB;;AACA,mBAAKojB,eAAL,CAAqBpzC,IAArB;AACH;AACJ;AACJ;AACD;;;;;;;;uEAK+C;AAC3C;AACA,cAAM8R,gBAAgB,GAAG,KAAK/K,iBAAL,CAAuBqI,mBAAvB,EAAzB,CAF2C,CAG3C;;;AACA,cAAI0C,gBAAgB,CAACpO,aAArB,EAAoC;AAChC;AACA,gBAAMmxC,QAAQ,GAAG/iC,gBAAgB,CAACpO,aAAjB,CAA+B+C,QAAhD;;AACA,iBAAK,IAAI7G,CAAC,GAAGi1C,QAAQ,CAACh1C,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,GAAG,CAAC,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C;AACA,kBAAIk1C,OAAO,GAAGD,QAAQ,CAACj1C,CAAD,CAAtB;;AACA,kBAAIk1C,OAAO,KAAKhjC,gBAAZ,IACAgjC,OAAO,CAACrpB,QAAR,KAAqB,QADrB,IAEAqpB,OAAO,CAACrpB,QAAR,KAAqB,OAFrB,IAGA,CAACqpB,OAAO,CAAC30B,YAAR,CAAqB,WAArB,CAHL,EAGwC;AACpC,qBAAK8yB,mBAAL,CAAyB/3B,GAAzB,CAA6B45B,OAA7B,EAAsCA,OAAO,CAACC,YAAR,CAAqB,aAArB,CAAtC;;AACAD,uBAAO,CAAChzC,YAAR,CAAqB,aAArB,EAAoC,MAApC;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;;;sCAMckzC,O,EAAS;AACnB;AACA,cAAIp1C,CAAC,GAAGo1C,OAAO,CAACn1C,MAAhB;;AACA,iBAAOD,CAAC,EAAR,EAAY;AACR;AACA;AACA;AACA;AACAo1C,mBAAO,CAACp1C,CAAD,CAAP,CAAWlD,KAAX;AACH;AACJ;;;4BA/QiB;AACd,iBAAO,KAAKm2C,aAAL,GAAqB,KAAKA,aAAL,CAAmBM,WAAxC,GAAsD,KAAKL,uBAAlE;AACH;AACD;;;;;;;4BAIkB;AACd,iBAAO,KAAKD,aAAL,GAAqB,KAAKA,aAAL,CAAmBgB,WAAxC,GAAsD,KAAKb,uBAAlE;AACH;AACD;;;;;;4BAGsB;AAClB;AACA,cAAMl/B,MAAM,GAAG,KAAK++B,aAApB;AACA,iBAAO/+B,MAAM,GAAGA,MAAM,CAACs/B,eAAV,GAA4B,KAAKL,0BAA9C;AACH;;;;;;AAgQLH,aAAS,CAAC91C,IAAV,GAAiB,SAASm4C,iBAAT,CAA2Bj4C,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAI41C,SAAV,EAAqB,uDAAgB,4DAAhB,CAArB,EAAsD,uDAAgB,sDAAhB,CAAtD,EAAwF,uDAAgB,wDAAhB,EAAiC,CAAjC,CAAxF,EAA6H,uDAAgBL,0BAAhB,EAA4C,CAA5C,CAA7H,EAA6K,uDAAgBC,0BAAhB,CAA7K,EAA0N,uDAAgBI,SAAhB,EAA2B,EAA3B,CAA1N,EAA0P,uDAAgB,qEAAhB,CAA1P,CAAP;AAA6S,KAA9V;;AACAA,aAAS,CAACt1C,KAAV,GAAkB,iEAA0B;AAAEE,WAAK,EAAEo1C,SAAT;AAAoBr1C,aAAO,EAAEq1C,SAAS,CAAC91C;AAAvC,KAA1B,CAAlB;AACA;;AACA81C,aAAS,CAAC31C,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAE,wDAAR;AAAkBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA9B,OAH6B,EAI7B;AAAEA,YAAI,EAAEwxC,eAAR;AAAyBtxC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACk1C,0BAAD;AAAtB,SAArB;AAArC,OAJ6B,EAK7B;AAAEr1C,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACm1C,0BAAD;AAAtB,SAAD;AAA/B,OAL6B,EAM7B;AAAEt1C,YAAI,EAAE01C,SAAR;AAAmBx1C,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB;AAA/B,OAN6B,EAO7B;AAAEA,YAAI,EAAE;AAAR,OAP6B,CAAN;AAAA,KAA3B;AASA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB01C,SAAzB,EAAoC,CAAC;AAC1D11C,YAAI,EAAE;AADoD,OAAD,CAApC,EAErB,YAAY;AAAE,eAAO,CAAC;AAAEA,cAAI,EAAE;AAAR,SAAD,EAA2B;AAAEA,cAAI,EAAE;AAAR,SAA3B,EAAsD;AAAEA,cAAI,EAAE,wDAAR;AAAyBE,oBAAU,EAAE,CAAC;AACzGF,gBAAI,EAAE;AADmG,WAAD;AAArC,SAAtD,EAEX;AAAEA,cAAI,EAAEwxC,eAAR;AAAyBtxC,oBAAU,EAAE,CAAC;AACxCF,gBAAI,EAAE;AADkC,WAAD,EAExC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACk1C,0BAAD;AAFP,WAFwC;AAArC,SAFW,EAOX;AAAEr1C,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAACm1C,0BAAD;AAF4B,WAAD;AAA/B,SAPW,EAUX;AAAEt1C,cAAI,EAAE01C,SAAR;AAAmBx1C,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE;AADP,WAFkC;AAA/B,SAVW,EAcX;AAAEA,cAAI,EAAE;AAAR,SAdW,CAAP;AAciC,OAhB1B,EAgB4B,IAhB5B;AAgBoC,KAhBnD;;AAiBd,QAAI,KAAJ,EAAW,CAyDV;AACD;;;;;;;;AAMA,aAASo2C,oBAAT,CAA8B32C,MAA9B,EAAsCu4C,cAAtC,EAAsD;AAClD,aAAOj3C,MAAM,CAAC+G,MAAP,CAAc/G,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkBkwC,cAAlB,CAAd,EAAiDv4C,MAAjD,CAAP;AACH;AAED;;;;;;AAKA;;;;;;AAIA,QAAIw4C,gBAAgB,GAAG,CAAvB;AACA;;;;QAGMC,c;AACF;;;;;AAKA,8BAAY3B,SAAZ,EAAuBj4B,WAAvB,EAAoCssB,OAApC,EAA6C;AAAA;;AACzC,aAAK2L,SAAL,GAAiBA,SAAjB;AACA,aAAKj4B,WAAL,GAAmBA,WAAnB;AACA,aAAKssB,OAAL,GAAeA,OAAf;AACA;;;;AAGA,aAAK5qC,IAAL,GAAY,QAAZ;AACH;AACD;;;;;;;mCAGW;AACP,cAAI,CAAC,KAAKu2C,SAAV,EAAqB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAKA,SAAL;AAAkB;AAAkB4B,4BAAgB,CAAC,KAAK75B,WAAN,EAAmB,KAAKssB,OAAL,CAAaqL,WAAhC,CAApD;AACH;AACJ;AACD;;;;;;;oCAIYr8B,O,EAAS;AACjB;AACA,cAAMw+B,aAAa,GAAGx+B,OAAO,CAAC,iBAAD,CAAP,IAA8BA,OAAO,CAAC,uBAAD,CAA3D;;AACA,cAAIw+B,aAAJ,EAAmB;AACf,iBAAKvD,YAAL,GAAoBuD,aAAa,CAAC/kC,YAAlC;AACH;AACJ;;;;;;AAEL6kC,kBAAc,CAACt4C,IAAf,GAAsB,SAASy4C,sBAAT,CAAgCv4C,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIo4C,cAAV,EAA0B,gEAAyB/D,YAAzB,EAAuC,CAAvC,CAA1B,EAAqE,gEAAyB,wDAAzB,CAArE,EAAkH,gEAAyBuB,SAAzB,CAAlH,CAAP;AAAgK,KAA3N;;AACAwC,kBAAc,CAAC3/B,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEk4C,cAAR;AAAwB1/B,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,EAA+B,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA/B,CAAnC;AAA+FiL,cAAQ,EAAE,CAAzG;AAA4GtC,kBAAY,EAAE,SAASm3B,2BAAT,CAAqCj3B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7N,mEAAkB,OAAlB,EAA2B,SAASk3B,uCAAT,GAAmD;AAAE,mBAAOj3B,GAAG,CAACi1B,SAAJ,CAAc/2C,KAAd,CAAoB8hB,GAAG,CAACuzB,YAAxB,CAAP;AAA+C,WAA/H;AACH;;AAAC,YAAIxzB,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,YAAnB,EAAiCC,GAAG,CAACuF,SAAJ,IAAiB,IAAlD,EAAwD,MAAxD,EAAgEvF,GAAG,CAACthB,IAApE;AACH;AAAE,OAJwC;AAItCib,YAAM,EAAE;AAAEjb,YAAI,EAAE,MAAR;AAAgB60C,oBAAY,EAAE,CAAC,kBAAD,EAAqB,cAArB,CAA9B;AAAoEhuB,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAA/E;AAA4G2xB,uBAAe,EAAE,CAAC,gBAAD,EAAmB,iBAAnB;AAA7H,OAJ8B;AAIwI//B,cAAQ,EAAE,CAAC,gBAAD,CAJlJ;AAIsK0C,cAAQ,EAAE,CAAC,kEAAD;AAJhL,KAAzB,CAAtB;AAKA;;AACA+8B,kBAAc,CAACn4C,cAAf,GAAgC;AAAA,aAAM,CAClC;AAAEC,YAAI,EAAEm0C,YAAR;AAAsBj0C,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAlC,OADkC,EAElC;AAAEA,YAAI,EAAE;AAAR,OAFkC,EAGlC;AAAEA,YAAI,EAAE01C;AAAR,OAHkC,CAAN;AAAA,KAAhC;;AAKAwC,kBAAc,CAAC98B,cAAf,GAAgC;AAC5ByL,eAAS,EAAE,CAAC;AAAE7mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CADiB;AAE5BH,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE;AAAR,OAAD,CAFsB;AAG5B60C,kBAAY,EAAE,CAAC;AAAE70C,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kBAAD;AAArB,OAAD,CAHc;AAI5Bq4C,qBAAe,EAAE,CAAC;AAAEx4C,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,gBAAD;AAArB,OAAD;AAJW,KAAhC;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+3C,cAAzB,EAAyC,CAAC;AAC/Dl4C,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sCADX;AAECsK,kBAAQ,EAAE,gBAFX;AAGClB,cAAI,EAAE;AACF,uBAAW,+BADT;AAEF,iCAAqB,mBAFnB;AAGF,2BAAe;AAHb;AAHP,SAAD;AAFyD,OAAD,CAAzC,EAWrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAEm0C,YAAR;AAAsBj0C,oBAAU,EAAE,CAAC;AACjDF,gBAAI,EAAE;AAD2C,WAAD;AAAlC,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEkB;AAAEA,cAAI,EAAE01C;AAAR,SAFlB,CAAP;AAEgD,OAbzC,EAa2C;AAAE11C,YAAI,EAAE,CAAC;AACrEA,cAAI,EAAE;AAD+D,SAAD,CAAR;AAE5D60C,oBAAY,EAAE,CAAC;AACf70C,cAAI,EAAE,mDADS;AAEfG,cAAI,EAAE,CAAC,kBAAD;AAFS,SAAD,CAF8C;AAK5D0mB,iBAAS,EAAE,CAAC;AACZ7mB,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,YAAD;AAFM,SAAD,CALiD;AAQ5Dq4C,uBAAe,EAAE,CAAC;AAClBx4C,cAAI,EAAE,mDADY;AAElBG,cAAI,EAAE,CAAC,gBAAD;AAFY,SAAD;AAR2C,OAb3C;AAwBb,KAxBF;;AAyBd,QAAI,KAAJ,EAAW,CA8BV;AACD;;;;;QAGMs4C,c;AACF;;;;;AAKA,8BAAYxM,UAAZ,EAAwB3tB,WAAxB,EAAqCssB,OAArC,EAA8C;AAAA;;AAC1C,aAAKqB,UAAL,GAAkBA,UAAlB;AACA,aAAK3tB,WAAL,GAAmBA,WAAnB;AACA,aAAKssB,OAAL,GAAeA,OAAf;AACA,aAAK9yB,EAAL,8BAA8BmgC,gBAAgB,EAA9C;AACH;AACD;;;;;;;mCAGW;AAAA;;AACP,cAAI,CAAC,KAAKhM,UAAV,EAAsB;AAClB,iBAAKA,UAAL;AAAmB;AAAkBkM,4BAAgB,CAAC,KAAK75B,WAAN,EAAmB,KAAKssB,OAAL,CAAaqL,WAAhC,CAArD;AACH;;AACD,cAAI,KAAKhK,UAAT,EAAqB;AACjBrkB,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF;AACA,kBAAM5jB,SAAS,GAAG,OAAI,CAAC+nC,UAAL,CAAgBmI,kBAAlC;;AACA,kBAAIlwC,SAAS,IAAI,CAACA,SAAS,CAACouC,eAA5B,EAA6C;AACzCpuC,yBAAS,CAACouC,eAAV,GAA4B,OAAI,CAACx6B,EAAjC;AACH;AACJ,aATD;AAUH;AACJ;;;;;;AAEL2gC,kBAAc,CAAC74C,IAAf,GAAsB,SAAS84C,sBAAT,CAAgC54C,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI24C,cAAV,EAA0B,gEAAyBtE,YAAzB,EAAuC,CAAvC,CAA1B,EAAqE,gEAAyB,wDAAzB,CAArE,EAAkH,gEAAyBuB,SAAzB,CAAlH,CAAP;AAAgK,KAA3N;;AACA+C,kBAAc,CAAClgC,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEy4C,cAAR;AAAwBjgC,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,EAA+B,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA/B,CAAnC;AAA+F0I,eAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAA1G;AAAmIuC,cAAQ,EAAE,CAA7I;AAAgJtC,kBAAY,EAAE,SAASw3B,2BAAT,CAAqCt3B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjQ,uEAAsB,IAAtB,EAA4BC,GAAG,CAACxJ,EAAhC;AACH;AAAE,OAFwC;AAEtCmD,YAAM,EAAE;AAAEnD,UAAE,EAAE;AAAN,OAF8B;AAEhBW,cAAQ,EAAE,CAAC,gBAAD;AAFM,KAAzB,CAAtB;AAGA;;AACAggC,kBAAc,CAAC14C,cAAf,GAAgC;AAAA,aAAM,CAClC;AAAEC,YAAI,EAAEm0C,YAAR;AAAsBj0C,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAlC,OADkC,EAElC;AAAEA,YAAI,EAAE;AAAR,OAFkC,EAGlC;AAAEA,YAAI,EAAE01C;AAAR,OAHkC,CAAN;AAAA,KAAhC;;AAKA+C,kBAAc,CAACr9B,cAAf,GAAgC;AAC5BtD,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD;AADwB,KAAhC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBy4C,cAAzB,EAAyC,CAAC;AAC/Dz4C,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sCADX;AAECsK,kBAAQ,EAAE,gBAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,kBADP;AAEF,oBAAQ;AAFN;AAHP,SAAD;AAFyD,OAAD,CAAzC,EAUrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAEm0C,YAAR;AAAsBj0C,oBAAU,EAAE,CAAC;AACjDF,gBAAI,EAAE;AAD2C,WAAD;AAAlC,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEkB;AAAEA,cAAI,EAAE01C;AAAR,SAFlB,CAAP;AAEgD,OAZzC,EAY2C;AAAE59B,UAAE,EAAE,CAAC;AACnE9X,cAAI,EAAE;AAD6D,SAAD;AAAN,OAZ3C;AAcb,KAdF;;AAed,QAAI,KAAJ,EAAW,CAkBV;AACD;;;;;QAGM44C,gB;;;;AAENA,oBAAgB,CAACh5C,IAAjB,GAAwB,SAASi5C,wBAAT,CAAkC/4C,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAI84C,gBAAV,GAAP;AAAuC,KAAtG;;AACAA,oBAAgB,CAACrgC,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAE44C,gBAAR;AAA0BpgC,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,oBAAD,CAAjC,EAAyD,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAzD,CAArC;AAA6H0I,eAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ;AAAxI,KAAzB,CAAxB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB03B,gBAAzB,EAA2C,CAAC;AACjE54C,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,gEADT;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAF2D,OAAD,CAA3C,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMuhC,gB;;;;AAENA,oBAAgB,CAACl5C,IAAjB,GAAwB,SAASm5C,wBAAT,CAAkCj5C,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIg5C,gBAAV,GAAP;AAAuC,KAAtG;;AACAA,oBAAgB,CAACvgC,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAE84C,gBAAR;AAA0BtgC,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,oBAAD,CAAjC,EAAyD,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAzD,CAArC;AAA6H0I,eAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ;AAAxI,KAAzB,CAAxB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB43B,gBAAzB,EAA2C,CAAC;AACjE94C,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,gEADT;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAF2D,OAAD,CAA3C,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;;;AAMA,aAAS4gC,gBAAT,CAA0Bt6C,OAA1B,EAAmCo4C,WAAnC,EAAgD;AAC5C;AACA,UAAIr/B,MAAM,GAAG/Y,OAAO,CAACiV,aAAR,CAAsBtM,aAAnC;;AACA,aAAOoQ,MAAM,IAAI,CAACA,MAAM,CAAC9b,SAAP,CAAiBY,QAAjB,CAA0B,sBAA1B,CAAlB,EAAqE;AACjEkb,cAAM,GAAGA,MAAM,CAACpQ,aAAhB;AACH;;AACD,aAAOoQ,MAAM,GAAGq/B,WAAW,CAACvjB,IAAZ;AAAkB;;;;AAIlC,gBAAAmkB,MAAM;AAAA,eAAIA,MAAM,CAAC/+B,EAAP;AAAe;AAAkBlB,cAAnB,CAA4BkB,EAA9C;AAAA,OAJU,CAAH,GAI8C,IAJ3D;AAKH;AAED;;;;;;;QAKMkhC,e;;;;AAENA,mBAAe,CAACx9B,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEg5C;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAACv9B,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS44C,uBAAT,CAAiCn5C,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIk5C,eAAV,GAAP;AAAsC,OAAvF;AAAyFr9B,eAAS,EAAE,CAC3I+5B,SAD2I,EAE3ID,mCAF2I,CAApG;AAGxC75B,aAAO,EAAE,CAAC,CACL,kEADK,EAEL,gEAFK,EAGL,sEAHK,CAAD,EAKR,sEALQ;AAH+B,KAAxB,CAAvB;;AASA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bm9B,eAA1B,EAA2C;AAAEl9B,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACi2B,kBAAD,EAC1ImG,cAD0I,EAE1IO,cAF0I,EAG1IK,gBAH0I,EAI1IF,gBAJ0I,CAAP;AAI/G,SAJiF;AAI/Eh9B,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,kEAAD,EACpD,gEADoD,EAEpD,sEAFoD,CAAP;AAE1B,SANkF;AAMhFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACg2B,kBAAD,EACnDmG,cADmD,EAEnDO,cAFmD,EAGnDG,gBAHmD,EAInDE,gBAJmD,EAKnD,sEALmD,CAAP;AAKzB;AAXkF,OAA3C,CAAnD;AAWkB,KAXjC;AAYA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBE,eAAzB,EAA0C,CAAC;AAChEh5C,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,kEADK,EAEL,gEAFK,EAGL,sEAHK,CADV;AAMCG,iBAAO,EAAE,CACLg2B,kBADK,EAELmG,cAFK,EAGLO,cAHK,EAILG,gBAJK,EAKLE,gBALK,EAML,sEANK,CANV;AAcCh9B,sBAAY,EAAE,CACVi2B,kBADU,EAEVmG,cAFU,EAGVO,cAHU,EAIVK,gBAJU,EAKVF,gBALU,CAdf;AAqBCj9B,mBAAS,EAAE,CACP+5B,SADO,EAEPD,mCAFO,CArBZ;AAyBCpE,yBAAe,EAAE,CAACU,kBAAD;AAzBlB,SAAD;AAF0D,OAAD,CAA1C,EA6BrB,IA7BqB,EA6Bf,IA7Be;AA6BP,KA7BR;AA+Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACtuDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;QAMMmH,U;AACF,4BAAc;AAAA;;AACV,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKC,MAAL,GAAc,KAAd;AACH;AACD;;;;;;;;4BAIe;AAAE,iBAAO,KAAKD,SAAZ;AAAwB;AACzC;;;;;0BAIah3C,K,EAAO;AAAE,eAAKg3C,SAAL,GAAiB,oFAAsBh3C,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIY;AAAE,iBAAO,KAAKi3C,MAAZ;AAAqB;AACnC;;;;;0BAIUj3C,K,EAAO;AAAE,eAAKi3C,MAAL,GAAc,oFAAsBj3C,KAAtB,CAAd;AAA6C;;;;;;AAEpE+2C,cAAU,CAACt5C,IAAX,GAAkB,SAASy5C,kBAAT,CAA4Bv5C,CAA5B,EAA+B;AAAE,aAAO,KAAKA,CAAC,IAAIo5C,UAAV,GAAP;AAAiC,KAApF;;AACAA,cAAU,CAAC/1B,IAAX,GAAkB,gEAAyB;AAAEnjB,UAAI,EAAEk5C,UAAR;AAAoB1gC,eAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;AAAkD0I,eAAS,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,CAAtB,EAAyB,aAAzB,CAA7D;AAAsGuC,cAAQ,EAAE,CAAhH;AAAmHtC,kBAAY,EAAE,SAASm4B,uBAAT,CAAiCj4B,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5N,oEAAmB,kBAAnB,EAAuCC,GAAG,CAACi4B,QAAJ,GAAe,UAAf,GAA4B,YAAnE;;AACA,oEAAmB,sBAAnB,EAA2Cj4B,GAAG,CAACi4B,QAA/C,EAAyD,wBAAzD,EAAmF,CAACj4B,GAAG,CAACi4B,QAAxF,EAAkG,mBAAlG,EAAuHj4B,GAAG,CAACk4B,KAA3H;AACH;AAAE,OAHoC;AAGlCv+B,YAAM,EAAE;AAAEs+B,gBAAQ,EAAE,UAAZ;AAAwBC,aAAK,EAAE;AAA/B,OAH0B;AAGgB31B,WAAK,EAAE,CAHvB;AAG0BC,UAAI,EAAE,CAHhC;AAGmCE,cAAQ,EAAE,SAASy1B,mBAAT,CAA6Bp4B,EAA7B,EAAiCC,GAAjC,EAAsC,CAAG,CAHtF;AAGwF/P,YAAM,EAAE,CAAC,+SAAD,CAHhG;AAGmZ6S,mBAAa,EAAE,CAHla;AAGqaC,qBAAe,EAAE;AAHtb,KAAzB,CAAlB;AAIA60B,cAAU,CAAC99B,cAAX,GAA4B;AACxBm+B,cAAQ,EAAE,CAAC;AAAEv5C,YAAI,EAAE;AAAR,OAAD,CADc;AAExBw5C,WAAK,EAAE,CAAC;AAAEx5C,YAAI,EAAE;AAAR,OAAD;AAFiB,KAA5B;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBk5C,UAAzB,EAAqC,CAAC;AAC3Dl5C,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,aADX;AAECoJ,cAAI,EAAE;AACF,oBAAQ,WADN;AAEF,uCAA2B,sCAFzB;AAGF,4CAAgC,UAH9B;AAIF,8CAAkC,WAJhC;AAKF,yCAA6B,OAL3B;AAMF,qBAAS;AANP,WAFP;AAUCyM,kBAAQ,EAAE,EAVX;AAWCI,uBAAa,EAAE,gEAAkBG,IAXlC;AAYCF,yBAAe,EAAE,sEAAwBG,MAZ1C;AAaCjT,gBAAM,EAAE,CAAC,+SAAD;AAbT,SAAD;AAFqD,OAAD,CAArC,EAiBrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAjBL,EAiBO;AAAEgoC,gBAAQ,EAAE,CAAC;AACrCv5C,cAAI,EAAE;AAD+B,SAAD,CAAZ;AAExBw5C,aAAK,EAAE,CAAC;AACRx5C,cAAI,EAAE;AADE,SAAD;AAFiB,OAjBP;AAqBb,KArBF;;AAsBd,QAAI,KAAJ,EAAW,CAeV;AAED;;;;;;;QAKM05C,gB;;;;AAENA,oBAAgB,CAACl+B,IAAjB,GAAwB,+DAAwB;AAAExb,UAAI,EAAE05C;AAAR,KAAxB,CAAxB;AACAA,oBAAgB,CAACj+B,IAAjB,GAAwB,+DAAwB;AAAEpb,aAAO,EAAE,SAASs5C,wBAAT,CAAkC75C,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAI45C,gBAAV,GAAP;AAAuC,OAAzF;AAA2F99B,aAAO,EAAE,CAAC,CAAC,sEAAD,CAAD,EAC5I,sEAD4I;AAApG,KAAxB,CAAxB;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B69B,gBAA1B,EAA4C;AAAE59B,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACo9B,UAAD,CAAP;AAAsB,SAApD;AAAsDt9B,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,CAAP;AAA2B,SAAxG;AAA0GG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACm9B,UAAD,EAC9O,sEAD8O,CAAP;AACpN;AADmF,OAA5C,CAAnD;AACkB,KADjC;AAEA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBQ,gBAAzB,EAA2C,CAAC;AACjE15C,YAAI,EAAE,sDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,sEAAD,CADV;AAECG,iBAAO,EAAE,CAACm9B,UAAD,EAAa,sEAAb,CAFV;AAGCp9B,sBAAY,EAAE,CAACo9B,UAAD;AAHf,SAAD;AAF2D,OAAD,CAA3C,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACrt3B,GAAG,GAAG,CAAC,WAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,qBAAD,CAAZ;AACA,QAAM2D,GAAG,GAAG,CAAC,gBAAD,CAAZ;AACA,QAAM2V,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,aAASye,oCAAT,CAA8Cv4B,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,8EAA+B,CAA/B;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;AAAE;;AACH,aAASw4B,2BAAT,CAAqCx4B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACxD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,aAASy4B,4CAAT,CAAsDz4B,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,8EAA+B,CAA/B;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM6Y,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAAC6f,QAAR,CAAiB15B,WAA1C;AACH;AAAE;;AACH,aAAS25B,+BAAT,CAAyC34B,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5D,mEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,aAAS44B,oCAAT,CAA8C54B,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,6DAAc,CAAd,EAAiB,IAAjB;;AACA;AACH;AAAE;;AACH,aAAS64B,6BAAT,CAAuC74B,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,YAAM84B,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,mBAAlB,EAAuC,SAASC,gEAAT,GAA4E;AAAE,sEAAqBD,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,gBAAR,EAAP;AAAoC,SAA7N;;AACA,iEAAkB,CAAlB,EAAqBR,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,cAAzE,EAAyF,EAAzF;;AACA,iEAAkB,CAAlB,EAAqBE,+BAArB,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D/5C,SAA5D,EAAuE,EAAvE;;AACA,iEAAkB,CAAlB,EAAqBg6C,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,MAAjE,EAAyE,EAAzE;;AACA;AACH;;AAAC,UAAI54B,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmW,MAAM,GAAG,6DAAf;;AACA,kEAAmB,WAAnB,EAAgCA,MAAM,CAACuiB,QAAP,CAAgB1lB,KAAhB,IAAyB,CAACmD,MAAM,CAAC+iB,kBAAjE,EAAqF,sBAArF,EAA6G/iB,MAAM,CAACuiB,QAAP,CAAgB1lB,KAAhB,IAAyB,CAACmD,MAAM,CAAC+iB,kBAA9I,EAAkK,YAAlK,EAAgL/iB,MAAM,CAAC9U,KAAP,IAAgB,QAAhM,EAA0M,UAA1M,EAAsN8U,MAAM,CAAC9U,KAAP,IAAgB,MAAtO;;AACA,iEAAkB,2BAAlB,EAA+C8U,MAAM,CAACgjB,UAAP,IAAqB,SAApE,EAA+E,IAA/E,EAAqFhjB,MAAM,CAACijB,QAA5F,EAAsG,UAAtG,EAAkHjjB,MAAM,CAACkjB,SAAP,EAAlH;;AACA,kEAAmB,KAAnB,EAA0BljB,MAAM,CAACuiB,QAAP,CAAgBjiC,EAA1C,EAA8C,WAA9C,EAA2D0f,MAAM,CAACuiB,QAAP,CAAgBjiC,EAA3E;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,KAAlC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAAC0f,MAAM,CAACmjB,kBAAR,IAA8BnjB,MAAM,CAACuiB,QAAP,CAAgBzwB,QAA9C,IAA0D,CAACkO,MAAM,CAACuiB,QAAP,CAAgBj3B,QAArG;AACH;AAAE;;AACH,aAAS83B,4BAAT,CAAsCv5B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,aAASw5B,4BAAT,CAAsCx5B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMiY,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,YAAnB,EAAiCA,MAAM,CAAC5W,KAAP,IAAgB,QAAjD,EAA2D,UAA3D,EAAuE4W,MAAM,CAAC5W,KAAP,IAAgB,MAAvF;AACH;AAAE;;AACH,aAASo4B,4BAAT,CAAsCz5B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMoY,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCA,MAAM,CAACshB,wBAAhD;AACH;AAAE;;AACH,aAASC,kCAAT,CAA4C35B,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM45B,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,iEAAkB,IAAlB,EAAwBA,OAAO,CAACC,YAAhC;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBD,OAAO,CAACE,SAAjC;AACH;AAAE;;AACH,aAASC,4BAAT,CAAsC/5B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,iEAAkB,CAAlB,EAAqB25B,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,EAAtE;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,UAAI35B,EAAE,GAAG,CAAT,EAAY;AACV,YAAM2W,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCA,MAAM,CAAC+iB,wBAAhD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B/iB,MAAM,CAACmjB,SAAjC;AACH;AAAE;;AACH,QAAM/f,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAN,EAA+B,CAAC,CAAC,iBAAD,CAAD,CAA/B,EAAsD,CAAC,CAAC,WAAD,CAAD,CAAtD,EAAuE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAvE,EAAgG,CAAC,CAAC,WAAD,CAAD,CAAhG,EAAiH,CAAC,CAAC,UAAD,EAAa,CAAb,EAAgB,OAAhB,EAAyB,KAAzB,CAAD,CAAjH,EAAoJ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAAD,CAApJ,CAAZ;AACA,QAAMigB,GAAG,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,iBAArB,EAAwC,WAAxC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,6BAAjF,EAAgH,uBAAhH,CAAZ;AACA,QAAIrkC,YAAY,GAAG,CAAnB;AACA;;;;QAGMskC,Q,GACF,oBAAc;AAAA;;AACV,WAAKxjC,EAAL,uBAAuBd,YAAY,EAAnC;AACH,K;;AAELskC,YAAQ,CAAC17C,IAAT,GAAgB,SAAS27C,gBAAT,CAA0Bz7C,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAIw7C,QAAV,GAAP;AAA+B,KAA9E;;AACAA,YAAQ,CAAC/iC,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAEs7C,QAAR;AAAkB9iC,eAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAA7B;AAA8C0I,eAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,WAArB,CAAzD;AAA4FuC,cAAQ,EAAE,CAAtG;AAAyGtC,kBAAY,EAAE,SAASq6B,qBAAT,CAA+Bn6B,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9M,oEAAmB,IAAnB,EAAyBC,GAAG,CAACxJ,EAA7B;AACH;AAAE,OAFkC;AAEhCmD,YAAM,EAAE;AAAEnD,UAAE,EAAE;AAAN;AAFwB,KAAzB,CAAhB;AAGAwjC,YAAQ,CAAClgC,cAAT,GAA0B;AACtBtD,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD;AADkB,KAA1B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBs7C,QAAzB,EAAmC,CAAC;AACzDt7C,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,WADX;AAECoJ,cAAI,EAAE;AACF,qBAAS,WADP;AAEF,oBAAQ,OAFN;AAGF,yBAAa;AAHX;AAFP,SAAD;AAFmD,OAAD,CAAnC,EAUrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAVL,EAUO;AAAEO,UAAE,EAAE,CAAC;AAC/B9X,cAAI,EAAE;AADyB,SAAD;AAAN,OAVP;AAYb,KAZF;;AAad,QAAI,KAAJ,EAAW,CAGV;AAED;;;;;;AAKA;;;;;;;AAKA,QAAMy7C,sBAAsB,GAAG;AAC3B;;;AAGAC,wBAAkB,EAAE,oEAAQ,oBAAR,EAA8B,CAC9C;AACA,wEAAM,OAAN,EAAe,kEAAM;AAAE7S,eAAO,EAAE,CAAX;AAAcp3B,iBAAS,EAAE;AAAzB,OAAN,CAAf,CAF8C,EAG9C,uEAAW,eAAX,EAA4B,CACxB,kEAAM;AAAEo3B,eAAO,EAAE,CAAX;AAAcp3B,iBAAS,EAAE;AAAzB,OAAN,CADwB,EAExB,oEAAQ,wCAAR,CAFwB,CAA5B,CAH8C,CAA9B;AAJO,KAA/B;AAcA;;;;;;AAKA;;;;;;QAKMkqC,mB;;;;AAENA,uBAAmB,CAAC/7C,IAApB,GAA2B,SAASg8C,2BAAT,CAAqC97C,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAI67C,mBAAV,GAAP;AAA0C,KAA/G;;AACAA,uBAAmB,CAACpjC,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE27C;AAAR,KAAzB,CAA3B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,mBAAzB,EAA8C,CAAC;AACpE37C,YAAI,EAAE;AAD8D,OAAD,CAA9C,EAErB,IAFqB,EAEf,IAFe;AAEP,KAFR;;AAGd,QAAI,KAAJ,EAAW,CAoFV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,aAAS67C,uCAAT,GAAmD;AAC/C,aAAO1/C,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;;;;;;;AAKA,aAAS2/C,kCAAT,CAA4CC,KAA5C,EAAmD;AAC/C,aAAO5/C,KAAK,oDAA4C4/C,KAA5C,UAAZ;AACH;AACD;;;;;;AAIA,aAASC,kCAAT,GAA8C;AAC1C,aAAO7/C,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;;;;;;AAKA;;;AACA,QAAIm5B,cAAc,GAAG,CAArB;AACA;;;;QAGM2mB,O,GACF,mBAAc;AAAA;;AACV;;;AAGA,WAAKF,KAAL,GAAa,OAAb;AACA;;;;AAGA,WAAKjkC,EAAL,sBAAsBwd,cAAc,EAApC;AACH,K;;AAEL2mB,WAAO,CAACr8C,IAAR,GAAe,SAASs8C,eAAT,CAAyBp8C,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIm8C,OAAV,GAAP;AAA8B,KAA3E;;AACAA,WAAO,CAAC1jC,IAAR,GAAe,gEAAyB;AAAEvY,UAAI,EAAEi8C,OAAR;AAAiBzjC,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C0I,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAAvD;AAAwEuC,cAAQ,EAAE,CAAlF;AAAqFtC,kBAAY,EAAE,SAASg7B,oBAAT,CAA8B96B,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxL,oEAAmB,IAAnB,EAAyBC,GAAG,CAACxJ,EAA7B,EAAiC,OAAjC,EAA0C,IAA1C;;AACA,oEAAmB,WAAnB,EAAgCwJ,GAAG,CAACy6B,KAAJ,IAAa,KAA7C;AACH;AAAE,OAHiC;AAG/B9gC,YAAM,EAAE;AAAE8gC,aAAK,EAAE,OAAT;AAAkBjkC,UAAE,EAAE;AAAtB;AAHuB,KAAzB,CAAf;AAIAmkC,WAAO,CAAC7gC,cAAR,GAAyB;AACrB2gC,WAAK,EAAE,CAAC;AAAE/7C,YAAI,EAAE;AAAR,OAAD,CADc;AAErB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD;AAFiB,KAAzB;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBi8C,OAAzB,EAAkC,CAAC;AACxDj8C,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,UADX;AAECoJ,cAAI,EAAE;AACF,qBAAS,UADP;AAEF,iCAAqB,gBAFnB;AAGF,yBAAa,IAHX;AAIF;AACA,4BAAgB;AALd;AAFP,SAAD;AAFkD,OAAD,CAAlC,EAYrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAZL,EAYO;AAAEwkC,aAAK,EAAE,CAAC;AAClC/7C,cAAI,EAAE;AAD4B,SAAD,CAAT;AAExB8X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD;AAFoB,OAZP;AAgBb,KAhBF;;AAiBd,QAAI,KAAJ,EAAW,CAWV;AAED;;;;;;AAKA;;;;;QAGMo8C,Q;;;;AAENA,YAAQ,CAACx8C,IAAT,GAAgB,SAASy8C,gBAAT,CAA0Bv8C,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAIs8C,QAAV,GAAP;AAA+B,KAA9E;;AACAA,YAAQ,CAAC7jC,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAEo8C,QAAR;AAAkB5jC,eAAS,EAAE,CAAC,CAAC,WAAD,CAAD;AAA7B,KAAzB,CAAhB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4jC,QAAzB,EAAmC,CAAC;AACzDp8C,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFmD,OAAD,CAAnC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;;;;QAMMmuC,c;;;;AAENA,kBAAc,CAAC18C,IAAf,GAAsB,SAAS28C,sBAAT,CAAgCz8C,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIw8C,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAAC/jC,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEs8C,cAAR;AAAwB9jC,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD;AAAnC,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB8jC,cAAzB,EAAyC,CAAC;AAC/Dt8C,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFyD,OAAD,CAAzC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;QAGMquC,S;;;;AAENA,aAAS,CAAC58C,IAAV,GAAiB,SAAS68C,iBAAT,CAA2B38C,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAI08C,SAAV,GAAP;AAAgC,KAAjF;;AACAA,aAAS,CAACjkC,IAAV,GAAiB,gEAAyB;AAAEvY,UAAI,EAAEw8C,SAAR;AAAmBhkC,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,KAAzB,CAAjB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBgkC,SAAzB,EAAoC,CAAC;AAC1Dx8C,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFoD,OAAD,CAApC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;QAGMuuC,S;;;;AAENA,aAAS,CAAC98C,IAAV,GAAiB,SAAS+8C,iBAAT,CAA2B78C,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAI48C,SAAV,GAAP;AAAgC,KAAjF;;AACAA,aAAS,CAACnkC,IAAV,GAAiB,gEAAyB;AAAEvY,UAAI,EAAE08C,SAAR;AAAmBlkC,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,KAAzB,CAAjB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBkkC,SAAzB,EAAoC,CAAC;AAC1D18C,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFoD,OAAD,CAApC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;AACA,QAAIyuC,cAAc,GAAG,CAArB;AACA;;AACA,QAAMC,kBAAkB,GAAG,IAA3B;AACA;;AACA,QAAMC,iBAAiB,GAAG,CAA1B;AACA;;;;;QAIMC,gB;AACF;;;AAGA,8BAAYz+B,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;AAKA,QAAM0+B,sBAAsB,GAAG,0EAAWD,gBAAX,EAA6B,SAA7B,CAA/B;AACA;;;;;;;AAKA,aAASE,0BAAT,GAAsC,CAAG;;AACzC,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;AAKA,QAAMC,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AACA;;;;;;;AAMA,QAAMC,cAAc,GAAG,IAAI,4DAAJ,CAAmB,cAAnB,CAAvB;AACA;;;;QAGMC,Y;;;;;AACF;;;;;;;;;;AAUA,4BAAY9+B,WAAZ,EAAyBoI,kBAAzB,EAA6C22B,YAA7C,EAA2DtkC,IAA3D,EAAiEukC,SAAjE,EAA4Er5C,SAA5E,EAAuF1H,OAAvF,EAAgG6lB,cAAhG,EAAgH;AAAA;;AAAA;;AAC5G,sCAAM9D,WAAN;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAKoI,kBAAL,GAA0BA,kBAA1B;AACA,gBAAK3N,IAAL,GAAYA,IAAZ;AACA,gBAAKukC,SAAL,GAAiBA,SAAjB;AACA,gBAAKr5C,SAAL,GAAiBA,SAAjB;AACA,gBAAK1H,OAAL,GAAeA,OAAf;AACA;;;;;AAIA,gBAAKghD,uCAAL,GAA+C,KAA/C;AACA;;;;AAGA,gBAAKC,oCAAL,GAA4C,KAA5C;AACA,gBAAK5+B,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,gBAAK6+B,kBAAL,GAA0B,KAA1B;AACA;;;;AAGA,gBAAK1C,wBAAL,GAAgC,EAAhC;AACA,gBAAK2C,UAAL,GAAkB,EAAlB,CA1B4G,CA2B5G;;AACA,gBAAKxC,YAAL,sBAAgC0B,cAAc,EAA9C,EA5B4G,CA6B5G;;AACA,gBAAKnC,QAAL,kCAAwCmC,cAAc,EAAtD;AACA,gBAAKe,aAAL,GAAqBN,YAAY,GAAGA,YAAH,GAAkB,EAAnD;AACA,gBAAKO,UAAL,GAAkB,QAAKC,0BAAL,EAAlB;AACA,gBAAKC,kBAAL,GAA0B17B,cAAc,KAAK,gBAA7C,CAjC4G,CAkC5G;;AACA,gBAAKo4B,UAAL,GAAmB8C,SAAS,IAAIA,SAAS,CAAC9C,UAAxB,GAAsC8C,SAAS,CAAC9C,UAAhD,GAA6D,QAA/E;AACA,gBAAKuD,mBAAL,GAA4BT,SAAS,IAAIA,SAAS,CAAC3C,kBAAV,IAAgC,IAA9C,GACvB2C,SAAS,CAAC3C,kBADa,GACQ,KADnC;AApC4G;AAsC/G;AACD;;;;;;;;;AAiGA;;;;;oDAK4B;AACxB,iBAAO,KAAKqD,uBAAL,IAAgC,KAAK1/B,WAA5C;AACH;AACD;;;;;;6CAGqB;AAAA;;AACjB,eAAK2/B,qBAAL;AACA;;;AACA,cAAMhQ,OAAO,GAAG,KAAK8L,QAArB;;AACA,cAAI9L,OAAO,CAAC3e,WAAZ,EAAyB;AACrB,iBAAKhR,WAAL,CAAiBxL,aAAjB,CAA+BhY,SAA/B,CAAyCC,GAAzC,+BAAoEkzC,OAAO,CAAC3e,WAA5E;AACH,WANgB,CAOjB;;;AACA2e,iBAAO,CAACld,YAAR,CAAqB/pB,IAArB,CAA0B;AAAW;AAAkB,cAA7B,CAA1B,EAAgE3J,SAAhE;AAA2E;;;AAG3E,sBAAM;AACF,mBAAI,CAAC6gD,qBAAL;;AACA,mBAAI,CAACC,mBAAL;;AACA,mBAAI,CAACz3B,kBAAL,CAAwBqB,YAAxB;AACH,WAPD,EARiB,CAgBjB;;AACA,cAAIkmB,OAAO,CAAC/e,SAAR,IAAqB+e,OAAO,CAAC/e,SAAR,CAAkBkvB,YAA3C,EAAyD;AACrDnQ,mBAAO,CAAC/e,SAAR,CAAkBkvB,YAAlB,CACKp3C,IADL,CACU,iEAAU,KAAK4X,UAAf,CADV,EAEKvhB,SAFL;AAEgB;;;AAGhB;AAAA,qBAAM,OAAI,CAACqpB,kBAAL,CAAwBqB,YAAxB,EAAN;AAAA,aALA;AAMH,WAxBgB,CAyBjB;AACA;AACA;;;AACA,eAAKxrB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF,mBAAI,CAACrM,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,iEAAU,OAAI,CAAC4X,UAAf,CAA1C,EAAsEvhB,SAAtE;AAAiF;;;AAGjF,wBAAM;AACF,kBAAI,OAAI,CAACmgD,oCAAT,EAA+C;AAC3C,uBAAI,CAAClD,gBAAL;AACH;AACJ,aAPD;AAQH,WAZD,EA5BiB,CAyCjB;;;AACA,6DAAM,KAAK+D,eAAL,CAAqBzkC,OAA3B,EAAoC,KAAK0kC,eAAL,CAAqB1kC,OAAzD,EAAkEvc,SAAlE;AAA6E;;;AAG7E,sBAAM;AACF,mBAAI,CAACmgD,oCAAL,GAA4C,IAA5C;;AACA,mBAAI,CAAC92B,kBAAL,CAAwBqB,YAAxB;AACH,WAND,EA1CiB,CAiDjB;;AACA,eAAKw2B,aAAL,CAAmB3kC,OAAnB,CAA2B5S,IAA3B,CAAgC,iEAAU,IAAV,CAAhC,EAAiD3J,SAAjD;AAA4D;;;AAG5D,sBAAM;AACF,mBAAI,CAACmhD,aAAL;;AACA,mBAAI,CAAC93B,kBAAL,CAAwBqB,YAAxB;AACH,WAND,EAlDiB,CAyDjB;;;AACA,eAAK02B,cAAL,CAAoB7kC,OAApB,CAA4B5S,IAA5B,CAAiC,iEAAU,IAAV,CAAjC,EAAkD3J,SAAlD;AAA6D;;;AAG7D,sBAAM;AACF,mBAAI,CAAC8gD,mBAAL;;AACA,mBAAI,CAACz3B,kBAAL,CAAwBqB,YAAxB;AACH,WAND;;AAOA,cAAI,KAAKhP,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAU3N,MAAV,CAAiBpE,IAAjB,CAAsB,iEAAU,KAAK4X,UAAf,CAAtB,EAAkDvhB,SAAlD;AAA6D;;;AAG7D,wBAAM;AACF,kBAAI,OAAOsL,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,uBAAI,CAACpM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,4BAAM;AACFD,uCAAqB;AAAE;;;AAGvB;AAAA,2BAAM,OAAI,CAAC2xC,gBAAL,EAAN;AAAA,mBAHqB,CAArB;AAIH,iBARD;AASH,eAVD,MAWK;AACD,uBAAI,CAACA,gBAAL;AACH;AACJ,aAlBD;AAmBH;AACJ;AACD;;;;;;gDAGwB;AACpB,eAAK2D,qBAAL;;AACA,cAAI,KAAKV,uCAAT,EAAkD;AAC9C,iBAAKjD,gBAAL;AACH;AACJ;AACD;;;;;;0CAGkB;AACd;AACA,eAAKS,wBAAL,GAAgC,OAAhC;;AACA,eAAKr0B,kBAAL,CAAwBuB,aAAxB;AACH;AACD;;;;;;sCAGc;AACV,eAAKrJ,UAAL,CAAgB9b,IAAhB;;AACA,eAAK8b,UAAL,CAAgBlX,QAAhB;AACH;AACD;;;;;;;;uCAKeg3C,I,EAAM;AACjB;AACA,cAAMxvB,SAAS,GAAG,KAAK6qB,QAAL,GAAgB,KAAKA,QAAL,CAAc7qB,SAA9B,GAA0C,IAA5D;AACA,iBAAOA,SAAS,IAAIA,SAAS,CAACwvB,IAAD,CAA7B;AACH;AACD;;;;;;0CAGkB;AACd,iBAAO,CAAC,EAAE,KAAK3E,QAAL,IAAiB,KAAKA,QAAL,CAAc15B,WAA/B,IAA8C,KAAKs+B,iBAArD,CAAR;AACH;AACD;;;;;;oCAGY;AACR,iBAAO,CAAC,CAAC,KAAKC,WAAd;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,KAAKC,cAAL,KAAwB,KAAK9E,QAAL,CAAc+E,gBAAd,IAAkC,KAAKvE,kBAA/D,CAAP;AACH;AACD;;;;;;kDAG0B;AACtB;AACA,iBAAO,KAAKC,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKE,SAAL,EAAjC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAKqE,iBAAL,EADzB;AAEH;AACD;;;;;;4CAGoB;AAChB;AACA,iBAAO,KAAKrE,SAAL,MAAoB,KAAKF,UAAL,KAAoB,QAApB,IAAgC,KAAKwE,eAAL,EAA3D;AACH;AACD;;;;;;;gDAIwB;AACpB,iBAAQ,KAAKP,cAAL,IAAuB,KAAKA,cAAL,CAAoB97C,MAApB,GAA6B,CAApD,IACJ,KAAKo3C,QAAL,CAAc/kB,UADX,GACyB,OADzB,GACmC,MAD1C;AAEH;AACD;;;;;;;+CAIuB;AAAA;;AACnB,cAAI,KAAKiqB,iBAAL,MAA4B,KAAKJ,cAArC,EAAqD;AACjD;AACA;AACA,gBAAI,KAAKf,kBAAL,IAA2B,KAAKoB,MAApC,EAA4C;AACxC,mBAAKzB,kBAAL,GAA0B,IAA1B;AACA,qEAAU,KAAKyB,MAAL,CAAYpsC,aAAtB,EAAqC,eAArC,EAAsD9L,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,EAAoE3J,SAApE;AAA+E;;;AAG/E,0BAAM;AACF,uBAAI,CAACogD,kBAAL,GAA0B,KAA1B;AACH,eALD;AAMH;;AACD,iBAAKG,UAAL,GAAkB,QAAlB;;AACA,iBAAKl3B,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;AACD;;;;;;;;;gDAMwB;AACpB,cAAI,KAAKgyB,QAAL,CAAc15B,WAAd,IAA6B,KAAKs+B,iBAAtC,EAAyD;AACrD,kBAAM9C,uCAAuC,EAA7C;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,eAAKsD,cAAL;;AACA,eAAKhB,mBAAL;AACH;AACD;;;;;;;;;yCAMiB;AAAA;;AACb,cAAI,KAAKI,aAAT,EAAwB;AACpB;AACA,gBAAIa,SAAJ;AACA;;AACA,gBAAIC,OAAJ;;AACA,iBAAKd,aAAL,CAAmBl1C,OAAnB;AAA4B;;;;AAI5B,sBAACi2C,IAAD,EAAU;AACN,kBAAIA,IAAI,CAACvD,KAAL,KAAe,OAAnB,EAA4B;AACxB,oBAAIqD,SAAS,IAAI,OAAI,CAACjE,SAAtB,EAAiC;AAC7B,wBAAMW,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACDsD,yBAAS,GAAGE,IAAZ;AACH,eALD,MAMK,IAAIA,IAAI,CAACvD,KAAL,KAAe,KAAnB,EAA0B;AAC3B,oBAAIsD,OAAJ,EAAa;AACT,wBAAMvD,kCAAkC,CAAC,KAAD,CAAxC;AACH;;AACDuD,uBAAO,GAAGC,IAAV;AACH;AACJ,aAjBD;AAkBH;AACJ;AACD;;;;;;;;qDAK6B;AACzB,iBAAQ,KAAKhC,SAAL,IAAkB,KAAKA,SAAL,CAAeM,UAAlC,IAAiD,KAAKD,aAAL,SAAjD,IAA6E,MAApF;AACH;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,KAAK5D,QAAT,EAAmB;AACf;AACA,gBAAIzoB,GAAG,GAAG,EAAV;;AACA,gBAAI,KAAKiuB,qBAAL,OAAiC,MAArC,EAA6C;AACzC;AACA,kBAAMH,SAAS,GAAG,KAAKb,aAAL,GACd,KAAKA,aAAL,CAAmB7rB,IAAnB;AAAyB;;;;AAIzB,wBAAA4sB,IAAI;AAAA,uBAAIA,IAAI,CAACvD,KAAL,KAAe,OAAnB;AAAA,eAJJ,CADc,GAKqB,IALvC;AAMA;;AACA,kBAAMsD,OAAO,GAAG,KAAKd,aAAL,GACZ,KAAKA,aAAL,CAAmB7rB,IAAnB;AAAyB;;;;AAIzB,wBAAA4sB,IAAI;AAAA,uBAAIA,IAAI,CAACvD,KAAL,KAAe,KAAnB;AAAA,eAJJ,CADY,GAKqB,IALrC;;AAMA,kBAAIqD,SAAJ,EAAe;AACX9tB,mBAAG,CAACruB,IAAJ,CAASm8C,SAAS,CAACtnC,EAAnB;AACH,eAFD,MAGK,IAAI,KAAK4lC,UAAT,EAAqB;AACtBpsB,mBAAG,CAACruB,IAAJ,CAAS,KAAKi4C,YAAd;AACH;;AACD,kBAAImE,OAAJ,EAAa;AACT/tB,mBAAG,CAACruB,IAAJ,CAASo8C,OAAO,CAACvnC,EAAjB;AACH;AACJ,aAxBD,MAyBK,IAAI,KAAK2mC,cAAT,EAAyB;AAC1BntB,iBAAG,GAAG,KAAKmtB,cAAL,CAAoB9rC,GAApB;AAAyB;;;;AAI/B,wBAAA6sC,KAAK;AAAA,uBAAIA,KAAK,CAAC1nC,EAAV;AAAA,eAJC,CAAN;AAKH;;AACD,iBAAKiiC,QAAL,CAAc0F,iBAAd,CAAgCnuB,GAAhC;AACH;AACJ;AACD;;;;;;;;gDAKwB;AACpB,cAAI,CAAC,KAAKyoB,QAAV,EAAoB;AAChB,kBAAMiC,kCAAkC,EAAxC;AACH;AACJ;AACD;;;;;;;;2CAKmB;AACf;AACA,cAAM0D,OAAO,GAAG,KAAKR,MAAL,GAAc,KAAKA,MAAL,CAAYpsC,aAA1B,GAA0C,IAA1D;;AACA,cAAI,KAAK0nC,UAAL,KAAoB,SAApB,IAAiC,CAACkF,OAAlC,IAA6C,CAACA,OAAO,CAACn2C,QAAR,CAAiB5G,MAA/D,IACA,CAAC+8C,OAAO,CAACz1B,WAAR,CAAoBlY,IAApB,EADL,EACiC;AAC7B;AACH;;AACD,cAAI,CAAC,KAAK9N,SAAL,CAAeM,SAApB,EAA+B;AAC3B;AACA;AACH,WAVc,CAWf;AACA;;;AACA,cAAI,CAAC,KAAKo7C,gBAAL,EAAL,EAA8B;AAC1B,iBAAKpC,uCAAL,GAA+C,IAA/C;AACA;AACH;AACD;;;AACA,cAAIqC,UAAU,GAAG,CAAjB;AACA;;AACA,cAAIC,QAAQ,GAAG,CAAf;AACA;;AACA,cAAM37C,SAAS,GAAG,KAAK85C,uBAAL,CAA6BlrC,aAA/C;AACA;;AACA,cAAMgtC,QAAQ,GAAG57C,SAAS,CAACQ,gBAAV,CAA2B,+BAA3B,CAAjB;AACA;;AACA,cAAMq7C,MAAM,GAAG77C,SAAS,CAACQ,gBAAV,CAA2B,6BAA3B,CAAf;;AACA,cAAI,KAAKw6C,MAAL,IAAe,KAAKA,MAAL,CAAYpsC,aAAZ,CAA0BvJ,QAA1B,CAAmC5G,MAAtD,EAA8D;AAC1D;AACA,gBAAMq9C,aAAa,GAAG97C,SAAS,CAAC9E,qBAAV,EAAtB,CAF0D,CAG1D;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAI4gD,aAAa,CAAChkD,KAAd,KAAwB,CAAxB,IAA6BgkD,aAAa,CAAClkD,MAAd,KAAyB,CAA1D,EAA6D;AACzD,mBAAK0hD,oCAAL,GAA4C,IAA5C;AACA,mBAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;AACD;;;AACA,gBAAM0C,cAAc,GAAG,KAAKC,YAAL,CAAkBF,aAAlB,CAAvB;AACA;;;AACA,gBAAMG,UAAU,GAAG,KAAKD,YAAL,CAAkBR,OAAO,CAACn2C,QAAR,CAAiB,CAAjB,EAAoBnK,qBAApB,EAAlB,CAAnB;AACA;;;AACA,gBAAIghD,UAAU,GAAG,CAAjB;;AAnB0D,wDAoBtCV,OAAO,CAACn2C,QApB8B;AAAA;;AAAA;AAoB1D,qEAAsC;AAAA,oBAA3B82C,KAA2B;AAClCD,0BAAU,IAAIC,KAAK,CAACC,WAApB;AACH;AAtByD;AAAA;AAAA;AAAA;AAAA;;AAuB1DV,sBAAU,GAAGriD,IAAI,CAACC,GAAL,CAAS2iD,UAAU,GAAGF,cAAtB,IAAwCnD,iBAArD;AACA+C,oBAAQ,GAAGO,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAGvD,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,eAAK,IAAIp6C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGo9C,QAAQ,CAACn9C,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCo9C,oBAAQ,CAACp9C,CAAD,CAAR,CAAY7H,KAAZ,CAAkBmB,KAAlB,aAA6B4jD,UAA7B;AACH;;AACD,eAAK,IAAIl9C,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGq9C,MAAM,CAACp9C,MAA3B,EAAmCD,GAAC,EAApC,EAAwC;AACpCq9C,kBAAM,CAACr9C,GAAD,CAAN,CAAU7H,KAAV,CAAgBmB,KAAhB,aAA2B6jD,QAA3B;AACH;;AACD,eAAKrC,oCAAL,GACI,KAAKD,uCAAL,GAA+C,KADnD;AAEH;AACD;;;;;;;;;qCAMagD,I,EAAM;AACf,iBAAQ,KAAKxnC,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAlC,GAA2Co+C,IAAI,CAACliD,KAAhD,GAAwDkiD,IAAI,CAAClmD,IAApE;AACH;AACD;;;;;;;;2CAKmB;AACf;AACA,cAAMwD,OAAO,GAAG,KAAKygB,WAAL,CAAiBxL,aAAjC;;AACA,cAAIjV,OAAO,CAAC2iD,WAAZ,EAAyB;AACrB;AACA,gBAAMC,QAAQ,GAAG5iD,OAAO,CAAC2iD,WAAR,EAAjB,CAFqB,CAGrB;AACA;;AACA,mBAAOC,QAAQ,IAAIA,QAAQ,KAAK5iD,OAAhC;AACH,WATc,CAUf;AACA;;;AACA,iBAAO;AAAC;AAAkB3D,oBAAQ,CAACQ,eAA5B,CAA8CgB,QAA9C,CAAuDmC,OAAvD;AAAP;AACH;;;4BAhfgB;AAAE,iBAAO,KAAK6iD,WAAZ;AAA0B;AAC7C;;;;;0BAIev+C,K,EAAO;AAClB;AACA,cAAMqpC,QAAQ,GAAG,KAAKkV,WAAtB;AACA,eAAKA,WAAL,GAAmBv+C,KAAK,IAAK,KAAKm7C,SAAL,IAAkB,KAAKA,SAAL,CAAe9C,UAA3C,IAA0D,QAA7E;;AACA,cAAI,KAAKkG,WAAL,KAAqB,SAArB,IAAkClV,QAAQ,KAAKrpC,KAAnD,EAA0D;AACtD,iBAAKq7C,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;;;;;;;4BAIyB;AAAE,iBAAO,KAAKO,mBAAZ;AAAkC;AAC7D;;;;;0BAIuB57C,K,EAAO;AAC1B,eAAK47C,mBAAL,GAA2B,oFAAsB57C,KAAtB,CAA3B;AACH;AACD;;;;;;;4BAIyB;AACrB,iBAAO,KAAKy7C,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKH,kBAA7C;AACH;AACD;;;;;;;4BAIqB;AAAE,iBAAO,KAAKG,UAAL,KAAoB,OAA3B;AAAqC;AAC5D;;;;;;;4BAIgB;AAAE,iBAAO,KAAKF,UAAZ;AAAyB;AAC3C;;;;;0BAIcv7C,K,EAAO;AACjB,eAAKu7C,UAAL,GAAkBv7C,KAAlB;;AACA,eAAKq8C,aAAL;AACH;AACD;;;;;;;;;;;;4BASiB;AACb,iBAAO,KAAKhE,UAAL,KAAoB,QAApB,IAAgC,KAAKmG,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH;AACD;;;;;0BAIex+C,K,EAAO;AAClB,cAAIA,KAAK,KAAK,KAAKw+C,WAAnB,EAAgC;AAC5B,iBAAKA,WAAL,GAAmBx+C,KAAK,IAAI,KAAK07C,0BAAL,EAA5B;;AACA,iBAAKn3B,kBAAL,CAAwBqB,YAAxB;AACH;AACJ;AACD;;;;;;4BAGe;AACX;AACA;AACA,iBAAO,KAAK64B,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH;AACD;;;;;0BAIa3+C,K,EAAO;AAChB,eAAKy+C,yBAAL,GAAiCz+C,KAAjC;AACH;AACD;;;;;;4BAGkB;AACd,iBAAO,KAAK4+C,oBAAL,IAA6B,KAAKC,iBAAzC;AACH;;;;MAlJsBhE,sB;;AAwiB3BI,gBAAY,CAACx9C,IAAb,GAAoB,SAASqhD,oBAAT,CAA8BnhD,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAIs9C,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,+EAAzB,EAAmD,CAAnD,CAAzH,EAAgL,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAhL,EAAoO,gEAAyBF,8BAAzB,EAAyD,CAAzD,CAApO,EAAiS,gEAAyB,8DAAzB,CAAjS,EAA4U,gEAAyB,oDAAzB,CAA5U,EAAqX,gEAAyB,2FAAzB,EAAgD,CAAhD,CAArX,CAAP;AAAkb,KAAze;;AACAE,gBAAY,CAACj6B,IAAb,GAAoB,gEAAyB;AAAEnjB,UAAI,EAAEo9C,YAAR;AAAsB5kC,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuD8U,oBAAc,EAAE,SAAS4zB,2BAAT,CAAqC7/B,EAArC,EAAyCC,GAAzC,EAA8CkM,QAA9C,EAAwD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAClL,uEAAsBmM,QAAtB,EAAgCmuB,mBAAhC,EAAqD,IAArD;;AACA,6EAA4BnuB,QAA5B,EAAsCmuB,mBAAtC,EAA2D,IAA3D;;AACA,uEAAsBnuB,QAAtB,EAAgC4uB,QAAhC,EAA0C,IAA1C;;AACA,6EAA4B5uB,QAA5B,EAAsC4uB,QAAtC,EAAgD,IAAhD;;AACA,uEAAsB5uB,QAAtB,EAAgC8uB,cAAhC,EAAgD,IAAhD;;AACA,uEAAsB9uB,QAAtB,EAAgC8tB,QAAhC,EAA0C,IAA1C;;AACA,uEAAsB9tB,QAAtB,EAAgCyuB,OAAhC,EAAyC,IAAzC;;AACA,uEAAsBzuB,QAAtB,EAAgCgvB,SAAhC,EAA2C,IAA3C;;AACA,uEAAsBhvB,QAAtB,EAAgCkvB,SAAhC,EAA2C,IAA3C;AACH;;AAAC,YAAIr7B,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACu/B,iBAAJ,GAAwBv9B,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACw/B,cAAJ,GAAqBx9B,EAAE,CAACE,KAA7E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACy/B,oBAAJ,GAA2Bz9B,EAAE,CAACE,KAAnF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC0/B,iBAAJ,GAAwB19B,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACq9B,iBAAJ,GAAwBr7B,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACm9B,cAAJ,GAAqBn7B,EAA1E;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACi9B,aAAJ,GAAoBj7B,EAAzE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC+8B,eAAJ,GAAsB/6B,EAA3E;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACg9B,eAAJ,GAAsBh7B,EAA3E;AACH;AAAE,OArBsC;AAqBpCF,eAAS,EAAE,SAAS+9B,kBAAT,CAA4B9/B,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,oEAAmBO,GAAnB,EAAwB,IAAxB;;AACA,0EAAyBC,GAAzB,EAA8B,IAA9B;;AACA,oEAAmB2D,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB2V,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAI9Z,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC8/B,YAAJ,GAAmB99B,EAAE,CAACE,KAA3E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC08B,uBAAJ,GAA8B16B,EAAE,CAACE,KAAtF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC+/B,kBAAJ,GAAyB/9B,EAAE,CAACE,KAAjF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC49B,MAAJ,GAAa57B,EAAE,CAACE,KAArE;AACH;AAAE,OAhCsC;AAgCpCtC,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,CAhCyB;AAgCFuC,cAAQ,EAAE,EAhCR;AAgCYtC,kBAAY,EAAE,SAASmgC,yBAAT,CAAmCjgC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzH,oEAAmB,oCAAnB,EAAyDC,GAAG,CAACk5B,UAAJ,IAAkB,UAA3E,EAAuF,gCAAvF,EAAyHl5B,GAAG,CAACk5B,UAAJ,IAAkB,MAA3I,EAAmJ,mCAAnJ,EAAwLl5B,GAAG,CAACk5B,UAAJ,IAAkB,SAA1M,EAAqN,kCAArN,EAAyPl5B,GAAG,CAACk5B,UAAJ,IAAkB,QAA3Q,EAAqR,wBAArR,EAA+Sl5B,GAAG,CAACy4B,QAAJ,CAAa/kB,UAA5T,EAAwU,0BAAxU,EAAoW1T,GAAG,CAACu9B,cAAxW,EAAwX,6BAAxX,EAAuZv9B,GAAG,CAACy9B,iBAAJ,EAAvZ,EAAgb,0BAAhb,EAA4cz9B,GAAG,CAAC29B,iBAAJ,EAA5c,EAAqe,iCAAre,EAAwgB39B,GAAG,CAACigC,uBAAJ,EAAxgB,EAAuiB,yBAAviB,EAAkkBjgC,GAAG,CAACy4B,QAAJ,CAAaj3B,QAA/kB,EAAylB,2BAAzlB,EAAsnBxB,GAAG,CAACy4B,QAAJ,CAAayH,UAAnoB,EAA+oB,aAA/oB,EAA8pBlgC,GAAG,CAACy4B,QAAJ,CAAapoB,OAA3qB,EAAorB,YAAprB,EAAksBrQ,GAAG,CAACoB,KAAJ,IAAa,QAA/sB,EAAytB,UAAztB,EAAquBpB,GAAG,CAACoB,KAAJ,IAAa,MAAlvB,EAA0vB,cAA1vB,EAA0wBpB,GAAG,CAACmgC,cAAJ,CAAmB,WAAnB,CAA1wB,EAA2yB,YAA3yB,EAAyzBngC,GAAG,CAACmgC,cAAJ,CAAmB,SAAnB,CAAzzB,EAAw1B,aAAx1B,EAAu2BngC,GAAG,CAACmgC,cAAJ,CAAmB,UAAnB,CAAv2B,EAAu4B,UAAv4B,EAAm5BngC,GAAG,CAACmgC,cAAJ,CAAmB,OAAnB,CAAn5B,EAAg7B,UAAh7B,EAA47BngC,GAAG,CAACmgC,cAAJ,CAAmB,OAAnB,CAA57B,EAAy9B,YAAz9B,EAAu+BngC,GAAG,CAACmgC,cAAJ,CAAmB,SAAnB,CAAv+B,EAAsgC,YAAtgC,EAAohCngC,GAAG,CAACmgC,cAAJ,CAAmB,SAAnB,CAAphC,EAAmjC,yBAAnjC,EAA8kC,CAACngC,GAAG,CAACw8B,kBAAnlC;AACH;AAAE,OAlCsC;AAkCpC7iC,YAAM,EAAE;AAAEyH,aAAK,EAAE,OAAT;AAAkBk7B,kBAAU,EAAE,YAA9B;AAA4CpD,kBAAU,EAAE,YAAxD;AAAsEG,0BAAkB,EAAE,oBAA1F;AAAgHQ,iBAAS,EAAE;AAA3H,OAlC4B;AAkC8G1iC,cAAQ,EAAE,CAAC,cAAD,CAlCxH;AAkC0I0C,cAAQ,EAAE,CAAC,iEAA0B,CAChN;AAAEzX,eAAO,EAAEy5C,cAAX;AAA2Bp3B,mBAAW,EAAEq3B;AAAxC,OADgN,CAA1B,CAAD,EAErL,wEAFqL,CAlCpJ;AAoCGx5B,wBAAkB,EAAEy3B,GApCvB;AAoC4Bx3B,WAAK,EAAE,EApCnC;AAoCuCC,UAAI,EAAE,CApC7C;AAoCgDC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,wBAAJ,CAAD,EAAgC,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhC,EAAwE,CAAC,qBAAD,EAAwB,EAAxB,CAAxE,EAAqG,CAAC,CAAD,EAAI,MAAJ,CAArG,EAAkH,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAAlH,EAAiK,CAAC,CAAD,EAAI,sBAAJ,CAAjK,EAA8L,CAAC,gBAAD,EAAmB,EAAnB,CAA9L,EAAsN,CAAC,CAAD,EAAI,8BAAJ,CAAtN,EAA2P,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,2BAArC,EAAkE,IAAlE,EAAwE,WAAxE,EAAqF,sBAArF,EAA6G,YAA7G,EAA2H,UAA3H,EAAuI,UAAvI,EAAmJ,mBAAnJ,EAAwK,CAAxK,EAA2K,MAA3K,CAA3P,EAA+a,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA/a,EAA8d,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9d,EAAghB,CAAC,CAAD,EAAI,kCAAJ,EAAwC,CAAxC,EAA2C,UAA3C,CAAhhB,EAAwkB,CAAC,CAAD,EAAI,cAAJ,CAAxkB,EAA6lB,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,cAA5C,CAA7lB,EAA0pB,CAAC,CAAD,EAAI,wBAAJ,CAA1pB,EAAyrB,CAAC,CAAD,EAAI,8BAAJ,CAAzrB,EAA8tB,CAAC,CAAD,EAAI,4BAAJ,CAA9tB,EAAiwB,CAAC,CAAD,EAAI,4BAAJ,CAAjwB,EAAoyB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,8BAA9B,CAApyB,EAAm2B,CAAC,CAAD,EAAI,uBAAJ,CAAn2B,EAAi4B,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,2BAA/B,EAA4D,IAA5D,EAAkE,UAAlE,EAA8E,mBAA9E,CAAj4B,EAAq+B,CAAC,OAAD,EAAU,EAAV,CAAr+B,EAAo/B,CAAC,OAAD,EAAU,yDAAV,EAAqE,aAArE,EAAoF,MAApF,EAA4F,CAA5F,EAA+F,MAA/F,CAAp/B,EAA4lC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,0BAA3B,EAAuD,gCAAvD,CAA5lC,EAAsrC,CAAC,CAAD,EAAI,uBAAJ,CAAtrC,EAAotC,CAAC,CAAD,EAAI,0BAAJ,CAAptC,EAAqvC,CAAC,WAAD,EAAc,EAAd,CAArvC,EAAwwC,CAAC,CAAD,EAAI,uBAAJ,CAAxwC,EAAsyC,CAAC,CAAD,EAAI,6BAAJ,CAAtyC,EAA00C,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,EAAkC,MAAlC,CAA10C,EAAq3C,CAAC,CAAD,EAAI,4BAAJ,CAAr3C,EAAw5C,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,IAAnB,CAAx5C,CApCxD;AAoC2+CC,cAAQ,EAAE,SAAS09B,qBAAT,CAA+BrgC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChlD,wEAAuB+Z,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASumB,0CAAT,CAAoD38B,MAApD,EAA4D;AAAE,mBAAO1D,GAAG,CAACy4B,QAAJ,CAAa6H,gBAAb,IAAiCtgC,GAAG,CAACy4B,QAAJ,CAAa6H,gBAAb,CAA8B58B,MAA9B,CAAxC;AAAgF,WAAzK;;AACA,mEAAkB,CAAlB,EAAqB40B,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,cAAjE,EAAiF,CAAjF;;AACA,mEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,mEAAkB,CAAlB,EAAqBK,6BAArB,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,OAA3D,EAAoE,CAApE;;AACA;;AACA;;AACA,mEAAkB,EAAlB,EAAsBU,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;;AACA;;AACA,mEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,mEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,mEAAkB,EAAlB,EAAsBM,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA;;AACA;AACH;;AAAC,YAAI/5B,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BC,GAAG,CAACk5B,UAAJ,IAAkB,SAA5C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bl5B,GAAG,CAAC+8B,eAAJ,CAAoB17C,MAA9C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B2e,GAAG,CAAC29B,iBAAJ,EAA1B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B39B,GAAG,CAACg9B,eAAJ,CAAoB37C,MAA9C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B2e,GAAG,CAACk5B,UAAJ,IAAkB,SAA5C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8Bl5B,GAAG,CAACi+B,qBAAJ,EAA9B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,OAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,MAAlC;AACH;AAAE,OA1EsC;AA0EpCp7B,gBAAU,EAAE,CAAC,oDAAD,EAAc,wDAAd,EAA+B,4DAA/B,EAAoD,wEAApD,CA1EwB;AA0EuD5S,YAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa,CA1E/D;AA0E40c6S,mBAAa,EAAE,CA1E31c;AA0E81comB,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAACgR,sBAAsB,CAACC,kBAAxB;AAAb,OA1Ep2c;AA0Eg6cr3B,qBAAe,EAAE;AA1Ej7c,KAAzB,CAApB;AA2EA;;AACA+4B,gBAAY,CAACr9C,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEC,YAAI,EAAE;AAAR,OADgC,EAEhC;AAAEA,YAAI,EAAE;AAAR,OAFgC,EAGhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,+EAAD;AAAtB,SAArB;AAA/B,OAHgC,EAIhC;AAAEH,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAJgC,EAKhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC+8C,8BAAD;AAAtB,SAArB;AAA/B,OALgC,EAMhC;AAAEl9C,YAAI,EAAE;AAAR,OANgC,EAOhC;AAAEA,YAAI,EAAE;AAAR,OAPgC,EAQhC;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,2FAAD;AAAtB,SAArB;AAA5B,OARgC,CAAN;AAAA,KAA9B;;AAUAi9C,gBAAY,CAAChiC,cAAb,GAA8B;AAC1Bo/B,gBAAU,EAAE,CAAC;AAAEx6C,YAAI,EAAE;AAAR,OAAD,CADc;AAE1B26C,wBAAkB,EAAE,CAAC;AAAE36C,YAAI,EAAE;AAAR,OAAD,CAFM;AAG1Bm7C,eAAS,EAAE,CAAC;AAAEn7C,YAAI,EAAE;AAAR,OAAD,CAHe;AAI1B49C,gBAAU,EAAE,CAAC;AAAE59C,YAAI,EAAE;AAAR,OAAD,CAJc;AAK1BohD,kBAAY,EAAE,CAAC;AAAEphD,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,WAAD;AAAzB,OAAD,CALY;AAM1B69C,6BAAuB,EAAE,CAAC;AAAEh+C,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,oBAAQ;AAAV,SAAxB;AAAzB,OAAD,CANC;AAO1BkhD,wBAAkB,EAAE,CAAC;AAAErhD,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,gBAAD;AAAzB,OAAD,CAPM;AAQ1B++C,YAAM,EAAE,CAAC;AAAEl/C,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CARkB;AAS1B0gD,uBAAiB,EAAE,CAAC;AAAE7gD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACw7C,mBAAD;AAA5B,OAAD,CATO;AAU1BmF,oBAAc,EAAE,CAAC;AAAE9gD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACw7C,mBAAD,EAAsB;AAAE,oBAAQ;AAAV,SAAtB;AAA5B,OAAD,CAVU;AAW1BoF,0BAAoB,EAAE,CAAC;AAAE/gD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACi8C,QAAD;AAA5B,OAAD,CAXI;AAY1B4E,uBAAiB,EAAE,CAAC;AAAEhhD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACi8C,QAAD,EAAW;AAAE,oBAAQ;AAAV,SAAX;AAA5B,OAAD,CAZO;AAa1BuC,uBAAiB,EAAE,CAAC;AAAE3+C,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACm8C,cAAD;AAA5B,OAAD,CAbO;AAc1BmC,oBAAc,EAAE,CAAC;AAAEz+C,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACm7C,QAAD,EAAW;AAAElmB,qBAAW,EAAE;AAAf,SAAX;AAA/B,OAAD,CAdU;AAe1BmpB,mBAAa,EAAE,CAAC;AAAEv+C,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC87C,OAAD,EAAU;AAAE7mB,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CAfW;AAgB1BipB,qBAAe,EAAE,CAAC;AAAEr+C,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACq8C,SAAD,EAAY;AAAEpnB,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD,CAhBS;AAiB1BkpB,qBAAe,EAAE,CAAC;AAAEt+C,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACu8C,SAAD,EAAY;AAAEtnB,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD;AAjBS,KAA9B;AAmBA;;AAAc,KAAC,YAAY;AAAE,sEAAyBgoB,YAAzB,EAAuC,CAAC;AAC7Dp9C,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gBADX;AAECsK,kBAAQ,EAAE,cAFX;AAGCuL,kBAAQ,EAAE,u5HAHX;AAIC0mB,oBAAU,EAAE,CAAC+Q,sBAAsB,CAACC,kBAAxB,CAJb;AAKCnkC,cAAI,EAAE;AACF,qBAAS,gBADP;AAEF,0DAA8C,0BAF5C;AAGF,sDAA0C,sBAHxC;AAIF,yDAA6C,yBAJ3C;AAKF,wDAA4C,wBAL1C;AAMF,8CAAkC,qBANhC;AAOF,gDAAoC,gBAPlC;AAQF,mDAAuC,qBARrC;AASF,gDAAoC,qBATlC;AAUF,uDAA2C,2BAVzC;AAWF,+CAAmC,mBAXjC;AAYF,iDAAqC,qBAZnC;AAaF,mCAAuB,kBAbrB;AAcF,kCAAsB,mBAdpB;AAeF,gCAAoB,iBAflB;AAgBF,oCAAwB,6BAhBtB;AAiBF,kCAAsB,2BAjBpB;AAkBF,mCAAuB,4BAlBrB;AAmBF,gCAAoB,yBAnBlB;AAoBF,gCAAoB,yBApBlB;AAqBF,kCAAsB,2BArBpB;AAsBF,kCAAsB,2BAtBpB;AAuBF,+CAAmC;AAvBjC,WALP;AA8BC0D,gBAAM,EAAE,CAAC,OAAD,CA9BT;AA+BCmJ,uBAAa,EAAE,gEAAkBG,IA/BlC;AAgCCF,yBAAe,EAAE,sEAAwBG,MAhC1C;AAiCC7I,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAEy5C,cAAX;AAA2Bp3B,uBAAW,EAAEq3B;AAAxC,WADO,CAjCZ;AAoCC7rC,gBAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa;AApCT,SAAD;AAFuD,OAAD,CAAvC,EAwCrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC/GF,gBAAI,EAAE;AADyG,WAAD,EAE/G;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,+EAAD;AAFP,WAF+G;AAA/B,SAAlE,EAKX;AAAEH,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SALW,EAOX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC+8C,8BAAD;AAFP,WAFkC;AAA/B,SAPW,EAYX;AAAEl9C,cAAI,EAAE;AAAR,SAZW,EAYgB;AAAEA,cAAI,EAAE;AAAR,SAZhB,EAYyC;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACnFF,gBAAI,EAAE;AAD6E,WAAD,EAEnF;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,2FAAD;AAFP,WAFmF;AAA5B,SAZzC,CAAP;AAiBF,OAzDS,EAyDP;AAAEy9C,kBAAU,EAAE,CAAC;AACzB59C,cAAI,EAAE;AADmB,SAAD,CAAd;AAEVw6C,kBAAU,EAAE,CAAC;AACbx6C,cAAI,EAAE;AADO,SAAD,CAFF;AAIV26C,0BAAkB,EAAE,CAAC;AACrB36C,cAAI,EAAE;AADe,SAAD,CAJV;AAMVm7C,iBAAS,EAAE,CAAC;AACZn7C,cAAI,EAAE;AADM,SAAD,CAND;AAQVohD,oBAAY,EAAE,CAAC;AACfphD,cAAI,EAAE,uDADS;AAEfG,cAAI,EAAE,CAAC,WAAD;AAFS,SAAD,CARJ;AAWV69C,+BAAuB,EAAE,CAAC;AAC1Bh+C,cAAI,EAAE,uDADoB;AAE1BG,cAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,sBAAQ;AAAV,WAAxB;AAFoB,SAAD,CAXf;AAcVkhD,0BAAkB,EAAE,CAAC;AACrBrhD,cAAI,EAAE,uDADe;AAErBG,cAAI,EAAE,CAAC,gBAAD;AAFe,SAAD,CAdV;AAiBV++C,cAAM,EAAE,CAAC;AACTl/C,cAAI,EAAE,uDADG;AAETG,cAAI,EAAE,CAAC,OAAD;AAFG,SAAD,CAjBE;AAoBV0gD,yBAAiB,EAAE,CAAC;AACpB7gD,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAACw7C,mBAAD;AAFc,SAAD,CApBT;AAuBVmF,sBAAc,EAAE,CAAC;AACjB9gD,cAAI,EAAE,0DADW;AAEjBG,cAAI,EAAE,CAACw7C,mBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAFW,SAAD,CAvBN;AA0BVoF,4BAAoB,EAAE,CAAC;AACvB/gD,cAAI,EAAE,0DADiB;AAEvBG,cAAI,EAAE,CAACi8C,QAAD;AAFiB,SAAD,CA1BZ;AA6BV4E,yBAAiB,EAAE,CAAC;AACpBhhD,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAACi8C,QAAD,EAAW;AAAE,sBAAQ;AAAV,WAAX;AAFc,SAAD,CA7BT;AAgCVuC,yBAAiB,EAAE,CAAC;AACpB3+C,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAACm8C,cAAD;AAFc,SAAD,CAhCT;AAmCVmC,sBAAc,EAAE,CAAC;AACjBz+C,cAAI,EAAE,6DADW;AAEjBG,cAAI,EAAE,CAACm7C,QAAD,EAAW;AAAElmB,uBAAW,EAAE;AAAf,WAAX;AAFW,SAAD,CAnCN;AAsCVmpB,qBAAa,EAAE,CAAC;AAChBv+C,cAAI,EAAE,6DADU;AAEhBG,cAAI,EAAE,CAAC87C,OAAD,EAAU;AAAE7mB,uBAAW,EAAE;AAAf,WAAV;AAFU,SAAD,CAtCL;AAyCVipB,uBAAe,EAAE,CAAC;AAClBr+C,cAAI,EAAE,6DADY;AAElBG,cAAI,EAAE,CAACq8C,SAAD,EAAY;AAAEpnB,uBAAW,EAAE;AAAf,WAAZ;AAFY,SAAD,CAzCP;AA4CVkpB,uBAAe,EAAE,CAAC;AAClBt+C,cAAI,EAAE,6DADY;AAElBG,cAAI,EAAE,CAACu8C,SAAD,EAAY;AAAEtnB,uBAAW,EAAE;AAAf,WAAZ;AAFY,SAAD;AA5CP,OAzDO;AAwGb,KAxGF;;AAyGd,QAAI,KAAJ,EAAW,CAgIV;AAED;;;;;;;QAKMysB,kB;;;;AAENA,sBAAkB,CAACrmC,IAAnB,GAA0B,+DAAwB;AAAExb,UAAI,EAAE6hD;AAAR,KAAxB,CAA1B;AACAA,sBAAkB,CAACpmC,IAAnB,GAA0B,+DAAwB;AAAEpb,aAAO,EAAE,SAASyhD,0BAAT,CAAoChiD,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAI+hD,kBAAV,GAAP;AAAyC,OAA7F;AAA+FjmC,aAAO,EAAE,CAAC,CAC/I,4DAD+I,EAE/I,sEAF+I,CAAD;AAAxG,KAAxB,CAA1B;;AAIA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BgmC,kBAA1B,EAA8C;AAAE/lC,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACw/B,QAAD,EAC7I8B,YAD6I,EAE7InB,OAF6I,EAG7IG,QAH6I,EAI7IE,cAJ6I,EAK7IE,SAL6I,EAM7IE,SAN6I,CAAP;AAMzH,SAN2F;AAMzF9gC,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAC7C,sEAD6C,CAAP;AACnB,SAPqF;AAOnFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACu/B,QAAD,EACnD8B,YADmD,EAEnDnB,OAFmD,EAGnDG,QAHmD,EAInDE,cAJmD,EAKnDE,SALmD,EAMnDE,SANmD,CAAP;AAM/B;AAb2F,OAA9C,CAAnD;AAaY,KAb3B;AAcA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBmF,kBAAzB,EAA6C,CAAC;AACnE7hD,YAAI,EAAE,sDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CACVw/B,QADU,EAEV8B,YAFU,EAGVnB,OAHU,EAIVG,QAJU,EAKVE,cALU,EAMVE,SANU,EAOVE,SAPU,CADf;AAUC9gC,iBAAO,EAAE,CACL,4DADK,EAEL,sEAFK,CAVV;AAcCG,iBAAO,EAAE,CACLu/B,QADK,EAEL8B,YAFK,EAGLnB,OAHK,EAILG,QAJK,EAKLE,cALK,EAMLE,SANK,EAOLE,SAPK;AAdV,SAAD;AAF6D,OAAD,CAA7C,EA0BrB,IA1BqB,EA0Bf,IA1Be;AA0BP,KA1BR;AA4Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACx9CA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;AAKA;;;;;;;;;AAWA,QAAM96B,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASmgC,2BAAT,CAAqCC,QAArC,EAA+C;AAC3C,aAAO7lD,KAAK,+CAAuC6lD,QAAvC,QAAZ;AACH;AACD;;;;;;;;AAMA,aAASC,6BAAT,GAAyC;AACrC,aAAO9lD,KAAK,CAAC,6EACT,wEADS,GAET,cAFQ,CAAZ;AAGH;AACD;;;;;;;;AAMA,aAAS+lD,kCAAT,CAA4CC,GAA5C,EAAiD;AAC7C,aAAOhmD,KAAK,CAAC,qIACyCgmD,GADzC,QAAD,CAAZ;AAEH;AACD;;;;;;;;AAMA,aAASC,sCAAT,CAAgDC,OAAhD,EAAyD;AACrD,aAAOlmD,KAAK,CAAC,uIACyCkmD,OADzC,QAAD,CAAZ;AAEH;AACD;;;;;;AAIA,aAASC,WAAT,GAAuB,CAAG;;AAC1B,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;QAIMC,a;AACF;;;;AAIA,2BAAY/X,IAAZ,EAAkB7nB,OAAlB,EAA2B;AAAA;;AACvB,WAAKA,OAAL,GAAeA,OAAf,CADuB,CAEvB;AACA;;AACA,UAAI,CAAC;AAAG;AAAkB6nB,UAApB,CAA4Bjc,QAAlC,EAA4C;AACxC,aAAKi0B,UAAL;AAAmB;AAAkBhY,YAArC;AACH,OAFD,MAGK;AACD,aAAK2X,GAAL;AAAY;AAAkB3X,YAA9B;AACH;AACJ,K;;AAEL,QAAI,KAAJ,EAAW,CAOV;AACD;;;;;;;;;QAOMiY,e;AACF;;;;;;AAMA,+BAAYC,WAAZ,EAAyBC,UAAzB,EAAqCzoD,QAArC,EAA+C0oD,aAA/C,EAA8D;AAAA;;AAC1D,aAAKF,WAAL,GAAmBA,WAAnB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,IAAItlC,GAAJ,EAAvB;AACA;;;;;AAIA,aAAKulC,eAAL,GAAuB,IAAIvlC,GAAJ,EAAvB;AACA;;;;AAGA,aAAKwlC,iBAAL,GAAyB,IAAIxlC,GAAJ,EAAzB;AACA;;;;AAGA,aAAKylC,qBAAL,GAA6B,IAAIzlC,GAAJ,EAA7B;AACA;;;;AAGA,aAAK0lC,sBAAL,GAA8B,IAAI1lC,GAAJ,EAA9B;AACA;;;;;;AAKA,aAAK2lC,oBAAL,GAA4B,gBAA5B;AACA,aAAK3oD,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;;;;;;;mCASW8nD,Q,EAAUG,G,EAAKx/B,O,EAAS;AAC/B,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BwgC,qBAA1B,CAAgD,EAAhD,EAAoDnB,QAApD,EAA8DG,GAA9D,EAAmEx/B,OAAnE;AAAP;AACH;AACD;;;;;;;;;;;;0CASkBq/B,Q,EAAUK,O,EAAS1/B,O,EAAS;AAC1C,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BygC,4BAA1B,CAAuD,EAAvD,EAA2DpB,QAA3D,EAAqEK,OAArE,EAA8E1/B,OAA9E;AAAP;AACH;AACD;;;;;;;;;;;;;8CAUsB0gC,S,EAAWrB,Q,EAAUG,G,EAAKx/B,O,EAAS;AACrD,iBAAO;AAAC;AAAkB,gBAAnB,CAA0B2gC,iBAA1B,CAA4CD,SAA5C,EAAuDrB,QAAvD,EAAiE,IAAIO,aAAJ,CAAkBJ,GAAlB,EAAuBx/B,OAAvB,CAAjE;AAAP;AACH;AACD;;;;;;;;;;;;;qDAU6B0gC,S,EAAWrB,Q,EAAUK,O,EAAS1/B,O,EAAS;AAChE;AACA,cAAM4gC,gBAAgB;AAAI;AAAkB,cAAnB,CAA0BZ,UAA1B,CAAqCa,QAArC,CAA8C,8DAAgBC,IAA9D,EAAoEpB,OAApE,CAAzB;;AACA,cAAI,CAACkB,gBAAL,EAAuB;AACnB,kBAAMnB,sCAAsC,CAACC,OAAD,CAA5C;AACH;AACD;;;AACA,cAAMG,UAAU;AAAI;AAAkB,cAAnB,CAA0BkB,8BAA1B,CAAyDH,gBAAzD,EAA2E5gC,OAA3E,CAAnB;;AACA,iBAAO;AAAC;AAAkB,gBAAnB,CAA0B2gC,iBAA1B,CAA4CD,SAA5C,EAAuDrB,QAAvD,EAAiE,IAAIO,aAAJ,CAAkBC,UAAlB,EAA8B7/B,OAA9B,CAAjE;AAAP;AACH;AACD;;;;;;;;;;;sCAQcw/B,G,EAAKx/B,O,EAAS;AACxB,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BghC,wBAA1B,CAAmD,EAAnD,EAAuDxB,GAAvD,EAA4Dx/B,OAA5D;AAAP;AACH;AACD;;;;;;;;;;;6CAQqB0/B,O,EAAS1/B,O,EAAS;AACnC,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BihC,+BAA1B,CAA0D,EAA1D,EAA8DvB,OAA9D,EAAuE1/B,OAAvE;AAAP;AACH;AACD;;;;;;;;;;;;iDASyB0gC,S,EAAWlB,G,EAAKx/B,O,EAAS;AAC9C,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BkhC,oBAA1B,CAA+CR,SAA/C,EAA0D,IAAId,aAAJ,CAAkBJ,GAAlB,EAAuBx/B,OAAvB,CAA1D;AAAP;AACH;AACD;;;;;;;;;;;;wDASgC0gC,S,EAAWhB,O,EAAS1/B,O,EAAS;AACzD;AACA,cAAM4gC,gBAAgB;AAAI;AAAkB,cAAnB,CAA0BZ,UAA1B,CAAqCa,QAArC,CAA8C,8DAAgBC,IAA9D,EAAoEpB,OAApE,CAAzB;;AACA,cAAI,CAACkB,gBAAL,EAAuB;AACnB,kBAAMnB,sCAAsC,CAACC,OAAD,CAA5C;AACH;AACD;;;AACA,cAAMG,UAAU;AAAI;AAAkB,cAAnB,CAA0BsB,qBAA1B,CAAgDP,gBAAhD,CAAnB;;AACA,iBAAO;AAAC;AAAkB,gBAAnB,CAA0BM,oBAA1B,CAA+CR,SAA/C,EAA0D,IAAId,aAAJ,CAAkBC,UAAlB,EAA8B7/B,OAA9B,CAA1D;AAAP;AACH;AACD;;;;;;;;;;;;;;+CAWuBohC,K,EAA0B;AAAA,cAAnBC,SAAmB,uEAAPD,KAAO;;AAC5C;AAAkB,cAAnB,CAA0Bd,sBAA1B,CAAiDjlC,GAAjD,CAAqD+lC,KAArD,EAA4DC,SAA5D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;8CAMsBD,K,EAAO;AACzB,iBAAO,KAAKd,sBAAL,CAA4BjrC,GAA5B,CAAgC+rC,KAAhC,KAA0CA,KAAjD;AACH;AACD;;;;;;;;;;;;+CASuBC,S,EAAW;AAC7B;AAAkB,cAAnB,CAA0Bd,oBAA1B,GAAiDc,SAAjD;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;iDAKyB;AACrB,iBAAO,KAAKd,oBAAZ;AACH;AACD;;;;;;;;;;;;0CASkBe,O,EAAS;AAAA;;AACvB;AACA,cAAM9B,GAAG,GAAG,KAAKQ,UAAL,CAAgBa,QAAhB,CAAyB,8DAAgBU,YAAzC,EAAuDD,OAAvD,CAAZ;;AACA,cAAI,CAAC9B,GAAL,EAAU;AACN,kBAAMD,kCAAkC,CAAC+B,OAAD,CAAxC;AACH;AACD;;;AACA,cAAME,UAAU,GAAG,KAAKpB,iBAAL,CAAuB/qC,GAAvB,CAA2BmqC,GAA3B,CAAnB;;AACA,cAAIgC,UAAJ,EAAgB;AACZ,mBAAO,gDAAGC,QAAQ,CAACD,UAAD,CAAX,CAAP;AACH;;AACD,iBAAO,KAAKE,sBAAL,CAA4B,IAAI9B,aAAJ,CAAkB0B,OAAlB,CAA5B,EAAwDj9C,IAAxD,CAA6D;AAAK;;;;AAIzE,oBAAAs9C,GAAG;AAAA,mBAAI,OAAI,CAACvB,iBAAL,CAAuB/kC,GAAvB;AAA4B;AAAkBmkC,eAA9C,EAAqDmC,GAArD,CAAJ;AAAA,WAJiE,CAA7D,EAI6D;AAAK;;;;AAIzE,oBAAAA,GAAG;AAAA,mBAAIF,QAAQ,CAACE,GAAD,CAAZ;AAAA,WAJiE,CAJ7D,CAAP;AASH;AACD;;;;;;;;;;;;wCASgBr9B,I,EAAsB;AAAA,cAAhBo8B,SAAgB,uEAAJ,EAAI;AAClC;;AACA;AACA,cAAMpiD,GAAG,GAAGsjD,OAAO,CAAClB,SAAD,EAAYp8B,IAAZ,CAAnB;AACA;;AACA,cAAMxnB,MAAM,GAAG,KAAKojD,eAAL,CAAqB7qC,GAArB,CAAyB/W,GAAzB,CAAf;;AACA,cAAIxB,MAAJ,EAAY;AACR,mBAAO,KAAK+kD,iBAAL,CAAuB/kD,MAAvB,CAAP;AACH,WARiC,CASlC;;AACA;;;AACA,cAAMglD,cAAc,GAAG,KAAK3B,eAAL,CAAqB9qC,GAArB,CAAyBqrC,SAAzB,CAAvB;;AACA,cAAIoB,cAAJ,EAAoB;AAChB,mBAAO,KAAKC,yBAAL,CAA+Bz9B,IAA/B,EAAqCw9B,cAArC,CAAP;AACH;;AACD,iBAAO,wDAAW1C,2BAA2B,CAAC9gD,GAAD,CAAtC,CAAP;AACH;AACD;;;;;;sCAGc;AACV,eAAK4hD,eAAL,CAAqB/vB,KAArB;;AACA,eAAKgwB,eAAL,CAAqBhwB,KAArB;;AACA,eAAKiwB,iBAAL,CAAuBjwB,KAAvB;AACH;AACD;;;;;;;;;0CAMkBrzB,M,EAAQ;AACtB,cAAIA,MAAM,CAAC+iD,UAAX,EAAuB;AACnB;AACA,mBAAO,gDAAG4B,QAAQ,CAAC3kD,MAAM,CAAC+iD,UAAR,CAAX,CAAP;AACH,WAHD,MAIK;AACD;AACA,mBAAO,KAAK6B,sBAAL,CAA4B5kD,MAA5B,EAAoCuH,IAApC,CAAyC;AAAK;;;;AAIrD,sBAAAs9C,GAAG;AAAA,qBAAI7kD,MAAM,CAAC+iD,UAAP,GAAoB8B,GAAxB;AAAA,aAJ6C,CAAzC,EAI2B;AAAK;;;;AAIvC,sBAAAA,GAAG;AAAA,qBAAIF,QAAQ,CAACE,GAAD,CAAZ;AAAA,aAJ+B,CAJ3B,CAAP;AASH;AACJ;AACD;;;;;;;;;;;;;;;kDAY0Br9B,I,EAAMw9B,c,EAAgB;AAAA;;AAC5C;AACA;;AACA;AACA,cAAME,SAAS,GAAG,KAAKC,8BAAL,CAAoC39B,IAApC,EAA0Cw9B,cAA1C,CAAlB;;AACA,cAAIE,SAAJ,EAAe;AACX;AACA;AACA;AACA,mBAAO,gDAAGA,SAAH,CAAP;AACH,WAV2C,CAW5C;AACA;;AACA;;;AACA,cAAME,oBAAoB,GAAGJ,cAAc,CACtCK,MADwB;AAChB;;;;AAIb,oBAAAC,aAAa;AAAA,mBAAI,CAACA,aAAa,CAACvC,UAAnB;AAAA,WALgB,EAMxB7vC,GANwB;AAMnB;;;;AAIV,oBAAAoyC,aAAa,EAAI;AACb,mBAAO,OAAI,CAACC,yBAAL,CAA+BD,aAA/B,EAA8C/9C,IAA9C,CAAmD;AAAY;;;;AAItE,sBAACi+C,GAAD,EAAS;AACL;AACA,kBAAM9C,GAAG,GAAG,OAAI,CAACQ,UAAL,CAAgBa,QAAhB,CAAyB,8DAAgBU,YAAzC,EAAuDa,aAAa,CAAC5C,GAArE,CAAZ,CAFK,CAGL;AACA;;AACA;;;AACA,kBAAM+C,YAAY,mCAA4B/C,GAA5B,sBAA2C8C,GAAG,CAACE,OAA/C,CAAlB,CANK,CAOL;;AACA,kBAAI,OAAI,CAACvC,aAAT,EAAwB;AACpB,uBAAI,CAACA,aAAL,CAAmBwC,WAAnB,CAA+B,IAAIjpD,KAAJ,CAAU+oD,YAAV,CAA/B;AACH,eAFD,MAGK;AACDG,uBAAO,CAAC7F,KAAR,CAAc0F,YAAd;AACH;;AACD,qBAAO,gDAAG,IAAH,CAAP;AACH,aAnByD,CAAnD,CAAP;AAoBH,WA/B4B,CAA7B,CAd4C,CA8C5C;AACA;;AACA,iBAAO,sDAASL,oBAAT,EAA+B79C,IAA/B,CAAoC;AAAK;;;AAGhD,sBAAM;AACF;AACA,gBAAMs+C,SAAS,GAAG,OAAI,CAACV,8BAAL,CAAoC39B,IAApC,EAA0Cw9B,cAA1C,CAAlB;;AACA,gBAAI,CAACa,SAAL,EAAgB;AACZ,oBAAMvD,2BAA2B,CAAC96B,IAAD,CAAjC;AACH;;AACD,mBAAOq+B,SAAP;AACH,WAV0C,CAApC,CAAP;AAWH;AACD;;;;;;;;;;;;uDAS+BtD,Q,EAAUyC,c,EAAgB;AACrD;AACA,eAAK,IAAI/hD,CAAC,GAAG+hD,cAAc,CAAC9hD,MAAf,GAAwB,CAArC,EAAwCD,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACjD;AACA,gBAAMjD,MAAM,GAAGglD,cAAc,CAAC/hD,CAAD,CAA7B;;AACA,gBAAIjD,MAAM,CAAC+iD,UAAX,EAAuB;AACnB;AACA,kBAAM8C,SAAS,GAAG,KAAKC,sBAAL,CAA4B9lD,MAAM,CAAC+iD,UAAnC,EAA+CR,QAA/C,EAAyDviD,MAAM,CAACkjB,OAAhE,CAAlB;;AACA,kBAAI2iC,SAAJ,EAAe;AACX,uBAAOA,SAAP;AACH;AACJ;AACJ;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;;;;;+CAOuB7lD,M,EAAQ;AAAA;;AAC3B,iBAAO,KAAK+lD,SAAL,CAAe/lD,MAAM,CAAC0iD,GAAtB,EACFn7C,IADE,CACG;AAAK;;;;AAIf,oBAAAy+C,OAAO;AAAA,mBAAI,OAAI,CAAC/B,8BAAL,CAAoC+B,OAApC,EAA6ChmD,MAAM,CAACkjB,OAApD,CAAJ;AAAA,WAJG,CADH,CAAP;AAMH;AACD;;;;;;;;;;kDAO0BljB,M,EAAQ;AAAA;;AAC9B;AACA,cAAIA,MAAM,CAAC+iD,UAAX,EAAuB;AACnB,mBAAO,gDAAG/iD,MAAM,CAAC+iD,UAAV,CAAP;AACH;;AACD,iBAAO,KAAKgD,SAAL,CAAe/lD,MAAM,CAAC0iD,GAAtB,EAA2Bn7C,IAA3B,CAAgC;AAAK;;;;AAI5C,oBAAAy+C,OAAO,EAAI;AACP;AACA;AACA,gBAAI,CAAChmD,MAAM,CAAC+iD,UAAZ,EAAwB;AACpB/iD,oBAAM,CAAC+iD,UAAP,GAAoB,OAAI,CAACsB,qBAAL,CAA2B2B,OAA3B,CAApB;AACH;;AACD,mBAAOhmD,MAAM,CAAC+iD,UAAd;AACH,WAXsC,CAAhC,CAAP;AAYH;AACD;;;;;;;;;;uDAO+BkD,Y,EAAc/iC,O,EAAS;AAClD;AACA,cAAM2hC,GAAG,GAAG,KAAKR,qBAAL,CAA2B4B,YAA3B,CAAZ;;AACA,eAAKC,iBAAL,CAAuBrB,GAAvB,EAA4B3hC,OAA5B;;AACA,iBAAO2hC,GAAP;AACH;AACD;;;;;;;;;;;;;+CAUuBsB,O,EAAS5D,Q,EAAUr/B,O,EAAS;AAC/C;AACA;;AACA;AACA,cAAMkjC,UAAU,GAAGD,OAAO,CAAC9oB,aAAR,iBAA8BklB,QAA9B,SAAnB;;AACA,cAAI,CAAC6D,UAAL,EAAiB;AACb,mBAAO,IAAP;AACH,WAP8C,CAQ/C;AACA;;AACA;;;AACA,cAAMC,WAAW;AAAI;AAAkBD,oBAAU,CAACtmC,SAAX,CAAqB,IAArB,CAAvC;AACAumC,qBAAW,CAACpO,eAAZ,CAA4B,IAA5B,EAZ+C,CAa/C;AACA;;AACA,cAAIoO,WAAW,CAACv3B,QAAZ,CAAqB7B,WAArB,OAAuC,KAA3C,EAAkD;AAC9C,mBAAO,KAAKi5B,iBAAL;AAAwB;AAAkBG,uBAA1C,EAAyDnjC,OAAzD,CAAP;AACH,WAjB8C,CAkB/C;AACA;AACA;;;AACA,cAAImjC,WAAW,CAACv3B,QAAZ,CAAqB7B,WAArB,OAAuC,QAA3C,EAAqD;AACjD,mBAAO,KAAKi5B,iBAAL,CAAuB,KAAKI,aAAL,CAAmBD,WAAnB,CAAvB,EAAwDnjC,OAAxD,CAAP;AACH,WAvB8C,CAwB/C;AACA;AACA;AACA;AACA;;AACA;;;AACA,cAAM2hC,GAAG,GAAG,KAAKR,qBAAL,CAA2B,aAA3B,CAAZ,CA9B+C,CA+B/C;;;AACAQ,aAAG,CAACz/C,WAAJ,CAAgBihD,WAAhB;AACA,iBAAO,KAAKH,iBAAL,CAAuBrB,GAAvB,EAA4B3hC,OAA5B,CAAP;AACH;AACD;;;;;;;;;8CAMsBqjC,G,EAAK;AACvB;AACA,cAAMC,GAAG,GAAG,KAAK1rD,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAZ;;AACAshD,aAAG,CAACC,SAAJ,GAAgBF,GAAhB;AACA;;AACA,cAAM1B,GAAG;AAAI;AAAkB2B,aAAG,CAACnpB,aAAJ,CAAkB,KAAlB,CAA/B;;AACA,cAAI,CAACwnB,GAAL,EAAU;AACN,kBAAMnoD,KAAK,CAAC,qBAAD,CAAX;AACH;;AACD,iBAAOmoD,GAAP;AACH;AACD;;;;;;;;;sCAMczmD,O,EAAS;AACnB;AACA,cAAMymD,GAAG,GAAG,KAAKR,qBAAL,CAA2B,aAA3B,CAAZ;AACA;;;AACA,cAAM/gC,UAAU,GAAGllB,OAAO,CAACklB,UAA3B,CAJmB,CAKnB;;AACA,eAAK,IAAIrgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqgB,UAAU,CAACpgB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAAA,gCAChBqgB,UAAU,CAACrgB,CAAD,CADM;AAAA,gBAChCukB,IADgC,iBAChCA,IADgC;AAAA,gBAC1B9kB,KAD0B,iBAC1BA,KAD0B;;AAExC,gBAAI8kB,IAAI,KAAK,IAAb,EAAmB;AACfq9B,iBAAG,CAAC1/C,YAAJ,CAAiBqiB,IAAjB,EAAuB9kB,KAAvB;AACH;AACJ;;AACD,eAAK,IAAIO,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG7E,OAAO,CAACsoD,UAAR,CAAmBxjD,MAAvC,EAA+CD,GAAC,EAAhD,EAAoD;AAChD,gBAAI7E,OAAO,CAACsoD,UAAR,CAAmBzjD,GAAnB,EAAsB0jD,QAAtB,KAAmC,KAAK7rD,SAAL,CAAe8rD,YAAtD,EAAoE;AAChE/B,iBAAG,CAACz/C,WAAJ,CAAgBhH,OAAO,CAACsoD,UAAR,CAAmBzjD,GAAnB,EAAsB6c,SAAtB,CAAgC,IAAhC,CAAhB;AACH;AACJ;;AACD,iBAAO+kC,GAAP;AACH;AACD;;;;;;;;;;0CAOkBA,G,EAAK3hC,O,EAAS;AAC5B2hC,aAAG,CAAC1/C,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB;AACA0/C,aAAG,CAAC1/C,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;AACA0/C,aAAG,CAAC1/C,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B;AACA0/C,aAAG,CAAC1/C,YAAJ,CAAiB,qBAAjB,EAAwC,eAAxC;AACA0/C,aAAG,CAAC1/C,YAAJ,CAAiB,WAAjB,EAA8B,OAA9B,EAL4B,CAKY;;AACxC,cAAI+d,OAAO,IAAIA,OAAO,CAAC2jC,OAAvB,EAAgC;AAC5BhC,eAAG,CAAC1/C,YAAJ,CAAiB,SAAjB,EAA4B+d,OAAO,CAAC2jC,OAApC;AACH;;AACD,iBAAOhC,GAAP;AACH;AACD;;;;;;;;;;kCAOUL,O,EAAS;AAAA;;AACf,cAAI,CAAC,KAAKvB,WAAV,EAAuB;AACnB,kBAAMT,6BAA6B,EAAnC;AACH;;AACD,cAAIgC,OAAO,IAAI,IAAf,EAAqB;AACjB,kBAAM9nD,KAAK,wCAAgC8nD,OAAhC,SAAX;AACH;AACD;;;AACA,cAAM9B,GAAG,GAAG,KAAKQ,UAAL,CAAgBa,QAAhB,CAAyB,8DAAgBU,YAAzC,EAAuDD,OAAvD,CAAZ;;AACA,cAAI,CAAC9B,GAAL,EAAU;AACN,kBAAMD,kCAAkC,CAAC+B,OAAD,CAAxC;AACH,WAXc,CAYf;AACA;AACA;;AACA;;;AACA,cAAMsC,eAAe,GAAG,KAAKvD,qBAAL,CAA2BhrC,GAA3B,CAA+BmqC,GAA/B,CAAxB;;AACA,cAAIoE,eAAJ,EAAqB;AACjB,mBAAOA,eAAP;AACH,WAnBc,CAoBf;AACA;;AACA;;;AACA,cAAMC,GAAG,GAAG,KAAK9D,WAAL,CAAiB1qC,GAAjB,CAAqBmqC,GAArB,EAA0B;AAAEsE,wBAAY,EAAE;AAAhB,WAA1B,EAAoDz/C,IAApD,CAAyD;AAAU;;;AAG/E;AAAA,mBAAM,OAAI,CAACg8C,qBAAL,WAAkCb,GAAlC,CAAN;AAAA,WAHqE,CAAzD,EAGoC,8DAHpC,CAAZ;;AAIA,eAAKa,qBAAL,CAA2BhlC,GAA3B,CAA+BmkC,GAA/B,EAAoCqE,GAApC;;AACA,iBAAOA,GAAP;AACH;AACD;;;;;;;;;;;;;0CAUkBnD,S,EAAWrB,Q,EAAUviD,M,EAAQ;AAC1C;AAAkB,cAAnB,CAA0BojD,eAA1B,CAA0C7kC,GAA1C,CAA8CumC,OAAO,CAAClB,SAAD,EAAYrB,QAAZ,CAArD,EAA4EviD,MAA5E;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;6CASqB4jD,S,EAAW5jD,M,EAAQ;AACpC;AACA,cAAMinD,eAAe;AAAI;AAAkB,cAAnB,CAA0B5D,eAA1B,CAA0C9qC,GAA1C,CAA8CqrC,SAA9C,CAAxB;;AACA,cAAIqD,eAAJ,EAAqB;AACjBA,2BAAe,CAACzjD,IAAhB,CAAqBxD,MAArB;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0BqjD,eAA1B,CAA0C9kC,GAA1C,CAA8CqlC,SAA9C,EAAyD,CAAC5jD,MAAD,CAAzD;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;;;;;;AAELgjD,mBAAe,CAAC7iD,IAAhB,GAAuB,SAAS+mD,uBAAT,CAAiC7mD,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAI2iD,eAAV,EAA2B,uDAAgB,+DAAhB,EAAmC,CAAnC,CAA3B,EAAkE,uDAAgB,sEAAhB,CAAlE,EAAwG,uDAAgB,wDAAhB,EAA0B,CAA1B,CAAxG,EAAsI,uDAAgB,0DAAhB,EAAqC,CAArC,CAAtI,CAAP;AAAwL,KAArP;AACA;;;AACAA,mBAAe,CAAC1iD,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEC,YAAI,EAAE,+DAAR;AAAoBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAhC,OADmC,EAEnC;AAAEA,YAAI,EAAE;AAAR,OAFmC,EAGnC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAHmC,EAInC;AAAEH,YAAI,EAAE,0DAAR;AAAsBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAlC,OAJmC,CAAN;AAAA,KAAjC;AAMA;;;AAAmByiD,mBAAe,CAACriD,KAAhB,GAAwB,yEAAmB;AAAEC,aAAO,EAAE,SAASsmD,uBAAT,GAAmC;AAAE,eAAO,IAAIlE,eAAJ,CAAoB,+DAAS,+DAAT,EAAqB,CAArB,CAApB,EAA6C,+DAAS,sEAAT,CAA7C,EAAqE,+DAAS,wDAAT,EAAmB,CAAnB,CAArE,EAA4F,+DAAS,0DAAT,EAAuB,CAAvB,CAA5F,CAAP;AAAgI,OAAhL;AAAkLniD,WAAK,EAAEmiD,eAAzL;AAA0MliD,gBAAU,EAAE;AAAtN,KAAnB,CAAxB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBkiD,eAAzB,EAA0C,CAAC;AAChEziD,YAAI,EAAE,wDAD0D;AAEhEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF0D,OAAD,CAA1C,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE,+DAAR;AAA2BE,oBAAU,EAAE,CAAC;AACtDF,gBAAI,EAAE;AADgD,WAAD;AAAvC,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEoB;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACjEF,gBAAI,EAAE;AAD2D,WAAD,EAEjE;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAFiE;AAA/B,SAFpB,EAOX;AAAEH,cAAI,EAAE,0DAAR;AAA6BE,oBAAU,EAAE,CAAC;AAC5CF,gBAAI,EAAE;AADsC,WAAD;AAAzC,SAPW,CAAP;AASF,OAZS,EAYP,IAZO;AAYC,KAZhB;;AAad,QAAI,KAAJ,EAAW,CA4DV;AACD;;;;;;;;;;;AASA,aAAS4mD,8BAAT,CAAwCC,cAAxC,EAAwDC,UAAxD,EAAoEC,SAApE,EAA+E7sD,QAA/E,EAAyF8sD,YAAzF,EAAuG;AACnG,aAAOH,cAAc,IAAI,IAAIpE,eAAJ,CAAoBqE,UAApB,EAAgCC,SAAhC,EAA2C7sD,QAA3C,EAAqD8sD,YAArD,CAAzB;AACH;AACD;;;;;;AAIA,QAAMC,sBAAsB,GAAG;AAC3B;AACAvjD,aAAO,EAAE++C,eAFkB;AAG3B9+C,UAAI,EAAE,CACF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiC8+C,eAAjC,CADE,EAEF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,+DAAjB,CAFE,EAGF,sEAHE,EAIF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,0DAAjB,CAJE,EAKF,CAAC,IAAI,sDAAJ,EAAD;AAAkB;AAAkB,8DAApC,CALE,CAHqB;AAU3B7+C,gBAAU,EAAEgjD;AAVe,KAA/B;AAYA;;;;;;AAKA,aAASxC,QAAT,CAAkBE,GAAlB,EAAuB;AACnB;AAAQ;AAAkBA,WAAG,CAAC/kC,SAAJ,CAAc,IAAd;AAA1B;AACH;AACD;;;;;;;;AAMA,aAASglC,OAAT,CAAiBlB,SAAjB,EAA4Bp8B,IAA5B,EAAkC;AAC9B,aAAOo8B,SAAS,GAAG,GAAZ,GAAkBp8B,IAAzB;AACH;AAED;;;;;AAKA;;AACA;;;;;QAGMigC,W;AACF;;;AAGA,yBAAY5oC,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAM6oC,iBAAiB,GAAG,0EAAWD,WAAX,CAA1B;AACA;;;;;;;;AAMA,QAAME,iBAAiB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,EAAwC;AAC9D7mD,gBAAU,EAAE,MADkD;AAE9DF,aAAO,EAAEgnD;AAFqD,KAAxC,CAA1B;AAIA;;;;;;AAKA,aAASC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;AAIA,aAASD,yBAAT,GAAqC;AACjC;AACA,UAAM9sD,SAAS,GAAG,6DAAO,wDAAP,CAAlB;AACA;;;AACA,UAAMgL,SAAS,GAAGhL,SAAS,GAAGA,SAAS,CAACgtD,QAAb,GAAwB,IAAnD;;AACA,aAAO;AACH;AACA;AACAC,mBAAW;AAAG;;;AAGd;AAAA,iBAAMjiD,SAAS,GAAIA,SAAS,CAACkiD,QAAV,GAAqBliD,SAAS,CAACmiD,MAAnC,GAA6C,EAA5D;AAAA;AANG,OAAP;AAQH;AACD;;;;;;AAIA,QAAMC,iBAAiB,GAAG,CACtB,WADsB,EAEtB,eAFsB,EAGtB,KAHsB,EAItB,QAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,cARsB,EAStB,YATsB,EAUtB,YAVsB,EAWtB,MAXsB,EAYtB,QAZsB,CAA1B;;AAcA,QAAM7wB,EAAE;AAAG;;;;AAIX,aAJMA,EAIN,CAAAtU,IAAI;AAAA,wBAAQA,IAAR;AAAA,KAJJ;AAKA;;;;;;AAIA,QAAMolC,wBAAwB,GAAGD,iBAAiB,CAACh1C,GAAlB,CAAuBmkB,EAAvB,EAA4BtF,IAA5B,CAAiC,IAAjC,CAAjC;AACA;;;;;AAIA,QAAMq2B,cAAc,GAAG,2BAAvB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA2BMC,O;;;;;AACF;;;;;;;AAOA,uBAAYhxC,UAAZ,EAAwBixC,aAAxB,EAAuCC,UAAvC,EAAmDziD,SAAnD,EAA8Dq9C,aAA9D,EAA6E;AAAA;;AAAA;;AACzE,sCAAM9rC,UAAN;AACA,gBAAKixC,aAAL,GAAqBA,aAArB;AACA,gBAAKxiD,SAAL,GAAiBA,SAAjB;AACA,gBAAKq9C,aAAL,GAAqBA,aAArB;AACA,gBAAKqF,OAAL,GAAe,KAAf,CALyE,CAMzE;AACA;;AACA,YAAI,CAACD,UAAL,EAAiB;AACblxC,oBAAU,CAAChE,aAAX,CAAyBlO,YAAzB,CAAsC,aAAtC,EAAqD,MAArD;AACH;;AAVwE;AAW5E;AACD;;;;;;;;;;AAuCA;;;;;;;;;;;;;;;;uCAgBeo9C,Q,EAAU;AACrB,cAAI,CAACA,QAAL,EAAe;AACX,mBAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACH;AACD;;;AACA,cAAMkG,KAAK,GAAGlG,QAAQ,CAAC5tC,KAAT,CAAe,GAAf,CAAd;;AACA,kBAAQ8zC,KAAK,CAACvlD,MAAd;AACI,iBAAK,CAAL;AAAQ,qBAAO,CAAC,EAAD,EAAKulD,KAAK,CAAC,CAAD,CAAV,CAAP;AAAuB;;AAC/B,iBAAK,CAAL;AAAQ;AAAQ;AAAkBA;AAA1B;;AACR;AAAS,oBAAM/rD,KAAK,gCAAwB6lD,QAAxB,QAAX;AAHb;AAKH;AACD;;;;;;;oCAIYpoC,O,EAAS;AAAA;;AACjB;;AACA;AACA,cAAMuuC,cAAc,GAAGvuC,OAAO,CAAC,SAAD,CAA9B;;AACA,cAAIuuC,cAAJ,EAAoB;AAChB,gBAAI,KAAKC,OAAT,EAAkB;AAAA,yCACgB,KAAKC,cAAL,CAAoB,KAAKD,OAAzB,CADhB;AAAA;AAAA,kBACP/E,SADO;AAAA,kBACIrB,QADJ;;AAEd,mBAAK+F,aAAL,CAAmBO,eAAnB,CAAmCtG,QAAnC,EAA6CqB,SAA7C,EACKr8C,IADL,CACU,4DAAK,CAAL,CADV,EAEK3J,SAFL;AAEgB;;;;AAIhB,wBAAAinD,GAAG;AAAA,uBAAI,OAAI,CAACiE,cAAL,CAAoBjE,GAApB,CAAJ;AAAA,eANH;AAMmC;;;;AAInC,wBAACW,GAAD,EAAS;AACL;AACA,oBAAMC,YAAY,mCAA4B7B,SAA5B,cAAyCrB,QAAzC,eAAsDiD,GAAG,CAACE,OAA1D,CAAlB,CAFK,CAGL;;AACA,oBAAI,OAAI,CAACvC,aAAT,EAAwB;AACpB,yBAAI,CAACA,aAAL,CAAmBwC,WAAnB,CAA+B,IAAIjpD,KAAJ,CAAU+oD,YAAV,CAA/B;AACH,iBAFD,MAGK;AACDG,yBAAO,CAAC7F,KAAR,CAAc0F,YAAd;AACH;AACJ,eApBD;AAqBH,aAvBD,MAwBK,IAAIiD,cAAc,CAAC1Q,aAAnB,EAAkC;AACnC,mBAAK+Q,gBAAL;AACH;AACJ;;AACD,cAAI,KAAKC,cAAL,EAAJ,EAA2B;AACvB,iBAAKC,sBAAL;AACH;AACJ;AACD;;;;;;mCAGW;AACP;AACA;AACA,cAAI,KAAKD,cAAL,EAAJ,EAA2B;AACvB,iBAAKC,sBAAL;AACH;AACJ;AACD;;;;;;6CAGqB;AACjB;AACA,cAAMC,cAAc,GAAG,KAAKC,+BAA5B;;AACA,cAAID,cAAc,IAAI,KAAKpjD,SAAvB,IAAoCojD,cAAc,CAACE,IAAvD,EAA6D;AACzD;AACA,gBAAMC,OAAO,GAAG,KAAKvjD,SAAL,CAAeiiD,WAAf,EAAhB,CAFyD,CAGzD;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAIsB,OAAO,KAAK,KAAKC,aAArB,EAAoC;AAChC,mBAAKA,aAAL,GAAqBD,OAArB;;AACA,mBAAKE,wBAAL,CAA8BF,OAA9B;AACH;AACJ;AACJ;AACD;;;;;;sCAGc;AACV,cAAI,KAAKF,+BAAT,EAA0C;AACtC,iBAAKA,+BAAL,CAAqC91B,KAArC;AACH;AACJ;AACD;;;;;;;yCAIiB;AACb,iBAAO,CAAC,KAAKs1B,OAAb;AACH;AACD;;;;;;;;uCAKe9D,G,EAAK;AAChB,eAAKkE,gBAAL,GADgB,CAEhB;AACA;AACA;;AACA;;;AACA,cAAMS,SAAS;AAAI;AAAkB3E,aAAG,CAAC5/C,gBAAJ,CAAqB,OAArB,CAArC;;AACA,eAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGumD,SAAS,CAACtmD,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCumD,qBAAS,CAACvmD,CAAD,CAAT,CAAaunB,WAAb,IAA4B,GAA5B;AACH,WATe,CAUhB;AACA;;;AACA,cAAI,KAAK1kB,SAAT,EAAoB;AAChB;AACA,gBAAM2jD,IAAI,GAAG,KAAK3jD,SAAL,CAAeiiD,WAAf,EAAb;;AACA,iBAAKuB,aAAL,GAAqBG,IAArB;;AACA,iBAAKC,oCAAL,CAA0C7E,GAA1C;;AACA,iBAAK0E,wBAAL,CAA8BE,IAA9B;AACH;;AACD,eAAK5qC,WAAL,CAAiBxL,aAAjB,CAA+BjO,WAA/B,CAA2Cy/C,GAA3C;AACH;AACD;;;;;;;2CAImB;AACf;AACA,cAAM8E,aAAa,GAAG,KAAK9qC,WAAL,CAAiBxL,aAAvC;AACA;;AACA,cAAIu2C,UAAU,GAAGD,aAAa,CAACjD,UAAd,CAAyBxjD,MAA1C;;AACA,cAAI,KAAKimD,+BAAT,EAA0C;AACtC,iBAAKA,+BAAL,CAAqC91B,KAArC;AACH,WAPc,CAQf;AACA;;;AACA,iBAAOu2B,UAAU,EAAjB,EAAqB;AACjB;AACA,gBAAMhJ,KAAK,GAAG+I,aAAa,CAACjD,UAAd,CAAyBkD,UAAzB,CAAd,CAFiB,CAGjB;AACA;;AACA,gBAAIhJ,KAAK,CAAC+F,QAAN,KAAmB,CAAnB,IAAwB/F,KAAK,CAAC9xB,QAAN,CAAe7B,WAAf,OAAiC,KAA7D,EAAoE;AAChE08B,2BAAa,CAAC/kD,WAAd,CAA0Bg8C,KAA1B;AACH;AACJ;AACJ;AACD;;;;;;;iDAIyB;AACrB,cAAI,CAAC,KAAKoI,cAAL,EAAL,EAA4B;AACxB;AACH;AACD;;;AACA,cAAMa,IAAI,GAAG,KAAKhrC,WAAL,CAAiBxL,aAA9B;AACA;;AACA,cAAMy2C,YAAY,GAAG,KAAKC,OAAL,GACjB,KAAKzB,aAAL,CAAmB0B,qBAAnB,CAAyC,KAAKD,OAA9C,CADiB,GAEjB,KAAKzB,aAAL,CAAmB2B,sBAAnB,EAFJ;;AAGA,cAAIH,YAAY,IAAI,KAAKI,qBAAzB,EAAgD;AAC5C,gBAAI,KAAKA,qBAAT,EAAgC;AAC5BL,kBAAI,CAACxuD,SAAL,CAAeS,MAAf,CAAsB,KAAKouD,qBAA3B;AACH;;AACD,gBAAIJ,YAAJ,EAAkB;AACdD,kBAAI,CAACxuD,SAAL,CAAeC,GAAf,CAAmBwuD,YAAnB;AACH;;AACD,iBAAKI,qBAAL,GAA6BJ,YAA7B;AACH;;AACD,cAAI,KAAKK,QAAL,IAAiB,KAAKC,sBAA1B,EAAkD;AAC9C,gBAAI,KAAKA,sBAAT,EAAiC;AAC7BP,kBAAI,CAACxuD,SAAL,CAAeS,MAAf,CAAsB,KAAKsuD,sBAA3B;AACH;;AACD,gBAAI,KAAKD,QAAT,EAAmB;AACfN,kBAAI,CAACxuD,SAAL,CAAeC,GAAf,CAAmB,KAAK6uD,QAAxB;AACH;;AACD,iBAAKC,sBAAL,GAA8B,KAAKD,QAAnC;AACH;AACJ;AACD;;;;;;;;;;;0CAQkBznD,K,EAAO;AACrB,iBAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAAC4P,IAAN,GAAaqC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAA5B,GAAyDjS,KAAhE;AACH;AACD;;;;;;;;;;;iDAQyB+mD,I,EAAM;AAC3B;AACA,cAAMt4C,QAAQ,GAAG,KAAKg4C,+BAAtB;;AACA,cAAIh4C,QAAJ,EAAc;AACVA,oBAAQ,CAACvH,OAAT;AAAkB;;;;;AAKlB,sBAACsa,KAAD,EAAQ9lB,OAAR,EAAoB;AAChB8lB,mBAAK,CAACta,OAAN;AAAe;;;;AAIf,wBAAAmZ,IAAI,EAAI;AACJ3kB,uBAAO,CAAC+G,YAAR,CAAqB4d,IAAI,CAACyE,IAA1B,iBAAwCiiC,IAAxC,cAAgD1mC,IAAI,CAACrgB,KAArD;AACH,eAND;AAOH,aAbD;AAcH;AACJ;AACD;;;;;;;;;;6DAOqCtE,O,EAAS;AAC1C;AACA,cAAMisD,mBAAmB,GAAGjsD,OAAO,CAAC6G,gBAAR,CAAyBkjD,wBAAzB,CAA5B;AACA;;AACA,cAAMh3C,QAAQ,GAAG,KAAKg4C,+BAAL,GACb,KAAKA,+BAAL,IAAwC,IAAIrrC,GAAJ,EAD5C;;AAJ0C,qCAMjC7a,CANiC;AAOtCilD,6BAAiB,CAACt+C,OAAlB;AAA2B;;;;AAI3B,sBAAAmZ,IAAI,EAAI;AACJ;AACA,kBAAMunC,oBAAoB,GAAGD,mBAAmB,CAACpnD,CAAD,CAAhD;AACA;;AACA,kBAAMP,KAAK,GAAG4nD,oBAAoB,CAAClS,YAArB,CAAkCr1B,IAAlC,CAAd;AACA;;AACA,kBAAMwnC,KAAK,GAAG7nD,KAAK,GAAGA,KAAK,CAAC6nD,KAAN,CAAYnC,cAAZ,CAAH,GAAiC,IAApD;;AACA,kBAAImC,KAAJ,EAAW;AACP;AACA,oBAAIjnC,UAAU,GAAGnS,QAAQ,CAACoH,GAAT,CAAa+xC,oBAAb,CAAjB;;AACA,oBAAI,CAAChnC,UAAL,EAAiB;AACbA,4BAAU,GAAG,EAAb;AACAnS,0BAAQ,CAACoN,GAAT,CAAa+rC,oBAAb,EAAmChnC,UAAnC;AACH;;AACA;AAAkBA,0BAAnB,CAAgC9f,IAAhC,CAAqC;AAAEgkB,sBAAI,EAAEzE,IAAR;AAAcrgB,uBAAK,EAAE6nD,KAAK,CAAC,CAAD;AAA1B,iBAArC;AACH;AACJ,aApBD;AAPsC;;AAM1C,eAAK,IAAItnD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGonD,mBAAmB,CAACnnD,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AAAA,kBAA5CA,CAA4C;AAsBpD;AACJ;;;4BAnTY;AACT,iBAAO,KAAKulD,OAAZ;AACH;AACD;;;;;0BAIWgC,M,EAAQ;AACf,eAAKhC,OAAL,GAAe,oFAAsBgC,MAAtB,CAAf;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKC,QAAZ;AAAuB;AACvC;;;;;0BAIY/nD,K,EAAO;AACf,eAAK+nD,QAAL,GAAgB,KAAKC,iBAAL,CAAuBhoD,KAAvB,CAAhB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKioD,SAAZ;AAAwB;AACzC;;;;;0BAIajoD,K,EAAO;AAChB,eAAKioD,SAAL,GAAiB,KAAKD,iBAAL,CAAuBhoD,KAAvB,CAAjB;AACH;;;;MA1DiBglD,iB;;AA8UtBW,WAAO,CAACloD,IAAR,GAAe,SAASyqD,eAAT,CAAyBvqD,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIgoD,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,EAAgE,gEAAyBrF,eAAzB,CAAhE,EAA2G,gEAAyB,aAAzB,CAA3G,EAAoJ,gEAAyB2E,iBAAzB,EAA4C,CAA5C,CAApJ,EAAoM,gEAAyB,0DAAzB,EAA8C,CAA9C,CAApM,CAAP;AAA+P,KAA5S;;AACAU,WAAO,CAAC3kC,IAAR,GAAe,gEAAyB;AAAEnjB,UAAI,EAAE8nD,OAAR;AAAiBtvC,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C0I,eAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,UAAnB,EAA+B,aAA/B,CAAvD;AAAsGuC,cAAQ,EAAE,CAAhH;AAAmHtC,kBAAY,EAAE,SAASmpC,oBAAT,CAA8BjpC,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtN,oEAAmB,iBAAnB,EAAsCC,GAAG,CAAC2oC,MAA1C,EAAkD,mBAAlD,EAAuE3oC,GAAG,CAACoB,KAAJ,KAAc,SAAd,IAA2BpB,GAAG,CAACoB,KAAJ,KAAc,QAAzC,IAAqDpB,GAAG,CAACoB,KAAJ,KAAc,MAA1I;AACH;AAAE,OAFiC;AAE/BzH,YAAM,EAAE;AAAEyH,aAAK,EAAE,OAAT;AAAkBunC,cAAM,EAAE,QAA1B;AAAoCT,eAAO,EAAE,SAA7C;AAAwDI,gBAAQ,EAAE,UAAlE;AAA8ExB,eAAO,EAAE;AAAvF,OAFuB;AAE6E3vC,cAAQ,EAAE,CAAC,SAAD,CAFvF;AAEoG0C,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC,CAF9G;AAEgLyI,wBAAkB,EAAEhC,GAFpM;AAEyMiC,WAAK,EAAE,CAFhN;AAEmNC,UAAI,EAAE,CAFzN;AAE4NE,cAAQ,EAAE,SAASumC,gBAAT,CAA0BlpC,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvT;;AACA,qEAAoB,CAApB;AACH;AAAE,OALiC;AAK/B9P,YAAM,EAAE,CAAC,upBAAD,CALuB;AAKooB6S,mBAAa,EAAE,CALnpB;AAKspBC,qBAAe,EAAE;AALvqB,KAAzB,CAAf;AAMA;;AACAyjC,WAAO,CAAC/nD,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAE;AAAR,OAD2B,EAE3B;AAAEA,YAAI,EAAEyiD;AAAR,OAF2B,EAG3B;AAAEziD,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,aAAD;AAAzB,SAAD;AAA5B,OAH2B,EAI3B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACinD,iBAAD;AAAtB,SAArB;AAA/B,OAJ2B,EAK3B;AAAEpnD,YAAI,EAAE,0DAAR;AAAsBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAlC,OAL2B,CAAN;AAAA,KAAzB;;AAOA8nD,WAAO,CAAC1sC,cAAR,GAAyB;AACrB6uC,YAAM,EAAE,CAAC;AAAEjqD,YAAI,EAAE;AAAR,OAAD,CADa;AAErBooD,aAAO,EAAE,CAAC;AAAEpoD,YAAI,EAAE;AAAR,OAAD,CAFY;AAGrBwpD,aAAO,EAAE,CAAC;AAAExpD,YAAI,EAAE;AAAR,OAAD,CAHY;AAIrB4pD,cAAQ,EAAE,CAAC;AAAE5pD,YAAI,EAAE;AAAR,OAAD;AAJW,KAAzB;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyB8nD,OAAzB,EAAkC,CAAC;AACxD9nD,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACC6jB,kBAAQ,EAAE,2BADX;AAEC7V,kBAAQ,EAAE,UAFX;AAGCsK,kBAAQ,EAAE,SAHX;AAICwC,gBAAM,EAAE,CAAC,OAAD,CAJT;AAKC1D,cAAI,EAAE;AACF,oBAAQ,KADN;AAEF,qBAAS,sBAFP;AAGF,uCAA2B,QAHzB;AAIF,yCAA6B;AAJ3B,WALP;AAWC6M,uBAAa,EAAE,gEAAkBG,IAXlC;AAYCF,yBAAe,EAAE,sEAAwBG,MAZ1C;AAaCjT,gBAAM,EAAE,CAAC,upBAAD;AAbT,SAAD;AAFkD,OAAD,CAAlC,EAiBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEyiD;AAAR,SAA9B,EAAyD;AAAEziD,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACnGF,gBAAI,EAAE,uDAD6F;AAEnGG,gBAAI,EAAE,CAAC,aAAD;AAF6F,WAAD;AAA5B,SAAzD,EAGX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACinD,iBAAD;AAFP,WAFkC;AAA/B,SAHW,EAQX;AAAEpnD,cAAI,EAAE,0DAAR;AAA6BE,oBAAU,EAAE,CAAC;AAC5CF,gBAAI,EAAE;AADsC,WAAD;AAAzC,SARW,CAAP;AAUF,OA3BS,EA2BP;AAAEiqD,cAAM,EAAE,CAAC;AACrBjqD,cAAI,EAAE;AADe,SAAD,CAAV;AAEVwpD,eAAO,EAAE,CAAC;AACVxpD,cAAI,EAAE;AADI,SAAD,CAFC;AAIV4pD,gBAAQ,EAAE,CAAC;AACX5pD,cAAI,EAAE;AADK,SAAD,CAJA;AAMVooD,eAAO,EAAE,CAAC;AACVpoD,cAAI,EAAE;AADI,SAAD;AANC,OA3BO;AAmCb,KAnCF;;AAoCd,QAAI,KAAJ,EAAW,CA8DV;AAED;;;;;;;QAKMwqD,a;;;;AAENA,iBAAa,CAAChvC,IAAd,GAAqB,+DAAwB;AAAExb,UAAI,EAAEwqD;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAAC/uC,IAAd,GAAqB,+DAAwB;AAAEpb,aAAO,EAAE,SAASoqD,qBAAT,CAA+B3qD,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAI0qD,aAAV,GAAP;AAAoC,OAAnF;AAAqF5uC,aAAO,EAAE,CAAC,CAAC,sEAAD,CAAD,EACnI,sEADmI;AAA9F,KAAxB,CAArB;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B2uC,aAA1B,EAAyC;AAAE1uC,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACgsC,OAAD,CAAP;AAAmB,SAAjD;AAAmDlsC,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,CAAP;AAA2B,SAArG;AAAuGG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC+rC,OAAD,EACxO,sEADwO,CAAP;AAC9M;AADgF,OAAzC,CAAnD;AACkB,KADjC;AAEA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB0C,aAAzB,EAAwC,CAAC;AAC9DxqD,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,sEAAD,CADV;AAECG,iBAAO,EAAE,CAAC+rC,OAAD,EAAU,sEAAV,CAFV;AAGChsC,sBAAY,EAAE,CAACgsC,OAAD;AAHf,SAAD;AAFwD,OAAD,CAAxC,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC/6CA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;AAKA;;;;;;;QAUM4C,mB;;;;;;;;;;;;;;AACF;;;4BAGyB;AAAE,iBAAO,KAAK1rC,OAAZ;AAAsB;AACjD;;;;;0BAIuB7c,K,EAAO;AAAE,eAAK6c,OAAL,GAAe7c,KAAf;AAAuB;AACvD;;;;;;4BAGyB;AAAE,iBAAO,KAAK+c,OAAZ;AAAsB;AACjD;;;;;0BAIuB/c,K,EAAO;AAAE,eAAK+c,OAAL,GAAe/c,KAAf;AAAuB;AACvD;;;;;;4BAGkB;AAAE,iBAAO,KAAKsf,OAAZ;AAAsB;AAC1C;;;;;0BAIgBtf,K,EAAO;AAAE,eAAKsf,OAAL,GAAetf,KAAf;AAAuB;AAChD;;;;;;4BAG0B;AAAE,iBAAO,KAAKsf,OAAZ;AAAsB;AAClD;;;;;0BAIwBtf,K,EAAO;AAAE,eAAKsf,OAAL,GAAetf,KAAf;AAAuB;;;;MApC1B,2E;;AAsClCuoD,uBAAmB,CAAC9qD,IAApB,GAA2B,SAAS+qD,2BAAT,CAAqC7qD,CAArC,EAAwC;AAAE,aAAO8qD,gCAAgC,CAAC9qD,CAAC,IAAI4qD,mBAAN,CAAvC;AAAoE,KAAzI;;AACAA,uBAAmB,CAACnyC,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE0qD,mBAAR;AAA6BlyC,eAAS,EAAE,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAnC,CAAxC;AAAqH0I,eAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,EAA0C,cAA1C,CAAhI;AAA2LjG,YAAM,EAAE;AAAE4vC,0BAAkB,EAAE,oBAAtB;AAA4CC,0BAAkB,EAAE,oBAAhE;AAAsFC,0BAAkB,EAAE,oBAA1G;AAAgIC,0BAAkB,EAAE,oBAApJ;AAA0KC,mBAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvL;AAAwNC,2BAAmB,EAAE;AAA7O,OAAnM;AAAyczyC,cAAQ,EAAE,CAAC,qBAAD,CAAnd;AAA4e0C,cAAQ,EAAE,CAAC,wEAAD;AAAtf,KAAzB,CAA3B;AACAuvC,uBAAmB,CAACtvC,cAApB,GAAqC;AACjC2vC,wBAAkB,EAAE,CAAC;AAAE/qD,YAAI,EAAE;AAAR,OAAD,CADa;AAEjCgrD,wBAAkB,EAAE,CAAC;AAAEhrD,YAAI,EAAE;AAAR,OAAD,CAFa;AAGjCirD,iBAAW,EAAE,CAAC;AAAEjrD,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,cAAD;AAArB,OAAD,CAHoB;AAIjC+qD,yBAAmB,EAAE,CAAC;AAAElrD,YAAI,EAAE;AAAR,OAAD;AAJY,KAArC;;AAMA,QAAM4qD,gCAAgC,GAAG,oEAA6BF,mBAA7B,CAAzC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,mBAAzB,EAA8C,CAAC;AACpE1qD,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,uDADX;AAECsK,kBAAQ,EAAE,qBAFX;AAGCwC,gBAAM,EAAE,CAAC,oBAAD,EAAuB,oBAAvB,CAHT;AAIC1D,cAAI,EAAE;AACF,qBAAS,oCADP;AAEF;AACA;AACA,oBAAQ;AAJN;AAJP,SAAD;AAF8D,OAAD,CAA9C,EAarB,IAbqB,EAaf;AAAEwzC,0BAAkB,EAAE,CAAC;AACzB/qD,cAAI,EAAE;AADmB,SAAD,CAAtB;AAEFgrD,0BAAkB,EAAE,CAAC;AACrBhrD,cAAI,EAAE;AADe,SAAD,CAFlB;AAIFirD,mBAAW,EAAE,CAAC;AACdjrD,cAAI,EAAE,mDADQ;AAEdG,cAAI,EAAE,CAAC,cAAD;AAFQ,SAAD,CAJX;AAOF+qD,2BAAmB,EAAE,CAAC;AACtBlrD,cAAI,EAAE;AADgB,SAAD;AAPnB,OAbe;AAsBb,KAtBF;AAwBd;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAKA,aAASmrD,+BAAT,CAAyCnrD,IAAzC,EAA+C;AAC3C,aAAO7D,KAAK,wBAAgB6D,IAAhB,qCAAZ;AACH;AAED;;;;;;AAKA;;;;;;;;;AAOA,QAAMorD,wBAAwB,GAAG,IAAI,4DAAJ,CAAmB,0BAAnB,CAAjC;AAEA;;;;;AAKA;;AACA;;AACA,QAAMC,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA;;AACA,QAAIr0C,YAAY,GAAG,CAAnB,C,CACA;;AACA;;;;QAGMs0C,Y;AACF;;;;;;AAMA,0BAAYv8B,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD,EAAsEC,SAAtE,EAAiF;AAAA;;AAC7E,WAAKH,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAYV;AACD;;;AACA,QAAMq8B,kBAAkB,GAAG,+EAAgBD,YAAhB,CAA3B;AACA;;;;;QAGME,Q;;;;;AACF;;;;;;;;;;;AAWA,wBAAYltC,WAAZ,EAAyBra,SAAzB,EAAoCirB,SAApC,EAA+CF,WAA/C,EAA4DC,gBAA5D,EAA8EF,yBAA9E,EAAyG08B,kBAAzG,EAA6HltC,gBAA7H,EAA+ImtC,MAA/I,EAAuJ;AAAA;;AAAA;;AACnJ,sCAAM38B,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE;AACA,gBAAK5Q,WAAL,GAAmBA,WAAnB;AACA,gBAAKra,SAAL,GAAiBA,SAAjB;AACA,gBAAKirB,SAAL,GAAiBA,SAAjB;AACA,gBAAK3Q,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKiR,IAAL,uBAAyBxY,YAAY,EAArC;AACA;;;;AAGA,gBAAK20C,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKC,eAAL,GAAuB,KAAvB;AACA;;;;;AAIA,gBAAKj6B,OAAL,GAAe,KAAf;AACA;;;;;AAIA,gBAAKZ,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;;;;AAIA,gBAAKzB,WAAL,GAAmB,WAAnB;AACA;;;;;AAIA,gBAAKkyB,UAAL,GAAkB,KAAlB;AACA,gBAAKh6B,SAAL,GAAiB,KAAjB;AACA,gBAAKwB,SAAL,GAAiB,KAAjB;AACA,gBAAK6iC,KAAL,GAAa,MAAb;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3BjH,MAP2B;AAOnB;;;;AAIV,kBAAAhlD,CAAC;AAAA,iBAAI,uFAAyBm2B,GAAzB,CAA6Bn2B,CAA7B,CAAJ;AAAA,SAX4B,CAA7B;AAYA;;AACA,YAAMjC,OAAO,GAAG,QAAKygB,WAAL,CAAiBxL,aAAjC,CApDmJ,CAqDnJ;AACA;;AACA,gBAAKk5C,mBAAL,GAA2BP,kBAAkB,IAAI5tD,OAAjD;AACA,gBAAKouD,oBAAL,GAA4B,QAAK9pD,KAAjC,CAxDmJ,CAyDnJ;;AACA,gBAAK2V,EAAL,GAAU,QAAKA,EAAf,CA1DmJ,CA2DnJ;AACA;AACA;;AACA,YAAI7T,SAAS,CAACioD,GAAd,EAAmB;AACfR,gBAAM,CAAC9iD,iBAAP;AAA0B;;;AAG1B,sBAAM;AACF0V,uBAAW,CAACxL,aAAZ,CAA0B9P,gBAA1B,CAA2C,OAA3C;AAAqD;;;;AAIrD,sBAACR,KAAD,EAAW;AACP;AACA,kBAAI2pD,EAAE;AAAI;AAAkB3pD,mBAAK,CAACsb,MAAlC;;AACA,kBAAI,CAACquC,EAAE,CAAChqD,KAAJ,IAAa,CAACgqD,EAAE,CAACzrC,cAAjB,IAAmC,CAACyrC,EAAE,CAACxrC,YAA3C,EAAyD;AACrD;AACA;AACA;AACA;AACAwrC,kBAAE,CAACrrC,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACAqrC,kBAAE,CAACrrC,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,aAfD;AAgBH,WApBD;AAqBH;;AACD,gBAAK6qC,SAAL,GAAiB,CAAC,QAAK1nD,SAAL,CAAeM,SAAjC;AACA,gBAAKqnD,eAAL,GAAuB/tD,OAAO,CAAC0wB,QAAR,CAAiB7B,WAAjB,OAAmC,QAA1D;;AACA,YAAI,QAAKk/B,eAAT,EAA0B;AACtB,kBAAKt8B,WAAL;AAAqB;AAAkBzxB,iBAApB,CAA+BozB,QAA/B,GAA0C,4BAA1C,GACf,mBADJ;AAEH;;AA1FkJ;AA2FtJ;AACD;;;;;;;;;;AA2FA;;;mCAGW;AAAA;;AACP,cAAI,KAAKhtB,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAKga,gBAAL,CAAsBE,OAAtB,CAA8B,KAAKH,WAAL,CAAiBxL,aAA/C,EAA8DzV,SAA9D;AAAyE;;;;AAIzE,sBAAAmF,KAAK,EAAI;AACL,qBAAI,CAACg/C,UAAL,GAAkBh/C,KAAK,CAACub,YAAxB;;AACA,qBAAI,CAACgT,YAAL,CAAkBjuB,IAAlB;AACH,aAPD;AAQH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKiuB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;sCAGc;AACV,eAAKiuB,YAAL,CAAkBrpB,QAAlB;;AACA,cAAI,KAAKzD,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAKga,gBAAL,CAAsBJ,cAAtB,CAAqC,KAAKG,WAAL,CAAiBxL,aAAtD;AACH;AACJ;AACD;;;;;;oCAGY;AACR,cAAI,KAAKoc,SAAT,EAAoB;AAChB;AACA;AACA;AACA,iBAAKgC,gBAAL;AACH,WANO,CAOR;AACA;AACA;;;AACA,eAAKk7B,sBAAL;AACH;AACD;;;;;;;;8BAKMzpC,O,EAAS;AACX,eAAKrE,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B,CAAqCpK,OAArC;AACH,S,CACD;AACA;AACA;AACA;;AACA;;;;;AAKA;AACA;;;;sCACc0pC,S,EAAW;AACrB,cAAIA,SAAS,KAAK,KAAK16B,OAAnB,KAA+B,CAAC,KAAK26B,QAAN,IAAkB,CAACD,SAAlD,CAAJ,EAAkE;AAC9D,iBAAK16B,OAAL,GAAe06B,SAAf;AACA,iBAAKt7B,YAAL,CAAkBjuB,IAAlB;AACH;AACJ,S,CACD;AACA;AACA;AACA;AACA;;AACA;;;;;;mCAGW,CAQV,C,CAPG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;;;;;;;sCAIc;AACV,iBAAO,KAAKwb,WAAL,CAAiBxL,aAAjB,CAA+Byb,QAA/B,CAAwC7B,WAAxC,OAA0D,UAAjE;AACH;AACD;;;;;;;;iDAKyB;AACrB;AACA,cAAMzD,QAAQ,GAAG,KAAK3K,WAAL,CAAiBxL,aAAjB,CAA+B3Q,KAAhD;;AACA,cAAI,KAAK8pD,oBAAL,KAA8BhjC,QAAlC,EAA4C;AACxC,iBAAKgjC,oBAAL,GAA4BhjC,QAA5B;AACA,iBAAK8H,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,cAAIuoD,uBAAuB,CAACloD,OAAxB,CAAgC,KAAK0oD,KAArC,IAA8C,CAAC,CAAnD,EAAsD;AAClD,kBAAMV,+BAA+B,CAAC,KAAKU,KAAN,CAArC;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,iBAAO,KAAKE,qBAAL,CAA2B5oD,OAA3B,CAAmC,KAAK0oD,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;;;;;;sCAKc;AACV;;AACA;AACA,cAAIU,QAAQ;AAAK;AAAkB,eAAKjuC,WAAL,CAAiBxL,aAArC,CAAsDy5C,QAArE;AACA,iBAAOA,QAAQ,IAAIA,QAAQ,CAACC,QAA5B;AACH;AACD;;;;;;;;;AAgCA;;;;;;0CAMkBl7B,G,EAAK;AACnB,eAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;;;;;;2CAKmB;AACf;AACA;AACA;AACA,cAAI,CAAC,KAAKG,OAAV,EAAmB;AACf,iBAAK5E,KAAL;AACH;AACJ;;;4BAnRc;AACX,cAAI,KAAKmC,SAAL,IAAkB,KAAKA,SAAL,CAAepM,QAAf,KAA4B,IAAlD,EAAwD;AACpD,mBAAO,KAAKoM,SAAL,CAAepM,QAAtB;AACH;;AACD,iBAAO,KAAK0E,SAAZ;AACH;AACD;;;;;0BAIarlB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB,CADgB,CAEhB;AACA;;AACA,cAAI,KAAKwvB,OAAT,EAAkB;AACd,iBAAKA,OAAL,GAAe,KAAf;AACA,iBAAKZ,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;4BAKS;AAAE,iBAAO,KAAK6wC,GAAZ;AAAkB;AAC7B;;;;;0BAIOxxC,K,EAAO;AAAE,eAAKwxC,GAAL,GAAWxxC,KAAK,IAAI,KAAKqtB,IAAzB;AAAgC;AAChD;;;;;;;;4BAKe;AAAE,iBAAO,KAAKxG,SAAZ;AAAwB;AACzC;;;;;0BAIa7mB,K,EAAO;AAAE,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIW;AAAE,iBAAO,KAAK0pD,KAAZ;AAAoB;AACjC;;;;;0BAIS1pD,K,EAAO;AACZ,eAAK0pD,KAAL,GAAa1pD,KAAK,IAAI,MAAtB;;AACA,eAAKsqD,aAAL,GAFY,CAGZ;AACA;AACA;;;AACA,cAAI,CAAC,KAAKC,WAAL,EAAD,IAAuB,uFAAyBz2B,GAAzB,CAA6B,KAAK41B,KAAlC,CAA3B,EAAqE;AAC/D;AAAkB,iBAAKvtC,WAAL,CAAiBxL,aAArC,CAAsD9S,IAAtD,GAA6D,KAAK6rD,KAAlE;AACH;AACJ;AACD;;;;;;;;4BAKY;AAAE,iBAAO,KAAKG,mBAAL,CAAyB7pD,KAAhC;AAAwC;AACtD;;;;;0BAIUA,K,EAAO;AACb,cAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;AACtB,iBAAK6pD,mBAAL,CAAyB7pD,KAAzB,GAAiCA,KAAjC;AACA,iBAAK4uB,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKgpD,SAAZ;AAAwB;AACzC;;;;;0BAIa3pD,K,EAAO;AAAE,eAAK2pD,SAAL,GAAiB,oFAAsB3pD,KAAtB,CAAjB;AAAgD;;;4BA8I1D;AACR,iBAAO,CAAC,KAAKwqD,aAAL,EAAD,IAAyB,CAAC,KAAKruC,WAAL,CAAiBxL,aAAjB,CAA+B3Q,KAAzD,IAAkE,CAAC,KAAKyqD,WAAL,EAAnE,IACH,CAAC,KAAKpL,UADV;AAEH;AACD;;;;;;;;4BAKuB;AACnB,cAAI,KAAKoK,eAAT,EAA0B;AACtB;AACA;AACA;;AACA;AACA,gBAAMiB,aAAa;AAAI;AAAkB,iBAAKvuC,WAAL,CAAiBxL,aAA1D;AACA;;AACA,gBAAMg6C,WAAW,GAAGD,aAAa,CAAClqC,OAAd,CAAsB,CAAtB,CAApB,CAPsB,CAQtB;AACA;;AACA,mBAAO,KAAKgP,OAAL,IAAgBk7B,aAAa,CAAC57B,QAA9B,IAA0C,CAAC,KAAKoD,KAAhD,IACH,CAAC,EAAEw4B,aAAa,CAACE,aAAd,GAA8B,CAAC,CAA/B,IAAoCD,WAApC,IAAmDA,WAAW,CAACx1B,KAAjE,CADL;AAEH,WAZD,MAaK;AACD,mBAAO,KAAK3F,OAAL,IAAgB,CAAC,KAAK0C,KAA7B;AACH;AACJ;;;;MA1WkBk3B,kB;;AAkYvBC,YAAQ,CAAC5rD,IAAT,GAAgB,SAASotD,gBAAT,CAA0BltD,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAI0rD,QAAV,EAAoB,gEAAyB,wDAAzB,CAApB,EAAiE,gEAAyB,8DAAzB,CAAjE,EAA4G,gEAAyB,wDAAzB,EAA2C,EAA3C,CAA5G,EAA4J,gEAAyB,qDAAzB,EAAwC,CAAxC,CAA5J,EAAwM,gEAAyB,iEAAzB,EAAoD,CAApD,CAAxM,EAAgQ,gEAAyB,wEAAzB,CAAhQ,EAAoT,gEAAyBJ,wBAAzB,EAAmD,EAAnD,CAApT,EAA4W,gEAAyB,uEAAzB,CAA5W,EAA8Z,gEAAyB,oDAAzB,CAA9Z,CAAP;AAAgd,KAA/f;;AACAI,YAAQ,CAACjzC,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAEwrD,QAAR;AAAkBhzC,eAAS,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,EAAtB,CAAD,EAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,EAAzB,CAA5B,EAA0D,CAAC,QAAD,EAAW,kBAAX,EAA+B,EAA/B,CAA1D,EAA8F,CAAC,OAAD,EAAU,kBAAV,EAA8B,EAA9B,CAA9F,EAAiI,CAAC,UAAD,EAAa,kBAAb,EAAiC,EAAjC,CAAjI,CAA7B;AAAqM0I,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ,EAAyB,iCAAzB,CAAhN;AAA6QuC,cAAQ,EAAE,EAAvR;AAA2RtC,kBAAY,EAAE,SAAS8rC,qBAAT,CAA+B5rC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChY,mEAAkB,OAAlB,EAA2B,SAAS6rC,iCAAT,GAA6C;AAAE,mBAAO5rC,GAAG,CAAC6rC,aAAJ,CAAkB,IAAlB,CAAP;AAAiC,WAA3G,EAA6G,MAA7G,EAAqH,SAASC,gCAAT,GAA4C;AAAE,mBAAO9rC,GAAG,CAAC6rC,aAAJ,CAAkB,KAAlB,CAAP;AAAkC,WAArM,EAAuM,OAAvM,EAAgN,SAASE,iCAAT,GAA6C;AAAE,mBAAO/rC,GAAG,CAACoV,QAAJ,EAAP;AAAwB,WAAvR;AACH;;AAAC,YAAIrV,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,UAAtB,EAAkCC,GAAG,CAACwB,QAAtC,EAAgD,UAAhD,EAA4DxB,GAAG,CAACgI,QAAhE;;AACA,oEAAmB,IAAnB,EAAyBhI,GAAG,CAACxJ,EAA7B,EAAiC,aAAjC,EAAgDwJ,GAAG,CAACjB,WAApD,EAAiE,UAAjE,EAA6EiB,GAAG,CAACgrC,QAAJ,IAAgB,CAAChrC,GAAG,CAACsqC,eAArB,IAAwC,IAArH,EAA2H,kBAA3H,EAA+ItqC,GAAG,CAACiQ,gBAAJ,IAAwB,IAAvK,EAA6K,cAA7K,EAA6LjQ,GAAG,CAAC0T,UAAjM,EAA6M,eAA7M,EAA8N1T,GAAG,CAACgI,QAAJ,CAAanE,QAAb,EAA9N;;AACA,oEAAmB,kBAAnB,EAAuC7D,GAAG,CAACqqC,SAA3C;AACH;AAAE,OANkC;AAMhC1wC,YAAM,EAAE;AAAEnD,UAAE,EAAE,IAAN;AAAYgL,gBAAQ,EAAE,UAAtB;AAAkCwG,gBAAQ,EAAE,UAA5C;AAAwDtpB,YAAI,EAAE,MAA9D;AAAsEmC,aAAK,EAAE,OAA7E;AAAsFmqD,gBAAQ,EAAE,UAAhG;AAA4GjsC,mBAAW,EAAE,aAAzH;AAAwI6U,yBAAiB,EAAE;AAA3J,OANwB;AAM0Jzc,cAAQ,EAAE,CAAC,UAAD,CANpK;AAMkL0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEzX,eAAO,EAAE,gFAAX;AAAgCqiB,mBAAW,EAAEylC;AAA7C,OAAD,CAA1B,CAAD,EAAuF,wEAAvF,EAA0H,kEAA1H;AAN5L,KAAzB,CAAhB;AAOA;;AACAA,YAAQ,CAACzrD,cAAT,GAA0B;AAAA,aAAM,CAC5B;AAAEC,YAAI,EAAE;AAAR,OAD4B,EAE5B;AAAEA,YAAI,EAAE;AAAR,OAF4B,EAG5B;AAAEA,YAAI,EAAE,wDAAR;AAAmBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB;AAA/B,OAH4B,EAI5B;AAAEA,YAAI,EAAE,qDAAR;AAAgBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA5B,OAJ4B,EAK5B;AAAEA,YAAI,EAAE,iEAAR;AAA4BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAxC,OAL4B,EAM5B;AAAEA,YAAI,EAAE;AAAR,OAN4B,EAO5B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB,EAAqC;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACirD,wBAAD;AAAtB,SAArC;AAA/B,OAP4B,EAQ5B;AAAEprD,YAAI,EAAE;AAAR,OAR4B,EAS5B;AAAEA,YAAI,EAAE;AAAR,OAT4B,CAAN;AAAA,KAA1B;;AAWAwrD,YAAQ,CAACpwC,cAAT,GAA0B;AACtB0H,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CADY;AAEtB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAFkB;AAGtBqgB,iBAAW,EAAE,CAAC;AAAErgB,YAAI,EAAE;AAAR,OAAD,CAHS;AAItBspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CAJY;AAKtBA,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE;AAAR,OAAD,CALgB;AAMtBk1B,uBAAiB,EAAE,CAAC;AAAEl1B,YAAI,EAAE;AAAR,OAAD,CANG;AAOtBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAPe;AAQtBssD,cAAQ,EAAE,CAAC;AAAEtsD,YAAI,EAAE;AAAR,OAAD,CARY;AAStBmtD,mBAAa,EAAE,CAAC;AAAEntD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAA5B,OAAD,EAAqD;AAAEH,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAA5B,OAArD,CATO;AAUtBu2B,cAAQ,EAAE,CAAC;AAAE12B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD;AAA5B,OAAD;AAVY,KAA1B;AAYA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqrD,QAAzB,EAAmC,CAAC;AACzDxrD,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,6HADT;AAGCsK,kBAAQ,EAAE,UAHX;AAIClB,cAAI,EAAE;AACF;;;AAGA,qBAAS,mDAJP;AAKF,wCAA4B,WAL1B;AAMF;AACA;AACA,yBAAa,IARX;AASF,kCAAsB,aATpB;AAUF,0BAAc,UAVZ;AAWF,0BAAc,UAXZ;AAYF,+BAAmB,sCAZjB;AAaF,uCAA2B,0BAbzB;AAcF,mCAAuB,YAdrB;AAeF,oCAAwB;AAftB,WAJP;AAqBCoE,mBAAS,EAAE,CAAC;AAAEjY,mBAAO,EAAE,gFAAX;AAAgCqiB,uBAAW,EAAEylC;AAA7C,WAAD;AArBZ,SAAD;AAFmD,OAAD,CAAnC,EAyBrB,YAAY;AAAE,eAAO,CAAC;AAAExrD,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAyD;AAAEA,cAAI,EAAE,wDAAR;AAA0BE,oBAAU,EAAE,CAAC;AAC7GF,gBAAI,EAAE;AADuG,WAAD,EAE7G;AACCA,gBAAI,EAAE;AADP,WAF6G;AAAtC,SAAzD,EAIX;AAAEA,cAAI,EAAE,qDAAR;AAAuBE,oBAAU,EAAE,CAAC;AACtCF,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAJW,EAMX;AAAEA,cAAI,EAAE,iEAAR;AAAmCE,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SANW,EAQX;AAAEA,cAAI,EAAE;AAAR,SARW,EAQyB;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACtEF,gBAAI,EAAE;AADgE,WAAD,EAEtE;AACCA,gBAAI,EAAE;AADP,WAFsE,EAItE;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACirD,wBAAD;AAFP,WAJsE;AAA/B,SARzB,EAeX;AAAEprD,cAAI,EAAE;AAAR,SAfW,EAeuB;AAAEA,cAAI,EAAE;AAAR,SAfvB,CAAP;AAeyD,OAxClD,EAwCoD;AAAE8X,UAAE,EAAE,CAAC;AAC5E9X,cAAI,EAAE;AADsE,SAAD,CAAN;AAErE8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAF2D;AAIrEspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAJ2D;AAMrEA,YAAI,EAAE,CAAC;AACPA,cAAI,EAAE;AADC,SAAD,CAN+D;AAQrEmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAR8D;AAUrEssD,gBAAQ,EAAE,CAAC;AACXtsD,cAAI,EAAE;AADK,SAAD,CAV2D;AAYrEmtD,qBAAa,EAAE,CAAC;AAChBntD,cAAI,EAAE,0DADU;AAEhBG,cAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAFU,SAAD,EAGhB;AACCH,cAAI,EAAE,0DADP;AAECG,cAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAFP,SAHgB,CAZsD;AAkBrEu2B,gBAAQ,EAAE,CAAC;AACX12B,cAAI,EAAE,0DADK;AAEXG,cAAI,EAAE,CAAC,OAAD;AAFK,SAAD,CAlB2D;AAqBrEkgB,mBAAW,EAAE,CAAC;AACdrgB,cAAI,EAAE;AADQ,SAAD,CArBwD;AAuBrEk1B,yBAAiB,EAAE,CAAC;AACpBl1B,cAAI,EAAE;AADc,SAAD;AAvBkD,OAxCpD;AAiEb,KAjEF;;AAkEd,QAAI,KAAJ,EAAW,CA4HV;AAED;;;;;;;QAKMstD,c;;;;AAENA,kBAAc,CAAC9xC,IAAf,GAAsB,+DAAwB;AAAExb,UAAI,EAAEstD;AAAR,KAAxB,CAAtB;AACAA,kBAAc,CAAC7xC,IAAf,GAAsB,+DAAwB;AAAEpb,aAAO,EAAE,SAASktD,sBAAT,CAAgCztD,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIwtD,cAAV,GAAP;AAAqC,OAArF;AAAuF3xC,eAAS,EAAE,CAAC,wEAAD,CAAlG;AAAuHC,aAAO,EAAE,CAAC,CACnK,uEADmK,EAEnK,+EAFmK,CAAD,EAItK,uEAJsK,EAKtK;AACA;AACA,qFAPsK;AAAhI,KAAxB,CAAtB;;AAQA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0ByxC,cAA1B,EAA0C;AAAExxC,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC0vC,QAAD,EACzId,mBADyI,CAAP;AAC3G,SAD6E;AAC3E9uC,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,uEAAD,EACvD,+EADuD,CAAP;AAC1B,SAF8E;AAE5EG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,uEAAD,EACtD;AACA;AACA,yFAHsD,EAItDyvC,QAJsD,EAKtDd,mBALsD,CAAP;AAKxB;AAP6E,OAA1C,CAAnD;AAOsB,KAPrC;AAQA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB4C,cAAzB,EAAyC,CAAC;AAC/DttD,YAAI,EAAE,sDADyD;AAE/DG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CAAC0vC,QAAD,EAAWd,mBAAX,CADf;AAEC9uC,iBAAO,EAAE,CACL,uEADK,EAEL,+EAFK,CAFV;AAMCG,iBAAO,EAAE,CACL,uEADK,EAEL;AACA;AACA,yFAJK,EAKLyvC,QALK,EAMLd,mBANK,CANV;AAcC/uC,mBAAS,EAAE,CAAC,wEAAD;AAdZ,SAAD;AAFyD,OAAD,CAAzC,EAkBrB,IAlBqB,EAkBf,IAlBe;AAkBP,KAlBR;AAoBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACpiG,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,EAAyD,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAzD,EAAoF,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAApF,CAAD,EAA+G,CAAC,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAAD,EAAuB,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAvB,CAA/G,EAA4J,GAA5J,CAAZ;AACA,QAAM2D,GAAG,GAAG,CAAC,oEAAD,EAAuE,uBAAvE,EAAgG,GAAhG,CAAZ;AACA,QAAM2V,GAAG,GAAG,CAAC,MAAD,CAAZ;;AACA,aAASqyB,4CAAT,CAAsDnsC,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,gEAAiB,CAAjB,EAAoB,qBAApB,EAA2C,CAA3C;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8V,MAAM,GAAG,6DAAf;;AACA,iEAAkB,OAAlB,EAA2BA,MAAM,CAACtM,QAAP,GAAkB,SAAlB,GAA8B,WAAzD,EAAsE,UAAtE,EAAkFsM,MAAM,CAACrU,QAAzF;AACH;AAAE;;AACH,QAAMsY,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,EAAyD,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAzD,EAAoF,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAApF,CAAN,CAAZ;AACA,QAAMigB,GAAG,GAAG,CAAC,GAAD,EAAM,oEAAN,CAAZ;;QACMoS,W;;;AAEN;;;AACA,QAAMC,iBAAiB,GAAG,6EAAc,kFAAmBD,WAAnB,CAAd,CAA1B,C,CACA;;AACA;;;;;QAGME,e;;;AAEN;;;AACA,QAAMC,qBAAqB,GAAG,kFAAmBD,eAAnB,CAA9B;;QACME,U;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,uCAASC,SAAT;AACA;;;;AAGA,gBAAK5d,aAAL,GAAqB,IAAI,4CAAJ,EAArB;AALU;AAMb;AACD;;;;;;;sCAGc;AACV,eAAKA,aAAL,CAAmBptC,IAAnB;AACH;AACD;;;;;;sCAGc;AACV,eAAKotC,aAAL,CAAmBxoC,QAAnB;AACH;;;;MAnBoBgmD,iB;;AAqBzBG,cAAU,CAACjuD,IAAX,GAAkB,SAASmuD,kBAAT,CAA4BjuD,CAA5B,EAA+B;AAAE,aAAOkuD,uBAAuB,CAACluD,CAAC,IAAI+tD,UAAN,CAA9B;AAAkD,KAArG;;AACAA,cAAU,CAAC1qC,IAAX,GAAkB,gEAAyB;AAAEnjB,UAAI,EAAE6tD,UAAR;AAAoBr1C,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAA/B;AAAmD0I,eAAS,EAAE,CAAC,MAAD,EAAS,YAAT,EAAuB,CAAvB,EAA0B,cAA1B,EAA0C,eAA1C,CAA9D;AAA0HjG,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCC,gBAAQ,EAAE;AAA5C,OAAlI;AAA4LrK,cAAQ,EAAE,CAAC,YAAD,CAAtM;AAAsN0C,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC,CAAhO;AAAkSyI,wBAAkB,EAAEhC,GAAtT;AAA2TiC,WAAK,EAAE,CAAlU;AAAqUC,UAAI,EAAE,CAA3U;AAA8UE,cAAQ,EAAE,SAASiqC,mBAAT,CAA6B5sC,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/a;;AACA,qEAAoB,CAApB;AACH;AAAE,OAHoC;AAGlC9P,YAAM,EAAE,CAAC,y5aAAD,CAH0B;AAGm4a6S,mBAAa,EAAE,CAHl5a;AAGq5aC,qBAAe,EAAE;AAHt6a,KAAzB,CAAlB;;AAIA,QAAM2pC,uBAAuB,GAAG,oEAA6BH,UAA7B,CAAhC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,UAAzB,EAAqC,CAAC;AAC3D7tD,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAECsK,kBAAQ,EAAE,YAFX;AAGClB,cAAI,EAAE;AACF,oBAAQ,YADN;AAEF,qBAAS;AAFP,WAHP;AAOCyM,kBAAQ,EAAE,+BAPX;AAQC/I,gBAAM,EAAE,CAAC,eAAD,EAAkB,UAAlB,CART;AASCmJ,uBAAa,EAAE,gEAAkBG,IATlC;AAUCF,yBAAe,EAAE,sEAAwBG,MAV1C;AAWCjT,gBAAM,EAAE,CAAC,y5aAAD;AAXT,SAAD;AAFqD,OAAD,CAArC,EAerB,IAfqB,EAef,IAfe;AAeP,KAfR;;AAgBd,QAAI,KAAJ,EAAW,CAUV;;QACK28C,O;;;;;AACF;;;AAGA,uBAAY5vC,WAAZ,EAAyB;AAAA;;AAAA;;AACrB;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA;;;;AAGA,gBAAK4xB,aAAL,GAAqB,IAAI,4CAAJ,EAArB;;AACA,YAAI,QAAKie,YAAL,OAAwB,aAA5B,EAA2C;AACvC7vC,qBAAW,CAACxL,aAAZ,CAA0BhY,SAA1B,CAAoCC,GAApC,CAAwC,iBAAxC;AACH;;AAToB;AAUxB;AACD;;;;;;;uCAGe;AACX;AACA,cAAMwzB,QAAQ,GAAG,KAAKjQ,WAAL,CAAiBxL,aAAjB,CAA+Byb,QAA/B,CAAwC7B,WAAxC,EAAjB;;AACA,cAAI6B,QAAQ,KAAK,UAAjB,EAA6B;AACzB,mBAAO,MAAP;AACH;;AACD,cAAIA,QAAQ,KAAK,iBAAjB,EAAoC;AAChC,mBAAO,aAAP;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;sCAGc;AACV,eAAK2hB,aAAL,CAAmBptC,IAAnB;AACH;AACD;;;;;;sCAGc;AACV,eAAKotC,aAAL,CAAmBxoC,QAAnB;AACH;;;;MAxCiBgmD,iB;;AA0CtBQ,WAAO,CAACtuD,IAAR,GAAe,SAASwuD,eAAT,CAAyBtuD,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIouD,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,CAAP;AAAyE,KAAtH;;AACAA,WAAO,CAAC/qC,IAAR,GAAe,gEAAyB;AAAEnjB,UAAI,EAAEkuD,OAAR;AAAiB11C,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,iBAAD,CAAf,CAA5B;AAAiE0I,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,eAAhB,CAA5E;AAA8GjG,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCC,gBAAQ,EAAE;AAA5C,OAAtH;AAAgLrK,cAAQ,EAAE,CAAC,SAAD,CAA1L;AAAuM0C,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC,CAAjN;AAAmRyI,wBAAkB,EAAEhC,GAAvS;AAA4SiC,WAAK,EAAE,CAAnT;AAAsTC,UAAI,EAAE,CAA5T;AAA+TE,cAAQ,EAAE,SAASqqC,gBAAT,CAA0BhtC,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1Z;;AACA,qEAAoB,CAApB;AACH;AAAE,OAHiC;AAG/B9P,YAAM,EAAE,CAAC,y5aAAD,CAHuB;AAGs4a6S,mBAAa,EAAE,CAHr5a;AAGw5aC,qBAAe,EAAE;AAHz6a,KAAzB,CAAf;AAIA;;AACA6pC,WAAO,CAACnuD,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAE;AAAR,OAD2B,CAAN;AAAA,KAAzB;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkuD,OAAzB,EAAkC,CAAC;AACxDluD,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,2BADX;AAECsK,kBAAQ,EAAE,SAFX;AAGCuL,kBAAQ,EAAE,+BAHX;AAICzM,cAAI,EAAE;AACF,qBAAS;AADP,WAJP;AAOC0D,gBAAM,EAAE,CAAC,eAAD,EAAkB,UAAlB,CAPT;AAQCmJ,uBAAa,EAAE,gEAAkBG,IARlC;AASCF,yBAAe,EAAE,sEAAwBG,MAT1C;AAUCjT,gBAAM,EAAE,CAAC,y5aAAD;AAVT,SAAD;AAFkD,OAAD,CAAlC,EAcrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OAdhC,EAckC,IAdlC;AAc0C,KAdzD;;AAed,QAAI,KAAJ,EAAW,CAeV;AACD;;;;;;QAIMsuD,yB;;;;AAENA,6BAAyB,CAAC1uD,IAA1B,GAAiC,SAAS2uD,iCAAT,CAA2CzuD,CAA3C,EAA8C;AAAE,aAAO,KAAKA,CAAC,IAAIwuD,yBAAV,GAAP;AAAgD,KAAjI;;AACAA,6BAAyB,CAAC/1C,IAA1B,GAAiC,gEAAyB;AAAEvY,UAAI,EAAEsuD,yBAAR;AAAmC91C,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAA9C;AAAwG0I,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAnH,KAAzB,CAAjC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBotC,yBAAzB,EAAoD,CAAC;AAC1EtuD,YAAI,EAAE,uDADoE;AAE1EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,oCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFoE,OAAD,CAApD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMi3C,uB;;;;AAENA,2BAAuB,CAAC5uD,IAAxB,GAA+B,SAAS6uD,+BAAT,CAAyC3uD,CAAzC,EAA4C;AAAE,aAAO,KAAKA,CAAC,IAAI0uD,uBAAV,GAAP;AAA8C,KAA3H;;AACAA,2BAAuB,CAACj2C,IAAxB,GAA+B,gEAAyB;AAAEvY,UAAI,EAAEwuD,uBAAR;AAAiCh2C,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,EAA4B,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAA5B,CAA5C;AAAkG0I,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ;AAA7G,KAAzB,CAA/B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBstC,uBAAzB,EAAkD,CAAC;AACxExuD,YAAI,EAAE,uDADkE;AAExEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFkE,OAAD,CAAlD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMm3C,4B;;;;AAENA,gCAA4B,CAAC9uD,IAA7B,GAAoC,SAAS+uD,oCAAT,CAA8C7uD,CAA9C,EAAiD;AAAE,aAAO,KAAKA,CAAC,IAAI4uD,4BAAV,GAAP;AAAmD,KAA1I;;AACAA,gCAA4B,CAACn2C,IAA7B,GAAoC,gEAAyB;AAAEvY,UAAI,EAAE0uD,4BAAR;AAAsCl2C,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,EAA4B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA5B,CAAjD;AAAwG0I,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ;AAAnH,KAAzB,CAApC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBwtC,4BAAzB,EAAuD,CAAC;AAC7E1uD,YAAI,EAAE,uDADuE;AAE7EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFuE,OAAD,CAAvD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;QAGMq3C,W;;;;;AACF;;;;;;AAMA,2BAAYC,QAAZ,EAAsBnoC,kBAAtB,EAA0CooC,OAA1C,EAAmDC,IAAnD,EAAyD;AAAA;;AAAA;;AACrD;AACA,gBAAKF,QAAL,GAAgBA,QAAhB;AACA,gBAAKG,kBAAL,GAA0B,KAA1B;AACA,gBAAKpwC,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,gBAAK4I,SAAL,GAAiB,KAAjB;AACA,gBAAKwnC,kBAAL,GAA0B,CAAC,EAAEF,OAAO,IAAKC,IAAI,IAAIA,IAAI,CAACZ,YAAL,OAAwB,aAA9C,CAA3B;AACA,gBAAKc,KAAL,GAAaH,OAAO,IAAIC,IAAxB,CAPqD,CAQrD;AACA;;AACA;;AACA,YAAMlxD,OAAO,GAAG,QAAK4kB,eAAL,EAAhB;;AACA,YAAI5kB,OAAO,CAAC0wB,QAAR,CAAiB7B,WAAjB,OAAmC,QAAnC,IAA+C,CAAC7uB,OAAO,CAAColB,YAAR,CAAqB,MAArB,CAApD,EAAkF;AAC9EplB,iBAAO,CAAC+G,YAAR,CAAqB,MAArB,EAA6B,QAA7B;AACH;;AACD,YAAI,QAAKqqD,KAAT,EAAgB;AACZ;AACA;AACA,kBAAKA,KAAL,CAAW/e,aAAX,CAAyBlpC,IAAzB,CAA8B,iEAAU,QAAK4X,UAAf,CAA9B,EAA0DvhB,SAA1D;AAAqE;;;AAGrE,sBAAM;AACFqpB,8BAAkB,CAACqB,YAAnB;AACH,WALD;AAMH;;AAxBoD;AAyBxD;AACD;;;;;;;;;AAYA;;;6CAGqB;AACjB,kFAAS,KAAKmnC,MAAd,EAAsB,KAAKL,QAA3B;AACH;AACD;;;;;;sCAGc;AACV,eAAKjwC,UAAL,CAAgB9b,IAAhB;;AACA,eAAK8b,UAAL,CAAgBlX,QAAhB;AACH;AACD;;;;;;;4CAIoB;AAChB,iBAAO,CAAC,KAAKsnD,kBAAN,IAA4B,KAAKnsC,aAAjC,IACH,CAAC,EAAE,KAAKosC,KAAL,IAAc,KAAKA,KAAL,CAAWpsC,aAA3B,CADL;AAEH;AACD;;;;;;;0CAIkB;AACd,iBAAO,KAAKgsC,QAAL,CAAc/7C,aAArB;AACH;;;4BAnCc;AAAE,iBAAO,KAAK0U,SAAL,IAAkB,CAAC,EAAE,KAAKynC,KAAL,IAAc,KAAKA,KAAL,CAAWnsC,QAA3B,CAA1B;AAAiE;AAClF;;;;;0BAIa3gB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB;AACH;;;;MA5CqByrD,qB;;AA0E1BgB,eAAW,CAAChvD,IAAZ,GAAmB,SAASuvD,mBAAT,CAA6BrvD,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAI8uD,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyBf,UAAzB,EAAqC,CAArC,CAAxH,EAAiK,gEAAyBK,OAAzB,EAAkC,CAAlC,CAAjK,CAAP;AAAgN,KAArQ;;AACAU,eAAW,CAACzrC,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAE4uD,WAAR;AAAqBp2C,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,EAAoB,CAAC,GAAD,EAAM,eAAN,EAAuB,EAAvB,CAApB,EAAgD,CAAC,QAAD,EAAW,eAAX,EAA4B,EAA5B,CAAhD,CAAhC;AAAkH8U,oBAAc,EAAE,SAAS8hC,0BAAT,CAAoC/tC,EAApC,EAAwCC,GAAxC,EAA6CkM,QAA7C,EAAuD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAC3O,uEAAsBmM,QAAtB,EAAgC8gC,yBAAhC,EAA2D,IAA3D;;AACA,uEAAsB9gC,QAAtB,EAAgCghC,uBAAhC,EAAyD,IAAzD;;AACA,uEAAsBhhC,QAAtB,EAAgC,8DAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAInM,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC+tC,OAAJ,GAAc/rC,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACguC,KAAJ,GAAYhsC,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC4tC,MAAJ,GAAa5rC,EAAlE;AACH;AAAE,OATqC;AASnCpC,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,EAAqB,qBAArB,CATwB;AASqBuC,cAAQ,EAAE,CAT/B;AASkCtC,kBAAY,EAAE,SAASouC,wBAAT,CAAkCluC,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7I,oEAAmB,wBAAnB,EAA6CC,GAAG,CAACwB,QAAjD,EAA2D,sBAA3D,EAAmFxB,GAAG,CAAC+tC,OAAJ,IAAe/tC,GAAG,CAACguC,KAAtG,EAA6G,2BAA7G,EAA0IhuC,GAAG,CAAC+tC,OAAJ,IAAe/tC,GAAG,CAACguC,KAA7J;AACH;AAAE,OAXqC;AAWnCr0C,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCC,gBAAQ,EAAE;AAA5C,OAX2B;AAW+BrK,cAAQ,EAAE,CAAC,aAAD,CAXzC;AAW0D0C,cAAQ,EAAE,CAAC,wEAAD,CAXpE;AAWyGyI,wBAAkB,EAAE4B,GAX7H;AAWkI3B,WAAK,EAAE,CAXzI;AAW4IC,UAAI,EAAE,CAXlJ;AAWqJC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,EAA+B,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,sBAAtB,EAA8C,CAA9C,EAAiD,kBAAjD,EAAqE,mBAArE,CAA/B,EAA0H,CAAC,CAAD,EAAI,eAAJ,CAA1H,CAX7J;AAW8SC,cAAQ,EAAE,SAASwrC,oBAAT,CAA8BnuC,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjZ,wEAAuBQ,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIR,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCC,GAAG,CAACmB,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkFnB,GAAG,CAAC4C,iBAAJ,EAAlF;AACH;AAAE,OAxBqC;AAwBnCC,gBAAU,EAAE,CAAC,gEAAD,CAxBuB;AAwBHC,mBAAa,EAAE,CAxBZ;AAwBeC,qBAAe,EAAE;AAxBhC,KAAzB,CAAnB;AAyBA;;AACAuqC,eAAW,CAAC7uD,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAE6tD,UAAR;AAAoB3tD,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAhC,OAH+B,EAI/B;AAAEA,YAAI,EAAEkuD,OAAR;AAAiBhuD,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA7B,OAJ+B,CAAN;AAAA,KAA7B;;AAMA4uD,eAAW,CAACxzC,cAAZ,GAA6B;AACzB8zC,YAAM,EAAE,CAAC;AAAElvD,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,8DAAD,EAAU;AAAEi1B,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CADiB;AAEzBi6B,aAAO,EAAE,CAAC;AAAErvD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACmuD,yBAAD;AAA5B,OAAD,CAFgB;AAGzBgB,WAAK,EAAE,CAAC;AAAEtvD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACquD,uBAAD;AAA5B,OAAD,CAHkB;AAIzB1rC,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD;AAJe,KAA7B;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4uD,WAAzB,EAAsC,CAAC;AAC5D5uD,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wDADX;AAECsK,kBAAQ,EAAE,aAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,mCADP;AAEF,8CAAkC,UAFhC;AAGF;AACA,4CAAgC,kBAJ9B;AAKF,iDAAqC;AALnC,WAHP;AAUC0D,gBAAM,EAAE,CAAC,eAAD,CAVT;AAWC+I,kBAAQ,EAAE,scAXX;AAYCI,uBAAa,EAAE,gEAAkBG,IAZlC;AAaCF,yBAAe,EAAE,sEAAwBG;AAb1C,SAAD;AAFsD,OAAD,CAAtC,EAiBrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE6tD,UAAR;AAAoB3tD,oBAAU,EAAE,CAAC;AAChHF,gBAAI,EAAE;AAD0G,WAAD;AAAhC,SAAlE,EAEX;AAAEA,cAAI,EAAEkuD,OAAR;AAAiBhuD,oBAAU,EAAE,CAAC;AAChCF,gBAAI,EAAE;AAD0B,WAAD;AAA7B,SAFW,CAAP;AAIF,OArBS,EAqBP;AAAE8iB,gBAAQ,EAAE,CAAC;AACvB9iB,cAAI,EAAE;AADiB,SAAD,CAAZ;AAEVkvD,cAAM,EAAE,CAAC;AACTlvD,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAAC,8DAAD,EAAU;AAAEi1B,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CAFE;AAKVi6B,eAAO,EAAE,CAAC;AACVrvD,cAAI,EAAE,0DADI;AAEVG,cAAI,EAAE,CAACmuD,yBAAD;AAFI,SAAD,CALC;AAQVgB,aAAK,EAAE,CAAC;AACRtvD,cAAI,EAAE,0DADE;AAERG,cAAI,EAAE,CAACquD,uBAAD;AAFE,SAAD;AARG,OArBO;AAgCb,KAhCF;;AAiCd,QAAI,KAAJ,EAAW,CAoCV;AAED;;;;;;AAKA;;;;;QAGMiB,oB;;;AAEN;;;AACA,QAAMC,0BAA0B,GAAG,kFAAmBD,oBAAnB,CAAnC;AACA;;;;;QAGME,iB;;;AAEN;;;AACA,QAAMC,uBAAuB,GAAG,kFAAmBD,iBAAnB,CAAhC;AACA;;;;;;AAIA,QAAME,iCAAiC,GAAG;AACtCnsD,aAAO,EAAE,gEAD6B;AAEtCqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAM+pC,gBAAN;AAAA,OAHa,CAFyB;AAMtC7pC,WAAK,EAAE;AAN+B,KAA1C;AAQA;;;;QAGM8pC,sB;AACF;;;;AAIA,oCAAY97C,MAAZ,EAAoB+7C,MAApB,EAA4B;AAAA;;AACxB,WAAK/7C,MAAL,GAAcA,MAAd;AACA,WAAK+7C,MAAL,GAAcA,MAAd;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;QAKMC,a;;;;;AACF;;;;;AAKA,6BAAYpB,QAAZ,EAAsBqB,eAAtB,EAAuCC,aAAvC,EAAsD;AAAA;;AAAA;;AAClD;AACA,gBAAKtB,QAAL,GAAgBA,QAAhB;AACA,gBAAKqB,eAAL,GAAuBA,eAAvB;AACA,gBAAKC,aAAL,GAAqBA,aAArB;AACA,gBAAKzkC,SAAL,GAAiB,KAAjB;AACA,gBAAKlE,SAAL,GAAiB,KAAjB;AACA,gBAAK+D,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAK6kC,gBAAL,GAAwB,OAAxB;AACA;;;;;AAIA,gBAAKC,kBAAL,GAA0B,KAA1B;AAhBkD;AAiBrD;AACD;;;;;;;;;AA2DA;;;mCAGW;AAAA;;AACP;AACA,cAAMtB,IAAI,GAAG,KAAKoB,aAAlB;;AACA,cAAIpB,IAAI,CAAC3hC,MAAL,IAAe2hC,IAAI,CAAC3hC,MAAL,CAAYrvB,IAAZ;AAAkB;;;;AAIrC,oBAAAoE,KAAK;AAAA,mBAAI4sD,IAAI,CAAC95B,WAAL,CAAiB9yB,KAAjB,EAAwB,OAAI,CAACirB,MAA7B,CAAJ;AAAA,WAJc,CAAnB,EAIiD;AAC7C,iBAAKkjC,YAAL,CAAkB,IAAlB;AACH;AACD;;;AACA,cAAMC,WAAW,GAAG,KAAK7kC,SAAzB,CAXO,CAYP;AACA;AACA;AACA;AACA;;AACA9D,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,gBAAI,OAAI,CAAC4D,SAAL,IAAkB6kC,WAAtB,EAAmC;AAC/B,qBAAI,CAAC1lC,QAAL,GAAgB,IAAhB;;AACA,qBAAI,CAACqlC,eAAL,CAAqBnoC,YAArB;AACH;AACJ,WARD;AASA,eAAKsoC,kBAAL,GAA0B,IAA1B;AACH;AACD;;;;;;6CAGqB;AACjB,kFAAS,KAAKnB,MAAd,EAAsB,KAAKL,QAA3B;AACH;AACD;;;;;;sCAGc;AAAA;;AACV,cAAI,KAAKhkC,QAAT,EAAmB;AACf;AACA;AACAjD,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF,qBAAI,CAAC+C,QAAL,GAAgB,KAAhB;AACH,aALD;AAMH;AACD;;;AACA,cAAM2lC,QAAQ,GAAG,KAAKjlC,SAAtB;AACA;;AACA,cAAMklC,aAAa,GAAG,KAAKN,aAAL,CAAmBO,qBAAnB,CAAyC,IAAzC,CAAtB,CAdU,CAeV;;;AACA,cAAIF,QAAQ,IAAIC,aAAhB,EAA+B;AAC3BA,yBAAa,CAAC1jC,KAAd;AACH;AACJ;AACD;;;;;;;iCAIS;AACL,eAAKlC,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAKgkC,QAAL,CAAc/7C,aAAd,CAA4Bia,KAA5B;AACH;AACD;;;;;;;;mCAKW;AACP,iBAAO,KAAK4jC,KAAL,GAAc,KAAKA,KAAL,CAAW79C,aAAX,CAAyBmX,WAAzB,IAAwC,EAAtD,GAA4D,EAAnE;AACH;AACD;;;;;;;4CAIoB;AAChB,iBAAO,KAAKnH,QAAL,IAAiB,KAAKD,aAAtB,IAAuC,KAAKstC,aAAL,CAAmBttC,aAAjE;AACH;AACD;;;;;;uCAGe;AACX,cAAI,CAAC,KAAKC,QAAN,KAAmB,KAAKqtC,aAAL,CAAmBl/B,QAAnB,IAA+B,CAAC,KAAKpG,QAAxD,CAAJ,EAAuE;AACnE,iBAAKnC,MAAL,GADmE,CAEnE;;AACA,iBAAKynC,aAAL,CAAmBvnC,gBAAnB,CAAoC,IAApC;AACH;AACJ;AACD;;;;;;uCAGe;AACX,eAAKunC,aAAL,CAAmBS,iBAAnB,CAAqC,IAArC;;AACA,eAAKrlC,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;;sCAGc;AACV,eAAK4kC,aAAL,CAAmBhpC,UAAnB;;AACA,eAAKoE,SAAL,GAAiB,KAAjB;AACH;AACD;;;;;;;0CAIkB;AACd,iBAAO,KAAKsjC,QAAL,CAAc/7C,aAArB;AACH;AACD;;;;;;;;qCAKa+X,Q,EAAU;AACnB,cAAIA,QAAQ,KAAK,KAAKa,SAAtB,EAAiC;AAC7B,mBAAO,KAAP;AACH;;AACD,eAAKA,SAAL,GAAiBb,QAAjB;;AACA,cAAIA,QAAJ,EAAc;AACV,iBAAKslC,aAAL,CAAmBU,eAAnB,CAAmCj+B,MAAnC,CAA0C,IAA1C;AACH,WAFD,MAGK;AACD,iBAAKu9B,aAAL,CAAmBU,eAAnB,CAAmCz+B,QAAnC,CAA4C,IAA5C;AACH;;AACD,eAAK89B,eAAL,CAAqBnoC,YAArB;;AACA,iBAAO,IAAP;AACH;AACD;;;;;;;;;wCAMgB;AACZ,eAAKmoC,eAAL,CAAqBnoC,YAArB;AACH;;;4BA1MW;AAAE,iBAAO,KAAK8kB,MAAL,IAAe,KAAKsjB,aAAL,CAAmBztC,KAAzC;AAAiD;AAC/D;;;;;0BAIUuG,Q,EAAU;AAAE,eAAK4jB,MAAL,GAAc5jB,QAAd;AAAyB;AAC/C;;;;;;;4BAIY;AAAE,iBAAO,KAAKmE,MAAZ;AAAqB;AACnC;;;;;0BAIUnE,Q,EAAU;AAChB,cAAI,KAAK4B,QAAL,IAAiB5B,QAAQ,KAAK,KAAK9mB,KAAnC,IAA4C,KAAKkuD,kBAArD,EAAyE;AACrE,iBAAKxlC,QAAL,GAAgB,KAAhB;AACH;;AACD,eAAKuC,MAAL,GAAcnE,QAAd;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKzB,SAAL,IAAmB,KAAK2oC,aAAL,IAAsB,KAAKA,aAAL,CAAmBrtC,QAAnE;AAA+E;AAChG;;;;;0BAIa3gB,K,EAAO;AAChB;AACA,cAAM8mB,QAAQ,GAAG,oFAAsB9mB,KAAtB,CAAjB;;AACA,cAAI8mB,QAAQ,KAAK,KAAKzB,SAAtB,EAAiC;AAC7B,iBAAKA,SAAL,GAAiByB,QAAjB;;AACA,iBAAKinC,eAAL,CAAqBnoC,YAArB;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKooC,aAAL,CAAmBU,eAAnB,CAAmCl9B,UAAnC,CAA8C,IAA9C,CAAP;AAA6D;AAC9E;;;;;0BAIaxxB,K,EAAO;AAChB;AACA,cAAMwxB,UAAU,GAAG,oFAAsBxxB,KAAtB,CAAnB;;AACA,cAAIwxB,UAAU,KAAK,KAAKjI,SAAxB,EAAmC;AAC/B,iBAAK4kC,YAAL,CAAkB38B,UAAlB;;AACA,iBAAKw8B,aAAL,CAAmBW,kBAAnB;AACH;AACJ;;;;MAlFuBlB,uB;;AAwO5BK,iBAAa,CAACrwD,IAAd,GAAqB,SAASmxD,qBAAT,CAA+BjxD,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAImwD,aAAV,EAAyB,gEAAyB,wDAAzB,CAAzB,EAAsE,gEAAyB,+DAAzB,CAAtE,EAA0H,gEAAyB;AAAa;;;AAE7M;AAAA,eAAMH,gBAAN;AAAA,OAFgM,CAAzB,CAA1H,CAAP;AAET,KAFhD;;AAGAG,iBAAa,CAAC9sC,IAAd,GAAqB,gEAAyB;AAAEnjB,UAAI,EAAEiwD,aAAR;AAAuBz3C,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD8U,oBAAc,EAAE,SAAS0jC,4BAAT,CAAsC3vC,EAAtC,EAA0CC,GAA1C,EAA+CkM,QAA/C,EAAyD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AACtL,uEAAsBmM,QAAtB,EAAgC8gC,yBAAhC,EAA2D,IAA3D;;AACA,uEAAsB9gC,QAAtB,EAAgCghC,uBAAhC,EAAyD,IAAzD;;AACA,uEAAsBhhC,QAAtB,EAAgC,8DAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAInM,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC+tC,OAAJ,GAAc/rC,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACguC,KAAJ,GAAYhsC,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC4tC,MAAJ,GAAa5rC,EAAlE;AACH;AAAE,OATuC;AASrCF,eAAS,EAAE,SAAS6tC,mBAAT,CAA6B5vC,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChE,oEAAmB8Z,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAI9Z,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACqvC,KAAJ,GAAYrtC,EAAE,CAACE,KAApE;AACH;AAAE,OAduC;AAcrCtC,eAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,eAAtB,EAAuC,iBAAvC,EAA0D,qBAA1D,CAd0B;AAcwDuC,cAAQ,EAAE,EAdlE;AAcsEtC,kBAAY,EAAE,SAAS+vC,0BAAT,CAAoC7vC,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrL,mEAAkB,OAAlB,EAA2B,SAAS8vC,sCAAT,GAAkD;AAAE,mBAAO7vC,GAAG,CAAC8vC,YAAJ,EAAP;AAA4B,WAA3G,EAA6G,MAA7G,EAAqH,SAASC,qCAAT,GAAiD;AAAE,mBAAO/vC,GAAG,CAACgwC,WAAJ,EAAP;AAA2B,WAAnM,EAAqM,OAArM,EAA8M,SAASC,sCAAT,GAAkD;AAAE,mBAAOjwC,GAAG,CAACyM,YAAJ,EAAP;AAA4B,WAA9R;AACH;;AAAC,YAAI1M,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,eAAnB,EAAoCC,GAAG,CAACuJ,QAAxC,EAAkD,eAAlD,EAAmEvJ,GAAG,CAACwB,QAAvE,EAAiF,UAAjF,EAA6F,IAAI,CAAjG;;AACA,oEAAmB,wBAAnB,EAA6CxB,GAAG,CAACwB,QAAjD,EAA2D,2BAA3D,EAAwFxB,GAAG,CAAC+tC,OAAJ,IAAe/tC,GAAG,CAACguC,KAA3G,EAAkH,aAAlH,EAAiIhuC,GAAG,CAACoB,KAAJ,KAAc,SAA/I,EAA0J,YAA1J,EAAwKpB,GAAG,CAACoB,KAAJ,KAAc,SAAd,IAA2BpB,GAAG,CAACoB,KAAJ,KAAc,MAAjN,EAAyN,UAAzN,EAAqOpB,GAAG,CAACoB,KAAJ,KAAc,MAAnP,EAA2P,iCAA3P,EAA8RpB,GAAG,CAACuJ,QAAJ,IAAgB,CAACvJ,GAAG,CAAC6uC,aAAJ,CAAkBl/B,QAAjU;AACH;AAAE,OAnBuC;AAmBrChW,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCutC,wBAAgB,EAAE,kBAApD;AAAwE1tC,aAAK,EAAE,OAA/E;AAAwFvgB,aAAK,EAAE,OAA/F;AAAwG0oB,gBAAQ,EAAE,UAAlH;AAA8H/H,gBAAQ,EAAE;AAAxI,OAnB6B;AAmByHrK,cAAQ,EAAE,CAAC,eAAD,CAnBnI;AAmBsJ0C,cAAQ,EAAE,CAAC,wEAAD,CAnBhK;AAmBqMyI,wBAAkB,EAAEy3B,GAnBzN;AAmB8Nx3B,WAAK,EAAE,CAnBrO;AAmBwOC,UAAI,EAAE,CAnB9O;AAmBiPC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,EAA+B,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,sBAAtB,EAA8C,CAA9C,EAAiD,kBAAjD,EAAqE,mBAArE,CAA/B,EAA0H,CAAC,CAAD,EAAI,OAAJ,EAAa,UAAb,EAAyB,CAAzB,EAA4B,MAA5B,CAA1H,EAA+J,CAAC,CAAD,EAAI,eAAJ,CAA/J,EAAqL,CAAC,MAAD,EAAS,EAAT,CAArL,EAAmM,CAAC,CAAD,EAAI,OAAJ,EAAa,UAAb,CAAnM,CAnBzP;AAmBudC,cAAQ,EAAE,SAASwtC,sBAAT,CAAgCnwC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9jB,wEAAuB+Z,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,mEAAkB,CAAlB,EAAqBoyB,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,qBAAzE,EAAgG,CAAhG;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAInsC,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,+BAAnB,EAAoDC,GAAG,CAAC8uC,gBAAJ,IAAwB,OAA5E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsC9uC,GAAG,CAACmB,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkFnB,GAAG,CAAC4C,iBAAJ,EAAlF;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B5C,GAAG,CAAC6uC,aAAJ,CAAkBl/B,QAA5C;AACH;AAAE,OAnCuC;AAmCrC9M,gBAAU,EAAE,CAAC,gEAAD,EAAmB,oDAAnB,EAAgC,wEAAhC,CAnCyB;AAmCkCC,mBAAa,EAAE,CAnCjD;AAmCoDC,qBAAe,EAAE;AAnCrE,KAAzB,CAArB;AAoCA;;AACA4rC,iBAAa,CAAClwD,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAE;AAAR,OADiC,EAEjC;AAAEA,YAAI,EAAE;AAAR,OAFiC,EAGjC;AAAEA,YAAI,EAAE8vD,gBAAR;AAA0B5vD,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG1D;AAAA,mBAAM2vD,gBAAN;AAAA,WAH8C,CAAD;AAAtB,SAAD;AAAtC,OAHiC,CAAN;AAAA,KAA/B;;AAQAG,iBAAa,CAAC70C,cAAd,GAA+B;AAC3Bi0C,aAAO,EAAE,CAAC;AAAErvD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACmuD,yBAAD;AAA5B,OAAD,CADkB;AAE3BgB,WAAK,EAAE,CAAC;AAAEtvD,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACquD,uBAAD;AAA5B,OAAD,CAFoB;AAG3BU,YAAM,EAAE,CAAC;AAAElvD,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,8DAAD,EAAU;AAAEi1B,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CAHmB;AAI3Bu7B,WAAK,EAAE,CAAC;AAAE3wD,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,MAAD;AAAzB,OAAD,CAJoB;AAK3BiwD,sBAAgB,EAAE,CAAC;AAAEpwD,YAAI,EAAE;AAAR,OAAD,CALS;AAM3B0iB,WAAK,EAAE,CAAC;AAAE1iB,YAAI,EAAE;AAAR,OAAD,CANoB;AAO3BmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAPoB;AAQ3B8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CARiB;AAS3B6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD;AATiB,KAA/B;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyBiwD,aAAzB,EAAwC,CAAC;AAC9DjwD,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAECsK,kBAAQ,EAAE,eAFX;AAGCwC,gBAAM,EAAE,CAAC,eAAD,CAHT;AAIC1D,cAAI,EAAE;AACF,oBAAQ,QADN;AAEF,qBAAS,mDAFP;AAGF,uBAAW,gBAHT;AAIF,sBAAU,eAJR;AAKF,uBAAW,gBALT;AAMF,8CAAkC,UANhC;AAOF,iDAAqC,kBAPnC;AAQF;AACA;AACA;AACA,mCAAuB,qBAXrB;AAYF;AACA;AACA,kCAAsB,yCAdpB;AAeF,gCAAoB,kBAflB;AAgBF,uDAA2C,qCAhBzC;AAiBF,oCAAwB,UAjBtB;AAkBF,oCAAwB,UAlBtB;AAmBF,+BAAmB;AAnBjB,WAJP;AAyBCyM,kBAAQ,EAAE,4nBAzBX;AA0BCI,uBAAa,EAAE,gEAAkBG,IA1BlC;AA2BCF,yBAAe,EAAE,sEAAwBG;AA3B1C,SAAD;AAFwD,OAAD,CAAxC,EA+BrB,YAAY;AAAE,eAAO,CAAC;AAAExkB,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE8vD,gBAAR;AAA0B5vD,oBAAU,EAAE,CAAC;AACtHF,gBAAI,EAAE,oDADgH;AAEtHG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM2vD,gBAAN;AAAA,aAFhB,CAAD;AAFgH,WAAD;AAAtC,SAAlE,CAAP;AAKF,OApCS,EAoCP;AAAEM,wBAAgB,EAAE,CAAC;AAC/BpwD,cAAI,EAAE;AADyB,SAAD,CAApB;AAEV0iB,aAAK,EAAE,CAAC;AACR1iB,cAAI,EAAE;AADE,SAAD,CAFG;AAIVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAJG;AAMV6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CANA;AAQV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CARA;AAUVqvD,eAAO,EAAE,CAAC;AACVrvD,cAAI,EAAE,0DADI;AAEVG,cAAI,EAAE,CAACmuD,yBAAD;AAFI,SAAD,CAVC;AAaVgB,aAAK,EAAE,CAAC;AACRtvD,cAAI,EAAE,0DADE;AAERG,cAAI,EAAE,CAACquD,uBAAD;AAFE,SAAD,CAbG;AAgBVU,cAAM,EAAE,CAAC;AACTlvD,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAAC,8DAAD,EAAU;AAAEi1B,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CAhBE;AAmBVu7B,aAAK,EAAE,CAAC;AACR3wD,cAAI,EAAE,uDADE;AAERG,cAAI,EAAE,CAAC,MAAD;AAFE,SAAD;AAnBG,OApCO;AA0Db,KA1DF;;AA2Dd,QAAI,KAAJ,EAAW,CAsEV;AACD;;;;;QAGM2vD,gB;;;;;AACF;;;;;AAKA,gCAAYjB,QAAZ,EACA;AACA3pC,cAFA,EAEUgrC,eAFV,EAE2B;AAAA;;AAAA;;AACvB;AACA,gBAAKrB,QAAL,GAAgBA,QAAhB;AACA,gBAAKqB,eAAL,GAAuBA,eAAvB;AACA,gBAAKtgC,SAAL,GAAiB,IAAjB;AACA,gBAAK6hC,mBAAL,GAA2B,KAA3B;AACA;;;;AAGA,gBAAK1lC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;;AAIA,gBAAK7G,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,gBAAKxC,KAAL,GAAa,QAAb;AACA;;;;;;AAKA,gBAAKuS,WAAL;AAAoB;;;;;AAKpB,kBAACy8B,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;;AAMA,gBAAKnqC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKqpC,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,QAAKjhC,SAAxB,CAAvB;AACA;;;;AAGA,gBAAKH,SAAL,GAAiB,CAAC,CAAlB;AACA;;;;AAGA,gBAAKE,SAAL;AAAkB;;;;AAIlB,kBAACiiC,CAAD,EAAO,CAAG,CAJV;AAKA;;;;;AAGA,gBAAKhzC,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,gBAAKuI,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;;AAtDuB;AA0D1B;AACD;;;;;;;;;AAqCA;;;6CAGqB;AAAA;;AACjB,eAAKsqC,mBAAL,GAA2B,IAA3B;AACA,eAAKthC,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKxN,OAAzB,EACd0N,QADc,GAEdwhC,aAFc,GAGf;AACA;AAJe,WAKdC,aALc;AAKC;;;AAGpB;AAAA,mBAAM,KAAN;AAAA,WARmB,EASdC,uBATc,CASU,CAAC,UAAD,CATV,CAAnB;;AAUA,cAAI,KAAK3kC,MAAT,EAAiB;AACb,iBAAK4kC,qBAAL,CAA2B,KAAK5kC,MAAhC;AACH,WAdgB,CAejB;;;AACA,eAAK+C,WAAL,CAAiBK,MAAjB,CAAwBxpB,IAAxB,CAA6B,iEAAU,KAAK4X,UAAf,CAA7B,EAAyDvhB,SAAzD;AAAoE;;;AAGpE,sBAAM;AACF,mBAAI,CAACozB,iBAAL;AACH,WALD,EAhBiB,CAsBjB;;;AACA,eAAK9N,OAAL,CAAa/I,OAAb,CAAqB5S,IAArB,CAA0B,iEAAU,IAAV,CAA1B,EAA2C,iEAAU,KAAK4X,UAAf,CAA3C,EAAuEvhB,SAAvE;AAAkF;;;AAGlF,sBAAM;AACF,mBAAI,CAACwzB,eAAL;AACH,WALD,EAvBiB,CA6BjB;;AACA,eAAKggC,eAAL,CAAqB3nC,OAArB,CAA6BliB,IAA7B,CAAkC,iEAAU,KAAK4X,UAAf,CAAlC,EAA8DvhB,SAA9D;AAAyE;;;;AAIzE,oBAAAmF,KAAK,EAAI;AACL,gBAAIA,KAAK,CAACyvD,KAAV,EAAiB;AAAA,0DACIzvD,KAAK,CAACyvD,KADV;AAAA;;AAAA;AACb,uEAA8B;AAAA,sBAArBC,IAAqB;AAC1BA,sBAAI,CAACrnC,QAAL,GAAgB,IAAhB;AACH;AAHY;AAAA;AAAA;AAAA;AAAA;AAIhB;;AACD,gBAAIroB,KAAK,CAACypB,OAAV,EAAmB;AAAA,0DACEzpB,KAAK,CAACypB,OADR;AAAA;;AAAA;AACf,uEAAgC;AAAA,sBAAvBimC,KAAuB;AAC5BA,uBAAI,CAACrnC,QAAL,GAAgB,KAAhB;AACH;AAHc;AAAA;AAAA;AAAA;AAAA;AAIlB;AACJ,WAfD;AAgBH;AACD;;;;;;;oCAIYjR,O,EAAS;AACjB;AACA,cAAMu4C,oBAAoB,GAAGv4C,OAAO,CAAC,eAAD,CAApC;AACA;;AACA,cAAMw4C,YAAY,GAAGx4C,OAAO,CAAC,OAAD,CAA5B;;AACA,cAAKu4C,oBAAoB,IAAI,CAACA,oBAAoB,CAACtqB,WAA/C,IACCuqB,YAAY,IAAI,CAACA,YAAY,CAACvqB,WADnC,EACiD;AAC7C,iBAAKwqB,oBAAL;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKzzC,UAAL,CAAgB9b,IAAhB;;AACA,eAAK8b,UAAL,CAAgBlX,QAAhB;;AACA,eAAK4qD,YAAL,GAAoB,IAApB;AACH;AACD;;;;;;;;8BAKM3vC,O,EAAS;AACX,eAAKksC,QAAL,CAAc/7C,aAAd,CAA4Bia,KAA5B,CAAkCpK,OAAlC;AACH;AACD;;;;;;;oCAIY;AACR,eAAK4vC,sBAAL,CAA4B,IAA5B;AACH;AACD;;;;;;;sCAIc;AACV,eAAKA,sBAAL,CAA4B,KAA5B;AACH;AACD;;;;;;;;0CAKkBvC,M,EAAQ;AACtB,eAAK7/B,WAAL,CAAiB8D,gBAAjB,CAAkC+7B,MAAlC;AACH;AACD;;;;;;;;8CAKsBA,M,EAAQ;AAC1B;AACA,cAAMwC,WAAW,GAAG,KAAKC,eAAL,CAAqBzC,MAArB,CAApB;;AACA,cAAIwC,WAAW,GAAG,CAAC,CAAf,IAAoB,KAAKriC,WAAL,CAAiBuiC,eAAjB,KAAqCF,WAA7D,EAA0E;AACtE;AACA,gBAAIA,WAAW,GAAG,CAAlB,EAAqB;AACjB,mBAAKriC,WAAL,CAAiB8D,gBAAjB,CAAkCu+B,WAAW,GAAG,CAAhD;AACH,aAFD,MAGK,IAAIA,WAAW,KAAK,CAAhB,IAAqB,KAAK7vC,OAAL,CAAahgB,MAAb,GAAsB,CAA/C,EAAkD;AACnD,mBAAKwtB,WAAL,CAAiB8D,gBAAjB,CAAkC12B,IAAI,CAAC2T,GAAL,CAASshD,WAAW,GAAG,CAAvB,EAA0B,KAAK7vC,OAAL,CAAahgB,MAAb,GAAsB,CAAhD,CAAlC;AACH;AACJ;;AACD,iBAAO,KAAKwtB,WAAL,CAAiBwiC,UAAxB;AACH;AACD;;;;;;;;iCAKSnwD,K,EAAO;AACZ;AACA,cAAM4X,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMw4C,OAAO,GAAG,KAAKziC,WAArB;AACA;;AACA,cAAM0iC,kBAAkB,GAAGD,OAAO,CAACF,eAAnC;AACA;;AACA,cAAMI,WAAW,GAAG,6EAAetwD,KAAf,CAApB;;AACA,kBAAQ4X,OAAR;AACI,iBAAK,2DAAL;AACA,iBAAK,2DAAL;AACI,kBAAI,CAAC04C,WAAD,IAAgB,CAACF,OAAO,CAACG,QAAR,EAArB,EAAyC;AACrC,qBAAKC,oBAAL,GADqC,CAErC;;;AACAxwD,qBAAK,CAAC6X,cAAN;AACH;;AACD;;AACJ,iBAAK,0DAAL;AACA,iBAAK,yDAAL;AACI,kBAAI,CAACy4C,WAAL,EAAkB;AACd14C,uBAAO,KAAK,0DAAZ,GAAmBw4C,OAAO,CAAChhC,kBAAR,EAAnB,GAAkDghC,OAAO,CAAC7gC,iBAAR,EAAlD;AACAvvB,qBAAK,CAAC6X,cAAN;AACH;;AACD;;AACJ;AACI;AACA,kBAAID,OAAO,KAAK,uDAAZ,IAAiB,KAAK6W,QAAtB,IAAkC,6EAAezuB,KAAf,EAAsB,SAAtB,CAAlC,IACA,CAACowD,OAAO,CAACG,QAAR,EADL,EACyB;AACrB;AACA,oBAAME,YAAY,GAAG,KAAKtwC,OAAL,CAAa5kB,IAAb;AAAmB;;;;AAIxC,0BAAAiyD,MAAM;AAAA,yBAAI,CAACA,MAAM,CAACltC,QAAR,IAAoB,CAACktC,MAAM,CAACnlC,QAAhC;AAAA,iBAJe,CAArB;;AAKA,qBAAK0nC,sBAAL,CAA4BU,YAA5B,EAA0C,IAA1C;;AACAzwD,qBAAK,CAAC6X,cAAN;AACH,eAVD,MAWK;AACDu4C,uBAAO,CAAC5gC,SAAR,CAAkBxvB,KAAlB;AACH;;AA/BT;;AAiCA,cAAI,KAAKyuB,QAAL,KAAkB7W,OAAO,KAAK,8DAAZ,IAAwBA,OAAO,KAAK,gEAAtD,KAAqE5X,KAAK,CAAC0wD,QAA3E,IACAN,OAAO,CAACF,eAAR,KAA4BG,kBADhC,EACoD;AAChD,iBAAKG,oBAAL;AACH;AACJ;AACD;;;;;;;6CAIqB;AACjB;AACA;AACA;AACA,cAAI,KAAKrwC,OAAL,IAAgB,CAAC,KAAK2vC,YAA1B,EAAwC;AACpC;AACA,gBAAMnwD,KAAK,GAAG,KAAKgxD,wBAAL,EAAd;;AACA,iBAAKxjC,SAAL,CAAextB,KAAf;;AACA,iBAAKirB,MAAL,GAAcjrB,KAAd;AACH;AACJ;AACD;;;;;;;;yCAKiB6tD,M,EAAQ;AACrB,eAAKjkC,eAAL,CAAqBjR,IAArB,CAA0B,IAAIi1C,sBAAJ,CAA2B,IAA3B,EAAiCC,MAAjC,CAA1B;AACH;AACD;;;;;;;;mCAKW;AACP;AACA,cAAMoD,WAAW,GAAG,KAAKjjC,WAAL,CAAiBuiC,eAArC;;AACA,cAAI,CAACU,WAAD,IAAiBA,WAAW,KAAK,CAAC,CAAtC,EAA0C;AACtC;AACA,iBAAKjjC,WAAL,CAAiByB,kBAAjB;AACH,WAHD,MAIK;AACD;AACA,iBAAKzB,WAAL,CAAiB+B,aAAjB,CAA+BkhC,WAA/B;AACH;AACJ;AACD;;;;;;;;mCAKWC,M,EAAQ;AACf,eAAKjmC,MAAL,GAAcimC,MAAd;;AACA,cAAI,KAAK1wC,OAAT,EAAkB;AACd,iBAAKqvC,qBAAL,CAA2BqB,MAAM,IAAI,EAArC;AACH;AACJ;AACD;;;;;;;;yCAKiBlrC,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;AACH;AACD;;;;;;;;yCAKiB3L,E,EAAI;AACjB,eAAKmT,SAAL,GAAiBnT,EAAjB;AACH;AACD;;;;;;;;0CAKkBA,E,EAAI;AAClB,eAAK2K,UAAL,GAAkB3K,EAAlB;AACH;AACD;;;;;;;;;8CAMsB62C,M,EAAQ;AAAA;;AAC1B,eAAK1wC,OAAL,CAAatZ,OAAb;AAAsB;;;;AAItB,oBAAA2mD,MAAM;AAAA,mBAAIA,MAAM,CAACM,YAAP,CAAoB,KAApB,CAAJ;AAAA,WAJN;AAKA+C,gBAAM,CAAChqD,OAAP;AAAgB;;;;AAIhB,oBAAAlH,KAAK,EAAI;AACL;AACA,gBAAMmxD,mBAAmB,GAAG,OAAI,CAAC3wC,OAAL,CAAa+P,IAAb;AAAmB;;;;AAI/C,sBAAAs9B,MAAM,EAAI;AACN;AACA;AACA,qBAAOA,MAAM,CAACnlC,QAAP,GAAkB,KAAlB,GAA0B,OAAI,CAACoK,WAAL,CAAiB+6B,MAAM,CAAC7tD,KAAxB,EAA+BA,KAA/B,CAAjC;AACH,aAR2B,CAA5B;;AASA,gBAAImxD,mBAAJ,EAAyB;AACrBA,iCAAmB,CAAChD,YAApB,CAAiC,IAAjC;AACH;AACJ,WAlBD;AAmBH;AACD;;;;;;;;mDAK2B;AACvB,iBAAO,KAAK3tC,OAAL,CAAamiC,MAAb;AAAqB;;;;AAI5B,oBAAAkL,MAAM;AAAA,mBAAIA,MAAM,CAACnlC,QAAX;AAAA,WAJC,EAIqBlY,GAJrB;AAI0B;;;;AAIjC,oBAAAq9C,MAAM;AAAA,mBAAIA,MAAM,CAAC7tD,KAAX;AAAA,WARC,CAAP;AASH;AACD;;;;;;;;+CAKuB;AACnB;AACA,cAAIoxD,YAAY,GAAG,KAAKpjC,WAAL,CAAiBuiC,eAApC;;AACA,cAAIa,YAAY,IAAI,IAAhB,IAAwB,KAAKv/B,aAAL,CAAmBu/B,YAAnB,CAA5B,EAA8D;AAC1D;AACA,gBAAIC,aAAa,GAAG,KAAK7wC,OAAL,CAAaoR,OAAb,GAAuBw/B,YAAvB,CAApB;;AACA,gBAAIC,aAAa,IAAI,CAACA,aAAa,CAAC1wC,QAAhC,KAA6C,KAAK8M,SAAL,IAAkB,CAAC4jC,aAAa,CAAC3oC,QAA9E,CAAJ,EAA6F;AACzF2oC,2BAAa,CAAC9qC,MAAd,GADyF,CAEzF;AACA;;AACA,mBAAKE,gBAAL,CAAsB4qC,aAAtB;AACH;AACJ;AACJ;AACD;;;;;;;;;;;+CAQuB7/B,U,EAAY8/B,Y,EAAc;AAC7C;AACA;;AACA;AACA,cAAIC,UAAU,GAAG,KAAjB;AACA,eAAK/wC,OAAL,CAAatZ,OAAb;AAAsB;;;;AAItB,oBAAA2mD,MAAM,EAAI;AACN,gBAAI,CAAC,CAACyD,YAAD,IAAiB,CAACzD,MAAM,CAACltC,QAA1B,KAAuCktC,MAAM,CAACM,YAAP,CAAoB38B,UAApB,CAA3C,EAA4E;AACxE+/B,wBAAU,GAAG,IAAb;AACH;AACJ,WARD;;AASA,cAAIA,UAAJ,EAAgB;AACZ,iBAAK5C,kBAAL;AACH;AACJ;AACD;;;;;;;;;sCAMc5tD,K,EAAO;AACjB,iBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKyf,OAAL,CAAahgB,MAA1C;AACH;AACD;;;;;;;;;wCAMgBqtD,M,EAAQ;AACpB,iBAAO,KAAKrtC,OAAL,CAAaoR,OAAb,GAAuB5wB,OAAvB,CAA+B6sD,MAA/B,CAAP;AACH;AACD;;;;;;;;+CAKuB;AACnB,cAAI,KAAKrtC,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAatZ,OAAb;AAAsB;;;;AAItB,sBAAA2mD,MAAM;AAAA,qBAAIA,MAAM,CAACljC,aAAP,EAAJ;AAAA,aAJN;AAKH;AACJ;AACD;;;;;;;;;;4CAOoB;AAAA;;AAChB,eAAK2C,SAAL,GAAiB,CAAC,CAAlB;AACAvmB,oBAAU;AAAE;;;AAGZ,sBAAM;AACF,mBAAI,CAACumB,SAAL,GAAiB,CAAjB;;AACA,mBAAI,CAACygC,eAAL,CAAqBnoC,YAArB;AACH,WANS,CAAV;AAOH;AACD;;;;;;;;0CAKkB;AACd,eAAK0H,SAAL,GAAkB,KAAK9M,OAAL,CAAahgB,MAAb,KAAwB,CAAzB,GAA8B,CAAC,CAA/B,GAAmC,CAApD;AACH;;;4BA9ac;AAAE,iBAAO,KAAK6kB,SAAZ;AAAwB;AACzC;;;;;0BAIarlB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB,CADgB,CAEhB;AACA;AACA;AACA;;AACA,eAAKkwD,oBAAL;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKziC,SAAZ;AAAwB;AACzC;;;;;0BAIaztB,K,EAAO;AAChB;AACA,cAAM8mB,QAAQ,GAAG,oFAAsB9mB,KAAtB,CAAjB;;AACA,cAAI8mB,QAAQ,KAAK,KAAK2G,SAAtB,EAAiC;AAC7B,gBAAI,qEAAe,KAAK6hC,mBAAxB,EAA6C;AACzC,oBAAM,IAAIt1D,KAAJ,CAAU,2EAAV,CAAN;AACH;;AACD,iBAAKyzB,SAAL,GAAiB3G,QAAjB;AACA,iBAAK4nC,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAKjhC,SAAxB,EAAmC,KAAKihC,eAAL,CAAqBhmC,QAAxD,CAAvB;AACH;AACJ;;;;MAvG0B6kC,0B;;AAuf/BI,oBAAgB,CAAClwD,IAAjB,GAAwB,SAAS+zD,wBAAT,CAAkC7zD,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIgwD,gBAAV,EAA4B,gEAAyB,wDAAzB,CAA5B,EAAyE,gEAAyB,UAAzB,CAAzE,EAA+G,gEAAyB,+DAAzB,CAA/G,CAAP;AAA4K,KAA3O;;AACAA,oBAAgB,CAAC3sC,IAAjB,GAAwB,gEAAyB;AAAEnjB,UAAI,EAAE8vD,gBAAR;AAA0Bt3C,eAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;AAA+D8U,oBAAc,EAAE,SAASsmC,+BAAT,CAAyCvyC,EAAzC,EAA6CC,GAA7C,EAAkDkM,QAAlD,EAA4D;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAClM,uEAAsBmM,QAAtB,EAAgCyiC,aAAhC,EAA+C,IAA/C;AACH;;AAAC,YAAI5uC,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACqB,OAAJ,GAAcW,EAAnE;AACH;AAAE,OAL0C;AAKxCpC,eAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,oBAAvB,EAA6C,eAA7C,CAL6B;AAKkCuC,cAAQ,EAAE,CAL5C;AAK+CtC,kBAAY,EAAE,SAAS0yC,6BAAT,CAAuCxyC,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACpK,mEAAkB,OAAlB,EAA2B,SAASyyC,yCAAT,GAAqD;AAAE,mBAAOxyC,GAAG,CAACuK,QAAJ,EAAP;AAAwB,WAA1G,EAA4G,MAA5G,EAAoH,SAASkoC,wCAAT,GAAoD;AAAE,mBAAOzyC,GAAG,CAAC6F,UAAJ,EAAP;AAA0B,WAApM,EAAsM,SAAtM,EAAiN,SAAS6sC,2CAAT,CAAqDhvC,MAArD,EAA6D;AAAE,mBAAO1D,GAAG,CAACwT,QAAJ,CAAa9P,MAAb,CAAP;AAA8B,WAA9S;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,sBAAnB,EAA2CC,GAAG,CAAC2P,QAA/C,EAAyD,eAAzD,EAA0E3P,GAAG,CAACwB,QAAJ,CAAaqC,QAAb,EAA1E,EAAmG,UAAnG,EAA+G7D,GAAG,CAACmO,SAAnH;AACH;AAAE,OAT0C;AASxCxU,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCqC,gBAAQ,EAAE,UAA5C;AAAwDxC,aAAK,EAAE,OAA/D;AAAwEuS,mBAAW,EAAE,aAArF;AAAoGnS,gBAAQ,EAAE,UAA9G;AAA0HmO,gBAAQ,EAAE;AAApI,OATgC;AASkH/V,aAAO,EAAE;AAAE6Q,uBAAe,EAAE;AAAnB,OAT3H;AASmKtT,cAAQ,EAAE,CAAC,kBAAD,CAT7K;AASmM0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC00C,iCAAD,CAA1B,CAAD,EAAiE,wEAAjE,EAAoG,kEAApG,CAT7M;AAS+UjsC,wBAAkB,EAAEhC,GATnW;AASwWiC,WAAK,EAAE,CAT/W;AASkXC,UAAI,EAAE,CATxX;AAS2XE,cAAQ,EAAE,SAASiwC,yBAAT,CAAmC5yC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxe;;AACA,qEAAoB,CAApB;AACH;AAAE,OAZ0C;AAYxC9P,YAAM,EAAE,CAAC,y5aAAD,CAZgC;AAY63a6S,mBAAa,EAAE,CAZ54a;AAY+4aC,qBAAe,EAAE;AAZh6a,KAAzB,CAAxB;AAaA;;AACAyrC,oBAAgB,CAAC/vD,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAE;AAAR,OADoC,EAEpC;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAFoC,EAGpC;AAAEH,YAAI,EAAE;AAAR,OAHoC,CAAN;AAAA,KAAlC;;AAKA8vD,oBAAgB,CAAC10C,cAAjB,GAAkC;AAC9BuH,aAAO,EAAE,CAAC;AAAE3iB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC8vD,aAAD,EAAgB;AAAE76B,qBAAW,EAAE;AAAf,SAAhB;AAA/B,OAAD,CADqB;AAE9BrJ,qBAAe,EAAE,CAAC;AAAE/rB,YAAI,EAAE;AAAR,OAAD,CAFa;AAG9BklB,cAAQ,EAAE,CAAC;AAAEllB,YAAI,EAAE;AAAR,OAAD,CAHoB;AAI9B0iB,WAAK,EAAE,CAAC;AAAE1iB,YAAI,EAAE;AAAR,OAAD,CAJuB;AAK9Bi1B,iBAAW,EAAE,CAAC;AAAEj1B,YAAI,EAAE;AAAR,OAAD,CALiB;AAM9B8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CANoB;AAO9BixB,cAAQ,EAAE,CAAC;AAAEjxB,YAAI,EAAE;AAAR,OAAD;AAPoB,KAAlC;AASA;;AAAc,KAAC,YAAY;AAAE,sEAAyB8vD,gBAAzB,EAA2C,CAAC;AACjE9vD,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,oBADX;AAECsK,kBAAQ,EAAE,kBAFX;AAGCwC,gBAAM,EAAE,CAAC,eAAD,CAHT;AAIC1D,cAAI,EAAE;AACF,oBAAQ,SADN;AAEF,qBAAS,kCAFP;AAGF,uBAAW,YAHT;AAIF,sBAAU,cAJR;AAKF,yBAAa,kBALX;AAMF,2CAA+B,UAN7B;AAOF,oCAAwB,qBAPtB;AAQF,+BAAmB;AARjB,WAJP;AAcCyM,kBAAQ,EAAE,2BAdX;AAeCI,uBAAa,EAAE,gEAAkBG,IAflC;AAgBC5I,mBAAS,EAAE,CAACk0C,iCAAD,CAhBZ;AAiBCxrC,yBAAe,EAAE,sEAAwBG,MAjB1C;AAkBCjT,gBAAM,EAAE,CAAC,y5aAAD;AAlBT,SAAD;AAF2D,OAAD,CAA3C,EAsBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AACxEF,gBAAI,EAAE,uDADkE;AAExEG,gBAAI,EAAE,CAAC,UAAD;AAFkE,WAAD;AAA5B,SAA9B,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGkC,OAzB3B,EAyB6B;AAAE+rB,uBAAe,EAAE,CAAC;AAClE/rB,cAAI,EAAE;AAD4D,SAAD,CAAnB;AAE9CklB,gBAAQ,EAAE,CAAC;AACXllB,cAAI,EAAE;AADK,SAAD,CAFoC;AAI9C0iB,aAAK,EAAE,CAAC;AACR1iB,cAAI,EAAE;AADE,SAAD,CAJuC;AAM9Ci1B,mBAAW,EAAE,CAAC;AACdj1B,cAAI,EAAE;AADQ,SAAD,CANiC;AAQ9C8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CARoC;AAU9CixB,gBAAQ,EAAE,CAAC;AACXjxB,cAAI,EAAE;AADK,SAAD,CAVoC;AAY9C2iB,eAAO,EAAE,CAAC;AACV3iB,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC8vD,aAAD,EAAgB;AAAE76B,uBAAW,EAAE;AAAf,WAAhB;AAFI,SAAD;AAZqC,OAzB7B;AAwCb,KAxCF;;AAyCd,QAAI,KAAJ,EAAW,CAuGV;AAED;;;;;;;QAKM8+B,a;;;;AAENA,iBAAa,CAAC14C,IAAd,GAAqB,+DAAwB;AAAExb,UAAI,EAAEk0D;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACz4C,IAAd,GAAqB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS8zD,qBAAT,CAA+Br0D,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIo0D,aAAV,GAAP;AAAoC,OAAnF;AAAqFt4C,aAAO,EAAE,CAAC,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CAAD,EACnI,oEADmI,EAEnI,sEAFmI,EAGnI,8EAHmI,EAInI,2EAJmI;AAA9F,KAAxB,CAArB;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bq4C,aAA1B,EAAyC;AAAEp4C,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACoyC,OAAD,EACxIL,UADwI,EAExIe,WAFwI,EAGxIN,yBAHwI,EAIxIE,uBAJwI,EAKxIE,4BALwI,EAMxIoB,gBANwI,EAOxIG,aAPwI,CAAP;AAOhH,SAPkF;AAOhFr0C,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CAAP;AAAkG,SAPzC;AAO2CG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACmyC,OAAD,EAC5KL,UAD4K,EAE5Ke,WAF4K,EAG5KN,yBAH4K,EAI5K,oEAJ4K,EAK5K,sEAL4K,EAM5KE,uBAN4K,EAO5KE,4BAP4K,EAQ5K,8EAR4K,EAS5KoB,gBAT4K,EAU5KG,aAV4K,EAW5K,2EAX4K,CAAP;AAWjJ;AAlB+E,OAAzC,CAAnD;AAkBmB,KAlBlC;AAmBA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBiE,aAAzB,EAAwC,CAAC;AAC9Dl0D,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CADV;AAECG,iBAAO,EAAE,CACLmyC,OADK,EAELL,UAFK,EAGLe,WAHK,EAILN,yBAJK,EAKL,oEALK,EAML,sEANK,EAOLE,uBAPK,EAQLE,4BARK,EASL,8EATK,EAULoB,gBAVK,EAWLG,aAXK,EAYL,2EAZK,CAFV;AAgBCn0C,sBAAY,EAAE,CACVoyC,OADU,EAEVL,UAFU,EAGVe,WAHU,EAIVN,yBAJU,EAKVE,uBALU,EAMVE,4BANU,EAOVoB,gBAPU,EAQVG,aARU;AAhBf,SAAD;AAFwD,OAAD,CAAxC,EA6BrB,IA7BqB,EA6Bf,IA7Be;AA6BP,KA7BR;AA+Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACvnDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;AAKA;;;;;AAQA,QAAMruC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,QAAMC,GAAG,GAAG,SAANA,GAAM,GAAY;AAAE,aAAO;AAAE0D,qBAAa,EAAE;AAAjB,OAAP;AAAgC,KAA1D;;AACA,QAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAAS4uC,sBAAT,GAAkC,CAAG;;AACrC,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,EAAgD;AAC9E9zD,gBAAU,EAAE,MADkE;AAE9EF,aAAO,EAAEi0D;AAFqE,KAAhD,CAAlC;AAIA;;;;AAGA,aAASA,iCAAT,GAA6C;AACzC,aAAO;AACH5xC,aAAK,EAAE;AADJ,OAAP;AAGH,K,CACD;;AACA;;;AACA,QAAI1L,YAAY,GAAG,CAAnB;AACA;;;;;;;AAMA,QAAMu9C,sCAAsC,GAAG;AAC3C7wD,aAAO,EAAE,gEADkC;AAE3CqiB,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMyuC,aAAN;AAAA,OAHa,CAF8B;AAM3CvuC,WAAK,EAAE;AANoC,KAA/C;AAQA;;;;QAGMwuC,c;AACF;;;;AAIA,4BAAYxgD,MAAZ,EAAoB9R,KAApB,EAA2B;AAAA;;AACvB,WAAK8R,MAAL,GAAcA,MAAd;AACA,WAAK9R,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;QAGMqyD,a;AACF;;;AAGA,6BAAYtE,eAAZ,EAA6B;AAAA;;AACzB,aAAKA,eAAL,GAAuBA,eAAvB;AACA;;;;AAGA,aAAK9iC,MAAL,GAAc,IAAd;AACA;;;;AAGA,aAAKsnC,KAAL,6BAAgC19C,YAAY,EAA5C;AACA;;;;AAGA,aAAK0U,SAAL,GAAiB,IAAjB;AACA;;;;AAGA,aAAK6iB,cAAL,GAAsB,KAAtB;AACA;;;;AAGA,aAAKomB,cAAL,GAAsB,OAAtB;AACA;;;;AAGA,aAAKntC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,aAAKwB,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,aAAK1B,6BAAL;AAAsC;;;AAGtC,oBAAM,CAAG,CAHT;AAIA;;;;;;AAIA,aAAKstC,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;AAIA;;;;;;;AAKA,aAAKxpD,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACH;AACD;;;;;;;;;AAgDA;;;oDAG4B;AACxB,cAAI,KAAKsgB,SAAL,IAAkB,CAAC,KAAKA,SAAL,CAAexD,OAAtC,EAA+C;AAC3C,iBAAKwD,SAAL,CAAexD,OAAf,GAAyB,IAAzB;AACH;AACJ;AACD;;;;;;;;;AAyCA;;;;;6CAKqB;AACjB;AACA;AACA;AACA,eAAKqmB,cAAL,GAAsB,IAAtB;AACH;AACD;;;;;;;;iCAKS;AACL,cAAI,KAAKqmB,SAAT,EAAoB;AAChB,iBAAKA,SAAL;AACH;AACJ;AACD;;;;;;;kDAI0B;AAAA;;AACtB,cAAI,KAAKC,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAaxrD,OAAb;AAAsB;;;;AAItB,sBAAAyrD,KAAK,EAAI;AACLA,mBAAK,CAAC7tC,IAAN,GAAa,OAAI,CAACA,IAAlB;;AACA6tC,mBAAK,CAAChoC,aAAN;AACH,aAPD;AAQH;AACJ;AACD;;;;;;;;wDAKgC;AAAA;;AAC5B;;AACA;AACA,cAAMioC,iBAAiB,GAAG,KAAKrpC,SAAL,KAAmB,IAAnB,IAA2B,KAAKA,SAAL,CAAevpB,KAAf,KAAyB,KAAKirB,MAAnF;;AACA,cAAI,KAAKynC,OAAL,IAAgB,CAACE,iBAArB,EAAwC;AACpC,iBAAKrpC,SAAL,GAAiB,IAAjB;;AACA,iBAAKmpC,OAAL,CAAaxrD,OAAb;AAAsB;;;;AAItB,sBAAAyrD,KAAK,EAAI;AACLA,mBAAK,CAAC5sC,OAAN,GAAgB,OAAI,CAAC/lB,KAAL,KAAe2yD,KAAK,CAAC3yD,KAArC;;AACA,kBAAI2yD,KAAK,CAAC5sC,OAAV,EAAmB;AACf,uBAAI,CAACwD,SAAL,GAAiBopC,KAAjB;AACH;AACJ,aATD;AAUH;AACJ;AACD;;;;;;;2CAImB;AACf,cAAI,KAAKvmB,cAAT,EAAyB;AACrB,iBAAKnjC,MAAL,CAAY0P,IAAZ,CAAiB,IAAI25C,cAAJ;AAAoB;AAAkB,iBAAK/oC,SAA3C,EAAwD,KAAK0B,MAA7D,CAAjB;AACH;AACJ;AACD;;;;;;8CAGsB;AAClB,cAAI,KAAKynC,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAaxrD,OAAb;AAAsB;;;;AAItB,sBAAAyrD,KAAK;AAAA,qBAAIA,KAAK,CAAChoC,aAAN,EAAJ;AAAA,aAJL;AAKH;AACJ;AACD;;;;;;;;mCAKW3qB,K,EAAO;AACd,eAAKA,KAAL,GAAaA,KAAb;;AACA,eAAK+tD,eAAL,CAAqBnoC,YAArB;AACH;AACD;;;;;;;;;yCAMiBvL,E,EAAI;AACjB,eAAK8K,6BAAL,GAAqC9K,EAArC;AACH;AACD;;;;;;;;;0CAMkBA,E,EAAI;AAClB,eAAKo4C,SAAL,GAAiBp4C,EAAjB;AACH;AACD;;;;;;;;yCAKiB2L,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;;AACA,eAAK+nC,eAAL,CAAqBnoC,YAArB;AACH;;;4BAjNU;AAAE,iBAAO,KAAK2sC,KAAZ;AAAoB;AACjC;;;;;0BAISvyD,K,EAAO;AACZ,eAAKuyD,KAAL,GAAavyD,KAAb;;AACA,eAAK6yD,uBAAL;AACH;AACD;;;;;;;4BAIoB;AAChB,iBAAO,KAAKL,cAAZ;AACH;AACD;;;;;0BAIkBM,C,EAAG;AACjB,eAAKN,cAAL,GAAsBM,CAAC,KAAK,QAAN,GAAiB,QAAjB,GAA4B,OAAlD;;AACA,eAAKC,mBAAL;AACH;AACD;;;;;;;;;;4BAOY;AAAE,iBAAO,KAAK9nC,MAAZ;AAAqB;AACnC;;;;;0BAIUnE,Q,EAAU;AAChB,cAAI,KAAKmE,MAAL,KAAgBnE,QAApB,EAA8B;AAC1B;AACA,iBAAKmE,MAAL,GAAcnE,QAAd;;AACA,iBAAKksC,6BAAL;;AACA,iBAAKC,yBAAL;AACH;AACJ;;;4BAcc;AAAE,iBAAO,KAAK1pC,SAAZ;AAAwB;AACzC;;;;;0BAIab,Q,EAAU;AACnB,eAAKa,SAAL,GAAiBb,QAAjB;AACA,eAAK1oB,KAAL,GAAa0oB,QAAQ,GAAGA,QAAQ,CAAC1oB,KAAZ,GAAoB,IAAzC;;AACA,eAAKizD,yBAAL;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK5tC,SAAZ;AAAwB;AACzC;;;;;0BAIarlB,K,EAAO;AAChB,eAAKqlB,SAAL,GAAiB,oFAAsBrlB,KAAtB,CAAjB;;AACA,eAAK+yD,mBAAL;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKlsC,SAAZ;AAAwB;AACzC;;;;;0BAIa7mB,K,EAAO;AAChB,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;;AACA,eAAK+yD,mBAAL;AACH;;;;;;AAuHLV,iBAAa,CAAC50D,IAAd,GAAqB,SAASy1D,qBAAT,CAA+Bv1D,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI00D,aAAV,EAAyB,gEAAyB,+DAAzB,CAAzB,CAAP;AAAsF,KAA/I;;AACAA,iBAAa,CAACj8C,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEw0D,aAAR;AAAuBh8C,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD8U,oBAAc,EAAE,SAASgoC,4BAAT,CAAsCj0C,EAAtC,EAA0CC,GAA1C,EAA+CkM,QAA/C,EAAyD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AACtL,uEAAsBmM,QAAtB,EAAgC+nC,cAAhC,EAAgD,IAAhD;AACH;;AAAC,YAAIl0C,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACuzC,OAAJ,GAAcvxC,EAAnE;AACH;AAAE,OALuC;AAKrCpC,eAAS,EAAE,CAAC,MAAD,EAAS,YAAT,EAAuB,CAAvB,EAA0B,iBAA1B,CAL0B;AAKoBjG,YAAM,EAAE;AAAEgM,YAAI,EAAE,MAAR;AAAgBD,qBAAa,EAAE,eAA/B;AAAgD7kB,aAAK,EAAE,OAAvD;AAAgE0oB,gBAAQ,EAAE,UAA1E;AAAsF/H,gBAAQ,EAAE,UAAhG;AAA4GwG,gBAAQ,EAAE,UAAtH;AAAkI5G,aAAK,EAAE;AAAzI,OAL5B;AAKgLxH,aAAO,EAAE;AAAE9P,cAAM,EAAE;AAAV,OALzL;AAK+MqN,cAAQ,EAAE,CAAC,eAAD,CALzN;AAK4O0C,cAAQ,EAAE,CAAC,iEAA0B,CAACo5C,sCAAD,CAA1B,CAAD;AALtP,KAAzB,CAArB;AAMA;;AACAC,iBAAa,CAACz0D,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAE;AAAR,OADiC,CAAN;AAAA,KAA/B;;AAGAw0D,iBAAa,CAACp5C,cAAd,GAA+B;AAC3BhQ,YAAM,EAAE,CAAC;AAAEpL,YAAI,EAAE;AAAR,OAAD,CADmB;AAE3B60D,aAAO,EAAE,CAAC;AAAE70D,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC;AAAY;;;AAG1C;AAAA,iBAAMo1D,cAAN;AAAA,SAH8B,CAAD,EAGL;AAAEngC,qBAAW,EAAE;AAAf,SAHK;AAA/B,OAAD,CAFkB;AAM3B1S,WAAK,EAAE,CAAC;AAAE1iB,YAAI,EAAE;AAAR,OAAD,CANoB;AAO3BinB,UAAI,EAAE,CAAC;AAAEjnB,YAAI,EAAE;AAAR,OAAD,CAPqB;AAQ3BgnB,mBAAa,EAAE,CAAC;AAAEhnB,YAAI,EAAE;AAAR,OAAD,CARY;AAS3BmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAToB;AAU3B6qB,cAAQ,EAAE,CAAC;AAAE7qB,YAAI,EAAE;AAAR,OAAD,CAViB;AAW3B8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CAXiB;AAY3BspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD;AAZiB,KAA/B;AAcA;;AAAc,KAAC,YAAY;AAAE,sEAAyBw0D,aAAzB,EAAwC,CAAC;AAC9Dx0D,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAECsK,kBAAQ,EAAE,eAFX;AAGCkD,mBAAS,EAAE,CAAC44C,sCAAD,CAHZ;AAICh9C,cAAI,EAAE;AACF,oBAAQ,YADN;AAEF,qBAAS;AAFP;AAJP,SAAD;AAFwD,OAAD,CAAxC,EAWrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,CAAP;AAA8C,OAXvC,EAWyC;AAAEoL,cAAM,EAAE,CAAC;AACrEpL,cAAI,EAAE;AAD+D,SAAD,CAAV;AAE1DinB,YAAI,EAAE,CAAC;AACPjnB,cAAI,EAAE;AADC,SAAD,CAFoD;AAI1DgnB,qBAAa,EAAE,CAAC;AAChBhnB,cAAI,EAAE;AADU,SAAD,CAJ2C;AAM1DmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CANmD;AAQ1D6qB,gBAAQ,EAAE,CAAC;AACX7qB,cAAI,EAAE;AADK,SAAD,CARgD;AAU1D8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAVgD;AAY1DspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAZgD;AAc1D60D,eAAO,EAAE,CAAC;AACV70D,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC;AAAa;;;AAED;AAAA,mBAAMo1D,cAAN;AAAA,WAFZ,CAAD,EAEqC;AAAEngC,uBAAW,EAAE;AAAf,WAFrC;AAFI,SAAD,CAdiD;AAmB1D1S,aAAK,EAAE,CAAC;AACR1iB,cAAI,EAAE;AADE,SAAD;AAnBmD,OAXzC;AAgCb,KAhCF;;AAiCd,QAAI,KAAJ,EAAW,CAgFV,C,CACD;;AACA;;;;;QAGMw1D,kB;AACF;;;AAGA,gCAAYl3C,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAKV,C,CACD;AACA;;AACA;;;AACA,QAAMm3C,wBAAwB,GAAG,kFAAmB,6EAAcD,kBAAd,CAAnB,CAAjC;AACA;;;;;AAKA;;;QACME,mB;;;;;AACF;;;;;;;;;AASA,mCAAYC,UAAZ,EAAwB7+C,UAAxB,EAAoCo5C,eAApC,EAAqD/tC,aAArD,EAAoEyzC,gBAApE,EAAsFxzC,cAAtF,EAAsGyzC,iBAAtG,EAAyH;AAAA;;AAAA;;AACrH,sCAAM/+C,UAAN;AACA,gBAAKo5C,eAAL,GAAuBA,eAAvB;AACA,gBAAK/tC,aAAL,GAAqBA,aAArB;AACA,gBAAKyzC,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKxzC,cAAL,GAAsBA,cAAtB;AACA,gBAAKyzC,iBAAL,GAAyBA,iBAAzB;AACA,gBAAK9uC,SAAL,uBAA8B,EAAE/P,YAAhC;AACA;;;;AAGA,gBAAKc,EAAL,GAAU,QAAKiP,SAAf;AACA;;;;;;AAKA,gBAAK3b,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,gBAAKmc,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,gBAAK6F,MAAL,GAAc,IAAd;AACA;;;;AAGA,gBAAK0oC,8BAAL;AAAuC;;;AAGvC,oBAAM,CAAG,CAHT,CA7BqH,CAiCrH;AACA;;;AACA,gBAAKH,UAAL,GAAkBA,UAAlB;AACA,gBAAKG,8BAAL,GACIF,gBAAgB,CAACG,MAAjB;AAAyB;;;;;AAKzB,kBAACj+C,EAAD,EAAKmP,IAAL,EAAc;AACV,cAAInP,EAAE,KAAK,QAAKA,EAAZ,IAAkBmP,IAAI,KAAK,QAAKA,IAApC,EAA0C;AACtC,oBAAKiB,OAAL,GAAe,KAAf;AACH;AACJ,SATD,CADJ;AApCqH;AA+CxH;AACD;;;;;;;;;AAiHA;;;;;8BAKMvF,O,EAAS;AACX,eAAKR,aAAL,CAAmBS,QAAnB,CAA4B,KAAKiG,aAAjC,EAAgD,UAAhD,EAA4DlG,OAA5D;AACH;AACD;;;;;;;;;wCAMgB;AACZ;AACA;AACA,eAAKutC,eAAL,CAAqBnoC,YAArB;AACH;AACD;;;;;;mCAGW;AACP,cAAI,KAAK4tC,UAAT,EAAqB;AACjB;AACA,iBAAKztC,OAAL,GAAe,KAAKytC,UAAL,CAAgBxzD,KAAhB,KAA0B,KAAKirB,MAA9C,CAFiB,CAGjB;;AACA,iBAAKnG,IAAL,GAAY,KAAK0uC,UAAL,CAAgB1uC,IAA5B;AACH;AACJ;AACD;;;;;;0CAGkB;AAAA;;AACd,eAAK9E,aAAL,CACK1D,OADL,CACa,KAAKH,WADlB,EAC+B,IAD/B,EAEKjhB,SAFL;AAEgB;;;;AAIhB,oBAAAsqB,WAAW,EAAI;AACX,gBAAI,CAACA,WAAD,IAAgB,OAAI,CAACguC,UAAzB,EAAqC;AACjC,qBAAI,CAACA,UAAL,CAAgBK,MAAhB;AACH;AACJ,WAVD;AAWH;AACD;;;;;;sCAGc;AACV,eAAK7zC,aAAL,CAAmBhE,cAAnB,CAAkC,KAAKG,WAAvC;;AACA,eAAKw3C,8BAAL;AACH;AACD;;;;;;;;2CAKmB;AACf,eAAK1qD,MAAL,CAAY0P,IAAZ,CAAiB,IAAI25C,cAAJ,CAAmB,IAAnB,EAAyB,KAAKrnC,MAA9B,CAAjB;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,KAAKvK,aAAL,IAAsB,KAAKC,QAAlC;AACH;AACD;;;;;;;sCAIctgB,K,EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,eAAK,CAACimB,eAAN;AACH;AACD;;;;;;;;;uCAMejmB,K,EAAO;AAClB;AACA;AACA;AACAA,eAAK,CAACimB,eAAN;AACA;;AACA,cAAMwtC,iBAAiB,GAAG,KAAKN,UAAL,IAAmB,KAAKxzD,KAAL,KAAe,KAAKwzD,UAAL,CAAgBxzD,KAA5E;AACA,eAAK+lB,OAAL,GAAe,IAAf;;AACA,eAAKU,gBAAL;;AACA,cAAI,KAAK+sC,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBruC,6BAAhB,CAA8C,KAAKnlB,KAAnD;;AACA,gBAAI8zD,iBAAJ,EAAuB;AACnB,mBAAKN,UAAL,CAAgB/sC,gBAAhB;AACH;AACJ;AACJ;AACD;;;;;;;;;qCAMazmB,K,EAAO;AAChB,cAAI,KAAKqlB,SAAL,KAAmBrlB,KAAvB,EAA8B;AAC1B,iBAAKqlB,SAAL,GAAiBrlB,KAAjB;;AACA,iBAAK+tD,eAAL,CAAqBnoC,YAArB;AACH;AACJ;;;4BA/Na;AAAE,iBAAO,KAAKR,QAAZ;AAAuB;AACvC;;;;;0BAIYplB,K,EAAO;AACf;AACA,cAAM+zD,eAAe,GAAG,oFAAsB/zD,KAAtB,CAAxB;;AACA,cAAI,KAAKolB,QAAL,KAAkB2uC,eAAtB,EAAuC;AACnC,iBAAK3uC,QAAL,GAAgB2uC,eAAhB;;AACA,gBAAIA,eAAe,IAAI,KAAKP,UAAxB,IAAsC,KAAKA,UAAL,CAAgBxzD,KAAhB,KAA0B,KAAKA,KAAzE,EAAgF;AAC5E,mBAAKwzD,UAAL,CAAgB9qC,QAAhB,GAA2B,IAA3B;AACH,aAFD,MAGK,IAAI,CAACqrC,eAAD,IAAoB,KAAKP,UAAzB,IAAuC,KAAKA,UAAL,CAAgBxzD,KAAhB,KAA0B,KAAKA,KAA1E,EAAiF;AAClF;AACA;AACA,mBAAKwzD,UAAL,CAAgB9qC,QAAhB,GAA2B,IAA3B;AACH;;AACD,gBAAIqrC,eAAJ,EAAqB;AACjB;AACA,mBAAKN,gBAAL,CAAsBO,MAAtB,CAA6B,KAAKr+C,EAAlC,EAAsC,KAAKmP,IAA3C;AACH;;AACD,iBAAKipC,eAAL,CAAqBnoC,YAArB;AACH;AACJ;AACD;;;;;;;4BAIY;AAAE,iBAAO,KAAKqF,MAAZ;AAAqB;AACnC;;;;;0BAIUjrB,K,EAAO;AACb,cAAI,KAAKirB,MAAL,KAAgBjrB,KAApB,EAA2B;AACvB,iBAAKirB,MAAL,GAAcjrB,KAAd;;AACA,gBAAI,KAAKwzD,UAAL,KAAoB,IAAxB,EAA8B;AAC1B,kBAAI,CAAC,KAAKztC,OAAV,EAAmB;AACf;AACA,qBAAKA,OAAL,GAAe,KAAKytC,UAAL,CAAgBxzD,KAAhB,KAA0BA,KAAzC;AACH;;AACD,kBAAI,KAAK+lB,OAAT,EAAkB;AACd,qBAAKytC,UAAL,CAAgB9qC,QAAhB,GAA2B,IAA3B;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;4BAIoB;AAChB,iBAAO,KAAK8pC,cAAL,IAAwB,KAAKgB,UAAL,IAAmB,KAAKA,UAAL,CAAgB3uC,aAA3D,IAA6E,OAApF;AACH;AACD;;;;;0BAIkB7kB,K,EAAO;AACrB,eAAKwyD,cAAL,GAAsBxyD,KAAtB;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKqlB,SAAL,IAAmB,KAAKmuC,UAAL,KAAoB,IAApB,IAA4B,KAAKA,UAAL,CAAgB7yC,QAAtE;AACH;AACD;;;;;0BAIa3gB,K,EAAO;AAChB,eAAKi0D,YAAL,CAAkB,oFAAsBj0D,KAAtB,CAAlB;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAK6mB,SAAL,IAAmB,KAAK2sC,UAAL,IAAmB,KAAKA,UAAL,CAAgBrsC,QAA7D;AACH;AACD;;;;;0BAIannB,K,EAAO;AAChB,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAIY;AACR,iBAAO,KAAK0qC,MAAL,IACF,KAAK8oB,UAAL,IAAmB,KAAKA,UAAL,CAAgBjzC,KADjC,IAEH,KAAKmzC,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBnzC,KAF9C,IAEuD,QAF9D;AAGH;AACD;;;;;0BAIUuG,Q,EAAU;AAAE,eAAK4jB,MAAL,GAAc5jB,QAAd;AAAyB;AAC/C;;;;;;;4BAIc;AAAE,2BAAU,KAAKnR,EAAL,IAAW,KAAKiP,SAA1B;AAA8C;;;;MA1KhC0uC,wB;;AA+RlCC,uBAAmB,CAAC91D,IAApB,GAA2B,SAASy2D,2BAAT,CAAqCv2D,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAI41D,mBAAV,EAA+B,gEAAyBlB,aAAzB,EAAwC,CAAxC,CAA/B,EAA2E,gEAAyB,wDAAzB,CAA3E,EAAwH,gEAAyB,+DAAzB,CAAxH,EAA4K,gEAAyB,8DAAzB,CAA5K,EAA2N,gEAAyB,kFAAzB,CAA3N,EAAuR,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAvR,EAA2U,gEAAyBH,yBAAzB,EAAoD,CAApD,CAA3U,CAAP;AAA4Y,KAAjd;;AACAqB,uBAAmB,CAACn9C,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE01D,mBAAR;AAA6BtyC,eAAS,EAAE,SAASkzC,yBAAT,CAAmCj1C,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9I,oEAAmBO,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAIP,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACuH,aAAJ,GAAoBvF,EAAE,CAACE,KAA5E;AACH;AAAE,OAL6C;AAK3CvI,YAAM,EAAE;AAAEnD,UAAE,EAAE,IAAN;AAAYoQ,eAAO,EAAE,SAArB;AAAgC/lB,aAAK,EAAE,OAAvC;AAAgD6kB,qBAAa,EAAE,eAA/D;AAAgFlE,gBAAQ,EAAE,UAA1F;AAAsGwG,gBAAQ,EAAE,UAAhH;AAA4H5G,aAAK,EAAE,OAAnI;AAA4IuE,YAAI,EAAE,MAAlJ;AAA0JJ,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAArK;AAAkMC,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAlN;AAAyPyvC,uBAAe,EAAE,CAAC,kBAAD,EAAqB,iBAArB;AAA1Q,OALmC;AAKkRr7C,aAAO,EAAE;AAAE9P,cAAM,EAAE;AAAV,OAL3R;AAKiT+P,cAAQ,EAAE,CAAC,wEAAD;AAL3T,KAAzB,CAA3B;AAMA;;AACAu6C,uBAAmB,CAAC31D,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAEw0D,aAAR;AAAuBt0D,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAnC,OADuC,EAEvC;AAAEA,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAE;AAAR,OAHuC,EAIvC;AAAEA,YAAI,EAAE;AAAR,OAJuC,EAKvC;AAAEA,YAAI,EAAE;AAAR,OALuC,EAMvC;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OANuC,EAOvC;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACk0D,yBAAD;AAAtB,SAArB;AAA/B,OAPuC,CAAN;AAAA,KAArC;;AASAqB,uBAAmB,CAACt6C,cAApB,GAAqC;AACjCtD,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAD6B;AAEjCinB,UAAI,EAAE,CAAC;AAAEjnB,YAAI,EAAE;AAAR,OAAD,CAF2B;AAGjC6mB,eAAS,EAAE,CAAC;AAAE7mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CAHsB;AAIjC2mB,oBAAc,EAAE,CAAC;AAAE9mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAJiB;AAKjCo2D,qBAAe,EAAE,CAAC;AAAEv2D,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kBAAD;AAArB,OAAD,CALgB;AAMjC+nB,aAAO,EAAE,CAAC;AAAEloB,YAAI,EAAE;AAAR,OAAD,CANwB;AAOjCmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAP0B;AAQjCgnB,mBAAa,EAAE,CAAC;AAAEhnB,YAAI,EAAE;AAAR,OAAD,CARkB;AASjC8iB,cAAQ,EAAE,CAAC;AAAE9iB,YAAI,EAAE;AAAR,OAAD,CATuB;AAUjCspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CAVuB;AAWjC0iB,WAAK,EAAE,CAAC;AAAE1iB,YAAI,EAAE;AAAR,OAAD,CAX0B;AAYjCoL,YAAM,EAAE,CAAC;AAAEpL,YAAI,EAAE;AAAR,OAAD,CAZyB;AAajC6oB,mBAAa,EAAE,CAAC;AAAE7oB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD;AAbkB,KAArC;AAeA;;AAAc,KAAC,YAAY;AAAE,sEAAyBu1D,mBAAzB,EAA8C,CAAC;AACpE11D,YAAI,EAAE;AAD8D,OAAD,CAA9C,EAErB,YAAY;AAAE,eAAO,CAAC;AAAEA,cAAI,EAAEw0D,aAAR;AAAuBt0D,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAAnC,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEkB;AAAEA,cAAI,EAAE;AAAR,SAFlB,EAEsD;AAAEA,cAAI,EAAE;AAAR,SAFtD,EAEqF;AAAEA,cAAI,EAAE;AAAR,SAFrF,EAEiI;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AAC3KF,gBAAI,EAAE;AADqK,WAAD,EAE3K;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF2K;AAA5B,SAFjI,EAOX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACk0D,yBAAD;AAFP,WAFkC;AAA/B,SAPW,CAAP;AAYF,OAdS,EAcP;AAAEv8C,UAAE,EAAE,CAAC;AACjB9X,cAAI,EAAE;AADW,SAAD,CAAN;AAEVoL,cAAM,EAAE,CAAC;AACTpL,cAAI,EAAE;AADG,SAAD,CAFE;AAIVkoB,eAAO,EAAE,CAAC;AACVloB,cAAI,EAAE;AADI,SAAD,CAJC;AAMVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CANG;AAQVgnB,qBAAa,EAAE,CAAC;AAChBhnB,cAAI,EAAE;AADU,SAAD,CARL;AAUV8iB,gBAAQ,EAAE,CAAC;AACX9iB,cAAI,EAAE;AADK,SAAD,CAVA;AAYVspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAZA;AAcV0iB,aAAK,EAAE,CAAC;AACR1iB,cAAI,EAAE;AADE,SAAD,CAdG;AAgBVinB,YAAI,EAAE,CAAC;AACPjnB,cAAI,EAAE;AADC,SAAD,CAhBI;AAkBV6mB,iBAAS,EAAE,CAAC;AACZ7mB,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,YAAD;AAFM,SAAD,CAlBD;AAqBV2mB,sBAAc,EAAE,CAAC;AACjB9mB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CArBN;AAwBVo2D,uBAAe,EAAE,CAAC;AAClBv2D,cAAI,EAAE,mDADY;AAElBG,cAAI,EAAE,CAAC,kBAAD;AAFY,SAAD,CAxBP;AA2BV0oB,qBAAa,EAAE,CAAC;AAChB7oB,cAAI,EAAE,uDADU;AAEhBG,cAAI,EAAE,CAAC,OAAD;AAFU,SAAD;AA3BL,OAdO;AA4Cb,KA5CF;;AA6Cd,QAAI,KAAJ,EAAW,CAsHV;AACD;;;;;QAGMo1D,c;;;;;;;;;;;;MAAuBG,mB;;AAE7BH,kBAAc,CAAC31D,IAAf,GAAsB,SAAS42D,sBAAT,CAAgC12D,CAAhC,EAAmC;AAAE,aAAO22D,2BAA2B,CAAC32D,CAAC,IAAIy1D,cAAN,CAAlC;AAA0D,KAArH;;AACAA,kBAAc,CAACpyC,IAAf,GAAsB,gEAAyB;AAAEnjB,UAAI,EAAEu1D,cAAR;AAAwB/8C,eAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2D0I,eAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAtE;AAA+FuC,cAAQ,EAAE,EAAzG;AAA6GtC,kBAAY,EAAE,SAASu1C,2BAAT,CAAqCr1C,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9N,mEAAkB,OAAlB,EAA2B,SAASs1C,uCAAT,GAAmD;AAAE,mBAAOr1C,GAAG,CAACuH,aAAJ,CAAkB/V,aAAlB,CAAgCia,KAAhC,EAAP;AAAiD,WAAjI;AACH;;AAAC,YAAI1L,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,UAAnB,EAA+B,IAAI,CAAnC,EAAsC,IAAtC,EAA4CC,GAAG,CAACxJ,EAAhD,EAAoD,YAApD,EAAkE,IAAlE,EAAwE,iBAAxE,EAA2F,IAA3F,EAAiG,kBAAjG,EAAqH,IAArH;;AACA,oEAAmB,mBAAnB,EAAwCwJ,GAAG,CAAC4G,OAA5C,EAAqD,oBAArD,EAA2E5G,GAAG,CAACwB,QAA/E,EAAyF,yBAAzF,EAAoHxB,GAAG,CAACc,cAAJ,KAAuB,gBAA3I,EAA6J,aAA7J,EAA4Kd,GAAG,CAACoB,KAAJ,KAAc,SAA1L,EAAqM,YAArM,EAAmNpB,GAAG,CAACoB,KAAJ,KAAc,QAAjO,EAA2O,UAA3O,EAAuPpB,GAAG,CAACoB,KAAJ,KAAc,MAArQ;AACH;AAAE,OALwC;AAKtCzH,YAAM,EAAE;AAAE4H,qBAAa,EAAE,eAAjB;AAAkCqC,gBAAQ,EAAE;AAA5C,OAL8B;AAK4BzM,cAAQ,EAAE,CAAC,gBAAD,CALtC;AAK0D0C,cAAQ,EAAE,CAAC,wEAAD,CALpE;AAKyGyI,wBAAkB,EAAE4B,GAL7H;AAKkI3B,WAAK,EAAE,EALzI;AAK6IC,UAAI,EAAE,EALnJ;AAKuJC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,iBAAJ,CAAD,EAAyB,CAAC,OAAD,EAAU,EAAV,CAAzB,EAAwC,CAAC,CAAD,EAAI,qBAAJ,CAAxC,EAAoE,CAAC,CAAD,EAAI,wBAAJ,CAApE,EAAmG,CAAC,CAAD,EAAI,wBAAJ,CAAnG,EAAkI,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,iBAArB,EAAwC,qBAAxC,EAA+D,CAA/D,EAAkE,IAAlE,EAAwE,SAAxE,EAAmF,UAAnF,EAA+F,UAA/F,EAA2G,UAA3G,EAAuH,QAAvH,EAAiI,OAAjI,CAAlI,EAA6Q,CAAC,OAAD,EAAU,EAAV,CAA7Q,EAA4R,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,kBAAtB,EAA0C,qBAA1C,EAAiE,CAAjE,EAAoE,kBAApE,EAAwF,mBAAxF,EAA6G,mBAA7G,EAAkI,iBAAlI,EAAqJ,oBAArJ,CAA5R,EAAwc,CAAC,CAAD,EAAI,oBAAJ,EAA0B,6BAA1B,CAAxc,EAAkgB,CAAC,CAAD,EAAI,yBAAJ,CAAlgB,EAAkiB,CAAC,CAAD,EAAI,SAAJ,EAAe,MAAf,CAAliB,CAL/J;AAK0tBC,cAAQ,EAAE,SAAS4yC,uBAAT,CAAiCv1C,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACn0B;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,mEAAkB,QAAlB,EAA4B,SAASw1C,+CAAT,CAAyD7xC,MAAzD,EAAiE;AAAE,mBAAO1D,GAAG,CAACw1C,cAAJ,CAAmB9xC,MAAnB,CAAP;AAAoC,WAAnI,EAAqI,OAArI,EAA8I,SAAS+xC,8CAAT,CAAwD/xC,MAAxD,EAAgE;AAAE,mBAAO1D,GAAG,CAACqI,aAAJ,CAAkB3E,MAAlB,CAAP;AAAmC,WAAnP;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC;;AACA,+DAAc,EAAd,EAAkB,MAAlB;;AACA;;AACA,qEAAoB,EAApB;;AACA;;AACA;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,cAAMyI,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,oEAAmB,KAAnB,EAA0BxI,GAAG,CAAC0I,OAA9B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,IAAlB,EAAwB1I,GAAG,CAAC0I,OAA5B,EAAqC,SAArC,EAAgD1I,GAAG,CAAC4G,OAApD,EAA6D,UAA7D,EAAyE5G,GAAG,CAACwB,QAA7E,EAAuF,UAAvF,EAAmGxB,GAAG,CAAC4D,QAAvG,EAAiH,UAAjH,EAA6H5D,GAAG,CAACgI,QAAjI;;AACA,oEAAmB,MAAnB,EAA2BhI,GAAG,CAAC2F,IAA/B,EAAqC,OAArC,EAA8C3F,GAAG,CAACnf,KAAlD,EAAyD,YAAzD,EAAuEmf,GAAG,CAACuF,SAA3E,EAAsF,iBAAtF,EAAyGvF,GAAG,CAACwF,cAA7G,EAA6H,kBAA7H,EAAiJxF,GAAG,CAACi1C,eAArJ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCzsC,GAAtC,EAA2C,mBAA3C,EAAgExI,GAAG,CAAC4C,iBAAJ,EAAhE,EAAyF,mBAAzF,EAA8G,IAA9G,EAAoH,iBAApH,EAAuI,EAAvI,EAA2I,oBAA3I,EAAiK,8DAAuB,EAAvB,EAA2BrC,GAA3B,CAAjK;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,wBAAnB,EAA6CP,GAAG,CAAC0F,aAAJ,IAAqB,QAAlE;AACH;AAAE,OAnCwC;AAmCtC7C,gBAAU,EAAE,CAAC,gEAAD,CAnC0B;AAmCN5S,YAAM,EAAE,CAAC,q7EAAD,CAnCF;AAmC27E6S,mBAAa,EAAE,CAnC18E;AAmC68EC,qBAAe,EAAE;AAnC99E,KAAzB,CAAtB;;AAoCA,QAAMoyC,2BAA2B,GAAG,oEAA6BlB,cAA7B,CAApC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,cAAzB,EAAyC,CAAC;AAC/Dv1D,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,kBADX;AAEC6V,kBAAQ,EAAE,ixDAFX;AAGC/I,gBAAM,EAAE,CAAC,eAAD,EAAkB,UAAlB,CAHT;AAICmJ,uBAAa,EAAE,gEAAkBG,IAJlC;AAKC9L,kBAAQ,EAAE,gBALX;AAMClB,cAAI,EAAE;AACF,qBAAS,kBADP;AAEF,yCAA6B,SAF3B;AAGF,0CAA8B,UAH5B;AAIF,+CAAmC,qCAJjC;AAKF,mCAAuB,qBALrB;AAMF,kCAAsB,oBANpB;AAOF,gCAAoB,kBAPlB;AAQF;AACA,+BAAmB,IATjB;AAUF,yBAAa,IAVX;AAWF,iCAAqB,MAXnB;AAYF,sCAA0B,MAZxB;AAaF,uCAA2B,MAbzB;AAcF;AACA;AACA;AACA,uBAAW;AAjBT,WANP;AAyBC8M,yBAAe,EAAE,sEAAwBG,MAzB1C;AA0BCjT,gBAAM,EAAE,CAAC,q7EAAD;AA1BT,SAAD;AAFyD,OAAD,CAAzC,EA8BrB,IA9BqB,EA8Bf,IA9Be;AA8BP,KA9BR;AAgCd;;;;;;;QAKMylD,c;;;;AAENA,kBAAc,CAACx7C,IAAf,GAAsB,+DAAwB;AAAExb,UAAI,EAAEg3D;AAAR,KAAxB,CAAtB;AACAA,kBAAc,CAACv7C,IAAf,GAAsB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS42D,sBAAT,CAAgCn3D,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIk3D,cAAV,GAAP;AAAqC,OAArF;AAAuFp7C,aAAO,EAAE,CAAC,CAAC,sEAAD,EAAkB,sEAAlB,CAAD,EACtI,sEADsI;AAAhG,KAAxB,CAAtB;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bm7C,cAA1B,EAA0C;AAAEl7C,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC04C,aAAD,EACzIe,cADyI,CAAP;AAChH,SADkF;AAChF35C,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EAAkB,sEAAlB,CAAP;AAA4C,SADa;AACXG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACy4C,aAAD,EACvHe,cADuH,EAEvH,sEAFuH,CAAP;AAE7F;AAHiF,OAA1C,CAAnD;AAGkB,KAHjC;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyByB,cAAzB,EAAyC,CAAC;AAC/Dh3D,YAAI,EAAE,sDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,sEAAD,EAAkB,sEAAlB,CADV;AAECG,iBAAO,EAAE,CAACy4C,aAAD,EAAgBe,cAAhB,EAAgC,sEAAhC,CAFV;AAGCz5C,sBAAY,EAAE,CAAC04C,aAAD,EAAgBe,cAAhB;AAHf,SAAD;AAFyD,OAAD,CAAzC,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC9lgBA;;;;;;AAKA;;;;;;;;;;AAkBA,QAAM3zC,GAAG,GAAG,CAAC,SAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,aAASq1C,yBAAT,CAAmC71C,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkZ,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACla,WAAP,IAAsB,MAA/C;AACH;AAAE;;AACH,aAAS82C,gCAAT,CAA0C91C,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM+W,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACg/B,YAAP,IAAuB,MAAhD;AACH;AAAE;;AACH,aAASC,2BAAT,CAAqCh2C,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACxD,mEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,aAASi2C,yBAAT,CAAmCj2C,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,iEAAkB,CAAlB,EAAqB81C,gCAArB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,MAA7D,EAAqE,EAArE;;AACA,iEAAkB,CAAlB,EAAqBE,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwDp3D,SAAxD,EAAmE,EAAnE;;AACA;AACH;;AAAC,UAAIohB,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4Z,MAAM,GAAG,6DAAf;;AACA,iEAAkB,UAAlB,EAA8B,CAAC,CAACA,MAAM,CAACs8B,aAAvC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;AACH;AAAE;;AACH,aAASC,gCAAT,CAA0Cn2C,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,YAAMuW,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,iEAAkB,sBAAlB,EAA0C,SAAS6/B,6EAAT,CAAuFzyC,MAAvF,EAA+F;AAAE,sEAAqB4S,GAArB;;AAA2B,cAAMI,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC0/B,yBAAP,CAAiC50D,IAAjC,CAAsCkiB,MAAM,CAACiuB,OAA7C,CAAP;AAA+D,SAA5Q,EAA8Q,SAA9Q,EAAyR,SAAS0kB,uDAAT,CAAiE3yC,MAAjE,EAAyE;AAAE,sEAAqB4S,GAArB;;AAA2B,cAAMsC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACjM,cAAR,CAAuBjJ,MAAvB,CAAP;AAAwC,SAA/c;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmW,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCv3B,SAAzC;;AACA,gEAAiB,CAAjB;;AACA,6EAA8B,mBAA9B,EAAmDu3B,MAAM,CAACogC,cAAP,EAAnD,EAA4E,EAA5E;;AACA,kEAAmB,kBAAnB,EAAuCpgC,MAAM,CAACqgC,gBAA9C,EAAgE,WAAhE,EAA6ErgC,MAAM,CAACsgC,gBAApF,EAAsG,IAAtG;;AACA,iEAAkB,SAAlB,EAA6BtgC,MAAM,CAAC92B,UAApC,EAAgD,iBAAhD,EAAmE82B,MAAM,CAACvG,QAAP,GAAkB,kBAAlB,GAAuC,SAA1G;;AACA,kEAAmB,IAAnB,EAAyBuG,MAAM,CAAC1f,EAAP,GAAY,QAArC;AACH;AAAE;;AACH,QAAM0N,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAD,CAAD,CAAD,EAA2B,GAA3B,CAAZ;AACA,QAAM2V,GAAG,GAAG,CAAC,oBAAD,EAAuB,GAAvB,CAAZ;AACA,QAAM48B,mBAAmB,GAAG;AACxB;;;;;AAKAC,wBAAkB,EAAE,qEAAQ,oBAAR,EAA8B,CAC9C,wEAAW,WAAX,EAAwB,mEAAM,iBAAN,EAAyB,CAAC,2EAAD,CAAzB,EAA2C;AAAEC,gBAAQ,EAAE;AAAZ,OAA3C,CAAxB,CAD8C,CAA9B,CANI;;AASxB;;;;;;;;;AASArvB,oBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAChBn3B,iBAAS,EAAE,aADK;AAEhBtJ,gBAAQ,EAAE,MAFM;AAGhB0gC,eAAO,EAAE;AAHO,OAAN,CAAd,CADsC,EAMtC,mEAAM,SAAN,EAAiB,mEAAM;AACnBA,eAAO,EAAE,CADU;AAEnB1gC,gBAAQ,EAAE,mBAFS;AAGnB;AACAsJ,iBAAS,EAAE;AAJQ,OAAN,CAAjB,CANsC,EAYtC,mEAAM,kBAAN,EAA0B,mEAAM;AAC5Bo3B,eAAO,EAAE,CADmB;AAE5B1gC,gBAAQ,EAAE,mBAFkB;AAG5B;AACAsJ,iBAAS,EAAE;AAJiB,OAAN,CAA1B,CAZsC,EAkBtC,wEAAW,WAAX,EAAwB,qEAAQ,kCAAR,CAAxB,CAlBsC,EAmBtC,wEAAW,WAAX,EAAwB,qEAAQ,mBAAR,EAA6B,mEAAM;AAAEo3B,eAAO,EAAE;AAAX,OAAN,CAA7B,CAAxB,CAnBsC,CAA1B;AAlBQ,KAA5B;AAyCA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAMA,aAASqvB,gCAAT,GAA4C;AACxC,aAAO/7D,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;;;;;;;;;AAOA,aAASg8D,8BAAT,GAA0C;AACtC,aAAOh8D,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;;;;;;;;AAMA,aAASi8D,iCAAT,GAA6C;AACzC,aAAOj8D,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;;;;;;AAKA;;;AACA,QAAI6a,YAAY,GAAG,CAAnB;AACA;;;;;AAIA,QAAMqhD,uBAAuB,GAAG,GAAhC;AACA;;;;;AAIA,QAAMC,sBAAsB,GAAG,EAA/B;AACA;;;;;AAIA,QAAMC,6BAA6B,GAAGD,sBAAsB,GAAG,CAA/D;AACA;;;;;AAIA,QAAME,qBAAqB,GAAG,CAA9B,C,CACA;;AACA;;;;;;;;;;;AAUA,QAAMC,+BAA+B,GAAGH,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;;;;;;AAKA,QAAMI,6BAA6B,GAAG,CAAtC;AACA;;;;;AAIA,QAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;;;;;AAKA,aAASC,2CAAT,CAAqDt3D,OAArD,EAA8D;AAC1D;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,aAASk5D,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;AAIA,QAAMC,iBAAiB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,CAA1B;AACA;;;;;AAIA,QAAMC,mCAAmC,GAAG;AACxCr1D,aAAO,EAAEi1D,0BAD+B;AAExCh1D,UAAI,EAAE,CAAC,4DAAD,CAFkC;AAGxCC,gBAAU,EAAEg1D;AAH4B,KAA5C;AAKA;;;;QAGMI,e;AACF;;;;AAIA,6BAAY/kD,MAAZ,EAAoB9R,KAApB,EAA2B;AAAA;;AACvB,WAAK8R,MAAL,GAAcA,MAAd;AACA,WAAK9R,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGM82D,a;AACF;;;;;;;AAOA,2BAAY36C,WAAZ,EAAyByQ,yBAAzB,EAAoDC,WAApD,EAAiEC,gBAAjE,EAAmFC,SAAnF,EAA8F;AAAA;;AAC1F,WAAK5Q,WAAL,GAAmBA,WAAnB;AACA,WAAKyQ,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;AACA,QAAMgqC,mBAAmB,GAAG,kFAAmB,6EAAc,6EAAc,+EAAgBD,aAAhB,CAAd,CAAd,CAAnB,CAA5B;AACA;;;;;QAGME,gB;;;;AAENA,oBAAgB,CAACv5D,IAAjB,GAAwB,SAASw5D,wBAAT,CAAkCt5D,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIq5D,gBAAV,GAAP;AAAuC,KAAtG;;AACAA,oBAAgB,CAAC5gD,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAEm5D,gBAAR;AAA0B3gD,eAAS,EAAE,CAAC,CAAC,oBAAD,CAAD;AAArC,KAAzB,CAAxB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2gD,gBAAzB,EAA2C,CAAC;AACjEn5D,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAF2D,OAAD,CAA3C,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;;QAMRkrD,S;;;;;AACF;;;;;;;;;;;;;;;;AAgBA,yBAAYp/D,cAAZ,EAA4BysB,kBAA5B,EAAgDnqB,OAAhD,EAAyDwyB,yBAAzD,EAAoFjY,UAApF,EAAgGiC,IAAhG,EAAsGiW,WAAtG,EAAmHC,gBAAnH,EAAqIqqC,gBAArI,EAAuJpqC,SAAvJ,EAAkKhK,QAAlK,EAA4KpM,qBAA5K,EAAmMygD,cAAnM,EAAmNC,QAAnN,EAA6N;AAAA;;AAAA;;AACzN,sCAAM1iD,UAAN,EAAkBiY,yBAAlB,EAA6CC,WAA7C,EAA0DC,gBAA1D,EAA4EC,SAA5E;AACA,gBAAKj1B,cAAL,GAAsBA,cAAtB;AACA,gBAAKysB,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKnqB,OAAL,GAAeA,OAAf;AACA,gBAAKwc,IAAL,GAAYA,IAAZ;AACA,gBAAKugD,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKpqC,SAAL,GAAiBA,SAAjB;AACA,gBAAKqqC,cAAL,GAAsBA,cAAtB;AACA;;;;AAGA,gBAAKE,UAAL,GAAkB,KAAlB;AACA;;;;AAGA,gBAAKzwC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAK0wC,UAAL,GAAkB,CAAlB;AACA;;;;AAGA,gBAAK9pC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKC,YAAL;AAAqB;;;;;AAKrB,kBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;AAMA;;;;;AAGA,gBAAKP,IAAL,wBAA0BxY,YAAY,EAAtC;AACA;;;;AAGA,gBAAK2iD,QAAL,GAAgB,IAAI,6CAAJ,EAAhB;AACA;;;;AAGA,gBAAK7B,gBAAL,GAAwB,CAAxB;AACA;;;;AAGA,gBAAKnoC,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,gBAAKxI,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,gBAAKyyC,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,gBAAK/B,gBAAL,GAAwB,KAAxB;AACA;;;;AAGA,gBAAKH,yBAAL,GAAiC,IAAI,6CAAJ,EAAjC;AACA;;;;;;AAKA,gBAAKhtD,QAAL,GAAgB,CAAhB;AACA;;;;;;;AAMA,gBAAKmvD,UAAL,GAAkB,CACd;AACIp4D,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,KAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SADc,EAOd;AACIH,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,QAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SAPc,CAAlB;AAcA;;;;AAGA,gBAAKk4D,uBAAL,GAA+B,KAA/B;AACA,gBAAKC,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,gBAAKzqC,WAAL,GAAmB,YAAnB;AACA;;;;AAGA,gBAAKzI,SAAL,GAAiB,EAAjB;AACA;;;;AAGA,gBAAKmzC,sBAAL;AAA+B;AAAkB;AAAO;;;AAGxD,oBAAM;AACF;AACA,cAAMr3C,OAAO,GAAG,QAAKA,OAArB;;AACA,cAAIA,OAAJ,EAAa;AACT,mBAAOA,OAAO,CAAC/I,OAAR,CAAgB5S,IAAhB,CAAqB,kEAAU2b,OAAV,CAArB,EAAyC;AAAW;;;AAG3D;AAAA,qBAAM,qFAASA,OAAO,CAAChQ,GAAR;AAAa;;;;AAI5B,wBAAAq9C,MAAM;AAAA,uBAAIA,MAAM,CAACiK,iBAAX;AAAA,eAJS,CAAT,EAAN;AAAA,aAHgD,CAAzC,CAAP;AAQH;;AACD,iBAAO,QAAK19D,OAAL,CAAauK,QAAb,CACFC,YADE,GAEFC,IAFE,CAEG,6DAAK,CAAL,CAFH,EAEY;AAAW;;;AAG9B;AAAA,mBAAM,QAAKgzD,sBAAX;AAAA,WAHmB,CAFZ,CAAP;AAMH,SAtBgD,CAAjD;AAuBA;;;;AAGA,gBAAKE,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,QAAKD,YAAL,CAAkBlzD,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAAozD,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAJ2C,CAAvB,EAIX;AAAK;;;AAGf,oBAAM,CAAG,CAHC,CAJW,CAArB;AAQA;;;;AAGA,gBAAKC,aAAL,GAAqB,QAAKH,YAAL,CAAkBlzD,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAAozD,CAAC;AAAA,iBAAI,CAACA,CAAL;AAAA,SAJ2C,CAAvB,EAIV;AAAK;;;AAGhB,oBAAM,CAAG,CAHE,CAJU,CAArB;AAQA;;;;AAGA,gBAAKruC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;;;AAKA,gBAAKkE,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,YAAI,QAAKf,SAAT,EAAoB;AAChB;AACA;AACA,kBAAKA,SAAL,CAAegB,aAAf;AACH;;AACD,gBAAKvW,sBAAL,GAA8Bb,qBAA9B;AACA,gBAAK5S,eAAL,GAAuB,QAAKyT,sBAAL,EAAvB;AACA,gBAAKuL,QAAL,GAAgBwC,QAAQ,CAACxC,QAAD,CAAR,IAAsB,CAAtC,CApLyN,CAqLzN;;AACA,gBAAKpN,EAAL,GAAU,QAAKA,EAAf;;AACA,YAAI0hD,QAAJ,EAAc;AACV,cAAIA,QAAQ,CAACc,sBAAT,IAAmC,IAAvC,EAA6C;AACzC,oBAAKA,sBAAL,GAA8Bd,QAAQ,CAACc,sBAAvC;AACH;;AACD,cAAId,QAAQ,CAACe,yBAAT,IAAsC,IAA1C,EAAgD;AAC5C,oBAAKA,yBAAL,GAAiCf,QAAQ,CAACe,yBAA1C;AACH;AACJ;;AA9LwN;AA+L5N;AACD;;;;;;;;;AAyHA;;;mCAGW;AAAA;;AACP,eAAKvpC,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAKC,QAAxB,CAAvB;AACA,eAAKF,YAAL,CAAkBjuB,IAAlB,GAFO,CAGP;AACA;AACA;;AACA,eAAK40D,yBAAL,CACK1wD,IADL,CACU,8EADV,EACkC,kEAAU,KAAK2yD,QAAf,CADlC,EAEKt8D,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,OAAI,CAACm9D,SAAT,EAAoB;AAChB,qBAAI,CAACd,UAAL,GAAkB,CAAlB;;AACA,qBAAI,CAACQ,YAAL,CAAkBp/C,IAAlB,CAAuB,IAAvB;AACH,aAHD,MAIK;AACD,qBAAI,CAACo/C,YAAL,CAAkBp/C,IAAlB,CAAuB,KAAvB;;AACA,qBAAI,CAAC2/C,UAAL,CAAgBl5D,OAAhB,GAA0B,CAA1B;;AACA,qBAAI,CAACmlB,kBAAL,CAAwBqB,YAAxB;AACH;AACJ,WAfD;;AAgBA,eAAK9tB,cAAL,CAAoBmR,MAApB,GACKpE,IADL,CACU,kEAAU,KAAK2yD,QAAf,CADV,EAEKt8D,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,OAAI,CAACo8D,UAAT,EAAqB;AACjB,qBAAI,CAACiB,YAAL,GAAoB,OAAI,CAACC,OAAL,CAAa7nD,aAAb,CAA2B1T,qBAA3B,EAApB;;AACA,qBAAI,CAACsnB,kBAAL,CAAwBqB,YAAxB;AACH;AACJ,WAVD;AAWH;AACD;;;;;;6CAGqB;AAAA;;AACjB,eAAK6yC,eAAL;;AACA,eAAK5pC,eAAL,CAAqB9H,OAArB,CAA6BliB,IAA7B,CAAkC,kEAAU,KAAK2yD,QAAf,CAAlC,EAA4Dt8D,SAA5D;AAAuE;;;;AAIvE,oBAAAmF,KAAK,EAAI;AACLA,iBAAK,CAACyvD,KAAN,CAAY5oD,OAAZ;AAAqB;;;;AAIrB,sBAAA2mD,MAAM;AAAA,qBAAIA,MAAM,CAACp9B,MAAP,EAAJ;AAAA,aAJN;AAKApwB,iBAAK,CAACypB,OAAN,CAAc5iB,OAAd;AAAuB;;;;AAIvB,sBAAA2mD,MAAM;AAAA,qBAAIA,MAAM,CAAC59B,QAAP,EAAJ;AAAA,aAJN;AAKH,WAfD;;AAgBA,eAAKzP,OAAL,CAAa/I,OAAb,CAAqB5S,IAArB,CAA0B,kEAAU,IAAV,CAA1B,EAA2C,kEAAU,KAAK2yD,QAAf,CAA3C,EAAqEt8D,SAArE;AAAgF;;;AAGhF,sBAAM;AACF,mBAAI,CAACw9D,aAAL;;AACA,mBAAI,CAACjqC,oBAAL;AACH,WAND;AAOH;AACD;;;;;;oCAGY;AACR,cAAI,KAAK1B,SAAT,EAAoB;AAChB,iBAAKgC,gBAAL;AACH;AACJ;AACD;;;;;;;oCAIYtX,O,EAAS;AACjB;AACA;AACA,cAAIA,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,iBAAKmX,YAAL,CAAkBjuB,IAAlB;AACH;;AACD,cAAI8W,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAKuW,WAAjD,EAA8D;AAC1D,iBAAKA,WAAL,CAAiB0hC,aAAjB,CAA+B,KAAKiJ,0BAApC;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKnB,QAAL,CAAc72D,IAAd;;AACA,eAAK62D,QAAL,CAAcjyD,QAAd;;AACA,eAAKqpB,YAAL,CAAkBrpB,QAAlB;AACH;AACD;;;;;;;iCAIS;AACL,eAAK8yD,SAAL,GAAiB,KAAKh7D,KAAL,EAAjB,GAAgC,KAAK8Z,IAAL,EAAhC;AACH;AACD;;;;;;;+BAIO;AAAA;;AACH,cAAI,KAAKwJ,QAAL,IAAiB,CAAC,KAAKH,OAAvB,IAAkC,CAAC,KAAKA,OAAL,CAAahgB,MAAhD,IAA0D,KAAK82D,UAAnE,EAA+E;AAC3E;AACH;;AACD,eAAKiB,YAAL,GAAoB,KAAKC,OAAL,CAAa7nD,aAAb,CAA2B1T,qBAA3B,EAApB,CAJG,CAKH;AACA;;AACA,eAAK04D,gBAAL,GAAwBpwC,QAAQ,CAACqzC,gBAAgB,CAAC,KAAKJ,OAAL,CAAa7nD,aAAd,CAAhB,CAA6CkoD,QAA7C,IAAyD,GAA1D,CAAhC;AACA,eAAKvB,UAAL,GAAkB,IAAlB;;AACA,eAAKtpC,WAAL,CAAiBI,yBAAjB,CAA2C,IAA3C;;AACA,eAAK0qC,yBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAKx0C,kBAAL,CAAwBqB,YAAxB,GAZG,CAaH;;;AACA,eAAKxrB,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,6DAAK,CAAL,CAA1C,EAAmD3J,SAAnD;AAA8D;;;AAG9D,sBAAM;AACF,gBAAI,OAAI,CAACy6D,gBAAL,IAAyB,OAAI,CAAC2C,UAAL,CAAgBz9D,UAAzC,IACA,OAAI,CAACy9D,UAAL,CAAgBz9D,UAAhB,CAA2BmC,cAD/B,EAC+C;AAC3C,qBAAI,CAACs7D,UAAL,CAAgBz9D,UAAhB,CAA2BmC,cAA3B,CAA0CtE,KAA1C,CAAgDmgE,QAAhD,aAA8D,OAAI,CAAClD,gBAAnE;AACH;AACJ,WARD;AASH;AACD;;;;;;;gCAIQ;AACJ,cAAI,KAAK2B,UAAT,EAAqB;AACjB,iBAAKA,UAAL,GAAkB,KAAlB;;AACA,iBAAKtpC,WAAL,CAAiBI,yBAAjB,CAA2C,KAAKhiB,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,iBAAKmY,kBAAL,CAAwBqB,YAAxB;;AACA,iBAAKZ,UAAL;AACH;AACJ;AACD;;;;;;;;;;mCAOWhlB,K,EAAO;AACd,cAAI,KAAKwgB,OAAT,EAAkB;AACd,iBAAK8O,oBAAL,CAA0BtvB,KAA1B;AACH;AACJ;AACD;;;;;;;;;;;yCAQiBqa,E,EAAI;AACjB,eAAKmT,SAAL,GAAiBnT,EAAjB;AACH;AACD;;;;;;;;;;;0CAQkBA,E,EAAI;AAClB,eAAK2K,UAAL,GAAkB3K,EAAlB;AACH;AACD;;;;;;;;;;yCAOiB2L,U,EAAY;AACzB,eAAKrF,QAAL,GAAgBqF,UAAhB;;AACA,eAAKzB,kBAAL,CAAwBqB,YAAxB;;AACA,eAAKgJ,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;AAqCA;;;;iCAIS;AACL,iBAAO,KAAKiW,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;;;;;;uCAKeK,K,EAAO;AAClB,cAAI,CAAC,KAAKsgB,QAAV,EAAoB;AAChB,iBAAK03C,SAAL,GAAiB,KAAKW,kBAAL,CAAwB34D,KAAxB,CAAjB,GAAkD,KAAK44D,oBAAL,CAA0B54D,KAA1B,CAAlD;AACH;AACJ;AACD;;;;;;;;;6CAMqBA,K,EAAO;AACxB;AACA,cAAM4X,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMihD,UAAU,GAAGjhD,OAAO,KAAK,iEAAZ,IAA0BA,OAAO,KAAK,+DAAtC,IACfA,OAAO,KAAK,iEADG,IACWA,OAAO,KAAK,kEAD1C;AAEA;;AACA,cAAMkhD,SAAS,GAAGlhD,OAAO,KAAK,4DAAZ,IAAqBA,OAAO,KAAK,4DAAnD;AACA;;AACA,cAAMw4C,OAAO,GAAG,KAAKziC,WAArB,CATwB,CAUxB;;AACA,cAAI,CAACyiC,OAAO,CAACG,QAAR,EAAD,IAAwBuI,SAAS,IAAI,CAAC,8EAAe94D,KAAf,CAAtC,IACC,CAAC,KAAKyuB,QAAL,IAAiBzuB,KAAK,CAACi8B,MAAxB,KAAmC48B,UADxC,EACqD;AACjD74D,iBAAK,CAAC6X,cAAN,GADiD,CACzB;;AACxB,iBAAKf,IAAL;AACH,WAJD,MAKK,IAAI,CAAC,KAAK2X,QAAV,EAAoB;AACrB;AACA,gBAAMsqC,wBAAwB,GAAG,KAAK1wC,QAAtC;;AACA,gBAAIzQ,OAAO,KAAK,2DAAZ,IAAoBA,OAAO,KAAK,0DAApC,EAAyC;AACrCA,qBAAO,KAAK,2DAAZ,GAAmBw4C,OAAO,CAAChhC,kBAAR,EAAnB,GAAkDghC,OAAO,CAAC7gC,iBAAR,EAAlD;AACAvvB,mBAAK,CAAC6X,cAAN;AACH,aAHD,MAIK;AACDu4C,qBAAO,CAAC5gC,SAAR,CAAkBxvB,KAAlB;AACH;AACD;;;AACA,gBAAMg5D,cAAc,GAAG,KAAK3wC,QAA5B,CAXqB,CAYrB;;AACA,gBAAI2wC,cAAc,IAAID,wBAAwB,KAAKC,cAAnD,EAAmE;AAC/D;AACA;AACA,mBAAKjC,cAAL,CAAoBkC,QAApB;AAA+B;AAAkBD,4BAApB,CAAsCE,SAAnE,EAA8E,KAA9E;AACH;AACJ;AACJ;AACD;;;;;;;;;2CAMmBl5D,K,EAAO;AACtB;AACA,cAAMowD,OAAO,GAAG,KAAKziC,WAArB;AACA;;AACA,cAAM/V,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMihD,UAAU,GAAGjhD,OAAO,KAAK,iEAAZ,IAA0BA,OAAO,KAAK,+DAAzD;AACA;;AACA,cAAM24C,QAAQ,GAAGH,OAAO,CAACG,QAAR,EAAjB;;AACA,cAAI34C,OAAO,KAAK,2DAAZ,IAAoBA,OAAO,KAAK,0DAApC,EAAyC;AACrC5X,iBAAK,CAAC6X,cAAN;AACAD,mBAAO,KAAK,2DAAZ,GAAmBw4C,OAAO,CAAChhC,kBAAR,EAAnB,GAAkDghC,OAAO,CAAC7gC,iBAAR,EAAlD;AACH,WAHD,MAIK,IAAIspC,UAAU,IAAI74D,KAAK,CAACi8B,MAAxB,EAAgC;AACjC;AACAj8B,iBAAK,CAAC6X,cAAN;AACA,iBAAK7a,KAAL,GAHiC,CAIjC;AACA;AACH,WANI,MAOA,IAAI,CAACuzD,QAAD,KAAc34C,OAAO,KAAK,4DAAZ,IAAqBA,OAAO,KAAK,4DAA/C,KAAyDw4C,OAAO,CAACD,UAAjE,IACL,CAAC,8EAAenwD,KAAf,CADA,EACuB;AACxBA,iBAAK,CAAC6X,cAAN;;AACAu4C,mBAAO,CAACD,UAAR,CAAmBgJ,qBAAnB;AACH,WAJI,MAKA,IAAI,CAAC5I,QAAD,IAAa,KAAKnjC,SAAlB,IAA+BxV,OAAO,KAAK,wDAA3C,IAAgD5X,KAAK,CAACo5D,OAA1D,EAAmE;AACpEp5D,iBAAK,CAAC6X,cAAN;AACA;;AACA,gBAAMwhD,oBAAoB,GAAG,KAAKl5C,OAAL,CAAa5kB,IAAb;AAAmB;;;;AAIhD,sBAAA+9D,GAAG;AAAA,qBAAI,CAACA,GAAG,CAACh5C,QAAL,IAAiB,CAACg5C,GAAG,CAACjxC,QAA1B;AAAA,aAJ0B,CAA7B;AAKA,iBAAKlI,OAAL,CAAatZ,OAAb;AAAsB;;;;AAItB,sBAAA2mD,MAAM,EAAI;AACN,kBAAI,CAACA,MAAM,CAACltC,QAAZ,EAAsB;AAClB+4C,oCAAoB,GAAG7L,MAAM,CAACp9B,MAAP,EAAH,GAAqBo9B,MAAM,CAAC59B,QAAP,EAAzC;AACH;AACJ,aARD;AASH,WAjBI,MAkBA;AACD;AACA,gBAAM2pC,sBAAsB,GAAGnJ,OAAO,CAACF,eAAvC;AACAE,mBAAO,CAAC5gC,SAAR,CAAkBxvB,KAAlB;;AACA,gBAAI,KAAKotB,SAAL,IAAkByrC,UAAlB,IAAgC74D,KAAK,CAAC0wD,QAAtC,IAAkDN,OAAO,CAACD,UAA1D,IACAC,OAAO,CAACF,eAAR,KAA4BqJ,sBADhC,EACwD;AACpDnJ,qBAAO,CAACD,UAAR,CAAmBgJ,qBAAnB;AACH;AACJ;AACJ;AACD;;;;;;mCAGW;AACP,cAAI,CAAC,KAAK74C,QAAV,EAAoB;AAChB,iBAAKi3C,QAAL,GAAgB,IAAhB;AACA,iBAAKhpC,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;kCAKU;AACN,eAAKi3D,QAAL,GAAgB,KAAhB;;AACA,cAAI,CAAC,KAAKj3C,QAAN,IAAkB,CAAC,KAAK03C,SAA5B,EAAuC;AACnC,iBAAKrzC,UAAL;;AACA,iBAAKT,kBAAL,CAAwBqB,YAAxB;;AACA,iBAAKgJ,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;sCAIc;AAAA;;AACV,eAAK23D,UAAL,CAAgBjhD,cAAhB,CAA+BxS,IAA/B,CAAoC,6DAAK,CAAL,CAApC,EAA6C3J,SAA7C;AAAwD;;;AAGxD,sBAAM;AACF,mBAAI,CAACqpB,kBAAL,CAAwBuB,aAAxB;;AACA,mBAAI,CAAC+zC,wBAAL;;AACA,mBAAI,CAACC,KAAL,CAAWnpD,aAAX,CAAyBopD,SAAzB,GAAqC,OAAI,CAACxC,UAA1C;AACH,WAPD;AAQH;AACD;;;;;;;yCAIiB;AACb,iBAAO,KAAKJ,gBAAL,iBAA+B,KAAKA,gBAAL,CAAsB52C,KAArD,IAA+D,EAAtE;AACH;AACD;;;;;;;;AAOA;;;;+CAIuB;AAAA;;AACnB;AACA;AACAkF,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,mBAAI,CAAC2J,oBAAL,CAA0B,OAAI,CAACvC,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAe/sB,KAAhC,GAAwC,OAAI,CAACirB,MAAvE;;AACA,mBAAI,CAAC2D,YAAL,CAAkBjuB,IAAlB;AACH,WAND;AAOH;AACD;;;;;;;;;;6CAOqBX,K,EAAO;AAAA;;AACxB,cAAI,KAAK8uB,QAAL,IAAiB9uB,KAArB,EAA4B;AACxB,gBAAI,CAACkwB,KAAK,CAACC,OAAN,CAAcnwB,KAAd,CAAL,EAA2B;AACvB,oBAAMg2D,8BAA8B,EAApC;AACH;;AACD,iBAAKnnC,eAAL,CAAqB8B,KAArB;;AACA3wB,iBAAK,CAACkH,OAAN;AAAe;;;;AAIf,sBAACgK,YAAD;AAAA,qBAAkB,OAAI,CAACkf,YAAL,CAAkBlf,YAAlB,CAAlB;AAAA,aAJA;;AAKA,iBAAKmf,WAAL;AACH,WAXD,MAYK;AACD,iBAAKxB,eAAL,CAAqB8B,KAArB;AACA;;;AACA,gBAAMwgC,mBAAmB,GAAG,KAAK/gC,YAAL,CAAkBpwB,KAAlB,CAA5B,CAHC,CAID;AACA;;;AACA,gBAAImxD,mBAAJ,EAAyB;AACrB,mBAAKnjC,WAAL,CAAiB+B,aAAjB,CAA+BohC,mBAA/B;AACH,aAFD,MAGK,IAAI,CAAC,KAAKkH,SAAV,EAAqB;AACtB;AACA;AACA,mBAAKrqC,WAAL,CAAiB+B,aAAjB,CAA+B,CAAC,CAAhC;AACH;AACJ;;AACD,eAAKxL,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;;;qCAMa5lB,K,EAAO;AAAA;;AAChB;AACA,cAAMmxD,mBAAmB,GAAG,KAAK3wC,OAAL,CAAa+P,IAAb;AAAmB;;;;AAI/C,oBAACs9B,MAAD,EAAY;AACR,gBAAI;AACA;AACA,qBAAOA,MAAM,CAAC7tD,KAAP,IAAgB,IAAhB,IAAwB,QAAI,CAAC0tB,YAAL,CAAkBmgC,MAAM,CAAC7tD,KAAzB,EAAgCA,KAAhC,CAA/B;AACH,aAHD,CAIA,OAAOq9C,KAAP,EAAc;AACV,kBAAI,iEAAJ,EAAiB;AACb;AACA6F,uBAAO,CAAC8W,IAAR,CAAa3c,KAAb;AACH;;AACD,qBAAO,KAAP;AACH;AACJ,WAhB2B,CAA5B;;AAiBA,cAAI8T,mBAAJ,EAAyB;AACrB,iBAAKtiC,eAAL,CAAqB4B,MAArB,CAA4B0gC,mBAA5B;AACH;;AACD,iBAAOA,mBAAP;AACH;AACD;;;;;;;;0CAKkB;AAAA;;AACd,eAAKnjC,WAAL,GAAmB,IAAI,4EAAJ,CAA+B,KAAKxN,OAApC,EACdkvC,aADc,CACA,KAAKiJ,0BADL,EAEdxqC,uBAFc,GAGdC,yBAHc,CAGY,KAAKhiB,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAIdwjD,uBAJc,CAIU,CAAC,UAAD,CAJV,CAAnB;;AAKA,eAAK5hC,WAAL,CAAiBK,MAAjB,CAAwBxpB,IAAxB,CAA6B,kEAAU,KAAK2yD,QAAf,CAA7B,EAAuDt8D,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF,gBAAI,QAAI,CAACm9D,SAAT,EAAoB;AAChB;AACA;AACA,kBAAI,CAAC,QAAI,CAACvpC,QAAN,IAAkB,QAAI,CAACd,WAAL,CAAiBwiC,UAAvC,EAAmD;AAC/C,wBAAI,CAACxiC,WAAL,CAAiBwiC,UAAjB,CAA4BgJ,qBAA5B;AACH,eALe,CAMhB;AACA;;;AACA,sBAAI,CAAC5uC,KAAL;;AACA,sBAAI,CAACvtB,KAAL;AACH;AACJ,WAfD;;AAgBA,eAAK2wB,WAAL,CAAiB/kB,MAAjB,CAAwBpE,IAAxB,CAA6B,kEAAU,KAAK2yD,QAAf,CAA7B,EAAuDt8D,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF,gBAAI,QAAI,CAACo8D,UAAL,IAAmB,QAAI,CAACwC,KAA5B,EAAmC;AAC/B,sBAAI,CAACG,2BAAL;AACH,aAFD,MAGK,IAAI,CAAC,QAAI,CAAC3C,UAAN,IAAoB,CAAC,QAAI,CAACxoC,QAA1B,IAAsC,QAAI,CAACd,WAAL,CAAiBwiC,UAA3D,EAAuE;AACxE,sBAAI,CAACxiC,WAAL,CAAiBwiC,UAAjB,CAA4BgJ,qBAA5B;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;wCAKgB;AAAA;;AACZ;AACA,cAAMU,kBAAkB,GAAG,oDAAM,KAAK15C,OAAL,CAAa/I,OAAnB,EAA4B,KAAK+/C,QAAjC,CAA3B;AACA,eAAKK,sBAAL,CAA4BhzD,IAA5B,CAAiC,kEAAUq1D,kBAAV,CAAjC,EAAgEh/D,SAAhE;AAA2E;;;;AAI3E,oBAAAmF,KAAK,EAAI;AACL,oBAAI,CAAC85D,SAAL,CAAe95D,KAAK,CAACyR,MAArB,EAA6BzR,KAAK,CAACsoB,WAAnC;;AACA,gBAAItoB,KAAK,CAACsoB,WAAN,IAAqB,CAAC,QAAI,CAACmG,QAA3B,IAAuC,QAAI,CAACwoC,UAAhD,EAA4D;AACxD,sBAAI,CAACj6D,KAAL;;AACA,sBAAI,CAACutB,KAAL;AACH;AACJ,WAVD,EAHY,CAcZ;AACA;;AACA,+FAAS,KAAKpK,OAAL,CAAahQ,GAAb;AAAkB;;;;AAI3B,oBAAAq9C,MAAM;AAAA,mBAAIA,MAAM,CAAC9f,aAAX;AAAA,WAJG,CAAT,GAKKlpC,IALL,CAKU,kEAAUq1D,kBAAV,CALV,EAMKh/D,SANL;AAMgB;;;AAGhB,sBAAM;AACF,oBAAI,CAACqpB,kBAAL,CAAwBqB,YAAxB;;AACA,oBAAI,CAACgJ,YAAL,CAAkBjuB,IAAlB;AACH,WAZD;;AAaA,eAAKy5D,aAAL;AACH;AACD;;;;;;;;;;kCAOUvM,M,EAAQllC,W,EAAa;AAC3B;AACA,cAAMylC,WAAW,GAAG,KAAKv/B,eAAL,CAAqB2C,UAArB,CAAgCq8B,MAAhC,CAApB;;AACA,cAAIA,MAAM,CAAC7tD,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAKytB,SAAlC,EAA6C;AACzCogC,kBAAM,CAAC59B,QAAP;;AACA,iBAAKpB,eAAL,CAAqB8B,KAArB;;AACA,iBAAKc,iBAAL,CAAuBo8B,MAAM,CAAC7tD,KAA9B;AACH,WAJD,MAKK;AACD,gBAAIouD,WAAW,KAAKP,MAAM,CAACnlC,QAA3B,EAAqC;AACjCmlC,oBAAM,CAACnlC,QAAP,GAAkB,KAAKmG,eAAL,CAAqB4B,MAArB,CAA4Bo9B,MAA5B,CAAlB,GACI,KAAKh/B,eAAL,CAAqBoB,QAArB,CAA8B49B,MAA9B,CADJ;AAEH;;AACD,gBAAIllC,WAAJ,EAAiB;AACb,mBAAKqF,WAAL,CAAiB+B,aAAjB,CAA+B89B,MAA/B;AACH;;AACD,gBAAI,KAAK/+B,QAAT,EAAmB;AACf,mBAAKuB,WAAL;;AACA,kBAAI1H,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,qBAAKiC,KAAL;AACH;AACJ;AACJ;;AACD,cAAIwjC,WAAW,KAAK,KAAKv/B,eAAL,CAAqB2C,UAArB,CAAgCq8B,MAAhC,CAApB,EAA6D;AACzD,iBAAKp8B,iBAAL;AACH;;AACD,eAAK7C,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;;sCAKc;AAAA;;AACV,cAAI,KAAKmuB,QAAT,EAAmB;AACf;AACA,gBAAMtO,OAAO,GAAG,KAAKA,OAAL,CAAaoR,OAAb,EAAhB;;AACA,iBAAK/C,eAAL,CAAqBwrC,IAArB;AAA2B;;;;;AAK3B,sBAACv4B,CAAD,EAAIC,CAAJ,EAAU;AACN,qBAAO,QAAI,CAACu4B,cAAL,GAAsB,QAAI,CAACA,cAAL,CAAoBx4B,CAApB,EAAuBC,CAAvB,EAA0BvhB,OAA1B,CAAtB,GACHA,OAAO,CAACxf,OAAR,CAAgB8gC,CAAhB,IAAqBthB,OAAO,CAACxf,OAAR,CAAgB+gC,CAAhB,CADzB;AAEH,aARD;;AASA,iBAAKnT,YAAL,CAAkBjuB,IAAlB;AACH;AACJ;AACD;;;;;;;;;0CAMkBiwB,a,EAAe;AAC7B;AACA,cAAIC,WAAW,GAAG,IAAlB;;AACA,cAAI,KAAK/B,QAAT,EAAmB;AACf+B,uBAAW;AAAK;AAAkB,iBAAKnI,QAAzB,CAAqClY,GAArC;AAA0C;;;;AAIxD,sBAAAq9C,MAAM;AAAA,qBAAIA,MAAM,CAAC7tD,KAAX;AAAA,aAJQ,CAAd;AAKH,WAND,MAOK;AACD6wB,uBAAW,GAAG,KAAKnI,QAAL;AAAkB;AAAkB,iBAAKA,QAAzB,CAAqC1oB,KAArD,GAA6D4wB,aAA3E;AACH;;AACD,eAAK3F,MAAL,GAAc4F,WAAd;AACA,eAAK/C,WAAL,CAAiBnV,IAAjB,CAAsBkY,WAAtB;;AACA,eAAKrD,SAAL,CAAeqD,WAAf;;AACA,eAAKjH,eAAL,CAAqBjR,IAArB,CAA0B,IAAIk+C,eAAJ,CAAoB,IAApB,EAA0BhmC,WAA1B,CAA1B;;AACA,eAAKtM,kBAAL,CAAwBqB,YAAxB;AACH;AACD;;;;;;;;wCAKgB;AACZ,eAAK6xC,UAAL,GAAkB,KAAKj3C,OAAL,CAAahQ,GAAb;AAAkB;;;;AAIpC,oBAAAq9C,MAAM;AAAA,mBAAIA,MAAM,CAACl4C,EAAX;AAAA,WAJY,EAII0Z,IAJJ,CAIS,GAJT,CAAlB;AAKH;AACD;;;;;;;;;kDAM0B;AACtB,cAAI,KAAKrB,WAAT,EAAsB;AAClB,gBAAI,KAAKkE,KAAT,EAAgB;AACZ,mBAAKlE,WAAL,CAAiByB,kBAAjB;AACH,aAFD,MAGK;AACD,mBAAKzB,WAAL,CAAiB+B,aAAjB,CAA+B,KAAKlB,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;;;;;;sDAK8B;AAC1B;AACA,cAAM6xC,iBAAiB,GAAG,KAAKvsC,WAAL,CAAiBuiC,eAAjB,IAAoC,CAA9D;AACA;;AACA,cAAMiK,UAAU,GAAG,6FAA8BD,iBAA9B,EAAiD,KAAK/5C,OAAtD,EAA+D,KAAKi6C,YAApE,CAAnB;AACA,eAAKX,KAAL,CAAWnpD,aAAX,CAAyBopD,SAAzB,GAAqC,wFAAyBQ,iBAAiB,GAAGC,UAA7C,EAAyD,KAAKE,cAAL,EAAzD,EAAgF,KAAKZ,KAAL,CAAWnpD,aAAX,CAAyBopD,SAAzG,EAAoH7D,uBAApH,CAArC;AACH;AACD;;;;;;;;8BAKM11C,O,EAAS;AACX,eAAKrE,WAAL,CAAiBxL,aAAjB,CAA+Bia,KAA/B,CAAqCpK,OAArC;AACH;AACD;;;;;;;;;wCAMgBqtC,M,EAAQ;AACpB,iBAAO,KAAKrtC,OAAL,CAAavP,MAAb;AAAqB;;;;;;AAM5B,oBAACuK,MAAD,EAASm/C,OAAT,EAAkB55D,KAAlB,EAA4B;AACxB,gBAAIya,MAAM,KAAK1d,SAAf,EAA0B;AACtB,qBAAO0d,MAAP;AACH;;AACD,mBAAOqyC,MAAM,KAAK8M,OAAX,GAAqB55D,KAArB,GAA6BjD,SAApC;AACH,WAXM,EAWHA,SAXG,CAAP;AAYH;AACD;;;;;;;;oDAK4B;AACxB;AACA,cAAM88D,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMG,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA;;;AACA,cAAMC,WAAW,GAAG3/D,IAAI,CAAC2T,GAAL,CAAS8rD,KAAK,GAAGD,UAAjB,EAA6B1E,uBAA7B,CAApB;AACA;;AACA,cAAM8E,qBAAqB,GAAGH,KAAK,GAAGD,UAAtC,CARwB,CASxB;;AACA;;AACA,cAAMK,SAAS,GAAGD,qBAAqB,GAAGD,WAA1C,CAXwB,CAYxB;;AACA;;AACA,cAAIG,oBAAoB,GAAG,KAAKhpC,KAAL,GAAa,CAAb;AAAkB;AAAkB,eAAKo+B,eAAL,CAAqB,KAAKzhC,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,CAArB,CAA/D;AACAwyC,8BAAoB,IAAI,6FAA8BA,oBAA9B,EAAoD,KAAK16C,OAAzD,EAAkE,KAAKi6C,YAAvE,CAAxB,CAfwB,CAgBxB;AACA;;AACA;;AACA,cAAMU,YAAY,GAAGJ,WAAW,GAAG,CAAnC;AACA,eAAKxD,UAAL,GAAkB,KAAK6D,uBAAL,CAA6BF,oBAA7B,EAAmDC,YAAnD,EAAiEF,SAAjE,CAAlB;AACA,eAAK1yD,QAAL,GAAgB,KAAK8yD,wBAAL,CAA8BH,oBAA9B,EAAoDC,YAApD,EAAkEF,SAAlE,CAAhB;;AACA,eAAKK,2BAAL,CAAiCL,SAAjC;AACH;AACD;;;;;;;;;;;;;;gDAWwBrQ,a,EAAeuQ,Y,EAAcF,S,EAAW;AAC5D;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMa,yBAAyB,GAAGX,UAAU,GAAGhQ,aAA/C;AACA;;AACA,cAAM4Q,gBAAgB,GAAGZ,UAAU,GAAG,CAAtC,CAN4D,CAO5D;AACA;AACA;AACA;;AACA;;AACA,cAAMa,qBAAqB,GAAGF,yBAAyB,GAAGJ,YAA5B,GAA2CK,gBAAzE;AACA,iBAAOpgE,IAAI,CAAC2T,GAAL,CAAS3T,IAAI,CAACwS,GAAL,CAAS,CAAT,EAAY6tD,qBAAZ,CAAT,EAA6CR,SAA7C,CAAP;AACH;AACD;;;;;;;wCAIgB;AACZ;AACA;AACA,iBAAO,KAAKt2C,cAAL,GAAsB,IAAtB,GAA6B,KAAKD,SAAL,IAAkB,KAAKxG,WAA3D;AACH;AACD;;;;;;;6CAIqB;AACjB,cAAI,KAAKyG,cAAT,EAAyB;AACrB,mBAAO,KAAKA,cAAZ;AACH,WAHgB,CAIjB;AACA;;;AACA,cAAI,CAAC,KAAKwyC,gBAAN,IAA0B,CAAC,KAAKA,gBAAL,CAAsBra,iBAAtB,EAA3B,IACA,KAAK4e,aAAL,EADJ,EAC0B;AACtB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAKvE,gBAAL,CAAsB7e,QAAtB,IAAkC,IAAzC;AACH;AACD;;;;;;;mDAI2B;AACvB,cAAI,KAAK+f,SAAL,IAAkB,KAAKrqC,WAAvB,IAAsC,KAAKA,WAAL,CAAiBwiC,UAA3D,EAAuE;AACnE,mBAAO,KAAKxiC,WAAL,CAAiBwiC,UAAjB,CAA4B76C,EAAnC;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;;;;;;;mDAS2B;AACvB;AACA,cAAM5Y,WAAW,GAAG,KAAKu7D,UAAL,CAAgBz9D,UAAhB,CAA2BmC,cAA3B,CAA0CC,qBAA1C,EAApB;AACA;;AACA,cAAM0+D,YAAY,GAAG,KAAK7jE,cAAL,CAAoB2B,eAApB,EAArB;AACA;;;AACA,cAAMoV,KAAK,GAAG,KAAKzC,MAAL,EAAd;AACA;;;AACA,cAAMwvD,YAAY,GAAG,KAAK9sC,QAAL,GAAgBwnC,+BAA+B,GAAGH,sBAAlD,GACjBA,sBAAsB,GAAG,CAD7B;AAEA;;AACA,cAAI/2D,OAAJ,CAXuB,CAYvB;;AACA,cAAI,KAAK0vB,QAAT,EAAmB;AACf1vB,mBAAO,GAAGk3D,+BAAV;AACH,WAFD,MAGK;AACD;AACA,gBAAI5tC,QAAQ,GAAG,KAAKmG,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,KAAoC,KAAKlI,OAAL,CAAaa,KAAhE;AACAjiB,mBAAO,GAAGspB,QAAQ,IAAIA,QAAQ,CAACmzC,KAArB,GAA6BzF,6BAA7B,GAA6DD,sBAAvE;AACH,WApBsB,CAqBvB;;;AACA,cAAI,CAACtnD,KAAL,EAAY;AACRzP,mBAAO,IAAI,CAAC,CAAZ;AACH,WAxBsB,CAyBvB;;AACA;;;AACA,cAAMuN,YAAY,GAAG,KAAK5P,WAAW,CAAC7E,IAAZ,GAAmBkH,OAAnB,IAA8ByP,KAAK,GAAG+sD,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA;;AACA,cAAMhvD,aAAa,GAAG7P,WAAW,CAACb,KAAZ,GAAoBkD,OAApB,GAA8Bu8D,YAAY,CAAC9hE,KAA3C,IACfgV,KAAK,GAAG,CAAH,GAAO+sD,YADG,CAAtB,CA7BuB,CA+BvB;;AACA,cAAIjvD,YAAY,GAAG,CAAnB,EAAsB;AAClBvN,mBAAO,IAAIuN,YAAY,GAAG4pD,6BAA1B;AACH,WAFD,MAGK,IAAI3pD,aAAa,GAAG,CAApB,EAAuB;AACxBxN,mBAAO,IAAIwN,aAAa,GAAG2pD,6BAA3B;AACH,WArCsB,CAsCvB;AACA;AACA;;;AACA,eAAK+B,UAAL,CAAgBl5D,OAAhB,GAA0BhE,IAAI,CAAC0gE,KAAL,CAAW18D,OAAX,CAA1B;AACA,eAAKk5D,UAAL,CAAgBz9D,UAAhB,CAA2BS,cAA3B;AACH;AACD;;;;;;;;;;;;;iDAUyBsvD,a,EAAeuQ,Y,EAAcF,S,EAAW;AAC7D;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMqB,sBAAsB,GAAG,CAACnB,UAAU,GAAG,KAAKrC,YAAL,CAAkB5+D,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAMqiE,mBAAmB,GAAG5gE,IAAI,CAACumC,KAAL,CAAWu0B,uBAAuB,GAAG0E,UAArC,CAA5B;AACA;;AACA,cAAIqB,wBAAJ,CAR6D,CAS7D;;AACA,cAAI,KAAKtE,uBAAT,EAAkC;AAC9B,mBAAO,CAAP;AACH;;AACD,cAAI,KAAKJ,UAAL,KAAoB,CAAxB,EAA2B;AACvB0E,oCAAwB,GAAGrR,aAAa,GAAGgQ,UAA3C;AACH,WAFD,MAGK,IAAI,KAAKrD,UAAL,KAAoB0D,SAAxB,EAAmC;AACpC;AACA,gBAAMiB,mBAAmB,GAAG,KAAKpB,aAAL,KAAuBkB,mBAAnD;AACA;;AACA,gBAAMG,oBAAoB,GAAGvR,aAAa,GAAGsR,mBAA7C,CAJoC,CAKpC;AACA;;AACA;;AACA,gBAAIE,iBAAiB,GAAGxB,UAAU,GAAG,CAAC,KAAKE,aAAL,KAAuBF,UAAvB,GAAoC1E,uBAArC,IAAgE0E,UAArG,CARoC,CASpC;AACA;AACA;AACA;;AACAqB,oCAAwB,GAAGE,oBAAoB,GAAGvB,UAAvB,GAAoCwB,iBAA/D;AACH,WAdI,MAeA;AACD;AACA;AACA;AACAH,oCAAwB,GAAGd,YAAY,GAAGP,UAAU,GAAG,CAAvD;AACH,WApC4D,CAqC7D;AACA;AACA;;;AACA,iBAAOx/D,IAAI,CAAC0gE,KAAL,CAAWG,wBAAwB,GAAG,CAAC,CAA5B,GAAgCF,sBAA3C,CAAP;AACH;AACD;;;;;;;;;;;;oDAS4Bd,S,EAAW;AACnC;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMiB,YAAY,GAAG,KAAK7jE,cAAL,CAAoB2B,eAApB,EAArB;AACA;;;AACA,cAAM4iE,iBAAiB,GAAG,KAAK9D,YAAL,CAAkBtgE,GAAlB,GAAwBs+D,6BAAlD;AACA;;AACA,cAAM+F,oBAAoB,GAAGX,YAAY,CAAChiE,MAAb,GAAsB,KAAK4+D,YAAL,CAAkBx8D,MAAxC,GAAiDw6D,6BAA9E;AACA;;AACA,cAAMgG,cAAc,GAAGnhE,IAAI,CAACC,GAAL,CAAS,KAAKkN,QAAd,CAAvB;AACA;;AACA,cAAMi0D,gBAAgB,GAAGphE,IAAI,CAAC2T,GAAL,CAAS,KAAK+rD,aAAL,KAAuBF,UAAhC,EAA4C1E,uBAA5C,CAAzB;AACA;;AACA,cAAMuG,iBAAiB,GAAGD,gBAAgB,GAAGD,cAAnB,GAAoC,KAAKhE,YAAL,CAAkB5+D,MAAhF;;AACA,cAAI8iE,iBAAiB,GAAGH,oBAAxB,EAA8C;AAC1C,iBAAKI,cAAL,CAAoBD,iBAApB,EAAuCH,oBAAvC;AACH,WAFD,MAGK,IAAIC,cAAc,GAAGF,iBAArB,EAAwC;AACzC,iBAAKM,gBAAL,CAAsBJ,cAAtB,EAAsCF,iBAAtC,EAAyDpB,SAAzD;AACH,WAFI,MAGA;AACD,iBAAKvF,gBAAL,GAAwB,KAAKkH,uBAAL,EAAxB;AACH;AACJ;AACD;;;;;;;;;;uCAOeH,iB,EAAmBH,oB,EAAsB;AACpD;;AACA;AACA,cAAMO,qBAAqB,GAAGzhE,IAAI,CAAC0gE,KAAL,CAAWW,iBAAiB,GAAGH,oBAA/B,CAA9B,CAHoD,CAIpD;AACA;;AACA,eAAK/E,UAAL,IAAmBsF,qBAAnB;AACA,eAAKt0D,QAAL,IAAiBs0D,qBAAjB;AACA,eAAKnH,gBAAL,GAAwB,KAAKkH,uBAAL,EAAxB,CARoD,CASpD;AACA;AACA;;AACA,cAAI,KAAKrF,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKA,UAAL,GAAkB,CAAlB;AACA,iBAAKhvD,QAAL,GAAgB,CAAhB;AACA,iBAAKmtD,gBAAL;AACH;AACJ;AACD;;;;;;;;;;;yCAQiB6G,c,EAAgBF,iB,EAAmBpB,S,EAAW;AAC3D;;AACA;AACA,cAAM6B,qBAAqB,GAAG1hE,IAAI,CAAC0gE,KAAL,CAAWS,cAAc,GAAGF,iBAA5B,CAA9B,CAH2D,CAI3D;AACA;;AACA,eAAK9E,UAAL,IAAmBuF,qBAAnB;AACA,eAAKv0D,QAAL,IAAiBu0D,qBAAjB;AACA,eAAKpH,gBAAL,GAAwB,KAAKkH,uBAAL,EAAxB,CAR2D,CAS3D;AACA;AACA;;AACA,cAAI,KAAKrF,UAAL,IAAmB0D,SAAvB,EAAkC;AAC9B,iBAAK1D,UAAL,GAAkB0D,SAAlB;AACA,iBAAK1yD,QAAL,GAAgB,CAAhB;AACA,iBAAKmtD,gBAAL;AACA;AACH;AACJ;AACD;;;;;;;;kDAK0B;AACtB;AACA,cAAMkF,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMqB,sBAAsB,GAAG,CAACnB,UAAU,GAAG,KAAKrC,YAAL,CAAkB5+D,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAM4F,OAAO,GAAGnE,IAAI,CAACC,GAAL,CAAS,KAAKkN,QAAd,IAA0BwzD,sBAA1B,GAAmDnB,UAAU,GAAG,CAAhF;AACA,+BAAcr7D,OAAd;AACH;AACD;;;;;;;;wCAKgB;AACZ,iBAAO,KAAKihB,OAAL,CAAahgB,MAAb,GAAsB,KAAKi6D,YAAL,CAAkBj6D,MAA/C;AACH;AACD;;;;;;;;yCAKiB;AACb,iBAAO,KAAKm1D,gBAAL,GAAwBU,qBAA/B;AACH;AACD;;;;;;;;;0CAMkBlnC,G,EAAK;AACnB,eAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;;;;;;2CAKmB;AACf,eAAKzE,KAAL;AACA,eAAKzT,IAAL;AACH;AACD;;;;;;;;4BA9nCc;AACV,iBAAO,KAAKygD,QAAL,IAAiB,KAAKN,UAA7B;AACH;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKllC,YAAZ;AAA2B;AAC/C;;;;;0BAIgBpyB,K,EAAO;AACnB,eAAKoyB,YAAL,GAAoBpyB,KAApB;AACA,eAAK4uB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKkmB,SAAZ;AAAwB;AACzC;;;;;0BAIa7mB,K,EAAO;AAChB,eAAK6mB,SAAL,GAAiB,oFAAsB7mB,KAAtB,CAAjB;AACA,eAAK4uB,YAAL,CAAkBjuB,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK8sB,SAAZ;AAAwB;AACzC;;;;;0BAIaztB,K,EAAO;AAChB,cAAI,KAAK6uB,eAAT,EAA0B;AACtB,kBAAMknC,gCAAgC,EAAtC;AACH;;AACD,eAAKtoC,SAAL,GAAiB,oFAAsBztB,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAI6B;AAAE,iBAAO,KAAK23D,uBAAZ;AAAsC;AACrE;;;;;0BAI2B33D,K,EAAO;AAC9B,eAAK23D,uBAAL,GAA+B,oFAAsB33D,KAAtB,CAA/B;AACH;AACD;;;;;;;;;4BAMkB;AAAE,iBAAO,KAAK0tB,YAAZ;AAA2B;AAC/C;;;;;0BAIgBrT,E,EAAI;AAChB,cAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,kBAAM47C,iCAAiC,EAAvC;AACH;;AACD,eAAKvoC,YAAL,GAAoBrT,EAApB;;AACA,cAAI,KAAKwU,eAAT,EAA0B;AACtB;AACA,iBAAKJ,oBAAL;AACH;AACJ;AACD;;;;;;;4BAIY;AAAE,iBAAO,KAAKxD,MAAZ;AAAqB;AACnC;;;;;0BAIUnE,Q,EAAU;AAChB,cAAIA,QAAQ,KAAK,KAAKmE,MAAtB,EAA8B;AAC1B,iBAAKkH,UAAL,CAAgBrL,QAAhB;AACA,iBAAKmE,MAAL,GAAcnE,QAAd;AACH;AACJ;AACD;;;;;;;4BAIgC;AAAE,iBAAO,KAAK6xC,0BAAZ;AAAyC;AAC3E;;;;;0BAI8B34D,K,EAAO;AACjC,eAAK24D,0BAAL,GAAkC,mFAAqB34D,KAArB,CAAlC;AACH;AACD;;;;;;;4BAIS;AAAE,iBAAO,KAAKwxC,GAAZ;AAAkB;AAC7B;;;;;0BAIOxxC,K,EAAO;AACV,eAAKwxC,GAAL,GAAWxxC,KAAK,IAAI,KAAKqtB,IAAzB;AACA,eAAKuB,YAAL,CAAkBjuB,IAAlB;AACH;;;4BAkMe;AACZ,iBAAO,KAAK22D,UAAZ;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKxoC,QAAL,GAAgB,KAAKD,eAAL,CAAqBnG,QAArC,GAAgD,KAAKmG,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;;;;4BAImB;AACf,cAAI,KAAKwJ,KAAT,EAAgB;AACZ,mBAAO,EAAP;AACH;;AACD,cAAI,KAAKzE,SAAT,EAAoB;AAChB;AACA,gBAAMihC,eAAe,GAAG,KAAK7/B,eAAL,CAAqBnG,QAArB,CAA8BlY,GAA9B;AAAmC;;;;AAI3D,sBAAAq9C,MAAM;AAAA,qBAAIA,MAAM,CAAC0L,SAAX;AAAA,aAJkB,CAAxB;;AAKA,gBAAI,KAAKntD,MAAL,EAAJ,EAAmB;AACfsiD,6BAAe,CAACqO,OAAhB;AACH,aATe,CAUhB;;;AACA,mBAAOrO,eAAe,CAACr/B,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,iBAAO,KAAKR,eAAL,CAAqBnG,QAArB,CAA8B,CAA9B,EAAiC6wC,SAAxC;AACH;;;4BAsKW;AACR,iBAAO,CAAC,KAAK1qC,eAAN,IAAyB,KAAKA,eAAL,CAAqBmuC,OAArB,EAAhC;AACH;;;4BAqoBsB;AACnB,iBAAO,KAAK1F,UAAL,IAAmB,CAAC,KAAKplC,KAAhC;AACH;;;;MA11CmB6kC,mB;;AA41CxBG,aAAS,CAACz5D,IAAV,GAAiB,SAASw/D,iBAAT,CAA2Bt/D,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIu5D,SAAV,EAAqB,gEAAyB,oEAAzB,CAArB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,oDAAzB,CAAzH,EAAkK,gEAAyB,wEAAzB,CAAlK,EAAsN,gEAAyB,wDAAzB,CAAtN,EAAmQ,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAnQ,EAAuT,gEAAyB,sDAAzB,EAAwC,CAAxC,CAAvT,EAAmW,gEAAyB,kEAAzB,EAAoD,CAApD,CAAnW,EAA2Z,gEAAyB,2EAAzB,EAAyC,CAAzC,CAA3Z,EAAwc,gEAAyB,yDAAzB,EAA2C,EAA3C,CAAxc,EAAwf,gEAAyB,UAAzB,CAAxf,EAA8hB,gEAAyBV,0BAAzB,CAA9hB,EAAolB,gEAAyB,+DAAzB,CAAplB,EAAooB,gEAAyBG,iBAAzB,EAA4C,CAA5C,CAApoB,CAAP;AAA6rB,KAA9uB;;AACAO,aAAS,CAACl2C,IAAV,GAAiB,gEAAyB;AAAEnjB,UAAI,EAAEq5D,SAAR;AAAmB7gD,eAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgD8U,oBAAc,EAAE,SAAS+xC,wBAAT,CAAkCh+C,EAAlC,EAAsCC,GAAtC,EAA2CkM,QAA3C,EAAqD;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AACrK,uEAAsBmM,QAAtB,EAAgC2rC,gBAAhC,EAAkD,IAAlD;;AACA,uEAAsB3rC,QAAtB,EAAgC,gEAAhC,EAA2C,IAA3C;;AACA,uEAAsBA,QAAtB,EAAgC,kEAAhC,EAA6C,IAA7C;AACH;;AAAC,YAAInM,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACi2C,aAAJ,GAAoBj0C,EAAE,CAACE,KAA5E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACqB,OAAJ,GAAcW,EAAnE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACs7C,YAAJ,GAAmBt5C,EAAxE;AACH;AAAE,OATmC;AASjCF,eAAS,EAAE,SAASk8C,eAAT,CAAyBj+C,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5D,oEAAmBO,GAAnB,EAAwB,IAAxB;;AACA,oEAAmBC,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB,wEAAnB,EAAwC,IAAxC;AACH;;AAAC,YAAIR,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACq5C,OAAJ,GAAcr3C,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC26C,KAAJ,GAAY34C,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACm5C,UAAJ,GAAiBn3C,EAAE,CAACE,KAAzE;AACH;AAAE,OAlBmC;AAkBjCtC,eAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,YAAvB,CAlBsB;AAkBgBuC,cAAQ,EAAE,EAlB1B;AAkB8BtC,kBAAY,EAAE,SAASo+C,sBAAT,CAAgCl+C,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrI,mEAAkB,SAAlB,EAA6B,SAASm+C,oCAAT,CAA8Cx6C,MAA9C,EAAsD;AAAE,mBAAO1D,GAAG,CAAC2M,cAAJ,CAAmBjJ,MAAnB,CAAP;AAAoC,WAAzH,EAA2H,OAA3H,EAAoI,SAASy6C,kCAAT,GAA8C;AAAE,mBAAOn+C,GAAG,CAACuK,QAAJ,EAAP;AAAwB,WAA5M,EAA8M,MAA9M,EAAsN,SAAS6zC,iCAAT,GAA6C;AAAE,mBAAOp+C,GAAG,CAACwK,OAAJ,EAAP;AAAuB,WAA5R;AACH;;AAAC,YAAIzK,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,IAAnB,EAAyBC,GAAG,CAACxJ,EAA7B,EAAiC,UAAjC,EAA6CwJ,GAAG,CAAC4D,QAAjD,EAA2D,YAA3D,EAAyE5D,GAAG,CAACu8C,aAAJ,EAAzE,EAA8F,iBAA9F,EAAiHv8C,GAAG,CAACq+C,kBAAJ,EAAjH,EAA2I,eAA3I,EAA4Jr+C,GAAG,CAACgI,QAAJ,CAAanE,QAAb,EAA5J,EAAqL,eAArL,EAAsM7D,GAAG,CAACwB,QAAJ,CAAaqC,QAAb,EAAtM,EAA+N,cAA/N,EAA+O7D,GAAG,CAAC0T,UAAnP,EAA+P,WAA/P,EAA4Q1T,GAAG,CAACk5C,SAAJ,GAAgBl5C,GAAG,CAACs4C,UAApB,GAAiC,IAA7S,EAAmT,sBAAnT,EAA2Ut4C,GAAG,CAAC2P,QAA/U,EAAyV,kBAAzV,EAA6W3P,GAAG,CAACiQ,gBAAJ,IAAwB,IAArY,EAA2Y,uBAA3Y,EAAoajQ,GAAG,CAACs+C,wBAAJ,EAApa;;AACA,oEAAmB,qBAAnB,EAA0Ct+C,GAAG,CAACwB,QAA9C,EAAwD,oBAAxD,EAA8ExB,GAAG,CAAC0T,UAAlF,EAA8F,qBAA9F,EAAqH1T,GAAG,CAACgI,QAAzH,EAAmI,kBAAnI,EAAuJhI,GAAG,CAAC+S,KAA3J;AACH;AAAE,OAvBmC;AAuBjCpZ,YAAM,EAAE;AAAE6H,gBAAQ,EAAE,UAAZ;AAAwBD,qBAAa,EAAE,eAAvC;AAAwDqC,gBAAQ,EAAE,UAAlE;AAA8E2B,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAzF;AAAsH/O,UAAE,EAAE,IAA1H;AAAgIwiD,8BAAsB,EAAE,wBAAxJ;AAAkLC,iCAAyB,EAAE,2BAA7M;AAA0Ol6C,mBAAW,EAAE,aAAvP;AAAsQiJ,gBAAQ,EAAE,UAAhR;AAA4R2H,gBAAQ,EAAE,UAAtS;AAAkTgE,mBAAW,EAAE,aAA/T;AAA8U9yB,aAAK,EAAE,OAArV;AAA8VzB,kBAAU,EAAE,YAA1W;AAAwXomB,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAxY;AAA+aoO,yBAAiB,EAAE,mBAAlc;AAAudunC,sBAAc,EAAE;AAAve,OAvByB;AAuBkevhD,aAAO,EAAE;AAAEg/C,oBAAY,EAAE,cAAhB;AAAgCC,qBAAa,EAAE,QAA/C;AAAyDE,qBAAa,EAAE,QAAxE;AAAkFtuC,uBAAe,EAAE,iBAAnG;AAAsHkE,mBAAW,EAAE;AAAnI,OAvB3e;AAuB+nBxX,cAAQ,EAAE,CAAC,WAAD,CAvBzoB;AAuBwpB0C,cAAQ,EAAE,CAAC,iEAA0B,CAC3tB;AAAEzX,eAAO,EAAE,gFAAX;AAAgCqiB,mBAAW,EAAEszC;AAA7C,OAD2tB,EAE3tB;AAAE31D,eAAO,EAAE,kFAAX;AAAwCqiB,mBAAW,EAAEszC;AAArD,OAF2tB,CAA1B,CAAD,EAGhsB,wEAHgsB,EAG7pB,kEAH6pB,CAvBlqB;AA0BmCz1C,wBAAkB,EAAEuX,GA1BvD;AA0B4DtX,WAAK,EAAE,CA1BnE;AA0BsEC,UAAI,EAAE,CA1B5E;AA0B+EC,YAAM,EAAE,CAAC,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,MAA1C,EAAkD,CAAlD,EAAqD,oBAArD,EAA2E,CAA3E,EAA8E,OAA9E,CAAD,EAAyF,CAAC,QAAD,EAAW,kBAAX,EAA+B,SAA/B,EAA0C,EAA1C,CAAzF,EAAwI,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,UAA3B,CAAxI,EAAgL,CAAC,OAAD,EAAU,wBAAV,EAAoC,CAApC,EAAuC,cAAvC,CAAhL,EAAwO,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,CAAlD,EAAqD,cAArD,CAAxO,EAA8S,CAAC,CAAD,EAAI,0BAAJ,CAA9S,EAA+U,CAAC,CAAD,EAAI,kBAAJ,CAA/U,EAAwW,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,iCAA9B,EAAiE,EAAjE,EAAqE,gCAArE,EAAuG,EAAvG,EAA2G,kCAA3G,EAA+I,kCAA/I,EAAmL,CAAnL,EAAsL,mCAAtL,EAA2N,2BAA3N,EAAwP,yBAAxP,EAAmR,8BAAnR,EAAmT,6BAAnT,EAAkV,4BAAlV,EAAgX,eAAhX,EAAiY,QAAjY,EAA2Y,QAA3Y,CAAxW,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAA7xB,EAA00B,CAAC,CAAD,EAAI,iBAAJ,CAA10B,EAAk2B,CAAC,CAAD,EAAI,cAAJ,CAAl2B,EAAu3B,CAAC,CAAD,EAAI,uBAAJ,CAAv3B,EAAq5B,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,CAAr5B,EAAg7B,CAAC,OAAD,EAAU,EAAV,CAAh7B,CA1BvF;AA0BuhCC,cAAQ,EAAE,SAAS67C,kBAAT,CAA4Bx+C,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtnC,wEAAuBmE,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASs6C,uCAAT,GAAmD;AAAE,mBAAOx+C,GAAG,CAACoH,MAAJ,EAAP;AAAsB,WAAtG;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBwuC,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA,mEAAkB,CAAlB,EAAqBI,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;;AACA,mEAAkB,CAAlB,EAAqBE,gCAArB,EAAuD,CAAvD,EAA0D,EAA1D,EAA8D,aAA9D,EAA6E,CAA7E;;AACA,mEAAkB,eAAlB,EAAmC,SAASuI,uDAAT,GAAmE;AAAE,mBAAOz+C,GAAG,CAAC9hB,KAAJ,EAAP;AAAqB,WAA7H,EAA+H,QAA/H,EAAyI,SAASwgE,gDAAT,GAA4D;AAAE,mBAAO1+C,GAAG,CAAC2+C,WAAJ,EAAP;AAA2B,WAAlO,EAAoO,QAApO,EAA8O,SAASC,gDAAT,GAA4D;AAAE,mBAAO5+C,GAAG,CAAC9hB,KAAJ,EAAP;AAAqB,WAAjU;AACH;;AAAC,YAAI6hB,EAAE,GAAG,CAAT,EAAY;AACV,cAAMyI,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BxI,GAAG,CAAC+S,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,mCAAlB,EAAuD/S,GAAG,CAACpb,eAA3D,EAA4E,2BAA5E,EAAyG4jB,GAAzG,EAA8G,yBAA9G,EAAyIxI,GAAG,CAACk5C,SAA7I,EAAwJ,8BAAxJ,EAAwLl5C,GAAG,CAACu4C,UAA5L,EAAwM,6BAAxM,EAAuOv4C,GAAG,CAACo5C,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkCp5C,GAAG,CAACo5C,YAAJ,CAAiB1+D,KAA1R,EAAiS,4BAAjS,EAA+TslB,GAAG,CAAC5W,QAAnU;AACH;AAAE,OAlDmC;AAkDjCyZ,gBAAU,EAAE,CAAC,qEAAD,EAA0B,wDAA1B,EAA2C,4DAA3C,EAAgE,wEAAhE,EAA4F,+DAA5F,EAAoH,uDAApH,CAlDqB;AAkDgH5S,YAAM,EAAE,CAAC,ioEAAD,CAlDxH;AAkD6vE6S,mBAAa,EAAE,CAlD5wE;AAkD+wEomB,UAAI,EAAE;AAAEC,iBAAS,EAAE,CACh0EstB,mBAAmB,CAACC,kBAD4yE,EAEh0ED,mBAAmB,CAACnvB,cAF4yE;AAAb,OAlDrxE;AAqD7BvkB,qBAAe,EAAE;AArDY,KAAzB,CAAjB;AAsDA;;AACAg1C,aAAS,CAACt5D,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAE;AAAR,OAH6B,EAI7B;AAAEA,YAAI,EAAE;AAAR,OAJ6B,EAK7B;AAAEA,YAAI,EAAE;AAAR,OAL6B,EAM7B;AAAEA,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAN6B,EAO7B;AAAEA,YAAI,EAAE,sDAAR;AAAgBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA5B,OAP6B,EAQ7B;AAAEA,YAAI,EAAE,kEAAR;AAA4BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAxC,OAR6B,EAS7B;AAAEA,YAAI,EAAE,yEAAR;AAAsBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,2EAAD;AAAtB,SAArB;AAAlC,OAT6B,EAU7B;AAAEH,YAAI,EAAE,yDAAR;AAAmBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAiB;AAAEA,cAAI,EAAE;AAAR,SAAjB;AAA/B,OAV6B,EAW7B;AAAEA,YAAI,EAAEskB,MAAR;AAAgBpkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAX6B,EAY7B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACw4D,0BAAD;AAAtB,SAAD;AAA/B,OAZ6B,EAa7B;AAAE34D,YAAI,EAAE;AAAR,OAb6B,EAc7B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC24D,iBAAD;AAAtB,SAArB;AAA/B,OAd6B,CAAN;AAAA,KAA3B;;AAgBAO,aAAS,CAACj+C,cAAV,GAA2B;AACvBu/C,aAAO,EAAE,CAAC;AAAE36D,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,SAAD;AAAzB,OAAD,CADc;AAEvB87D,WAAK,EAAE,CAAC;AAAEj8D,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CAFgB;AAGvBs6D,gBAAU,EAAE,CAAC;AAAEz6D,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,wEAAD;AAAzB,OAAD,CAHW;AAIvBwiB,aAAO,EAAE,CAAC;AAAE3iB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,gEAAD,EAAY;AAAEi1B,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD,CAJc;AAKvBwnC,kBAAY,EAAE,CAAC;AAAE58D,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,kEAAD,EAAc;AAAEi1B,qBAAW,EAAE;AAAf,SAAd;AAA/B,OAAD,CALS;AAMvB10B,gBAAU,EAAE,CAAC;AAAEV,YAAI,EAAE;AAAR,OAAD,CANW;AAOvBu3D,mBAAa,EAAE,CAAC;AAAEv3D,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACg5D,gBAAD;AAA5B,OAAD,CAPQ;AAQvB94C,iBAAW,EAAE,CAAC;AAAErgB,YAAI,EAAE;AAAR,OAAD,CARU;AASvBspB,cAAQ,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CATa;AAUvBixB,cAAQ,EAAE,CAAC;AAAEjxB,YAAI,EAAE;AAAR,OAAD,CAVa;AAWvBs6D,4BAAsB,EAAE,CAAC;AAAEt6D,YAAI,EAAE;AAAR,OAAD,CAXD;AAYvBi1B,iBAAW,EAAE,CAAC;AAAEj1B,YAAI,EAAE;AAAR,OAAD,CAZU;AAavBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAbgB;AAcvB6mB,eAAS,EAAE,CAAC;AAAE7mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CAdY;AAevB2mB,oBAAc,EAAE,CAAC;AAAE9mB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAfO;AAgBvB+0B,uBAAiB,EAAE,CAAC;AAAEl1B,YAAI,EAAE;AAAR,OAAD,CAhBI;AAiBvBu6D,+BAAyB,EAAE,CAAC;AAAEv6D,YAAI,EAAE;AAAR,OAAD,CAjBJ;AAkBvBy8D,oBAAc,EAAE,CAAC;AAAEz8D,YAAI,EAAE;AAAR,OAAD,CAlBO;AAmBvB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAnBmB;AAoBvBk6D,kBAAY,EAAE,CAAC;AAAEl6D,YAAI,EAAE;AAAR,OAAD,CApBS;AAqBvBm6D,mBAAa,EAAE,CAAC;AAAEn6D,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CArBQ;AAsBvBk6D,mBAAa,EAAE,CAAC;AAAEr6D,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CAtBQ;AAuBvB4rB,qBAAe,EAAE,CAAC;AAAE/rB,YAAI,EAAE;AAAR,OAAD,CAvBM;AAwBvBiwB,iBAAW,EAAE,CAAC;AAAEjwB,YAAI,EAAE;AAAR,OAAD;AAxBU,KAA3B;AA0BA;;AAAc,KAAC,YAAY;AAAE,sEAAyBq5D,SAAzB,EAAoC,CAAC;AAC1Dr5D,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,YADX;AAECsK,kBAAQ,EAAE,WAFX;AAGCuL,kBAAQ,EAAE,ozDAHX;AAIC/I,gBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAJT;AAKCmJ,uBAAa,EAAE,gEAAkBG,IALlC;AAMCF,yBAAe,EAAE,sEAAwBG,MAN1C;AAOCjN,cAAI,EAAE;AACF,oBAAQ,SADN;AAEF,yBAAa,IAFX;AAGF,+BAAmB,UAHjB;AAIF,iCAAqB,iBAJnB;AAKF,sCAA0B,sBALxB;AAMF,oCAAwB,qBANtB;AAOF,oCAAwB,qBAPtB;AAQF,mCAAuB,YARrB;AASF,gCAAoB,+BATlB;AAUF,2CAA+B,UAV7B;AAWF,uCAA2B,0BAXzB;AAYF,4CAAgC,4BAZ9B;AAaF,2CAA+B,UAb7B;AAcF,0CAA8B,YAd5B;AAeF,2CAA+B,UAf7B;AAgBF,wCAA4B,OAhB1B;AAiBF,qBAAS,YAjBP;AAkBF,yBAAa,wBAlBX;AAmBF,uBAAW,YAnBT;AAoBF,sBAAU;AApBR,WAPP;AA6BCmzB,oBAAU,EAAE,CACRqtB,mBAAmB,CAACC,kBADZ,EAERD,mBAAmB,CAACnvB,cAFZ,CA7Bb;AAiCCjtB,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAE,gFAAX;AAAgCqiB,uBAAW,EAAEszC;AAA7C,WADO,EAEP;AAAE31D,mBAAO,EAAE,kFAAX;AAAwCqiB,uBAAW,EAAEszC;AAArD,WAFO,CAjCZ;AAqCC9nD,gBAAM,EAAE,CAAC,ioEAAD;AArCT,SAAD;AAFoD,OAAD,CAApC,EAyCrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAAiC;AAAEA,cAAI,EAAE;AAAR,SAAjC,EAAqE;AAAEA,cAAI,EAAE;AAAR,SAArE,EAA8F;AAAEA,cAAI,EAAE;AAAR,SAA9F,EAAkI;AAAEA,cAAI,EAAE;AAAR,SAAlI,EAA+J;AAAEA,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AACxNF,gBAAI,EAAE;AADkN,WAAD;AAA3C,SAA/J,EAEX;AAAEA,cAAI,EAAE,sDAAR;AAAuBE,oBAAU,EAAE,CAAC;AACtCF,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAFW,EAIX;AAAEA,cAAI,EAAE,kEAAR;AAAmCE,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SAJW,EAMX;AAAEA,cAAI,EAAE,yEAAR;AAA6BE,oBAAU,EAAE,CAAC;AAC5CF,gBAAI,EAAE;AADsC,WAAD,EAE5C;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,2EAAD;AAFP,WAF4C;AAAzC,SANW,EAWX;AAAEH,cAAI,EAAE,yDAAR;AAA0BE,oBAAU,EAAE,CAAC;AACzCF,gBAAI,EAAE;AADmC,WAAD,EAEzC;AACCA,gBAAI,EAAE;AADP,WAFyC;AAAtC,SAXW,EAeX;AAAEA,cAAI,EAAEskB,MAAR;AAAgBpkB,oBAAU,EAAE,CAAC;AAC/BF,gBAAI,EAAE,uDADyB;AAE/BG,gBAAI,EAAE,CAAC,UAAD;AAFyB,WAAD;AAA5B,SAfW,EAkBX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAACw4D,0BAAD;AAF4B,WAAD;AAA/B,SAlBW,EAqBX;AAAE34D,cAAI,EAAE;AAAR,SArBW,EAqBqB;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClEF,gBAAI,EAAE;AAD4D,WAAD,EAElE;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC24D,iBAAD;AAFP,WAFkE;AAA/B,SArBrB,CAAP;AA0BF,OAnES,EAmEP;AAAEjyC,iBAAS,EAAE,CAAC;AACxB7mB,cAAI,EAAE,mDADkB;AAExBG,cAAI,EAAE,CAAC,YAAD;AAFkB,SAAD,CAAb;AAGV+5D,oBAAY,EAAE,CAAC;AACfl6D,cAAI,EAAE;AADS,SAAD,CAHJ;AAKVm6D,qBAAa,EAAE,CAAC;AAChBn6D,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CALL;AAQVk6D,qBAAa,EAAE,CAAC;AAChBr6D,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CARL;AAWV4rB,uBAAe,EAAE,CAAC;AAClB/rB,cAAI,EAAE;AADY,SAAD,CAXP;AAaViwB,mBAAW,EAAE,CAAC;AACdjwB,cAAI,EAAE;AADQ,SAAD,CAbH;AAeV8X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD,CAfM;AAiBVs6D,8BAAsB,EAAE,CAAC;AACzBt6D,cAAI,EAAE;AADmB,SAAD,CAjBd;AAmBVu6D,iCAAyB,EAAE,CAAC;AAC5Bv6D,cAAI,EAAE;AADsB,SAAD,CAnBjB;AAqBVqgB,mBAAW,EAAE,CAAC;AACdrgB,cAAI,EAAE;AADQ,SAAD,CArBH;AAuBVspB,gBAAQ,EAAE,CAAC;AACXtpB,cAAI,EAAE;AADK,SAAD,CAvBA;AAyBVixB,gBAAQ,EAAE,CAAC;AACXjxB,cAAI,EAAE;AADK,SAAD,CAzBA;AA2BVi1B,mBAAW,EAAE,CAAC;AACdj1B,cAAI,EAAE;AADQ,SAAD,CA3BH;AA6BVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CA7BG;AA+BV26D,eAAO,EAAE,CAAC;AACV36D,cAAI,EAAE,uDADI;AAEVG,cAAI,EAAE,CAAC,SAAD;AAFI,SAAD,CA/BC;AAkCV87D,aAAK,EAAE,CAAC;AACRj8D,cAAI,EAAE,uDADE;AAERG,cAAI,EAAE,CAAC,OAAD;AAFE,SAAD,CAlCG;AAqCVs6D,kBAAU,EAAE,CAAC;AACbz6D,cAAI,EAAE,uDADO;AAEbG,cAAI,EAAE,CAAC,wEAAD;AAFO,SAAD,CArCF;AAwCVwiB,eAAO,EAAE,CAAC;AACV3iB,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC,gEAAD,EAAY;AAAEi1B,uBAAW,EAAE;AAAf,WAAZ;AAFI,SAAD,CAxCC;AA2CVwnC,oBAAY,EAAE,CAAC;AACf58D,cAAI,EAAE,6DADS;AAEfG,cAAI,EAAE,CAAC,kEAAD,EAAc;AAAEi1B,uBAAW,EAAE;AAAf,WAAd;AAFS,SAAD,CA3CJ;AA8CV10B,kBAAU,EAAE,CAAC;AACbV,cAAI,EAAE;AADO,SAAD,CA9CF;AAgDVu3D,qBAAa,EAAE,CAAC;AAChBv3D,cAAI,EAAE,0DADU;AAEhBG,cAAI,EAAE,CAACg5D,gBAAD;AAFU,SAAD,CAhDL;AAmDVryC,sBAAc,EAAE,CAAC;AACjB9mB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAnDN;AAsDV+0B,yBAAiB,EAAE,CAAC;AACpBl1B,cAAI,EAAE;AADc,SAAD,CAtDT;AAwDVy8D,sBAAc,EAAE,CAAC;AACjBz8D,cAAI,EAAE;AADW,SAAD;AAxDN,OAnEO;AA6Hb,KA7HF;;AA8Hd,QAAI,KAAJ,EAAW,CAkSV;AAED;;;;;;;QAKMmgE,e;;;;AAENA,mBAAe,CAAC3kD,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEmgE;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAAC1kD,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS+/D,uBAAT,CAAiCtgE,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIqgE,eAAV,GAAP;AAAsC,OAAvF;AAAyFxkD,eAAS,EAAE,CAACo9C,mCAAD,CAApG;AAA2In9C,aAAO,EAAE,CAAC,CACxL,4DADwL,EAExL,kEAFwL,EAGxL,sEAHwL,EAIxL,sEAJwL,CAAD,EAM3L,0EAN2L,EAO3L,+EAP2L,EAQ3L,sEAR2L,EAS3L,sEAT2L;AAApJ,KAAxB,CAAvB;;AAUA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BskD,eAA1B,EAA2C;AAAErkD,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACu9C,SAAD,EAC1IF,gBAD0I,CAAP;AAC/G,SADiF;AAC/Ev9C,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EACpD,kEADoD,EAEpD,sEAFoD,EAGpD,sEAHoD,CAAP;AAG1B,SAJkF;AAIhFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,0EAAD,EACnD,+EADmD,EAEnDs9C,SAFmD,EAGnDF,gBAHmD,EAInD,sEAJmD,EAKnD,sEALmD,CAAP;AAKzB;AATkF,OAA3C,CAAnD;AASkB,KATjC;AAUA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBgH,eAAzB,EAA0C,CAAC;AAChEngE,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,sEAHK,EAIL,sEAJK,CADV;AAOCG,iBAAO,EAAE,CACL,0EADK,EAEL,+EAFK,EAGLs9C,SAHK,EAILF,gBAJK,EAKL,sEALK,EAML,sEANK,CAPV;AAeCr9C,sBAAY,EAAE,CAACu9C,SAAD,EAAYF,gBAAZ,CAff;AAgBCx9C,mBAAS,EAAE,CAACo9C,mCAAD;AAhBZ,SAAD;AAF0D,OAAD,CAA1C,EAoBrB,IApBqB,EAoBf,IApBe;AAoBP,KApBR;AAsBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AChvqBA;;;;;AAIA;;;;;;AAqBA,QAAMn3C,GAAG,GAAG,CAAC,eAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,iBAAD,CAAZ;AACA,QAAM2D,GAAG,GAAG,CAAC,cAAD,EAAiB,EAAjB,CAAZ;;AACA,aAAS66C,uDAAT,CAAiEh/C,EAAjE,EAAqEC,GAArE,EAA0E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpF,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,4DAAqB,CAArB,EAAwBvoC,SAA1C;;AACA,YAAMK,MAAM,GAAG,6DAAf;;AACA,iEAAkB,aAAlB,EAAiCA,MAAM,CAAC85B,IAAP,CAAYoO,SAAS,CAACp+D,QAAtB,CAAjC;AACH;AAAE;;AACH,QAAMi5B,GAAG,GAAG,SAANA,GAAM,CAAUolC,EAAV,EAAc7O,EAAd,EAAkBC,EAAlB,EAAsB;AAAE,aAAO;AAAE6O,cAAM,EAAED,EAAV;AAAcj+B,WAAG,EAAEovB,EAAnB;AAAuBQ,YAAI,EAAEP;AAA7B,OAAP;AAA2C,KAA/E;;AACA,aAAS8O,uDAAT,CAAiEp/C,EAAjE,EAAqEC,GAArE,EAA0E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpF,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,4DAAqB,CAArB,EAAwBvoC,SAA1C;;AACA,YAAMuB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,kBAAlB,EAAsCgnC,SAAS,CAACI,YAAhD,EAA8D,yBAA9D,EAAyF,8DAAuB,CAAvB,EAA0BvlC,GAA1B,EAA+BmlC,SAA/B,EAA0ChnC,MAAM,CAACqnC,KAAjD,EAAwDrnC,MAAM,CAAC44B,IAA/D,CAAzF;AACH;AAAE;;AACH,aAAS0O,iDAAT,CAA2Dv/C,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,iEAAkB,CAAlB,EAAqBg/C,uDAArB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,KAApF,EAA2F,EAA3F;;AACA,iEAAkB,CAAlB,EAAqBI,uDAArB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,KAApF,EAA2F,EAA3F;;AACA;AACH;;AAAC,UAAIp/C,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,8DAAuBvoC,SAAzC;;AACA,YAAMkD,MAAM,GAAG,6DAAf;;AACA,kEAAmB,kBAAnB,EAAuCqlC,SAAS,CAACO,YAAV,CAAuB5lC,MAAM,CAAC0lC,KAA9B,EAAqC1lC,MAAM,CAAC/3B,KAA5C,CAAvC;;AACA,iEAAkB,MAAlB,EAA0B,CAACo9D,SAAS,CAACQ,OAArC,EAA8C,SAA9C,EAAyDR,SAAS,CAACS,gBAAnE;;AACA,kEAAmB,YAAnB,EAAiCT,SAAS,CAACU,MAA3C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACV,SAAS,CAACI,YAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BJ,SAAS,CAACI,YAApC;AACH;AAAE;;AACH,aAASO,uDAAT,CAAiE5/C,EAAjE,EAAqEC,GAArE,EAA0E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpF,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,4DAAqB,CAArB,EAAwBvoC,SAA1C;;AACA,YAAMmC,OAAO,GAAG,6DAAhB;;AACA,iEAAkB,aAAlB,EAAiCA,OAAO,CAACg4B,IAAR,CAAaoO,SAAS,CAACp+D,QAAvB,CAAjC;AACH;AAAE;;AACH,aAASg/D,uDAAT,CAAiE7/C,EAAjE,EAAqEC,GAArE,EAA0E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpF,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,4DAAqB,CAArB,EAAwBvoC,SAA1C;;AACA,YAAMsC,OAAO,GAAG,6DAAhB;;AACA,iEAAkB,kBAAlB,EAAsCimC,SAAS,CAACI,YAAhD,EAA8D,yBAA9D,EAAyF,8DAAuB,CAAvB,EAA0BvlC,GAA1B,EAA+BmlC,SAA/B,EAA0CjmC,OAAO,CAACsmC,KAAlD,EAAyDtmC,OAAO,CAAC63B,IAAjE,CAAzF;AACH;AAAE;;AACH,aAASiP,iDAAT,CAA2D9/C,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,iEAAkB,CAAlB,EAAqB4/C,uDAArB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,KAApF,EAA2F,EAA3F;;AACA,iEAAkB,CAAlB,EAAqBC,uDAArB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,KAApF,EAA2F,EAA3F;;AACA;AACH;;AAAC,UAAI7/C,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAG,8DAAuBvoC,SAAzC;;AACA,YAAMP,MAAM,GAAG,6DAAf;;AACA,kEAAmB,kBAAnB,EAAuC8oC,SAAS,CAACO,YAAV,CAAuBrpC,MAAM,CAACmpC,KAA9B,EAAqCnpC,MAAM,CAACt0B,KAA5C,CAAvC;;AACA,iEAAkB,MAAlB,EAA0B,CAACo9D,SAAS,CAACQ,OAArC,EAA8C,SAA9C,EAAyDR,SAAS,CAACS,gBAAnE;;AACA,kEAAmB,YAAnB,EAAiCT,SAAS,CAACU,MAA3C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACV,SAAS,CAACI,YAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BJ,SAAS,CAACI,YAApC;AACH;AAAE;;AACH,aAASU,4CAAT,CAAsD//C,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,iEAAkB,CAAlB,EAAqBu/C,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,IAA9E,EAAoF,CAApF;;AACA,iEAAkB,CAAlB,EAAqBO,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,IAA9E,EAAoF,EAApF;AACH;;AAAC,UAAI9/C,EAAE,GAAG,CAAT,EAAY;AACV,YAAMi/C,SAAS,GAAGh/C,GAAG,CAACyW,SAAtB;;AACA,YAAMZ,MAAM,GAAG,6DAAf;;AACA,iEAAkB,MAAlB,EAA0BA,MAAM,CAACkqC,SAAP,CAAiBC,aAAjB,KAAmChB,SAAS,CAACp+D,QAAvE;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0Bi1B,MAAM,CAACkqC,SAAP,CAAiBC,aAAjB,KAAmChB,SAAS,CAACp+D,QAAvE;AACH;AAAE;;AACH,QAAMk5B,GAAG,GAAG,SAANA,GAAM,CAAUmlC,EAAV,EAAc7O,EAAd,EAAkB;AAAE,aAAO;AAAEpvB,WAAG,EAAEi+B,EAAP;AAAWrO,YAAI,EAAER;AAAjB,OAAP;AAA+B,KAA/D;;AACA,aAAS6P,mCAAT,CAA6ClgD,EAA7C,EAAiDC,GAAjD,EAAsD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAChE,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuX,MAAM,GAAG,6DAAf;;AACA,iEAAkB,MAAlB,EAA0B,CAACA,MAAM,CAAC4oC,QAAlC;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,SAAnB,EAA8B5oC,MAAM,CAACyoC,SAAP,CAAiBI,WAA/C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsC7oC,MAAM,CAACyoC,SAAP,CAAiBK,cAAvD,EAAuE,yBAAvE,EAAkG,8DAAuB,CAAvB,EAA0BtmC,GAA1B,EAA+BxC,MAAM,CAAC+nC,KAAtC,EAA6C/nC,MAAM,CAACs5B,IAApD,CAAlG;AACH;AAAE;;AACH,QAAM7W,GAAG,GAAG,SAANA,GAAM,CAAUklB,EAAV,EAAc7O,EAAd,EAAkB;AAAE,aAAO;AAAE,0BAAkB6O,EAApB;AAAwB,yBAAiB7O;AAAzC,OAAP;AAAuD,KAAvF;;AACA,QAAMiQ,GAAG,GAAG,CAAC,iBAAD,CAAZ;;AACA,aAASC,+CAAT,CAAyDvgD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,gEAAiB,CAAjB,EAAoB,mBAApB;AACH;AAAE;;AACH,aAASwgD,wCAAT,CAAkDxgD,EAAlD,EAAsDC,GAAtD,EAA2D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACrE,gEAAiB,CAAjB,EAAoB,YAApB;AACH;AAAE;;AACH,aAASygD,iDAAT,CAA2DzgD,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM0gD,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,YAAMC,IAAI,GAAGD,OAAO,CAAC7+D,KAArB;AACA,YAAM++D,SAAS,GAAGF,OAAO,CAAChqC,SAA1B;;AACA,YAAMsiB,OAAO,GAAG,6DAAhB;;AACA,iEAAkB,IAAlB,EAAwB,SAASA,OAAO,CAACviC,EAAjB,GAAsB,GAAtB,GAA4BkqD,IAApD,EAA0D,aAA1D,EAAyEC,SAAS,CAACjB,MAAnF;AACH;AAAE;;AACH,QAAMkB,GAAG,GAAG,SAANA,GAAM,CAAU3B,EAAV,EAAc;AAAE,aAAO;AAAEC,cAAM,EAAED;AAAV,OAAP;AAAwB,KAApD;;AACA,aAAS4B,iDAAT,CAA2D9gD,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AACA,iEAAkB,kBAAlB,EAAsCkqC,SAAS,CAACG,cAAhD,EAAgE,yBAAhE,EAA2F,8DAAuB,CAAvB,EAA0BF,GAA1B,EAA+BD,SAA/B,CAA3F;AACH;AAAE;;AACH,QAAMI,GAAG,GAAG,SAANA,GAAM,CAAU9B,EAAV,EAAc7O,EAAd,EAAkB;AAAE,aAAO;AAAE,uBAAe6O,EAAjB;AAAqB,wBAAgB7O;AAArC,OAAP;AAAmD,KAAnF;;AACA,aAAS4Q,iDAAT,CAA2DjhD,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;;AACA,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AACA,YAAMiD,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BinC,SAAS,CAAC//D,QAAV,KAAuB84B,OAAO,CAACunC,MAAzD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BN,SAAS,CAAC//D,QAAV,KAAuB84B,OAAO,CAACunC,MAAzD,EAAiE,SAAjE,EAA4E,8DAAuB,CAAvB,EAA0BF,GAA1B,EAA+BrnC,OAAO,CAACwnC,OAAvC,EAAgD,CAACxnC,OAAO,CAACwnC,OAAzD,CAA5E;AACH;AAAE;;AACH,aAASC,iDAAT,CAA2DphD,EAA3D,EAA+DC,GAA/D,EAAoE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9E,YAAMqhD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,iEAAkB,WAAlB,EAA+B,SAASC,2EAAT,CAAqF39C,MAArF,EAA6F;AAAE,sEAAqB09C,IAArB;;AAA4B,cAAMT,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AAAqD,cAAM6qC,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AAAoC,cAAMC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,iBAAR,CAA0B99C,MAA1B,EAAkCi9C,SAAlC,EAA6CW,IAA7C,CAAP;AAA4D,SAAvV;;AACA;AACH;AAAE;;AACH,aAASG,0CAAT,CAAoD1hD,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvE,YAAM2hD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,EAAnC;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,kEAAT,CAA4Ej+C,MAA5E,EAAoF;AAAE,sEAAqBg+C,IAArB;;AAA4B,cAAMf,SAAS,GAAG,8DAAuBlqC,SAAzC;;AAAoD,cAAMmrC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,aAAR,CAAsBlB,SAAtB,EAAiCj9C,MAAjC,CAAP;AAAkD,SAA3R;;AACA,iEAAkB,CAAlB,EAAqB88C,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,MAA9E,EAAsF,EAAtF;;AACA,iEAAkB,CAAlB,EAAqBK,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,MAA9E,EAAsF,EAAtF;;AACA,iEAAkB,CAAlB,EAAqBG,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,MAA9E,EAAsF,EAAtF;;AACA,iEAAkB,CAAlB,EAAqBG,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,MAA9E,EAAsF,EAAtF;;AACA;AACH;;AAAC,UAAIphD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM+hD,OAAO,GAAG,6DAAhB;;AACA,YAAMnB,SAAS,GAAGmB,OAAO,CAACrrC,SAA1B;AACA,YAAMiqC,IAAI,GAAGoB,OAAO,CAAClgE,KAArB;;AACA,YAAMm3B,OAAO,GAAG,6DAAhB;;AACA,iEAAkB,UAAlB,EAA8BA,OAAO,CAACgpC,SAAR,KAAsB,CAApD,EAAuD,OAAvD,EAAgE,CAAChpC,OAAO,CAACmoC,OAAT,GAAmBnoC,OAAO,CAACipC,MAAR,CAAeC,aAAlC,GAAkDlpC,OAAO,CAACipC,MAAR,CAAeE,cAAjI;;AACA,kEAAmB,eAAnB,EAAoCvB,SAAS,CAACwB,QAAV,GAAqBppC,OAAO,CAACviB,EAA7B,GAAkC,IAAtE,EAA4E,iBAA5E,EAA+F,SAASuiB,OAAO,CAACviB,EAAjB,GAAsB,GAAtB,GAA4BkqD,IAA3H;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACC,SAAS,CAACG,cAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BH,SAAS,CAACG,cAApC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BH,SAAS,CAACwB,QAApC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BxB,SAAS,CAACyB,SAApC;AACH;AAAE;;AACH,aAASC,+CAAT,CAAyDtiD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AACA,iEAAkB,aAAlB,EAAiCkqC,SAAS,CAACjB,MAA3C;AACH;AAAE;;AACH,aAAS4C,+CAAT,CAAyDviD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AACA,iEAAkB,kBAAlB,EAAsCkqC,SAAS,CAACG,cAAhD,EAAgE,yBAAhE,EAA2F,8DAAuB,CAAvB,EAA0BF,GAA1B,EAA+BD,SAA/B,CAA3F;AACH;AAAE;;AACH,aAAS4B,+CAAT,CAAyDxiD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;;AACA,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AACA,YAAM+rC,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B7B,SAAS,CAAC//D,QAAV,KAAuB4hE,OAAO,CAACvB,MAAzD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BN,SAAS,CAAC//D,QAAV,KAAuB4hE,OAAO,CAACvB,MAAzD,EAAiE,SAAjE,EAA4E,8DAAuB,CAAvB,EAA0BF,GAA1B,EAA+ByB,OAAO,CAACtB,OAAvC,EAAgD,CAACsB,OAAO,CAACtB,OAAzD,CAA5E;AACH;AAAE;;AACH,aAASuB,+CAAT,CAAyD1iD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,YAAM2iD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,iEAAkB,WAAlB,EAA+B,SAASC,yEAAT,CAAmFj/C,MAAnF,EAA2F;AAAE,sEAAqBg/C,IAArB;;AAA4B,cAAM/B,SAAS,GAAG,4DAAqB,CAArB,EAAwBlqC,SAA1C;;AAAqD,cAAM6qC,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AAAoC,cAAMsB,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACpB,iBAAR,CAA0B99C,MAA1B,EAAkCi9C,SAAlC,EAA6CW,IAA7C,CAAP;AAA4D,SAArV;;AACA;AACH;AAAE;;AACH,aAASuB,wCAAT,CAAkD9iD,EAAlD,EAAsDC,GAAtD,EAA2D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACrE,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,iEAAkB,CAAlB,EAAqBsiD,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,MAA5E,EAAoF,EAApF;;AACA,iEAAkB,CAAlB,EAAqBC,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,MAA5E,EAAoF,EAApF;;AACA,iEAAkB,CAAlB,EAAqBC,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,MAA5E,EAAoF,EAApF;;AACA,iEAAkB,CAAlB,EAAqBE,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,MAA5E,EAAoF,EAApF;;AACA;AACH;;AAAC,UAAI1iD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG,8DAAuBlqC,SAAzC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACkqC,SAAS,CAACG,cAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BH,SAAS,CAACG,cAApC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BH,SAAS,CAACwB,QAApC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BxB,SAAS,CAACyB,SAApC;AACH;AAAE;;AACH,aAASU,iCAAT,CAA2C/iD,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9D,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B,EAAmC,EAAnC;;AACA,6DAAc,CAAd,EAAiB,IAAjB;;AACA,iEAAkB,CAAlB,EAAqB0hD,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,QAAvE,EAAiF,EAAjF;;AACA,iEAAkB,CAAlB,EAAqBoB,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,MAArE,EAA6E,CAA7E;;AACA;AACH;;AAAC,UAAI9iD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4gD,SAAS,GAAG3gD,GAAG,CAACyW,SAAtB;;AACA,YAAMwC,MAAM,GAAG,6DAAf;;AACA,kEAAmB,OAAnB,EAA4B,0DAAmB,CAAnB,EAAsB,EAAtB,EAA0B0nC,SAAS,CAACjmE,KAApC,CAA5B;;AACA,kEAAmB,UAAnB,EAA+BimE,SAAS,CAACwB,QAAzC,EAAmD,WAAnD,EAAgExB,SAAS,CAACyB,SAA1E;;AACA,iEAAkB,MAAlB,EAA0B,CAACzB,SAAS,CAACnB,OAArC,EAA8C,SAA9C,EAAyDmB,SAAS,CAAClB,gBAAnE;;AACA,kEAAmB,WAAnB,EAAgCkB,SAAS,CAACwB,QAAV,GAAqBxB,SAAS,CAAC//D,QAAV,KAAuBq4B,MAAM,CAACgoC,MAA9B,GAAuChoC,MAAM,CAACioC,OAAP,GAAiB,WAAjB,GAA+B,YAAtE,GAAqF,MAA1G,GAAmH,IAAnJ;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BP,SAAS,CAACwB,QAApC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACxB,SAAS,CAACwB,QAArC;AACH;AAAE;;AACH,aAASY,oCAAT,CAA8ChjD,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,YAAMijD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,gBAAlB,EAAoC,SAASC,oEAAT,GAAgF;AAAE,sEAAqBD,IAArB;;AAA4B,cAAME,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AAAoC,cAAMC,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,kBAAR,CAA2BF,IAA3B,CAAP;AAA0C,SAAxQ;;AACA;AACH;;AAAC,UAAInjD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMsjD,QAAQ,GAAGrjD,GAAG,CAACyW,SAArB;AACA,YAAM6sC,SAAS,GAAGtjD,GAAG,CAACpe,KAAtB;;AACA,iEAAkB,MAAlB,EAA0ByhE,QAA1B,EAAoC,OAApC,EAA6CC,SAA7C;AACH;AAAE;;AACH,aAASC,oCAAT,CAA8CxjD,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,qEAAsB,CAAtB,EAAyB,OAAzB;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB;;AACA,6DAAc,CAAd;;AACA;;AACA;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmW,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,SAAnB,EAA8BA,MAAM,CAACiqC,WAArC;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBjqC,MAAM,CAACstC,aAAhC;AACH;AAAE;;AACH,aAASC,8CAAT,CAAwD1jD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,gEAAiB,CAAjB,EAAoB,IAApB,EAA0B,EAA1B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM2jD,UAAU,GAAG1jD,GAAG,CAACyW,SAAvB;;AACA,iEAAkB,MAAlB,EAA0B,CAACitC,UAAU,CAAClE,OAAtC;AACH;AAAE;;AACH,aAASmE,yCAAT,CAAmD5jD,EAAnD,EAAuDC,GAAvD,EAA4D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtE,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,gEAAiB,CAAjB,EAAoB,IAApB,EAA0B,EAA1B;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,6DAAc,CAAd,EAAiB,MAAjB;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,IAApB,EAA0B,EAA1B;;AACA,iEAAkB,CAAlB,EAAqB0jD,8CAArB,EAAqE,CAArE,EAAwE,CAAxE,EAA2E,IAA3E,EAAiF,EAAjF;;AACA;AACH;;AAAC,UAAI1jD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM6jD,SAAS,GAAG5jD,GAAG,CAACpe,KAAtB;;AACA,YAAMiiE,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,kEAAmB,SAAnB,EAA8B,CAACD,SAAS,GAAGC,OAAO,CAACnI,KAAR,CAAcr6D,MAA3B,IAAqC,CAArC,KAA2C,CAAzE,EAA4E,UAA5E,EAAwF,CAACuiE,SAAS,GAAGC,OAAO,CAACnI,KAAR,CAAcr6D,MAA3B,IAAqC,CAArC,KAA2C,CAAnI;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACwiE,OAAO,CAACC,mBAAnC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACD,OAAO,CAACE,kBAAnC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACF,OAAO,CAACG,mBAAnC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BH,OAAO,CAACI,OAArC;AACH;AAAE;;AACH,aAASC,oCAAT,CAA8CnkD,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,CAAlB,EAAqB4jD,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,IAAtE,EAA4E,EAA5E;;AACA;AACH;;AAAC,UAAI5jD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM+W,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BA,MAAM,CAACqtC,eAApC;AACH;AAAE;;AACH,aAASC,kCAAT,CAA4CrkD,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,GAAzB;;AACA,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;;AACA;;AACA;AACH;AAAE;;AACH,aAASskD,oDAAT,CAA8DtkD,EAA9D,EAAkEC,GAAlE,EAAuE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjF,gEAAiB,CAAjB,EAAoB,uBAApB,EAA6C,EAA7C;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMoY,MAAM,GAAG,6DAAf;;AACA,iEAAkB,QAAlB,EAA4BA,MAAM,CAACmsC,UAAnC;AACH;AAAE;;AACH,aAASC,qCAAT,CAA+CxkD,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClE,gEAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8V,MAAM,GAAG,6DAAf;;AACA,iEAAkB,aAAlB,EAAiCA,MAAM,CAACkqC,SAAP,CAAiByE,KAAlD;AACH;AAAE;;AACH,aAASC,4CAAT,CAAsD1kD,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,YAAM2kD,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,eAAlB,EAAmC,SAASC,2EAAT,CAAqFjhD,MAArF,EAA6F;AAAE,sEAAqBghD,GAArB;;AAA2B,cAAM1sC,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AAAwC,iBAAOA,MAAM,CAAC+nC,SAAP,CAAiB+D,mBAAjB,GAAuCpgD,MAA9C;AAAuD,SAA5P,EAA8P,QAA9P,EAAwQ,SAASkhD,oEAAT,CAA8ElhD,MAA9E,EAAsF;AAAE,sEAAqBghD,GAArB;;AAA2B,cAAMhuC,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AAAwC,iBAAOA,MAAM,CAACmuC,QAAP,CAAgBnhD,MAAhB,CAAP;AAAiC,SAApc;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkZ,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BA,MAAM,CAAC8mC,SAAP,CAAiB+D,mBAA9C;;AACA,kEAAmB,eAAnB,EAAoC7qC,MAAM,CAAC8mC,SAAP,CAAiBvpD,EAArD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiCyiB,MAAM,CAAC8mC,SAAP,CAAiBiC,MAAjB,CAAwB8C,YAAzD;AACH;AAAE;;AACH,aAASC,4CAAT,CAAsDhlD,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,YAAMuhD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,eAAlB,EAAmC,SAAS0D,2EAAT,CAAqFthD,MAArF,EAA6F;AAAE,sEAAqB49C,IAArB;;AAA4B,cAAM2D,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AAAwC,iBAAOA,MAAM,CAAClF,SAAP,CAAiBgE,kBAAjB,GAAsCrgD,MAA7C;AAAsD,SAA5P,EAA8P,QAA9P,EAAwQ,SAASwhD,oEAAT,CAA8ExhD,MAA9E,EAAsF;AAAE,sEAAqB49C,IAArB;;AAA4B,cAAMvoC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AAAyC,iBAAOA,OAAO,CAAC8rC,QAAR,CAAiBnhD,MAAjB,CAAP;AAAkC,SAAvc;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4Z,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BA,MAAM,CAAComC,SAAP,CAAiBgE,kBAA9C;;AACA,kEAAmB,eAAnB,EAAoCpqC,MAAM,CAAComC,SAAP,CAAiBvpD,EAArD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiCmjB,MAAM,CAAComC,SAAP,CAAiBiC,MAAjB,CAAwBmD,WAAzD;AACH;AAAE;;AACH,aAASC,4CAAT,CAAsDrlD,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,YAAMoZ,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,eAAlB,EAAmC,SAASksC,2EAAT,CAAqF3hD,MAArF,EAA6F;AAAE,sEAAqByV,IAArB;;AAA4B,cAAME,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AAAyC,iBAAOA,OAAO,CAAC0mC,SAAR,CAAkBiE,mBAAlB,GAAwCtgD,MAA/C;AAAwD,SAA/P,EAAiQ,QAAjQ,EAA2Q,SAAS4hD,oEAAT,CAA8E5hD,MAA9E,EAAsF;AAAE,sEAAqByV,IAArB;;AAA4B,cAAMI,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AAAyC,iBAAOA,OAAO,CAACsrC,QAAR,CAAiBnhD,MAAjB,CAAP;AAAkC,SAA1c;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmW,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BA,MAAM,CAAC6pC,SAAP,CAAiBiE,mBAA9C;;AACA,kEAAmB,eAAnB,EAAoC9tC,MAAM,CAAC6pC,SAAP,CAAiBvpD,EAArD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiC0f,MAAM,CAAC6pC,SAAP,CAAiBiC,MAAjB,CAAwBuD,YAAzD;AACH;AAAE;;AACH,aAASC,0DAAT,CAAoEzlD,EAApE,EAAwEC,GAAxE,EAA6E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvF,YAAM0lD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,eAAlB,EAAmC,SAASC,yFAAT,CAAmGhiD,MAAnG,EAA2G;AAAE,sEAAqB+hD,IAArB;;AAA4B,cAAME,QAAQ,GAAG,8DAAuBlvC,SAAxC;;AAAmD,iBAAOkvC,QAAQ,CAACnG,OAAT,GAAmB97C,MAA1B;AAAmC,SAAlQ,EAAoQ,QAApQ,EAA8Q,SAASkiD,kFAAT,CAA4FliD,MAA5F,EAAoG;AAAE,sEAAqB+hD,IAArB;;AAA4B,cAAMI,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AAAyC,iBAAOA,OAAO,CAAChB,QAAR,CAAiBnhD,MAAjB,CAAP;AAAkC,SAA3d;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4lD,QAAQ,GAAG,8DAAuBlvC,SAAxC;;AACA,YAAMgqC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BkF,QAAQ,CAACnG,OAAtC;;AACA,kEAAmB,eAAnB,EAAoCiB,OAAO,CAACV,SAAR,CAAkBvpD,EAAtD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiCmvD,QAAQ,CAACjG,MAA1C;AACH;AAAE;;AACH,aAASoG,qDAAT,CAA+D/lD,EAA/D,EAAmEC,GAAnE,EAAwE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClF,iEAAkB,CAAlB,EAAqBylD,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,IAAvF,EAA6F,EAA7F;AACH;;AAAC,UAAIzlD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4lD,QAAQ,GAAG3lD,GAAG,CAACyW,SAArB;;AACA,YAAMK,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,iEAAkB,MAAlB,EAA0BA,MAAM,CAACipC,SAAP,CAAiBC,aAAjB,KAAmC2F,QAAQ,CAAC/kE,QAAtE;AACH;AAAE;;AACH,aAASmlE,uCAAT,CAAiDhmD,EAAjD,EAAqDC,GAArD,EAA0D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpE,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,EAA/B;;AACA,iEAAkB,CAAlB,EAAqB0kD,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,IAAzE,EAA+E,EAA/E;;AACA,iEAAkB,CAAlB,EAAqBM,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,IAAzE,EAA+E,EAA/E;;AACA,iEAAkB,CAAlB,EAAqBK,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,IAAzE,EAA+E,EAA/E;;AACA,iEAAkB,CAAlB,EAAqBU,qDAArB,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,aAAlF,EAAiG,EAAjG;;AACA;;AACA;AACH;;AAAC,UAAI/lD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuX,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BA,MAAM,CAACyoC,SAAP,CAAiBiG,cAA3C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B1uC,MAAM,CAACyoC,SAAP,CAAiBoF,WAA3C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B7tC,MAAM,CAACyoC,SAAP,CAAiBwF,YAA3C;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BjuC,MAAM,CAACyoC,SAAP,CAAiBkE,OAA9C;AACH;AAAE;;AACH,QAAMgC,GAAG,GAAG,CAAC,WAAD,CAAZ;;AACA,aAASC,8CAAT,CAAwDnmD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,qEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,EAAnC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMomD,IAAI,GAAGnmD,GAAG,CAACyW,SAAjB;;AACA,iEAAkB,OAAlB,EAA2B0vC,IAA3B;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,IAAzB;AACH;AAAE;;AACH,QAAMC,IAAI,GAAG,CAAC,UAAD,CAAb;;AACA,aAASC,0CAAT,CAAoDtmD,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvE,YAAMumD,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,CAAjC;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,6DAAT,GAAyE;AAAE,sEAAqBD,GAArB;;AAA2B,cAAME,QAAQ,GAAGxmD,GAAG,CAACyW,SAArB;;AAAgC,cAAMkD,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC8sC,aAAP,CAAqBD,QAArB,CAAP;AAAwC,SAAhP;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIzmD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMymD,QAAQ,GAAGxmD,GAAG,CAACyW,SAArB;;AACA,YAAMhO,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,YAAMoN,MAAM,GAAG,6DAAf;;AACA,kEAAmB,QAAnB,EAA6BA,MAAM,CAACw7B,UAAP,IAAqB5oC,GAAlD;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,EAA1B,EAA8B+9C,QAAQ,CAAC9G,MAAvC,EAA+C,GAA/C;AACH;AAAE;;AACH,aAASgH,6CAAT,CAAuD3mD,EAAvD,EAA2DC,GAA3D,EAAgE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1E,qEAAsB,CAAtB,EAAyB,YAAzB,EAAuC,EAAvC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4mD,YAAY,GAAG3mD,GAAG,CAACyW,SAAzB;;AACA,YAAMa,MAAM,GAAG,6DAAf;;AACA,iEAAkB,OAAlB,EAA2BqvC,YAA3B;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,GAA1B,EAA+BrvC,MAAM,CAAC4R,IAAP,CAAY84B,MAAZ,CAAmB4E,eAAnB,CAAmCD,YAAnC,CAA/B,EAAiF,GAAjF;AACH;AAAE;;AACH,aAASE,8DAAT,CAAwE9mD,EAAxE,EAA4EC,GAA5E,EAAiF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3F,yEAA0B,CAA1B;AACH;AAAE;;AACH,aAAS+mD,+CAAT,CAAyD/mD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,8EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqB8mD,8DAArB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,EAA3G;;AACA;AACH;;AAAC,UAAI9mD,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAMuW,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCA,GAAtC;AACH;AAAE;;AACH,aAASywC,8DAAT,CAAwEhnD,EAAxE,EAA4EC,GAA5E,EAAiF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3F,yEAA0B,CAA1B;AACH;AAAE;;AACH,aAASinD,+CAAT,CAAyDjnD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,8EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqBgnD,8DAArB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,EAA3G;;AACA;AACH;;AAAC,UAAIhnD,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAM2kD,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCA,GAAtC;AACH;AAAE;;AACH,aAASuC,8DAAT,CAAwElnD,EAAxE,EAA4EC,GAA5E,EAAiF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3F,yEAA0B,CAA1B;AACH;AAAE;;AACH,aAASmnD,+CAAT,CAAyDnnD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,8EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqBknD,8DAArB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,EAA3G;;AACA;AACH;;AAAC,UAAIlnD,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAMonD,IAAI,GAAG,0DAAmB,EAAnB,CAAb;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCA,IAAtC;AACH;AAAE;;AACH,aAASC,8DAAT,CAAwErnD,EAAxE,EAA4EC,GAA5E,EAAiF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3F,yEAA0B,CAA1B;AACH;AAAE;;AACH,QAAMsnD,IAAI,GAAG,SAAPA,IAAO,CAAUpI,EAAV,EAAc7O,EAAd,EAAkB;AAAE,aAAO;AAAE/uC,eAAO,EAAE49C,EAAX;AAAeqI,YAAI,EAAElX;AAArB,OAAP;AAAmC,KAApE;;AACA,aAASmX,+CAAT,CAAyDxnD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,8EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqBqnD,8DAArB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,EAA3G;;AACA;AACH;;AAAC,UAAIrnD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM+W,MAAM,GAAG,6DAAf;;AACA,YAAM0wC,IAAI,GAAG,0DAAmB,EAAnB,CAAb;;AACA,YAAMh/C,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCg/C,IAAtC,EAA4C,yBAA5C,EAAuE,8DAAuB,CAAvB,EAA0BH,IAA1B,EAAgCvwC,MAAM,CAACoS,IAAP,CAAYu+B,WAAZ,CAAwBC,KAAxB,CAA8BC,eAA9D,EAA+En/C,GAA/E,CAAvE;AACH;AAAE;;AACH,aAASo/C,8DAAT,CAAwE7nD,EAAxE,EAA4EC,GAA5E,EAAiF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3F,yEAA0B,CAA1B;AACH;AAAE;;AACH,aAAS8nD,+CAAT,CAAyD9nD,EAAzD,EAA6DC,GAA7D,EAAkE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5E,8EAA+B,CAA/B;;AACA,iEAAkB,CAAlB,EAAqB6nD,8DAArB,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,cAA3F,EAA2G,EAA3G;;AACA;AACH;;AAAC,UAAI7nD,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAMoZ,IAAI,GAAG,0DAAmB,EAAnB,CAAb;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCA,IAAtC;AACH;AAAE;;AACH,aAAS2uC,0DAAT,CAAoE/nD,EAApE,EAAwEC,GAAxE,EAA6E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvF,qEAAsB,CAAtB,EAAyB,WAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAMgoD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAMC,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAACC,eAAR,CAAwBF,IAAxB,CAAzB;AACH;AAAE;;AACH,aAASG,8CAAT,CAAwDnoD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,YAAMooD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,gBAAzB,EAA2C,EAA3C;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,eAAlB,EAAmC,SAASC,6EAAT,CAAuF1kD,MAAvF,EAA+F;AAAE,sEAAqBykD,IAArB;;AAA4B,cAAMrG,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACuG,WAAR,GAAsB3kD,MAA7B;AAAsC,SAA9O;;AACA;;AACA,gEAAiB,CAAjB,EAAoB,uBAApB,EAA6C,EAA7C;;AACA,gEAAiB,CAAjB,EAAoB,gBAApB,EAAsC,EAAtC,EAA0C,EAA1C;;AACA,iEAAkB,CAAlB,EAAqBokD,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,WAAvF,EAAoG,EAApG;;AACA;AACH;;AAAC,UAAI/nD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMgoD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAMO,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAM5xC,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,mBAAlB,EAAuCA,MAAM,CAAC6xC,OAA9C,EAAuD,SAAvD,EAAkE7xC,MAAM,CAAC2xC,WAAzE,EAAsF,eAAtF,EAAuGC,IAAvG,EAA6G,aAA7G,EAA4H5xC,MAAM,CAACwS,IAAP,CAAY84B,MAAZ,CAAmBzlC,IAA/I;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,KAAlB,EAAyB+rC,IAAzB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BP,IAAI,IAAIA,IAAI,CAAC1yC,OAAvC;AACH;AAAE;;AACH,aAASmzC,0DAAT,CAAoEzoD,EAApE,EAAwEC,GAAxE,EAA6E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvF,qEAAsB,CAAtB,EAAyB,WAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAM0oD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAMjG,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAACyF,eAAR,CAAwBQ,IAAxB,CAAzB;AACH;AAAE;;AACH,aAASC,8CAAT,CAAwD3oD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,YAAM4oD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,gBAAzB,EAA2C,EAA3C;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,eAAlB,EAAmC,SAASC,6EAAT,CAAuFllD,MAAvF,EAA+F;AAAE,sEAAqBilD,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACR,WAAR,GAAsB3kD,MAA7B;AAAsC,SAA9O;;AACA;;AACA,iEAAkB,CAAlB,EAAqB8kD,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,WAAvF,EAAoG,EAApG;;AACA;AACH;;AAAC,UAAIzoD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM0oD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAM7vC,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiCA,OAAO,CAACsQ,IAAR,CAAa84B,MAAb,CAAoBnhE,KAArD,EAA4D,mBAA5D,EAAiF+3B,OAAO,CAAC2vC,OAAzF,EAAkG,SAAlG,EAA6G3vC,OAAO,CAACyvC,WAArH;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BI,IAAI,IAAIA,IAAI,CAACpzC,OAAvC;AACH;AAAE;;AACH,aAASyzC,6DAAT,CAAuE/oD,EAAvE,EAA2EC,GAA3E,EAAgF;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1F,YAAMgpD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,cAAzB,EAAyC,EAAzC;;AACA,iEAAkB,QAAlB,EAA4B,SAASC,4FAAT,CAAsGtlD,MAAtG,EAA8G;AAAE,sEAAqBqlD,IAArB;;AAA4B,cAAME,UAAU,GAAGjpD,GAAG,CAACyW,SAAvB;;AAAkC,cAAMyyC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AAAyC,iBAAOA,OAAO,CAACC,gBAAR,CAAyBF,UAAzB,EAAqCvlD,MAAM,CAACkD,OAA5C,CAAP;AAA8D,SAAjT;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAI7G,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkpD,UAAU,GAAGjpD,GAAG,CAACyW,SAAvB;;AACA,YAAM2yC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,iEAAkB,SAAlB,EAA6BA,OAAO,CAACC,cAAR,CAAuBJ,UAAvB,CAA7B;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBG,OAAO,CAACE,4BAAR,CAAqCL,UAArC,CAAzB;AACH;AAAE;;AACH,aAASM,0DAAT,CAAoExpD,EAApE,EAAwEC,GAAxE,EAA6E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvF,qEAAsB,CAAtB,EAAyB,WAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMypD,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAACC,4BAAjC;AACH;AAAE;;AACH,aAASC,8CAAT,CAAwD3pD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,iEAAkB,CAAlB,EAAqB+oD,6DAArB,EAAoF,CAApF,EAAuF,CAAvF,EAA0F,cAA1F,EAA0G,EAA1G;;AACA,iEAAkB,CAAlB,EAAqBS,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,WAAvF,EAAoG,EAApG;;AACA;AACH;;AAAC,UAAIxpD,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4pD,WAAW,GAAG3pD,GAAG,CAACqB,OAAxB;AACA,YAAMuoD,KAAK,GAAG5pD,GAAG,CAACsnD,IAAlB;;AACA,YAAMjuC,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BswC,WAA7B;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BC,KAAK,CAACC,SAAN,IAAmB,CAACxwC,OAAO,CAACywC,yBAAtD;AACH;AAAE;;AACH,aAASC,8CAAT,CAAwDhqD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,YAAMiqD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,qEAAT,GAAiF;AAAE,sEAAqBD,IAArB;;AAA4B,cAAME,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AAAoC,cAAMhH,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AAAoC,cAAMiH,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAAC9B,WAAR,IAAuB,KAAvB,GAA+B6B,IAAI,CAACz+C,KAAL,EAA/B,GAA8Cy3C,IAAI,CAACz3C,KAAL,EAArD;AAAoE,SAA9T;;AACA;;AACA,qEAAsB,CAAtB,EAAyB,iBAAzB,EAA4C,EAA5C;;AACA,iEAAkB,eAAlB,EAAmC,SAAS2+C,uFAAT,CAAiG1mD,MAAjG,EAAyG;AAAE,sEAAqBsmD,IAArB;;AAA4B,cAAMK,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAAChC,WAAR,GAAsB3kD,MAA7B;AAAsC,SAAxP;;AACA,qEAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,EAA7C,EAAiD,EAAjD;;AACA,qEAAsB,CAAtB,EAAyB,UAAzB,EAAqC,EAArC;;AACA,6DAAc,CAAd,EAAiB,OAAjB;;AACA;;AACA;;AACA,qEAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,EAA7C,EAAiD,EAAjD;;AACA,qEAAsB,CAAtB,EAAyB,UAAzB,EAAqC,EAArC;;AACA,6DAAc,EAAd,EAAkB,OAAlB;;AACA;;AACA;;AACA;;AACA;AACH;;AAAC,UAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,YAAMwZ,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,SAAlB,EAA6BA,OAAO,CAAC8uC,WAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,OAAlB,EAA2B,IAA3B;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,OAAlB,EAA2B,KAA3B;AACH;AAAE;;AACH,aAASiC,0DAAT,CAAoEvqD,EAApE,EAAwEC,GAAxE,EAA6E;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACvF,qEAAsB,CAAtB,EAAyB,WAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV;;AACA,YAAMwqD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAMC,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAACvC,eAAR,CAAwBsC,IAAxB,CAAzB;AACH;AAAE;;AACH,aAASE,8CAAT,CAAwD1qD,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,YAAM2qD,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,gBAAzB,EAA2C,EAA3C;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,eAAlB,EAAmC,SAASC,6EAAT,CAAuFjnD,MAAvF,EAA+F;AAAE,sEAAqBgnD,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACvC,WAAR,GAAsB3kD,MAA7B;AAAsC,SAA9O;;AACA;;AACA,iEAAkB,CAAlB,EAAqB4mD,0DAArB,EAAiF,CAAjF,EAAoF,CAApF,EAAuF,WAAvF,EAAoG,EAApG;;AACA;AACH;;AAAC,UAAIvqD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMwqD,IAAI,GAAG,0DAAmB,CAAnB,CAAb;;AACA,YAAM5wB,OAAO,GAAG,6DAAhB;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,aAAlB,EAAiCA,OAAO,CAACzQ,IAAR,CAAa84B,MAAb,CAAoBnhE,KAArD,EAA4D,mBAA5D,EAAiF84C,OAAO,CAAC4uB,OAAzF,EAAkG,SAAlG,EAA6G5uB,OAAO,CAAC0uB,WAArH;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BkC,IAAI,IAAIA,IAAI,CAACl1C,OAAvC;AACH;AAAE;;AACH,aAASw1C,sCAAT,CAAgD9qD,EAAhD,EAAoDC,GAApD,EAAyD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACnE,YAAM6X,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAArC;;AACA,iEAAkB,OAAlB,EAA2B,SAASkzC,gEAAT,CAA0EpnD,MAA1E,EAAkF;AAAE,sEAAqBkU,GAArB;;AAA2B,cAAMmzC,SAAS,GAAG/qD,GAAG,CAACyW,SAAtB;;AAAiC,cAAMP,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC80C,WAAP,CAAmBtnD,MAAnB,EAA2BqnD,SAA3B,CAAP;AAA+C,SAAjQ,EAAmQ,SAAnQ,EAA8Q,SAASE,kEAAT,GAA8E;AAAE,sEAAqBrzC,GAArB;;AAA2B,cAAMmzC,SAAS,GAAG/qD,GAAG,CAACyW,SAAtB;;AAAiC,cAAMuB,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACkzC,YAAP,CAAoBH,SAApB,CAAP;AAAwC,SAAze;;AACA,6DAAc,CAAd;;AACA,qEAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAArC;;AACA,6DAAc,CAAd,EAAiB,QAAjB;;AACA;;AACA;AACH;;AAAC,UAAIhrD,EAAE,GAAG,CAAT,EAAY;AACV,YAAMgrD,SAAS,GAAG/qD,GAAG,CAACyW,SAAtB;;AACA,YAAMa,MAAM,GAAG,6DAAf;;AACA,iEAAkB,WAAlB,EAA+B,IAA/B;;AACA,gEAAiB,CAAjB;;AACA,yEAA0B,GAA1B,EAA+BA,MAAM,CAAC6zC,qBAAP,CAA6BJ,SAA7B,CAA/B,EAAwE,GAAxE;AACH;AAAE;;AACH,aAASK,OAAT,CAAiB5rC,GAAjB,EAAsB;AAClB,aAAOA,GAAG,KAAK7gC,SAAR,IAAqB6gC,GAAG,KAAK,IAApC;AACH;;QACK6rC,a;AACF;;;;AAIA,6BAAYruD,WAAZ,EAAyBsuD,QAAzB,EAAmC;AAAA;;AAC/B,aAAKtuD,WAAL,GAAmBA,WAAnB;AACA,aAAKsuD,QAAL,GAAgBA,QAAhB;AACA,aAAKC,cAAL,GAAsB,KAAtB;AACH;AACD;;;;;;;;;AAeA;;;;2CAImB;AACf,cAAI,KAAKC,aAAL,KAAuB7sE,SAA3B,EAAsC;AAClC;AACA,gBAAM8sE,YAAY,GAAG,KAAKzuD,WAAL,CAAiBxL,aAAjB,CAA+BjY,KAA/B,CAAqC2lC,OAA1D;;AACA,gBAAIusC,YAAY,KAAK,MAArB,EAA6B;AACzB,mBAAKD,aAAL,GAAqBC,YAArB;AACH;AACJ;AACJ;;;0BAvBQC,Y,EAAc;AACnB,eAAKC,gBAAL;;AACA,cAAID,YAAY,KAAKN,OAAO,CAAC,KAAKG,cAAN,CAAP,IAAgC,CAAC,KAAKA,cAA3C,CAAhB,EAA4E;AACxE,iBAAKA,cAAL,GAAsB,IAAtB;AACA,iBAAKD,QAAL,CAAcM,QAAd,CAAuB,KAAK5uD,WAAL,CAAiBxL,aAAxC,EAAuD,SAAvD,EAAkE,MAAlE;AACH,WAHD,MAIK,IAAI,CAACk6D,YAAD,KAAkBN,OAAO,CAAC,KAAKG,cAAN,CAAP,IAAgC,KAAKA,cAAvD,CAAJ,EAA4E;AAC7E,iBAAKA,cAAL,GAAsB,KAAtB;AACA,iBAAKD,QAAL,CAAcM,QAAd,CAAuB,KAAK5uD,WAAL,CAAiBxL,aAAxC,EAAuD,SAAvD,EAAkE,KAAKg6D,aAAvE;AACH;AACJ;;;;;;AAeLH,iBAAa,CAAC/sE,IAAd,GAAqB,SAASutE,qBAAT,CAA+BrtE,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI6sE,aAAV,EAAyB,gEAAyB,wDAAzB,CAAzB,EAAsE,gEAAyB,uDAAzB,CAAtE,CAAP;AAA2H,KAApL;;AACAA,iBAAa,CAACp0D,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAE2sE,aAAR;AAAuBn0D,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAAD,CAAlC;AAAsDyC,YAAM,EAAE;AAAEmyD,YAAI,EAAE;AAAR;AAA9D,KAAzB,CAArB;AACA;;AACAT,iBAAa,CAAC5sE,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAE;AAAR,OADiC,EAEjC;AAAEA,YAAI,EAAE;AAAR,OAFiC,CAAN;AAAA,KAA/B;;AAIA2sE,iBAAa,CAACvxD,cAAd,GAA+B;AAC3BgyD,UAAI,EAAE,CAAC;AAAEptE,YAAI,EAAE;AAAR,OAAD;AADqB,KAA/B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2sE,aAAzB,EAAwC,CAAC;AAC9D3sE,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFwD,OAAD,CAAxC,EAKrB,YAAY;AAAE,eAAO,CAAC;AAAEnO,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,CAAP;AAAmE,OAL5D,EAK8D;AAAEotE,YAAI,EAAE,CAAC;AACxFptE,cAAI,EAAE;AADkF,SAAD;AAAR,OAL9D;AAOb,KAPF;AASd;;;;;;QAIMqtE,O;;;;;;;;AACF;;;;;kCAKUlrE,K,EAAOhC,I,EAAM;AACnB,iBAAO5C,IAAI,CAAC2T,GAAL,CAASvJ,KAAT,CAAe,IAAf,EAAqBxF,KAArB,CAAP;AACH;;;;;;AAELkrE,WAAO,CAACztE,IAAR,GAAe,SAAS0tE,eAAT,CAAyBxtE,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIutE,OAAV,GAAP;AAA8B,KAA3E;;AACAA,WAAO,CAACE,KAAR,GAAgB,2DAAoB;AAAEtmD,UAAI,EAAE,KAAR;AAAejnB,UAAI,EAAEqtE,OAArB;AAA8BG,UAAI,EAAE;AAApC,KAApB,CAAhB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBH,OAAzB,EAAkC,CAAC;AACxDrtE,YAAI,EAAE,kDADkD;AAExDG,YAAI,EAAE,CAAC;AACC8mB,cAAI,EAAE;AADP,SAAD;AAFkD,OAAD,CAAlC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;QAIMwmD,c;;;;;;;;AACF;;;;;kCAKUtrE,K,EAAOhC,I,EAAM;AACnB,cAAIgC,KAAK,KAAKlC,SAAd,EAAyB;AACrB;AACH;;AACD,cAAI,OAAOkC,KAAP,KAAiB,QAArB,EAA+B;AAC3B,mBAAOA,KAAP;AACH;;AACD,cAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,mBAAOA,KAAK,GAAG,IAAf;AACH;AACJ;;;;;;AAELsrE,kBAAc,CAAC7tE,IAAf,GAAsB,SAAS8tE,sBAAT,CAAgC5tE,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI2tE,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACF,KAAf,GAAuB,2DAAoB;AAAEtmD,UAAI,EAAE,IAAR;AAAcjnB,UAAI,EAAEytE,cAApB;AAAoCD,UAAI,EAAE;AAA1C,KAApB,CAAvB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBC,cAAzB,EAAyC,CAAC;AAC/DztE,YAAI,EAAE,kDADyD;AAE/DG,YAAI,EAAE,CAAC;AACC8mB,cAAI,EAAE;AADP,SAAD;AAFyD,OAAD,CAAzC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;AAIA;;;;;QAGM0mD,iB;AACF;;;AAGA,iCAAY3Q,KAAZ,EAAmB;AAAA;;AACf,aAAKA,KAAL,GAAaA,KAAb;AACH;AACD;;;;;;;;;8BAKM4Q,M,EAAQ9oB,M,EAAQ;AAClB;AACA,cAAInnC,MAAM,GAAG,EAAb;;AACA,cAAImnC,MAAJ,EAAY;AACRnnC,kBAAM,GAAG,KAAKq/C,KAAL,CAAWlY,MAAX,CAAkBA,MAAlB,CAAT;AACH,WAFD,MAGK;AACDnnC,kBAAM,GAAG,KAAKq/C,KAAL,CAAWxnD,KAAX,EAAT,CADC,CAC4B;AAChC;;AACD,cAAIo4D,MAAM,CAACrL,MAAX,EAAmB;AACf5kD,kBAAM,CAAC6+C,IAAP;AAAa;;;;;AAKb,sBAACv4B,CAAD,EAAIC,CAAJ,EAAU;AACN,kBAAI,OAAOD,CAAC,CAAC2pC,MAAM,CAACrL,MAAR,CAAR,KAA4B,QAAhC,EAA0C;AACtC,uBAAOt+B,CAAC,CAAC2pC,MAAM,CAACrL,MAAR,CAAD,CAAiBsL,aAAjB,CAA+B3pC,CAAC,CAAC0pC,MAAM,CAACrL,MAAR,CAAhC,CAAP;AACH,eAFD,MAGK;AACD,uBAAOt+B,CAAC,CAAC2pC,MAAM,CAACrL,MAAR,CAAD,GAAmBr+B,CAAC,CAAC0pC,MAAM,CAACrL,MAAR,CAA3B;AACH;AACJ,aAZD;;AAaA,gBAAIqL,MAAM,CAACpL,OAAP,KAAmB,KAAvB,EAA8B;AAC1B7kD,oBAAM,CAACuhD,OAAP;AACH;AACJ;;AACD,cAAI0O,MAAM,CAAC1/D,MAAP,KAAkBjO,SAAtB,EAAiC;AAC7B,gBAAI2tE,MAAM,CAACE,KAAP,KAAiB7tE,SAArB,EAAgC;AAC5B0d,oBAAM,GAAGA,MAAM,CAACnI,KAAP,CAAao4D,MAAM,CAAC1/D,MAApB,EAA4ByP,MAAM,CAAChb,MAAnC,CAAT;AACH,aAFD,MAGK;AACDgb,oBAAM,GAAGA,MAAM,CAACnI,KAAP,CAAao4D,MAAM,CAAC1/D,MAApB,EAA4B0/D,MAAM,CAAC1/D,MAAP,GAAgB0/D,MAAM,CAACE,KAAnD,CAAT;AACH;AACJ;;AACD,iBAAO,IAAIlmD,OAAJ;AAAa;;;;;AAKpB,oBAACC,OAAD,EAAUkmD,MAAV,EAAqB;AACjB7kE,sBAAU;AAAE;;;AAGZ;AAAA,qBAAM2e,OAAO,CAAClK,MAAD,CAAb;AAAA,aAHU,CAAV;AAIH,WAVM,CAAP;AAWH;AACD;;;;;;gCAGQ;AAAA;;AACJ,iBAAO,IAAIiK,OAAJ;AAAa;;;;;AAKpB,oBAACC,OAAD,EAAUkmD,MAAV,EAAqB;AACjB7kE,sBAAU;AAAE;;;AAGZ;AAAA,qBAAM2e,OAAO,CAAC,QAAI,CAACm1C,KAAL,CAAWr6D,MAAZ,CAAb;AAAA,aAHU,CAAV;AAIH,WAVM,CAAP;AAWH;;;;;AAGL;;;;;;QAIMqrE,wB;AACF,0CAAc;AAAA;;AACV,aAAKjN,gBAAL,GAAwB,EAAxB,CADU,CACkB;;AAC5B,aAAK0C,QAAL,GAAgB,KAAhB;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAK5C,OAAL,GAAe,IAAf;AACH;AACD;;;;;;;;;qCAKax+B,G,EAAKp/B,K,EAAO;AACrB,cAAI,KAAK+qE,UAAL,KAAoBhuE,SAAxB,EAAmC;AAC/B,mBAAO;AAAE;AAAkB,mBAAKguE,UAAzB,CAAuC3rC,GAAG,CAAC4vB,IAA3C,EAAiD5vB,GAAjD,EAAsD,IAAtD,EAA4Dp/B,KAA5D;AAAP;AACH;AACJ;AACD;;;;;;mCAGW;AACP,eAAKgrE,cAAL;AACH;AACD;;;;;;;yCAIiB;AACb,cAAI,CAAC,KAAKC,UAAN,IAAoB,KAAKjsE,QAA7B,EAAuC;AACnC,gBAAI,kBAAkBksE,IAAlB,CAAuB,KAAKlsE,QAA5B,CAAJ,EAA2C;AACvC,mBAAKisE,UAAL,GAAkB,YAAY,KAAKjsE,QAAnC;AACH,aAFD,MAGK;AACD,mBAAKisE,UAAL,GAAkB,YAAY,KAAKjsE,QAAL,CAAcmsE,OAAd,CAAsB,gBAAtB,EAAwC,EAAxC,CAA9B;AACH;AACJ;;AACD,cAAI,KAAKF,UAAL,IAAmB,IAAvB,EAA6B;AACzB,iBAAKpN,gBAAL,uBACK,KAAKoN,UADV,EACuB,IADvB;AAGH;AACJ;;;;;;AAELH,4BAAwB,CAACpuE,IAAzB,GAAgC,SAAS0uE,gCAAT,CAA0CxuE,CAA1C,EAA6C;AAAE,aAAO,KAAKA,CAAC,IAAIkuE,wBAAV,GAAP;AAA+C,KAA9H;;AACAA,4BAAwB,CAACz1D,IAAzB,GAAgC,gEAAyB;AAAEvY,UAAI,EAAEguE,wBAAR;AAAkCx1D,eAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,CAA7C;AAAsE8U,oBAAc,EAAE,SAASihD,uCAAT,CAAiDltD,EAAjD,EAAqDC,GAArD,EAA0DkM,QAA1D,EAAoE;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AACzN,uEAAsBmM,QAAtB,EAAgC5L,GAAhC,EAAqC,IAArC;;AACA,uEAAsB4L,QAAtB,EAAgC3L,GAAhC,EAAqC,IAArC;AACH;;AAAC,YAAIR,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACo/C,YAAJ,GAAmBp9C,EAAE,CAACE,KAA3E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC8gD,cAAJ,GAAqB9+C,EAAE,CAACE,KAA7E;AACH;AAAE,OAPkD;AAOhDvI,YAAM,EAAE;AAAEwoD,gBAAQ,EAAE,UAAZ;AAAwBC,iBAAS,EAAE,WAAnC;AAAgD5C,eAAO,EAAE,SAAzD;AAAoEqN,kBAAU,EAAE,YAAhF;AAA8FnN,cAAM,EAAE,QAAtG;AAAgH9+D,gBAAQ,EAAE,UAA1H;AAAsI+rE,kBAAU,EAAE,YAAlJ;AAAgKjyE,aAAK,EAAE;AAAvK;AAPwC,KAAzB,CAAhC;AAQAgyE,4BAAwB,CAAC5yD,cAAzB,GAA0C;AACtC4lD,YAAM,EAAE,CAAC;AAAEhhE,YAAI,EAAE;AAAR,OAAD,CAD8B;AAEtCyjE,cAAQ,EAAE,CAAC;AAAEzjE,YAAI,EAAE;AAAR,OAAD,CAF4B;AAGtC0jE,eAAS,EAAE,CAAC;AAAE1jE,YAAI,EAAE;AAAR,OAAD,CAH2B;AAItCkC,cAAQ,EAAE,CAAC;AAAElC,YAAI,EAAE;AAAR,OAAD,CAJ4B;AAKtCmuE,gBAAU,EAAE,CAAC;AAAEnuE,YAAI,EAAE;AAAR,OAAD,CAL0B;AAMtCiuE,gBAAU,EAAE,CAAC;AAAEjuE,YAAI,EAAE;AAAR,OAAD,CAN0B;AAOtChE,WAAK,EAAE,CAAC;AAAEgE,YAAI,EAAE;AAAR,OAAD,CAP+B;AAQtC8gE,aAAO,EAAE,CAAC;AAAE9gE,YAAI,EAAE;AAAR,OAAD,CAR6B;AAStC0gE,kBAAY,EAAE,CAAC;AAAE1gE,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,eAAD;AAA5B,OAAD,CATwB;AAUtCiiE,oBAAc,EAAE,CAAC;AAAEpiE,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,iBAAD;AAA5B,OAAD;AAVsB,KAA1C;AAYA;;AAAc,KAAC,YAAY;AAAE,sEAAyB6tE,wBAAzB,EAAmD,CAAC;AACzEhuE,YAAI,EAAE,uDADmE;AAEzEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFmE,OAAD,CAAnD,EAKrB,YAAY;AAAE,eAAO,EAAP;AAAY,OALL,EAKO;AAAEs1D,gBAAQ,EAAE,CAAC;AACrCzjE,cAAI,EAAE;AAD+B,SAAD,CAAZ;AAExB0jE,iBAAS,EAAE,CAAC;AACZ1jE,cAAI,EAAE;AADM,SAAD,CAFa;AAIxB8gE,eAAO,EAAE,CAAC;AACV9gE,cAAI,EAAE;AADI,SAAD,CAJe;AAMxBmuE,kBAAU,EAAE,CAAC;AACbnuE,cAAI,EAAE;AADO,SAAD,CANY;AAQxBghE,cAAM,EAAE,CAAC;AACThhE,cAAI,EAAE;AADG,SAAD,CARgB;AAUxBkC,gBAAQ,EAAE,CAAC;AACXlC,cAAI,EAAE;AADK,SAAD,CAVc;AAYxBiuE,kBAAU,EAAE,CAAC;AACbjuE,cAAI,EAAE;AADO,SAAD,CAZY;AAcxBhE,aAAK,EAAE,CAAC;AACRgE,cAAI,EAAE;AADE,SAAD,CAdiB;AAgBxB0gE,oBAAY,EAAE,CAAC;AACf1gE,cAAI,EAAE,0DADS;AAEfG,cAAI,EAAE,CAAC,eAAD;AAFS,SAAD,CAhBU;AAmBxBiiE,sBAAc,EAAE,CAAC;AACjBpiE,cAAI,EAAE,0DADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD;AAnBQ,OALP;AA2Bb,KA3BF;AA6Bd;;;;;;QAIMquE,qB;AACF;;;;;AAKA,qCAAYnN,SAAZ,EAAuBuL,QAAvB,EAAiC91D,UAAjC,EAA6C;AAAA;;AACzC,aAAKuqD,SAAL,GAAiBA,SAAjB;AACA,aAAKuL,QAAL,GAAgBA,QAAhB;AACA,aAAK91D,UAAL,GAAkBA,UAAlB;AACA,aAAK6pD,KAAL,GAAa,IAAb;AACA,aAAK8N,UAAL,GAAkB,EAAlB;AACA,aAAKnxC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACH;AACD;;;;;;;;AA0BA;;;qCAGa;AACT,cAAI,KAAK+jC,SAAL,CAAeqN,UAAnB,EAA+B;AAC3B,mBAAO,KAAKrN,SAAL,CAAeqN,UAAf,CAA0B,KAAKxc,IAA/B,EAAqC,IAArC,EAA2C,KAAKhvD,KAAhD,CAAP;AACH;;AACD,iBAAO,EAAP;AACH;AACD;;;;;;mCAGW;AAAA;;AACP,cAAI,KAAKm+D,SAAL,CAAesN,QAAf,CAAwBl+D,SAAxB,CAAkC9N,MAAlC,GAA2C,CAA/C,EAAkD;AAC9C,iBAAK8rE,UAAL,CAAgBxrE,IAAhB,CAAqB,KAAK2pE,QAAL,CAAc7W,MAAd,CAAqB,KAAKj/C,UAAL,CAAgBhE,aAArC,EAAoD,OAApD;AAA8D;;;;AAInF,sBAACtQ,KAAD;AAAA,qBAAW,QAAI,CAAC6+D,SAAL,CAAeuN,UAAf,CAA0B,QAA1B,EAAgCpsE,KAAhC,CAAX;AAAA,aAJqB,CAArB;AAKH;;AACD,cAAI,KAAK6+D,SAAL,CAAewN,cAAf,CAA8Bp+D,SAA9B,CAAwC9N,MAAxC,GAAiD,CAArD,EAAwD;AACpD,iBAAK8rE,UAAL,CAAgBxrE,IAAhB,CAAqB,KAAK2pE,QAAL,CAAc7W,MAAd,CAAqB,KAAKj/C,UAAL,CAAgBhE,aAArC,EAAoD,UAApD;AAAiE;;;;AAItF,sBAACtQ,KAAD;AAAA,qBAAW,QAAI,CAAC6+D,SAAL,CAAeyN,gBAAf,CAAgC,QAAhC,EAAsCtsE,KAAtC,CAAX;AAAA,aAJqB,CAArB;AAKH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKqoB,QAAL,GAAgB,KAAhB;;AACA,eAAK4jD,UAAL,CAAgBplE,OAAhB;AAAyB;;;;AAIzB,oBAAAmT,EAAE;AAAA,mBAAIA,EAAE,EAAN;AAAA,WAJF;AAKH;;;4BA7Dc;AACX,iBAAO,KAAKkP,SAAZ;AACH;AACD;;;;;0BAIab,Q,EAAU;AACnB,eAAKa,SAAL,GAAiBb,QAAjB;AACA,eAAKyS,cAAL,CAAoBxiB,IAApB,CAAyB+P,QAAzB;AACH,S,CACD;;AACA;;;;;;4BAGmB;AACf,cAAI,KAAKw2C,SAAL,CAAe0N,UAAnB,EAA+B;AAC3B,mBAAO,KAAK1N,SAAL,CAAe2N,aAAf,CAA6B9gE,MAA7B,GAAsC,KAAKhL,KAA3C,GAAmD,CAA1D;AACH,WAFD,MAGK;AACD,mBAAO,KAAKA,KAAL,GAAa,CAApB;AACH;AACJ;;;;;;AAyCLsrE,yBAAqB,CAAC5uE,IAAtB,GAA6B,SAASqvE,6BAAT,CAAuCnvE,CAAvC,EAA0C;AAAE,aAAO,KAAKA,CAAC,IAAI0uE,qBAAV,EAAiC,gEAAyB;AAAa;;;AAEpI;AAAA,eAAMU,kBAAN;AAAA,OAFuH,CAAzB,CAAjC,EAEhC,gEAAyB,uDAAzB,CAFgC,EAEY,gEAAyB,wDAAzB,CAFZ,CAAP;AAEkE,KAF3I;;AAGAV,yBAAqB,CAACrrD,IAAtB,GAA6B,gEAAyB;AAAEnjB,UAAI,EAAEwuE,qBAAR;AAA+Bh2D,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAA1C;AAAsEyC,YAAM,EAAE;AAAEi3C,YAAI,EAAE,MAAR;AAAgBhvD,aAAK,EAAE;AAAvB,OAA9E;AAAgHgY,aAAO,EAAE;AAAEoiB,sBAAc,EAAE;AAAlB,OAAzH;AAA+J3Z,WAAK,EAAE6B,GAAtK;AAA2K3B,WAAK,EAAE,CAAlL;AAAqLC,UAAI,EAAE,EAA3L;AAA+LC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,gBAAJ,EAAsB,CAAtB,EAAyB,OAAzB,CAAD,EAAoC,CAAC,CAAD,EAAI,MAAJ,CAApC,EAAiD,CAAC,CAAD,EAAI,mBAAJ,EAAyB,CAAzB,EAA4B,OAA5B,EAAqC,OAArC,CAAjD,EAAgG,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,OAAjC,EAA0C,CAA1C,EAA6C,SAA7C,CAAhG,EAAyJ,CAAC,CAAD,EAAI,cAAJ,EAAoB,CAApB,EAAuB,MAAvB,EAA+B,aAA/B,CAAzJ,EAAwM,CAAC,CAAD,EAAI,eAAJ,EAAqB,CAArB,EAAwB,MAAxB,CAAxM,EAAyO,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,SAAxB,EAAmC,OAAnC,EAA4C,eAA5C,CAAzO,EAAuS,CAAC,OAAD,EAAU,EAAV,EAAc,CAAd,EAAiB,SAAjB,CAAvS,EAAoU,CAAC,OAAD,EAAU,eAAV,EAA2B,CAA3B,EAA8B,MAA9B,EAAsC,CAAtC,EAAyC,MAAzC,CAApU,EAAsX,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,EAA0B,aAA1B,EAAyC,CAAzC,EAA4C,MAA5C,EAAoD,SAApD,EAA+D,kBAA/D,EAAmF,CAAnF,EAAsF,MAAtF,CAAtX,EAAqd,CAAC,OAAD,EAAU,aAAV,EAAyB,CAAzB,EAA4B,MAA5B,EAAoC,SAApC,EAA+C,kBAA/C,EAAmE,CAAnE,EAAsE,MAAtE,CAArd,EAAoiB,CAAC,OAAD,EAAU,KAAV,EAAiB,CAAjB,EAAoB,aAApB,EAAmC,CAAnC,EAAsC,MAAtC,EAA8C,SAA9C,CAApiB,EAA8lB,CAAC,CAAD,EAAI,aAAJ,EAAmB,CAAnB,EAAsB,MAAtB,CAA9lB,EAA6nB,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,EAAmD,CAAnD,EAAsD,MAAtD,CAA7nB,EAA4rB,CAAC,CAAD,EAAI,aAAJ,CAA5rB,EAAgtB,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAAhtB,EAAowB,CAAC,CAAD,EAAI,aAAJ,EAAmB,CAAnB,EAAsB,MAAtB,EAA8B,SAA9B,CAApwB,EAA8yB,CAAC,CAAD,EAAI,eAAJ,EAAqB,CAArB,EAAwB,MAAxB,CAA9yB,CAAvM;AAAuhCC,cAAQ,EAAE,SAASmrD,8BAAT,CAAwC9tD,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9oC,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS+tD,sDAAT,CAAgEpqD,MAAhE,EAAwE;AAAE1D,eAAG,CAACkgD,QAAJ,GAAe,CAAClgD,GAAG,CAACkgD,QAApB;AAA8B,mBAAOx8C,MAAM,CAACyD,eAAP,EAAP;AAAkC,WAArK;;AACA,kEAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB;;AACA;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,IAApB,EAA0B,CAA1B;;AACA,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,mEAAkB,eAAlB,EAAmC,SAAS4mD,6DAAT,CAAuErqD,MAAvE,EAA+E;AAAE,mBAAO1D,GAAG,CAACuJ,QAAJ,GAAe7F,MAAtB;AAA+B,WAAnJ;;AACA;;AACA;;AACA,mEAAkB,CAAlB,EAAqBo8C,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,aAAzE,EAAwF,CAAxF;;AACA;;AACA,mEAAkB,CAAlB,EAAqBG,mCAArB,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,IAAhE,EAAsE,CAAtE;AACH;;AAAC,YAAIlgD,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,kBAAnB,EAAuCC,GAAG,CAAC+/C,SAAJ,CAAciO,WAAd,CAA0BhuD,GAAG,CAAC4wC,IAA9B,EAAoC5wC,GAAG,CAACpe,KAAxC,EAA+Coe,GAAG,CAACq/C,KAAnD,CAAvC;;AACA,oEAAmB,SAAnB,EAA8Br/C,GAAG,CAACpe,KAAJ,GAAY,CAAZ,KAAkB,CAAhD,EAAmD,UAAnD,EAA+Doe,GAAG,CAACpe,KAAJ,GAAY,CAAZ,KAAkB,CAAjF,EAAoF,UAApF,EAAgGoe,GAAG,CAACuJ,QAApG,EAA8G,WAA9G,EAA2HvJ,GAAG,CAAC+/C,SAAJ,CAAckO,gBAAzI;;AACA,mEAAkB,OAAlB,EAA2BjuD,GAAG,CAACkuD,UAAJ,EAA3B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAACluD,GAAG,CAAC+/C,SAAJ,CAAc+D,mBAAzC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,OAAlB,EAA2B9jD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBmM,SAArB,CAA+BpB,OAA/B,CAAuC,gBAAvC,EAAyD,KAAK/sD,GAAG,CAAC4wC,IAAJ,CAAS5wC,GAAG,CAAC+/C,SAAJ,CAAcC,aAAvB,CAA9D,CAA3B;;AACA,oEAAmB,eAAnB,EAAoChgD,GAAG,CAACkgD,QAAxC,EAAkD,YAAlD,EAAgElgD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBmM,SAArB,CAA+BpB,OAA/B,CAAuC,gBAAvC,EAAyD,KAAK/sD,GAAG,CAAC4wC,IAAJ,CAAS5wC,GAAG,CAAC+/C,SAAJ,CAAcC,aAAvB,CAA9D,CAAhE;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6B,8DAAuB,EAAvB,EAA2BjmB,GAA3B,EAAgC,CAAC/5B,GAAG,CAACkgD,QAArC,EAA+ClgD,GAAG,CAACkgD,QAAnD,CAA7B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAClgD,GAAG,CAAC+/C,SAAJ,CAAcgE,kBAAzC,EAA6D,aAA7D,EAA4E/jD,GAAG,CAACouD,YAAhF;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAACpuD,GAAG,CAAC+/C,SAAJ,CAAciE,mBAAzC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BhkD,GAAG,CAACuJ,QAAjC,EAA2C,OAA3C,EAAoDvJ,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBqM,SAArB,CAA+BtB,OAA/B,CAAuC,gBAAvC,EAAyD,KAAK/sD,GAAG,CAAC4wC,IAAJ,CAAS5wC,GAAG,CAAC+/C,SAAJ,CAAcC,aAAvB,CAA9D,CAApD;;AACA,oEAAmB,YAAnB,EAAiChgD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBqM,SAArB,CAA+BtB,OAA/B,CAAuC,gBAAvC,EAAyD,KAAK/sD,GAAG,CAAC4wC,IAAJ,CAAS5wC,GAAG,CAAC+/C,SAAJ,CAAcC,aAAvB,CAA9D,CAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BhgD,GAAG,CAAC+/C,SAAJ,CAAckE,OAA3C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BjkD,GAAG,CAAC+/C,SAAJ,CAAciG,cAAxC;AACH;AAAE,OAvC+C;AAuC7CnjD,gBAAU,EAAE,CAACwoD,aAAD,EAAgB,uDAAhB,EAAgC,2EAAhC,EAAqE,8DAArE,EAA6F,sDAA7F,EAA6G,uDAA7G,EAA6H,oDAA7H,EAA0I,gEAA1I,CAvCiC;AAuCmIp7D,YAAM,EAAE,CAAC,mcAAD;AAvC3I,KAAzB,CAA7B;AAwCA;;AACAi9D,yBAAqB,CAACzuE,cAAtB,GAAuC;AAAA,aAAM,CACzC;AAAEC,YAAI,EAAEkvE,kBAAR;AAA4BhvE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG5D;AAAA,mBAAM+uE,kBAAN;AAAA,WAHgD,CAAD;AAAtB,SAAD;AAAxC,OADyC,EAKzC;AAAElvE,YAAI,EAAE;AAAR,OALyC,EAMzC;AAAEA,YAAI,EAAE;AAAR,OANyC,CAAN;AAAA,KAAvC;;AAQAwuE,yBAAqB,CAACpzD,cAAtB,GAAuC;AACnC82C,UAAI,EAAE,CAAC;AAAElyD,YAAI,EAAE;AAAR,OAAD,CAD6B;AAEnCkD,WAAK,EAAE,CAAC;AAAElD,YAAI,EAAE;AAAR,OAAD,CAF4B;AAGnCs9B,oBAAc,EAAE,CAAC;AAAEt9B,YAAI,EAAE;AAAR,OAAD;AAHmB,KAAvC;AAKA;;AAAc,KAAC,YAAY;AAAE,sEAAyBwuE,qBAAzB,EAAgD,CAAC;AACtExuE,YAAI,EAAE,uDADgE;AAEtEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gBADX;AAEC6V,kBAAQ,8wFAFT;AA8CCzS,gBAAM,EAAE;AA9CT,SAAD;AAFgE,OAAD,CAAhD,EAkDrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEkvE,kBAAR;AAA4BhvE,oBAAU,EAAE,CAAC;AACvDF,gBAAI,EAAE,oDADiD;AAEvDG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM+uE,kBAAN;AAAA,aAFhB,CAAD;AAFiD,WAAD;AAAxC,SAAD,EAKX;AAAElvE,cAAI,EAAE;AAAR,SALW,EAKiB;AAAEA,cAAI,EAAE;AAAR,SALjB,CAAP;AAKuD,OAvDhD,EAuDkD;AAAEs9B,sBAAc,EAAE,CAAC;AACtFt9B,cAAI,EAAE;AADgF,SAAD,CAAlB;AAEnEkyD,YAAI,EAAE,CAAC;AACPlyD,cAAI,EAAE;AADC,SAAD,CAF6D;AAInEkD,aAAK,EAAE,CAAC;AACRlD,cAAI,EAAE;AADE,SAAD;AAJ4D,OAvDlD;AA6Db,KA7DF;AA+Dd;;;;;AAIA;;;AACA,QAAM4vE,mBAAmB,GAAG;AACxBC,kBAAY,EAAE,sBADU;AAExBC,0BAAoB,EAAE,8DAFE;AAGxBC,+BAAyB,EAAE,sCAHH;AAIxBC,iCAA2B,EAAE,0CAJL;AAKxBvJ,iBAAW,EAAE,OALW;AAMxBI,kBAAY,EAAE,QANU;AAOxB8I,eAAS,EAAE,uBAPa;AAQxBM,mBAAa,EAAE,iBARS;AASxB7J,kBAAY,EAAE,QATU;AAUxBqJ,eAAS,EAAE,uBAVa;AAWxBS,qBAAe,EAAE,4CAXO;AAYxBC,sBAAgB,EAAE,6CAZM;AAaxB5M,mBAAa,EAAE,4BAbS;AAcxBC,oBAAc,EAAE,6BAdQ;AAexB4M,qBAAe,EAAE,OAfO;AAgBxBC,oBAAc,EAAE,oCAhBQ;AAiBxBC,0BAAoB,EAAE,IAjBE;AAkBxBC,eAAS,EAAE,YAlBa;AAmBxBC,cAAQ,EAAE,eAnBc;AAoBxBC,qBAAe,EAAE,MApBO;AAqBxBC,gBAAU,EAAE,aArBY;AAsBxBC,oBAAc,EAAE,cAtBQ;AAuBxBC,cAAQ,EAAE,WAvBc;AAwBxBC,cAAQ,EAAE,WAxBc;AAyBxBC,iBAAW,EAAE,0BAzBW;AA0BxBC,gBAAU,EAAE,sBA1BY;AA2BxBC,eAAS,EAAE,YA3Ba;AA4BxBC,iBAAW,EAAE,cA5BW;AA6BxBC,2BAAqB,EAAE,yBA7BC;AA8BxBC,uBAAiB,EAAE,2BA9BK;AA+BxBC,mBAAa,EAAE,wBA/BS;AAgCxBC,0BAAoB,EAAE,gCAhCE;AAiCxB1pE,WAAK,EAAE,OAjCiB;AAkCxBxF,WAAK,EAAE,OAlCiB;AAmCxB07B,UAAI,EAAE,MAnCkB;AAoCxByzC,SAAG,EAAE,KApCmB;AAqCxBpJ,qBAAe,EAAE;AACb,cAAM,GADO;AAEb,cAAM,GAFO;AAGb,eAAO,IAHM;AAIb,eAAO,IAJM;AAKb,cAAM,GALO;AAMb,cAAM,cANO;AAOb,oBAAY,UAPC;AAQb,wBAAgB,cARH;AASb,kBAAU,aATG;AAUb,gBAAQ,WAVK;AAWb,iBAAS,UAXI;AAYb,gBAAQ,MAZK;AAab,iBAAS;AAbI;AArCO,KAA5B;AAsDA;;;;;AAIA;;AACA;;;;;;AAKA,aAASqJ,IAAT,CAAc/uE,KAAd,QAA6C;AAAA,UAAhBgvE,IAAgB,QAAtBA,IAAsB;AAAA,UAANC,EAAM,QAAVA,EAAU;;AACzC;AACA,UAAMnjE,MAAM,GAAG9L,KAAK,CAACkvE,KAArB;AACA;;AACA,UAAMC,MAAM,GAAGnvE,KAAK,CAACovE,KAArB;AACA;;AACA,UAAIvjE,CAAC,GAAGC,MAAR;AACA;;AACA,UAAIG,CAAC,GAAGkjE,MAAR;AACA;;AACA,UAAIE,KAAK,GAAG,KAAZ;AACA;;;;;AAIA,eAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B;AACA,YAAMC,EAAE,GAAGD,GAAG,CAACL,KAAJ,GAAYrjE,CAAvB;AACA;;AACA,YAAM4jE,EAAE,GAAGF,GAAG,CAACH,KAAJ,GAAYnjE,CAAvB;AACAJ,SAAC,GAAG0jE,GAAG,CAACL,KAAR;AACAjjE,SAAC,GAAGsjE,GAAG,CAACH,KAAR;;AACA,YAAII,EAAE,IAAIC,EAAV,EAAc;AACVJ,eAAK,GAAG,IAAR;AACH;;AACDL,YAAI,CAACO,GAAD,EAAMC,EAAN,EAAUC,EAAV,EAAc5jE,CAAd,EAAiBI,CAAjB,CAAJ;AACAjM,aAAK,CAAC6X,cAAN,GAX2B,CAWH;AAC3B;AACD;;;;;;AAIA,eAAS63D,cAAT,CAAwBH,GAAxB,EAA6B;AACzB1jE,SAAC,GAAG0jE,GAAG,CAACL,KAAR;AACAjjE,SAAC,GAAGsjE,GAAG,CAACH,KAAR;AACA13E,gBAAQ,CAACmJ,mBAAT,CAA6B,WAA7B,EAA0CyuE,gBAA1C;AACA53E,gBAAQ,CAACmJ,mBAAT,CAA6B,SAA7B,EAAwC6uE,cAAxC;;AACA,YAAIT,EAAJ,EAAQ;AACJA,YAAE,CAACjvE,KAAD,EAAQ6L,CAAR,EAAWI,CAAX,EAAcojE,KAAd,CAAF;AACH;AACJ;;AACD33E,cAAQ,CAAC8I,gBAAT,CAA0B,WAA1B,EAAuC8uE,gBAAvC;AACA53E,cAAQ,CAAC8I,gBAAT,CAA0B,SAA1B,EAAqCkvE,cAArC;AACH;AAED;;;;;AAIA;;;AACA,QAAIC,MAAM,GAAG,CAAb;;QACMjD,kB;AACF,oCAAc;AAAA;;AACV,aAAKkD,MAAL,GAAc,EAAd,CADU,CAEV;;AACA,aAAKtM,KAAL,GAAa,EAAb;AACA,aAAKuM,SAAL,GAAiB,IAAjB;AACA,aAAKrR,MAAL,GAAc,IAAd;AACA,aAAK+N,UAAL,GAAkB,IAAlB;AACA,aAAKtI,WAAL,GAAmB,IAAnB;AACA,aAAK6L,iBAAL,GAAyB,EAAzB;AACA,aAAKzL,YAAL,GAAoB,KAApB;AACA,aAAK0L,WAAL,GAAmB,IAAnB;AACA,aAAKC,cAAL,GAAsB,IAAtB;AACA,aAAKlL,cAAL,GAAsB,KAAtB;AACA,aAAKiI,gBAAL,GAAwB,KAAxB;AACA,aAAKkD,UAAL,GAAkB,IAAlB;AACA,aAAKC,aAAL,GAAqB,KAArB;AACA,aAAK9M,UAAL,GAAkB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,CAAlB;AACA,aAAKtE,aAAL,GAAqB,EAArB;AACA,aAAKqR,aAAL,GAAqB,EAArB;AACA,aAAKC,sBAAL,GAA8B,EAA9B,CAnBU,CAoBV;;AACA,aAAKC,MAAL,GAAc,IAAI,0DAAJ,EAAd,CArBU,CAsBV;;AACA,aAAKlE,QAAL,GAAgB,IAAI,0DAAJ,EAAhB;AACA,aAAKE,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA,aAAKiE,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;AACA,aAAKC,SAAL,GAAiB,IAAI,0DAAJ,EAAjB;AACA,aAAKC,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA,aAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;AACA,aAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA,aAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA,aAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA,aAAKC,cAAL;AAAuB;AAAkB,UAAzC,CAhCU,CAgCqC;AAC/C;;AACA,aAAK31D,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAK41D,QAAL,GAAgB,IAAI,4CAAJ,EAAhB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKz7D,EAAL,uBAAuBq6D,MAAM,EAA7B,EArCU,CAsCV;;AACA,aAAKqB,kBAAL,GAA0B,KAA1B,CAvCU,CAwCV;;AACA,aAAKC,iBAAL,GAAyB,KAAzB;AACA,aAAKC,WAAL,GAAmB,EAAnB,CA1CU,CA2CV;;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,OAAL,GAAe,CAAf;AACA,aAAKC,MAAL,GAAc,EAAd;AACH;AACD;;;;;;;AAwHA;;AACA;;;;;6BAKKvR,M,EAAQwR,G,EAAK;AACd,eAAKxR,MAAL,GAAcA,MAAd;AACA,eAAKC,OAAL,GAAeuR,GAAf;AACH,S,CACD;;AACA;;;;;;mCAGW;AAAA;;AACP,eAAKC,kBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAKC,oBAAL;;AACA,cAAI,KAAKtO,UAAL,CAAgBziE,OAAhB,CAAwB,KAAK2qE,KAA7B,IAAsC,CAA1C,EAA6C;AACzC,iBAAKA,KAAL,GAAa,KAAKlI,UAAL,CAAgB,CAAhB,CAAb;AACH;;AACD,eAAKtC,MAAL,GAAcviE,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkB8nE,mBAAlB,EAAuC,KAAKtM,MAA5C,CAAd;;AACA,cAAI,KAAKmP,UAAT,EAAqB;AACjB,iBAAK0B,WAAL;AACH;;AACD,eAAKC,SAAL,GAAiB,KAAKd,QAAL,CAAcj2E,SAAd;AAAyB;;;AAG1C;AAAA,mBAAM,QAAI,CAACg3E,OAAL,EAAN;AAAA,WAHiB,CAAjB;AAIA,eAAKC,QAAL,GAAgB,KAAK52D,OAAL,CAAa1W,IAAb,CAAkB,oEAAa,GAAb,CAAlB,EAAqC3J,SAArC;AAAgD;;;AAGhE;AAAA,mBAAM,QAAI,CAAC82E,WAAL,EAAN;AAAA,WAHgB,CAAhB;AAIH;AACD;;;;;;;6CAIqB;AACjB,eAAK9O,kBAAL,GAA0B,KAAKoB,WAA/B;AACA,eAAKnB,mBAAL,GAA2B,KAAKuB,YAAhC;AACA,eAAKzB,mBAAL,GAA2B,KAAKkC,cAAhC;AACH;AACD;;;;;;;kDAI0B;AAAA;;AACtB,eAAKwL,WAAL,CAAiBz1E,SAAjB;AAA4B;;;;AAI5B,oBAACk3E,UAAD;AAAA,mBAAgB,QAAI,CAACC,UAAL,CAAgBD,UAAU,CAAC/T,MAA3B,CAAhB;AAAA,WAJA;;AAKA,cAAI,KAAK+O,gBAAT,EAA2B;AACvB,iBAAKZ,QAAL,CAActxE,SAAd;AAAyB;;;;AAIzB,sBAACk3E,UAAD;AAAA,qBAAgBA,UAAU,CAACjyC,GAAX,CAAezX,QAAf,GAA0B,CAAC0pD,UAAU,CAACjyC,GAAX,CAAezX,QAA1D;AAAA,aAJA;AAKH;AACJ;AACD;;;;;;sCAGc;AACV,eAAK4pD,SAAL,GAAiB,IAAjB;AACA,eAAK5B,MAAL,CAAY/3D,IAAZ,CAAiB,KAAK45D,oBAAL,EAAjB;AACH;AACD;;;;;;;4CAIoB;AAChB,cAAI,KAAKD,SAAT,EAAoB;AAChB,iBAAKP,oBAAL;;AACA,iBAAKV,kBAAL,GAA0B,KAA1B;AACA,iBAAKiB,SAAL,GAAiB,KAAjB;AACH;AACJ;AACD;;;;;;;AAMA;;;+CAGuB;AACnB,eAAKpB,cAAL,GAAsB;AAClB9Q,kBAAM,EAAE,KAAKA,MADK;AAElBC,mBAAO,EAAE,KAAKA,OAFI;AAGlBt0D,kBAAM,EAAE,KAAKA,MAHK;AAIlB4/D,iBAAK,EAAE,KAAKA;AAJM,WAAtB;AAMH;AACD;;;;;;;;mCAKWxrC,G,EAAK9/B,K,EAAO;AACnB,eAAKmsE,QAAL,CAAc7zD,IAAd,CAAmB;AAAEwnB,eAAG,EAAHA,GAAF;AAAO9/B,iBAAK,EAALA;AAAP,WAAnB;AACH;AACD;;;;;;;;yCAKiB8/B,G,EAAK9/B,K,EAAO;AACzB,eAAKqsE,cAAL,CAAoB/zD,IAApB,CAAyB;AAAEwnB,eAAG,EAAHA,GAAF;AAAO9/B,iBAAK,EAALA;AAAP,WAAzB;AACH;AACD;;;;;;;;sCAKcg+D,M,EAAQh+D,K,EAAO;AACzB,cAAI,CAAC,KAAKixE,iBAAV,EAA6B;AACzBjxE,iBAAK,CAAC6X,cAAN;AACA7X,iBAAK,CAACimB,eAAN;AACA,iBAAKqqD,WAAL,CAAiBh4D,IAAjB,CAAsB;AAAE0lD,oBAAM,EAANA,MAAF;AAAUh+D,mBAAK,EAALA;AAAV,aAAtB;AACH,WAJD,MAKK;AACD,iBAAKixE,iBAAL,GAAyB,KAAzB,CADC,CAC+B;AACnC;AACJ;AACD;;;;;;;;;;oCAOYjT,M,EAAQl+B,G,EAAK9/B,K,EAAO;AAC5B,eAAKuwE,SAAL,CAAej4D,IAAf,CAAoB;AAAEwnB,eAAG,EAAHA,GAAF;AAAOk+B,kBAAM,EAANA,MAAP;AAAeh+D,iBAAK,EAALA;AAAf,WAApB;AACH,S,CACD;;AACA;;;;;;;+CAIuB;AACnB;AACA,cAAMorE,MAAM;AAAI;AAAkB,YAAlC;;AACA,cAAI,KAAKrL,MAAT,EAAiB;AACbqL,kBAAM,CAACrL,MAAP,GAAgB,KAAKA,MAArB;AACAqL,kBAAM,CAACpL,OAAP,GAAiB,KAAKA,OAAtB;AACH;;AACD,cAAI,KAAKuM,UAAT,EAAqB;AACjBnB,kBAAM,CAAC1/D,MAAP,GAAgB,KAAKA,MAArB;AACA0/D,kBAAM,CAACE,KAAP,GAAe,KAAKA,KAApB;AACH;;AACD,iBAAOF,MAAP;AACH;AACD;;;;;;;;mCAKWpN,M,EAAQ;AACf,cAAIA,MAAM,CAACiD,QAAX,EAAqB;AACjB;AACA,gBAAMkR,SAAS,GAAG,KAAKpS,MAAL,KAAgB/B,MAAM,CAACt+D,QAAvB,GAAkC,CAAC,KAAKsgE,OAAxC,GAAkD,IAApE;AACA,iBAAKhG,IAAL,CAAUgE,MAAM,CAACt+D,QAAjB,EAA2ByyE,SAA3B;AACH;AACJ;AACD;;;;;;;AAkBA;;;;;;oCAMYziB,I,EAAMhvD,K,EAAOo/B,G,EAAK;AAC1B,cAAI,KAAKsyC,SAAL,KAAmB30E,SAAvB,EAAkC;AAC9B,mBAAO;AAAE;AAAkB,mBAAK20E,SAAzB,CAAsC1iB,IAAtC,EAA4C5vB,GAA5C,EAAiDp/B,KAAjD;AAAP;AACH;AACJ;AACD;;;;;;;AAcA;;;;;4CAKoBf,K,EAAO;AACvB,eAAKqd,IAAL,CAAUuU,OAAV,GAAoB1qB,OAApB;AAA6B;;;;AAI7B,oBAAAi5B,GAAG;AAAA,mBAAIA,GAAG,CAACzX,QAAJ,GAAe1oB,KAAnB;AAAA,WAJH;AAKH;AACD;;;;;;;2CAImBmgC,G,EAAK;AACpB;AACA,cAAI,KAAKiwC,WAAT,EAAsB;AAClB;AACA,gBAAMrvE,KAAK,GAAG,KAAKqwE,YAAL,CAAkBpwE,OAAlB,CAA0Bm/B,GAA1B,CAAd;;AACA,gBAAIA,GAAG,CAACzX,QAAJ,IAAgB3nB,KAAK,GAAG,CAA5B,EAA+B;AAC3B,mBAAKqwE,YAAL,CAAkBtwE,IAAlB,CAAuBq/B,GAAvB;AACH,aAFD,MAGK,IAAI,CAACA,GAAG,CAACzX,QAAL,IAAiB3nB,KAAK,IAAI,CAA9B,EAAiC;AAClC,mBAAKqwE,YAAL,CAAkBnwE,MAAlB,CAAyBF,KAAzB,EAAgC,CAAhC;AACH;AACJ,WATD,MAUK;AACD,gBAAIo/B,GAAG,CAACzX,QAAR,EAAkB;AACd,mBAAKgqD,WAAL,GAAmBvyC,GAAnB;AACH,aAFD,MAGK,IAAI,KAAKuyC,WAAL,KAAqBvyC,GAAzB,EAA8B;AAC/B,qBAAO,KAAKuyC,WAAZ;AACH;AACJ,WAnBmB,CAoBpB;;;AACA,cAAIvyC,GAAG,CAACzX,QAAJ,IAAgB,CAAC,KAAK0nD,WAA1B,EAAuC;AACnC,iBAAK/yD,IAAL,CAAUuU,OAAV,GAAoB+wB,MAApB;AAA4B;;;;AAI5B,sBAAAgwB,IAAI;AAAA,qBAAIA,IAAI,CAACjqD,QAAT;AAAA,aAJJ,EAIwBxhB,OAJxB;AAIiC;;;;AAIjC,sBAAAyrE,IAAI,EAAI;AACJ,kBAAIA,IAAI,KAAKxyC,GAAb,EAAkB;AAAE;AAChBwyC,oBAAI,CAACjqD,QAAL,GAAgB,KAAhB;AACH;AACJ,aAZD;AAaH;AACJ,S,CACD;;AACA;;;;;;;AAMA;;;;;;;0CAOkBroB,K,EAAOg+D,M,EAAQuU,a,EAAe;AAAA;;AAC5C,eAAKtB,iBAAL,GAAyB,IAAzB;AACA;;AACA,cAAIuB,WAAW,GAAGD,aAAa,CAACz0B,WAAd,GAA4B99C,KAAK,CAACkvE,KAApD;AACAH,cAAI,CAAC/uE,KAAD,EAAQ;AACRgvE,gBAAI;AAAG;;;;;AAKP,0BAACyD,SAAD,EAAYjD,EAAZ,EAAmB;AACf,kBAAI,QAAI,CAACkD,gBAAL,CAAsBH,aAAtB,EAAqC/C,EAArC,CAAJ,EAA8C;AAC1CxR,sBAAM,CAACxkE,KAAP,GAAeg5E,WAAW,GAAGC,SAAS,CAACvD,KAAxB,GAAgCM,EAA/C;AACH;AACJ;AAVO,WAAR,CAAJ;AAYH;AACD;;;;;;;;;yCAMiB+C,a,EAAe/C,E,EAAI;AAChC;;;;AAIA,cAAKA,EAAE,GAAG,CAAL,IAAW+C,aAAa,CAACz0B,WAAd,GAA4B0xB,EAA7B,IAAoC,KAAK0B,WAApD,IACA,CAACqB,aAAa,CAACI,kBADf,IACqC;AACpCnD,YAAE,IAAI,CAAN;AAAc;AAAkB+C,uBAAa,CAACI,kBAAlC,CAAwD70B,WAAxD,GAAsE0xB,EAAvE,IAA8E,KAAK0B,WAFnG,EAEiH;AAC7G,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;6CAGqB;AACjB,cAAI,KAAKpS,aAAL,KAAuB,EAA3B,EAA+B;AAC3B,iBAAKA,aAAL;AAAuB;AAAkB,iBAAKiE,OAAL,CAAa/hD,KAAjC,CAA0CthB,QAA/D;AACH;AACJ;AACD;;;;;;kCAGU;AAAA;;AACN;AACA,cAAMkzE,OAAO,GAAG,KAAKX,SAArB;AACA,eAAKY,kBAAL,GAA0BD,OAAO,GAC7B,KAAK9R,MAAL,CAAYwN,WAAZ,CAAwBzC,OAAxB,CAAgC,SAAhC,EAA2C,KAAKvI,KAAhD,CAD6B,GAE7B,KAAKxC,MAAL,CAAYyN,UAAZ,CAAuB1C,OAAvB,CAA+B,SAA/B,EAA0C,KAAKvI,KAA/C,CAFJ;;AAGA,cAAI,CAACsP,OAAL,EAAc;AACV,gBAAI,KAAKrG,UAAT,EAAqB;AACjB,mBAAKuG,sBAAL,GAA8B,KAAKhS,MAAL,CAAY+M,cAAZ,CACzBhC,OADyB,CACjB,QADiB,EACP,MAAM9wE,IAAI,CAACg4E,IAAL,CAAU,KAAKlS,SAAL,GAAiB,KAAKyK,KAAhC,MAA2C,CAA3C,GAA+C,KAAK5/D,MAAL,GAAc,CAA7D,GAAiE,GAAvE,CADO,EAEzBmgE,OAFyB,CAEjB,MAFiB,EAET,KAAM9wE,IAAI,CAAC2T,GAAL,CAAS,KAAKhD,MAAL,GAAc,KAAK4/D,KAA5B,EAAmC,KAAKzK,SAAxC,CAFG,EAGzBgL,OAHyB,CAGjB,SAHiB,EAGN,KAAK,KAAKhL,SAHJ,CAA9B;AAIH,aALD,MAMK;AACD,mBAAKiS,sBAAL,GAA8B,EAA9B;AACH;;AACD,gBAAI,KAAK/P,OAAL,KAAiBtlE,SAAjB,IAA8B,KAAKsiE,MAAL,KAAgBtiE,SAAlD,EAA6D;AACzD;AACA,kBAAMu1E,GAAG;AAAI;AAAkB,mBAAKjQ,OAAL,CAAaxxC,OAAb,GAAuBrB,IAAvB;AAA6B;;;;AAI5D,wBAAA8tC,MAAM;AAAA,uBAAIA,MAAM,CAACt+D,QAAP,KAAoB,QAAI,CAACqgE,MAA7B;AAAA,eAJyB,CAA/B;AAKA,mBAAKkT,gBAAL,GAAwB,CAAC,KAAKjT,OAAL,GAAe,KAAKc,MAAL,CAAY4M,eAA3B,GAA6C,KAAK5M,MAAL,CAAY6M,gBAA1D,EACnB9B,OADmB,CACX,SADW,EACA,KAAKvI,KADL,EAEnBuI,OAFmB,CAEX,UAFW,EAECmH,GAAG,CAACxU,MAFL,CAAxB;AAGH,aAVD,MAWK;AACD,mBAAKyU,gBAAL,GAAwB,EAAxB;AACH;AACJ;AACJ;AACD;;;;;;sCAGc;AACV,eAAKnB,QAAL,CAAc52E,WAAd;AACA,eAAK02E,SAAL,CAAe12E,WAAf;AACH;;;4BA9dW;AACR,iBAAO,KAAK00E,MAAZ;AACH;AACD;;;;;0BAIUpV,K,EAAO;AACb,eAAKoV,MAAL,GAAcpV,KAAd,CADa,CAEb;AACA;;AACA,eAAK0Y,iBAAL;AACH;AACD;;;;;;4BAGgB;AACZ,iBAAO,KAAKC,UAAZ;AACH;AACD;;;;;0BAIcC,K,EAAO;AACjB,eAAKD,UAAL,GAAkBC,KAAlB;AACA,eAAKtC,QAAL,CAAcxwE,IAAd;AACH;AACD;;;;;;4BAGgB;AACZ,iBAAO,KAAK6wE,UAAZ;AACH;AACD;;;;;0BAIckC,G,EAAK;AACf,eAAKlC,UAAL,GAAkBkC,GAAlB;AACA,eAAKvC,QAAL,CAAcxwE,IAAd;AACH;AACD;;;;;;4BAGa;AACT,iBAAO,KAAKgzE,OAAZ;AACH;AACD;;;;;0BAIW3zE,K,EAAO;AACd,eAAK2zE,OAAL,GAAe3zE,KAAf;AACA,eAAKub,OAAL,CAAa5a,IAAb;AACH;AACD;;;;;;4BAGc;AACV,iBAAO,KAAK8wE,QAAZ;AACH;AACD;;;;;0BAIYzxE,K,EAAO;AACf,eAAKyxE,QAAL,GAAgBzxE,KAAhB;AACA,eAAKub,OAAL,CAAa5a,IAAb;AACH;AACD;;;;;;4BAGa;AACT,iBAAO,KAAK+wE,OAAZ;AACH;AACD;;;;;0BAIW1xE,K,EAAO;AACd,eAAK0xE,OAAL,GAAe1xE,KAAf;AACA,eAAKub,OAAL,CAAa5a,IAAb;AACH;AACD;;;;;;4BAGY;AACR,iBAAO,KAAKgxE,MAAZ;AACH;AACD;;;;;0BAIU3xE,K,EAAO;AACb,eAAK2xE,MAAL,GAAc3xE,KAAd;AACA,eAAKub,OAAL,CAAa5a,IAAb;AACH,S,CACD;;AACA;;;;;;4BAGW;AACP,iBAAO,KAAKugE,SAAL,KAAmB,CAAnB,GAAuB9lE,IAAI,CAACumC,KAAL,CAAW,KAAK51B,MAAL,GAAc,KAAK4/D,KAA9B,IAAuC,CAA9D,GAAkE,CAAzE;AACH;AACD;;;;;0BAIS3rE,K,EAAO;AACZ,eAAK+L,MAAL,GAAc,CAAC/L,KAAK,GAAG,CAAT,IAAc,KAAK2rE,KAAjC;AACH;AACD;;;;;;4BAGe;AACX,iBAAOvwE,IAAI,CAACg4E,IAAL,CAAU,KAAKlS,SAAL,GAAiB,KAAKyK,KAAhC,CAAP;AACH;;;4BAmFmB;AAChB,iBAAO,KAAKuF,cAAZ;AACH;;;4BAsFiB;AACd;AACA,cAAIuC,KAAK,GAAG,CAAZ;AACAA,eAAK,IAAI,KAAKvQ,kBAAL,GAA0B,CAA1B,GAA8B,CAAvC;AACAuQ,eAAK,IAAI,KAAKtQ,mBAAL,GAA2B,CAA3B,GAA+B,CAAxC;AACAsQ,eAAK,IAAI,KAAKxQ,mBAAL,GAA2B,CAA3B,GAA+B,CAAxC;AACA,eAAKG,OAAL,CAAaxxC,OAAb,GAAuB1qB,OAAvB;AAAgC;;;;AAIhC,oBAAAm3D,MAAM,EAAI;AACNoV,iBAAK,IAAIpV,MAAM,CAACM,OAAP,GAAiB,CAAjB,GAAqB,CAA9B;AACH,WAND;AAOA,iBAAO8U,KAAP;AACH;;;4BAeuB;AACpB,iBAAO,KAAKpC,kBAAZ;AACH;AACD;;;;;0BAIsBrxE,K,EAAO;AACzB,eAAKqxE,kBAAL,GAA0BrxE,KAA1B;;AACA,eAAK4zE,mBAAL,CAAyB5zE,KAAzB;AACH;;;4BA0DqB;AAClB,iBAAOkwB,KAAK,CAAC2jD,IAAN,CAAW;AAAErzE,kBAAM,EAAE,KAAKqsE,aAAL,CAAmBlB,KAAnB,GAA2B,KAAK9Q,KAAL,CAAWr6D;AAAhD,WAAX,CAAP;AACH;;;;;;AA8FLusE,sBAAkB,CAACtvE,IAAnB,GAA0B,SAASq2E,0BAAT,CAAoCn2E,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIovE,kBAAV,GAAP;AAAyC,KAA5G;;AACAA,sBAAkB,CAAC/rD,IAAnB,GAA0B,gEAAyB;AAAEnjB,UAAI,EAAEkvE,kBAAR;AAA4B12D,eAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAAvC;AAAyD8U,oBAAc,EAAE,SAAS4oD,iCAAT,CAA2C70D,EAA3C,EAA+CC,GAA/C,EAAoDkM,QAApD,EAA8D;AAAE,YAAInM,EAAE,GAAG,CAAT,EAAY;AAChM,uEAAsBmM,QAAtB,EAAgCm0C,GAAhC,EAAqC,IAArC;;AACA,uEAAsBn0C,QAAtB,EAAgCwgD,wBAAhC,EAA0D,KAA1D;AACH;;AAAC,YAAI3sD,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACogD,cAAJ,GAAqBp+C,EAAE,CAACE,KAA7E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACikD,OAAJ,GAAcjiD,EAAnE;AACH;AAAE,OAP4C;AAO1CF,eAAS,EAAE,SAAS+yD,wBAAT,CAAkC90D,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrE,oEAAmBmtD,qBAAnB,EAA0C,IAA1C;AACH;;AAAC,YAAIntD,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC9B,IAAJ,GAAW8D,EAAhE;AACH;AAAE,OAZ4C;AAY1CrI,YAAM,EAAE;AAAE6qD,aAAK,EAAE,OAAT;AAAkBuM,iBAAS,EAAE,WAA7B;AAA0CrR,cAAM,EAAE,QAAlD;AAA4D+N,kBAAU,EAAE,YAAxE;AAAsFtI,mBAAW,EAAE,aAAnG;AAAkH6L,yBAAiB,EAAE,mBAArI;AAA0JzL,oBAAY,EAAE,cAAxK;AAAwL0L,mBAAW,EAAE,aAArM;AAAoNC,sBAAc,EAAE,gBAApO;AAAsPlL,sBAAc,EAAE,gBAAtQ;AAAwRiI,wBAAgB,EAAE,kBAA1S;AAA8TkD,kBAAU,EAAE,YAA1U;AAAwVC,qBAAa,EAAE,eAAvW;AAAwX9M,kBAAU,EAAE,YAApY;AAAkZtE,qBAAa,EAAE,eAAja;AAAkbqR,qBAAa,EAAE,eAAjc;AAAkdC,8BAAsB,EAAE,wBAA1e;AAAogB5V,aAAK,EAAE,OAA3gB;AAAohBqG,iBAAS,EAAE,WAA/hB;AAA4iBd,cAAM,EAAE,QAApjB;AAA8jBC,eAAO,EAAE,SAAvkB;AAAklBt0D,cAAM,EAAE,QAA1lB;AAAomB4/D,aAAK,EAAE,OAA3mB;AAAonBsI,YAAI,EAAE,MAA1nB;AAAkoB9S,cAAM,EAAE,QAA1oB;AAAopBsR,iBAAS,EAAE,WAA/pB;AAA4qBlG,kBAAU,EAAE,YAAxrB;AAAssB2H,wBAAgB,EAAE,kBAAxtB;AAA4uBC,eAAO,EAAE,SAArvB;AAAgwBxR,qBAAa,EAAE;AAA/wB,OAZkC;AAYgwB5pD,aAAO,EAAE;AAAE23D,cAAM,EAAE,QAAV;AAAoBlE,gBAAQ,EAAE,UAA9B;AAA0CE,sBAAc,EAAE,gBAA1D;AAA4EiE,mBAAW,EAAE,aAAzF;AAAwGC,iBAAS,EAAE,WAAnH;AAAgIC,oBAAY,EAAE,cAA9I;AAA8JC,mBAAW,EAAE,aAA3K;AAA0LC,qBAAa,EAAE,eAAzM;AAA0NC,qBAAa,EAAE,eAAzO;AAA0PC,qBAAa,EAAE;AAAzQ,OAZzwB;AAYqiCvvD,WAAK,EAAE,EAZ5iC;AAYgjCC,UAAI,EAAE,EAZtjC;AAY0jCC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,aAA1C,EAAyD,OAAzD,EAAkE,eAAlE,EAAmF,MAAnF,EAA2F,CAA3F,EAA8F,SAA9F,CAA5B,EAAsI,CAAC,CAAD,EAAI,aAAJ,CAAtI,EAA0J,CAAC,CAAD,EAAI,MAAJ,CAA1J,EAAuK,CAAC,CAAD,EAAI,IAAJ,CAAvK,EAAkL,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,EAAkB,aAAlB,CAAlL,EAAoN,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,MAA/B,CAApN,EAA4P,CAAC,OAAD,EAAU,KAAV,EAAiB,CAAjB,EAAoB,qBAApB,EAA2C,CAA3C,EAA8C,MAA9C,CAA5P,EAAmT,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,MAA/B,CAAnT,EAA2V,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,MAAxB,EAAgC,SAAhC,EAA2C,UAA3C,EAAuD,OAAvD,EAAgE,eAAhE,CAA3V,EAA6a,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,EAA0B,eAA1B,EAA2C,CAA3C,EAA8C,MAA9C,EAAsD,UAAtD,EAAkE,WAAlE,EAA+E,SAA/E,EAA0F,OAA1F,EAAmG,CAAnG,EAAsG,OAAtG,EAA+G,SAA/G,CAA7a,EAAwiB,CAAC,OAAD,EAAU,wBAAV,EAAoC,cAApC,EAAoD,EAApD,EAAwD,CAAxD,EAA2D,MAA3D,EAAmE,OAAnE,EAA4E,gBAA5E,EAA8F,CAA9F,EAAiG,OAAjG,EAA0G,SAA1G,CAAxiB,EAA8pB,CAAC,OAAD,EAAU,iBAAV,EAA6B,CAA7B,EAAgC,MAAhC,CAA9pB,EAAusB,CAAC,OAAD,EAAU,MAAV,EAAkB,CAAlB,EAAqB,MAArB,CAAvsB,EAAquB,CAAC,CAAD,EAAI,QAAJ,EAAc,CAAd,EAAiB,MAAjB,CAAruB,EAA+vB,CAAC,OAAD,EAAU,KAAV,EAAiB,CAAjB,EAAoB,eAApB,EAAqC,CAArC,EAAwC,MAAxC,EAAgD,SAAhD,CAA/vB,EAA2zB,CAAC,IAAD,EAAO,EAAP,CAA3zB,EAAu0B,CAAC,CAAD,EAAI,UAAJ,EAAgB,OAAhB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,MAArC,CAAv0B,EAAq3B,CAAC,CAAD,EAAI,UAAJ,EAAgB,OAAhB,EAAyB,OAAzB,CAAr3B,EAAw5B,CAAC,CAAD,EAAI,IAAJ,EAAU,aAAV,EAAyB,CAAzB,EAA4B,MAA5B,CAAx5B,EAA67B,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,EAAmD,CAAnD,EAAsD,MAAtD,CAA77B,EAA4/B,CAAC,OAAD,EAAU,kBAAV,EAA8B,CAA9B,EAAiC,MAAjC,CAA5/B,EAAsiC,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,WAArC,EAAkD,CAAlD,EAAqD,MAArD,CAAtiC,EAAomC,CAAC,CAAD,EAAI,IAAJ,EAAU,aAAV,CAApmC,EAA8nC,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAA9nC,EAAkrC,CAAC,CAAD,EAAI,kBAAJ,CAAlrC,EAA2sC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,SAAjC,EAA4C,sBAA5C,EAAoE,CAApE,EAAuE,MAAvE,CAA3sC,EAA2xC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,CAAjC,EAAoC,MAApC,EAA4C,SAA5C,CAA3xC,EAAm1C,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,WAA/B,CAAn1C,EAAg4C,CAAC,CAAD,EAAI,aAAJ,EAAmB,CAAnB,EAAsB,MAAtB,CAAh4C,EAA+5C,CAAC,cAAD,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,wBAAxB,EAAkD,CAAlD,EAAqD,MAArD,EAA6D,OAA7D,EAAsE,gBAAtE,CAA/5C,EAAw/C,CAAC,KAAD,EAAQ,EAAR,CAAx/C,EAAqgD,CAAC,CAAD,EAAI,iBAAJ,CAArgD,EAA6hD,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,SAA5B,EAAuC,UAAvC,EAAmD,CAAnD,EAAsD,OAAtD,EAA+D,SAA/D,CAA7hD,EAAwmD,CAAC,MAAD,EAAS,cAAT,CAAxmD,EAAkoD,CAAC,CAAD,EAAI,MAAJ,CAAloD,EAA+oD,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAZ,EAAe,OAAf,EAAwB,SAAxB,CAA/oD,EAAmrD,CAAC,CAAD,EAAI,MAAJ,CAAnrD,EAAgsD,CAAC,CAAD,EAAI,IAAJ,EAAU,SAAV,EAAqB,QAArB,EAA+B,OAA/B,CAAhsD,EAAyuD,CAAC,CAAD,EAAI,QAAJ,CAAzuD,CAZlkC;AAY2zFC,cAAQ,EAAE,SAASuyD,2BAAT,CAAqCl1D,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC56F,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA;;AACA,mEAAkB,CAAlB,EAAqBugD,+CAArB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,mBAA5E,EAAiG,CAAjG;;AACA,mEAAkB,CAAlB,EAAqBC,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,YAArE,EAAmF,CAAnF;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,kEAAiB,EAAjB,EAAqB,SAArB,EAAgC,CAAhC;;AACA,uEAAsB,EAAtB,EAA0B,OAA1B;;AACA,uEAAsB,EAAtB,EAA0B,IAA1B;;AACA,kEAAiB,EAAjB,EAAqB,IAArB,EAA2B,CAA3B;;AACA,uEAAsB,EAAtB,EAA0B,IAA1B,EAAgC,CAAhC;;AACA,kEAAiB,EAAjB,EAAqB,MAArB,EAA6B,CAA7B;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,IAA1B,EAAgC,CAAhC;;AACA,uEAAsB,EAAtB,EAA0B,OAA1B,EAAmC,CAAnC;;AACA,mEAAkB,eAAlB,EAAmC,SAAS2U,2DAAT,CAAqExxD,MAArE,EAA6E;AAAE,mBAAO1D,GAAG,CAACm1D,iBAAJ,GAAwBzxD,MAA/B;AAAwC,WAA1J;;AACA;;AACA;;AACA,mEAAkB,EAAlB,EAAsBo/C,iCAAtB,EAAyD,CAAzD,EAA4D,EAA5D,EAAgE,IAAhE,EAAsE,EAAtE;;AACA;;AACA;;AACA,mEAAkB,EAAlB,EAAsBC,oCAAtB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,OAAlE,EAA2E,EAA3E;;AACA,mEAAkB,EAAlB,EAAsBQ,oCAAtB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,OAAlE,EAA2E,CAA3E;;AACA,mEAAkB,EAAlB,EAAsBW,oCAAtB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,OAAlE,EAA2E,EAA3E;;AACA;;AACA,mEAAkB,EAAlB,EAAsBE,kCAAtB,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,KAAhE,EAAuE,EAAvE;;AACA;;AACA,mEAAkB,EAAlB,EAAsBC,oDAAtB,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,uBAAlF,EAA2G,EAA3G;;AACA;AACH;;AAAC,YAAItkD,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCC,GAAG,CAAC+zD,kBAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiC/zD,GAAG,CAACg0D,sBAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCh0D,GAAG,CAACm0D,gBAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCn0D,GAAG,CAACo1D,0BAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bp1D,GAAG,CAAC0/C,MAA9B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B1/C,GAAG,CAAC+0D,gBAAJ,IAAwB/0D,GAAG,CAAC+0D,gBAAJ,CAAqB1zE,MAArB,GAA8B,CAAhF;;AACA,kEAAiB,CAAjB;;AACA,+EAA8B,iBAA9B,EAAiD2e,GAAG,CAACsxD,sBAArD,EAA6E,EAA7E;;AACA,kEAAiB,CAAjB;;AACA,+EAA8B,mBAA9B,EAAmDtxD,GAAG,CAACqxD,aAAvD,EAAsE,EAAtE;;AACA,mEAAkB,IAAlB,EAAwBrxD,GAAG,CAACxJ,EAA5B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCwJ,GAAG,CAACwkD,KAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAACxkD,GAAG,CAAC8jD,mBAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAC9jD,GAAG,CAAC+jD,kBAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiC/jD,GAAG,CAACgxD,iBAArC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAChxD,GAAG,CAACgkD,mBAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAChkD,GAAG,CAACixD,WAA/B,EAA4C,SAA5C,EAAuDjxD,GAAG,CAACm1D,iBAA3D,EAA8E,UAA9E,EAA0Fn1D,GAAG,CAAC+hD,SAAJ,KAAkB,CAA5G,EAA+G,OAA/G,EAAwH/hD,GAAG,CAACgiD,MAAJ,CAAW2M,aAAnI;;AACA,oEAAmB,YAAnB,EAAiC3uD,GAAG,CAACgiD,MAAJ,CAAW2M,aAA5C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6B3uD,GAAG,CAACikD,OAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BjkD,GAAG,CAAC07C,KAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B17C,GAAG,CAAC+hD,SAAJ,KAAkB,CAAlB,IAAuB/hD,GAAG,CAACwjD,aAArD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BxjD,GAAG,CAACytD,UAAJ,IAAkBztD,GAAG,CAACkxD,cAAhD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BlxD,GAAG,CAACoxD,aAAJ,IAAqBpxD,GAAG,CAACmzD,SAAnD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BnzD,GAAG,CAACytD,UAA9B;AACH;AAAE,OA1F4C;AA0F1C5qD,gBAAU,EAAE,sBAAY;AAAE,eAAO,CAAC,oDAAD,EAAcwoD,aAAd,EAA6B,2EAA7B,EAAkE,8DAAlE,EAA0F,sDAA1F,EAA0G,uDAA1G,EAA0HgK,wBAA1H,EAClCC,kBADkC,EACd,uDADc,EACE,gEADF,EAC2BpI,qBAD3B,EAElCqI,4BAFkC,CAAP;AAEK,OA5FW;AA4FTC,WAAK,EAAE,iBAAY;AAAE,eAAO,CAACrJ,cAAD,CAAP;AAA0B,OA5FtC;AA4FwCl8D,YAAM,EAAE,CAAC,+/DAAD;AA5FhD,KAAzB,CAA1B;AA6FA;;AACA29D,sBAAkB,CAACnvE,cAAnB,GAAoC;AAAA,aAAM,EAAN;AAAA,KAApC;;AACAmvE,sBAAkB,CAAC9zD,cAAnB,GAAoC;AAChC4hD,WAAK,EAAE,CAAC;AAAEh9D,YAAI,EAAE;AAAR,OAAD,CADyB;AAEhCqjE,eAAS,EAAE,CAAC;AAAErjE,YAAI,EAAE;AAAR,OAAD,CAFqB;AAGhCulE,aAAO,EAAE,CAAC;AAAEvlE,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC6tE,wBAAD;AAA/B,OAAD,CAHuB;AAIhCxuD,UAAI,EAAE,CAAC;AAAExf,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACquE,qBAAD;AAA5B,OAAD,CAJ0B;AAKhC9M,oBAAc,EAAE,CAAC;AAAE1hE,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,iBAAD;AAA5B,OAAD,CALgB;AAMhC2lE,WAAK,EAAE,CAAC;AAAE9lE,YAAI,EAAE;AAAR,OAAD,CANyB;AAOhCqyE,eAAS,EAAE,CAAC;AAAEryE,YAAI,EAAE;AAAR,OAAD,CAPqB;AAQhCghE,YAAM,EAAE,CAAC;AAAEhhE,YAAI,EAAE;AAAR,OAAD,CARwB;AAShC+uE,gBAAU,EAAE,CAAC;AAAE/uE,YAAI,EAAE;AAAR,OAAD,CAToB;AAUhCymE,iBAAW,EAAE,CAAC;AAAEzmE,YAAI,EAAE;AAAR,OAAD,CAVmB;AAWhCsyE,uBAAiB,EAAE,CAAC;AAAEtyE,YAAI,EAAE;AAAR,OAAD,CAXa;AAYhC40E,eAAS,EAAE,CAAC;AAAE50E,YAAI,EAAE;AAAR,OAAD,CAZqB;AAahC0uE,gBAAU,EAAE,CAAC;AAAE1uE,YAAI,EAAE;AAAR,OAAD,CAboB;AAchCq2E,sBAAgB,EAAE,CAAC;AAAEr2E,YAAI,EAAE;AAAR,OAAD,CAdc;AAehCs2E,aAAO,EAAE,CAAC;AAAEt2E,YAAI,EAAE;AAAR,OAAD,CAfuB;AAgBhC6mE,kBAAY,EAAE,CAAC;AAAE7mE,YAAI,EAAE;AAAR,OAAD,CAhBkB;AAiBhCuyE,iBAAW,EAAE,CAAC;AAAEvyE,YAAI,EAAE;AAAR,OAAD,CAjBmB;AAkBhCwyE,oBAAc,EAAE,CAAC;AAAExyE,YAAI,EAAE;AAAR,OAAD,CAlBgB;AAmBhCsnE,oBAAc,EAAE,CAAC;AAAEtnE,YAAI,EAAE;AAAR,OAAD,CAnBgB;AAoBhCsjE,YAAM,EAAE,CAAC;AAAEtjE,YAAI,EAAE;AAAR,OAAD,CApBwB;AAqBhCuvE,sBAAgB,EAAE,CAAC;AAAEvvE,YAAI,EAAE;AAAR,OAAD,CArBc;AAsBhCyyE,gBAAU,EAAE,CAAC;AAAEzyE,YAAI,EAAE;AAAR,OAAD,CAtBoB;AAuBhC0yE,mBAAa,EAAE,CAAC;AAAE1yE,YAAI,EAAE;AAAR,OAAD,CAvBiB;AAwBhC8kE,mBAAa,EAAE,CAAC;AAAE9kE,YAAI,EAAE;AAAR,OAAD,CAxBiB;AAyBhC4lE,gBAAU,EAAE,CAAC;AAAE5lE,YAAI,EAAE;AAAR,OAAD,CAzBoB;AA0BhCshE,mBAAa,EAAE,CAAC;AAAEthE,YAAI,EAAE;AAAR,OAAD,CA1BiB;AA2BhC2yE,mBAAa,EAAE,CAAC;AAAE3yE,YAAI,EAAE;AAAR,OAAD,CA3BiB;AA4BhC4yE,4BAAsB,EAAE,CAAC;AAAE5yE,YAAI,EAAE;AAAR,OAAD,CA5BQ;AA6BhC6yE,YAAM,EAAE,CAAC;AAAE7yE,YAAI,EAAE;AAAR,OAAD,CA7BwB;AA8BhC2uE,cAAQ,EAAE,CAAC;AAAE3uE,YAAI,EAAE;AAAR,OAAD,CA9BsB;AA+BhC6uE,oBAAc,EAAE,CAAC;AAAE7uE,YAAI,EAAE;AAAR,OAAD,CA/BgB;AAgChC8yE,iBAAW,EAAE,CAAC;AAAE9yE,YAAI,EAAE;AAAR,OAAD,CAhCmB;AAiChC+yE,eAAS,EAAE,CAAC;AAAE/yE,YAAI,EAAE;AAAR,OAAD,CAjCqB;AAkChCgzE,kBAAY,EAAE,CAAC;AAAEhzE,YAAI,EAAE;AAAR,OAAD,CAlCkB;AAmChCizE,iBAAW,EAAE,CAAC;AAAEjzE,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,aAAD;AAAtB,OAAD,CAnCmB;AAoChC+yE,mBAAa,EAAE,CAAC;AAAElzE,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,eAAD;AAAtB,OAAD,CApCiB;AAqChCgzE,mBAAa,EAAE,CAAC;AAAEnzE,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,eAAD;AAAtB,OAAD,CArCiB;AAsChCizE,mBAAa,EAAE,CAAC;AAAEpzE,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,eAAD;AAAtB,OAAD,CAtCiB;AAuChCoiE,YAAM,EAAE,CAAC;AAAEviE,YAAI,EAAE;AAAR,OAAD,CAvCwB;AAwChCwiE,aAAO,EAAE,CAAC;AAAExiE,YAAI,EAAE;AAAR,OAAD,CAxCuB;AAyChCkO,YAAM,EAAE,CAAC;AAAElO,YAAI,EAAE;AAAR,OAAD,CAzCwB;AA0ChC8tE,WAAK,EAAE,CAAC;AAAE9tE,YAAI,EAAE;AAAR,OAAD,CA1CyB;AA2ChCo2E,UAAI,EAAE,CAAC;AAAEp2E,YAAI,EAAE;AAAR,OAAD;AA3C0B,KAApC;AA6CA;;AAAc,KAAC,YAAY;AAAE,sEAAyBkvE,kBAAzB,EAA6C,CAAC;AACnElvE,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,YADX;AAEC6V,kBAAQ,wtKAFT;AAoGCzS,gBAAM,EAAE;AApGT,SAAD;AAF6D,OAAD,CAA7C,EAwGrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAxGL,EAwGO;AAAEu0D,aAAK,EAAE,CAAC;AAClC9lE,cAAI,EAAE;AAD4B,SAAD,CAAT;AAExBqyE,iBAAS,EAAE,CAAC;AACZryE,cAAI,EAAE;AADM,SAAD,CAFa;AAIxBghE,cAAM,EAAE,CAAC;AACThhE,cAAI,EAAE;AADG,SAAD,CAJgB;AAMxB+uE,kBAAU,EAAE,CAAC;AACb/uE,cAAI,EAAE;AADO,SAAD,CANY;AAQxBymE,mBAAW,EAAE,CAAC;AACdzmE,cAAI,EAAE;AADQ,SAAD,CARW;AAUxBsyE,yBAAiB,EAAE,CAAC;AACpBtyE,cAAI,EAAE;AADc,SAAD,CAVK;AAYxB6mE,oBAAY,EAAE,CAAC;AACf7mE,cAAI,EAAE;AADS,SAAD,CAZU;AAcxBuyE,mBAAW,EAAE,CAAC;AACdvyE,cAAI,EAAE;AADQ,SAAD,CAdW;AAgBxBwyE,sBAAc,EAAE,CAAC;AACjBxyE,cAAI,EAAE;AADW,SAAD,CAhBQ;AAkBxBsnE,sBAAc,EAAE,CAAC;AACjBtnE,cAAI,EAAE;AADW,SAAD,CAlBQ;AAoBxBuvE,wBAAgB,EAAE,CAAC;AACnBvvE,cAAI,EAAE;AADa,SAAD,CApBM;AAsBxByyE,kBAAU,EAAE,CAAC;AACbzyE,cAAI,EAAE;AADO,SAAD,CAtBY;AAwBxB0yE,qBAAa,EAAE,CAAC;AAChB1yE,cAAI,EAAE;AADU,SAAD,CAxBS;AA0BxB4lE,kBAAU,EAAE,CAAC;AACb5lE,cAAI,EAAE;AADO,SAAD,CA1BY;AA4BxBshE,qBAAa,EAAE,CAAC;AAChBthE,cAAI,EAAE;AADU,SAAD,CA5BS;AA8BxB2yE,qBAAa,EAAE,CAAC;AAChB3yE,cAAI,EAAE;AADU,SAAD,CA9BS;AAgCxB4yE,8BAAsB,EAAE,CAAC;AACzB5yE,cAAI,EAAE;AADmB,SAAD,CAhCA;AAkCxB6yE,cAAM,EAAE,CAAC;AACT7yE,cAAI,EAAE;AADG,SAAD,CAlCgB;AAoCxB2uE,gBAAQ,EAAE,CAAC;AACX3uE,cAAI,EAAE;AADK,SAAD,CApCc;AAsCxB6uE,sBAAc,EAAE,CAAC;AACjB7uE,cAAI,EAAE;AADW,SAAD,CAtCQ;AAwCxB8yE,mBAAW,EAAE,CAAC;AACd9yE,cAAI,EAAE;AADQ,SAAD,CAxCW;AA0CxB+yE,iBAAS,EAAE,CAAC;AACZ/yE,cAAI,EAAE;AADM,SAAD,CA1Ca;AA4CxBgzE,oBAAY,EAAE,CAAC;AACfhzE,cAAI,EAAE;AADS,SAAD,CA5CU;AA8CxBizE,mBAAW,EAAE,CAAC;AACdjzE,cAAI,EAAE,oDADQ;AAEdG,cAAI,EAAE,CAAC,aAAD;AAFQ,SAAD,CA9CW;AAiDxB+yE,qBAAa,EAAE,CAAC;AAChBlzE,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,eAAD;AAFU,SAAD,CAjDS;AAoDxBgzE,qBAAa,EAAE,CAAC;AAChBnzE,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,eAAD;AAFU,SAAD,CApDS;AAuDxBizE,qBAAa,EAAE,CAAC;AAChBpzE,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,eAAD;AAFU,SAAD,CAvDS;AA0DxB68D,aAAK,EAAE,CAAC;AACRh9D,cAAI,EAAE;AADE,SAAD,CA1DiB;AA4DxBqjE,iBAAS,EAAE,CAAC;AACZrjE,cAAI,EAAE;AADM,SAAD,CA5Da;AA8DxBuiE,cAAM,EAAE,CAAC;AACTviE,cAAI,EAAE;AADG,SAAD,CA9DgB;AAgExBwiE,eAAO,EAAE,CAAC;AACVxiE,cAAI,EAAE;AADI,SAAD,CAhEe;AAkExBkO,cAAM,EAAE,CAAC;AACTlO,cAAI,EAAE;AADG,SAAD,CAlEgB;AAoExB8tE,aAAK,EAAE,CAAC;AACR9tE,cAAI,EAAE;AADE,SAAD,CApEiB;AAsExBo2E,YAAI,EAAE,CAAC;AACPp2E,cAAI,EAAE;AADC,SAAD,CAtEkB;AAwExBsjE,cAAM,EAAE,CAAC;AACTtjE,cAAI,EAAE;AADG,SAAD,CAxEgB;AA0ExBulE,eAAO,EAAE,CAAC;AACVvlE,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC6tE,wBAAD;AAFI,SAAD,CA1Ee;AA6ExBxuD,YAAI,EAAE,CAAC;AACPxf,cAAI,EAAE,0DADC;AAEPG,cAAI,EAAE,CAACquE,qBAAD;AAFC,SAAD,CA7EkB;AAgFxB9M,sBAAc,EAAE,CAAC;AACjB1hE,cAAI,EAAE,0DADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAhFQ;AAmFxBy0E,iBAAS,EAAE,CAAC;AACZ50E,cAAI,EAAE;AADM,SAAD,CAnFa;AAqFxB0uE,kBAAU,EAAE,CAAC;AACb1uE,cAAI,EAAE;AADO,SAAD,CArFY;AAuFxBq2E,wBAAgB,EAAE,CAAC;AACnBr2E,cAAI,EAAE;AADa,SAAD,CAvFM;AAyFxBs2E,eAAO,EAAE,CAAC;AACVt2E,cAAI,EAAE;AADI,SAAD,CAzFe;AA2FxB8kE,qBAAa,EAAE,CAAC;AAChB9kE,cAAI,EAAE;AADU,SAAD;AA3FS,OAxGP;AAqMb,KArMF;AAuMd;;;;;;QAIM22E,wB;AACF;;;;AAIA,wCAAYtV,SAAZ,EAAuB0V,OAAvB,EAAgC;AAAA;;AAC5B,aAAK1V,SAAL,GAAiBA,SAAjB;AACA,aAAK0V,OAAL,GAAeA,OAAf;AACA,aAAKC,kBAAL,GAA0B,KAA1B;AACH;AACD;;;;;;;;uCAIex0E,K,EAAO;AAClB,cAAI,CAAC,KAAKu0E,OAAL,CAAajkE,aAAb,CAA2BpX,QAA3B,CAAoC8G,KAAK,CAACsb,MAA1C,CAAL,EAAwD;AACpD,iBAAKk5D,kBAAL,GAA0B,KAA1B;AACH;AACJ;AACD;;;;;;;uCAIex0E,K,EAAO;AAClB,cAAIA,KAAK,CAAC4X,OAAN,KAAkB,EAAlB,IAAyB5X,KAAK,CAAC4X,OAAN,KAAkB,CAAlB,IAAuB,CAAC,KAAK28D,OAAL,CAAajkE,aAAb,CAA2BpX,QAA3B,CAAoC8G,KAAK,CAACsb,MAA1C,CAArD,EAAyG;AACrG,iBAAKk5D,kBAAL,GAA0B,KAA1B;AACH;AACJ;AACD;;;;;;;iCAISx0E,K,EAAO;AACZ;AACA,cAAMy0E,SAAS;AAAK;AAAkBz0E,eAAK,CAACsb,MAA1B,CAAoCoK,OAAtD;AACA;;AACA,cAAMgvD,UAAU;AAAK;AAAkB10E,eAAK,CAACsb,MAA1B,CAAoCtX,aAApC,CAAkDyjB,WAAlD,CAA8DlY,IAA9D,EAAnB;AACA;;AACA,cAAMolE,iBAAiB,GAAG;AACtB,2BAAeD,UADO;AAEtB,qBAAS,KAAK7V,SAAL,CAAeyE;AAFF,WAA1B;AAIA,eAAKzE,SAAL,CAAeqV,0BAAf,GAA4C,CAACO,SAAS,GAAG,KAAK5V,SAAL,CAAeiC,MAAf,CAAsByM,yBAAzB,GAClD,KAAK1O,SAAL,CAAeiC,MAAf,CAAsB0M,2BADkB,EAEvC3B,OAFuC,CAE/B,eAF+B,EAEd8I,iBAAiB,CAACC,WAFJ,EAGvC/I,OAHuC,CAG/B,SAH+B,EAGpB8I,iBAAiB,CAACrR,KAHE,CAA5C;AAIH;;;;;;AAEL6Q,4BAAwB,CAAC/2E,IAAzB,GAAgC,SAASy3E,gCAAT,CAA0Cv3E,CAA1C,EAA6C;AAAE,aAAO,KAAKA,CAAC,IAAI62E,wBAAV,EAAoC,gEAAyB;AAAa;;;AAE7I;AAAA,eAAMzH,kBAAN;AAAA,OAFgI,CAAzB,CAApC,EAEtC,gEAAyB,wDAAzB,CAFsC,CAAP;AAEgB,KAF/F;;AAGAyH,4BAAwB,CAACxzD,IAAzB,GAAgC,gEAAyB;AAAEnjB,UAAI,EAAE22E,wBAAR;AAAkCn+D,eAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,CAA7C;AAAsE2I,kBAAY,EAAE,SAASm2D,qCAAT,CAA+Cj2D,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3M,mEAAkB,OAAlB,EAA2B,SAASk2D,iDAAT,CAA2DvyD,MAA3D,EAAmE;AAAE,mBAAO1D,GAAG,CAACk2D,cAAJ,CAAmBxyD,MAAnB,CAAP;AAAoC,WAApI,EAAsI,KAAtI,EAA6I,+DAA7I,EAAuK,OAAvK,EAAgL,SAASyyD,iDAAT,CAA2DzyD,MAA3D,EAAmE;AAAE,mBAAO1D,GAAG,CAACo2D,cAAJ,CAAmB1yD,MAAnB,CAAP;AAAoC,WAAzR,EAA2R,KAA3R,EAAkS,+DAAlS;AACH;AAAE,OAFkD;AAEhDnB,WAAK,EAAE,CAFyC;AAEtCC,UAAI,EAAE,CAFgC;AAE7BC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,mBAAJ,CAAD,EAA2B,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,aAAzB,EAAwC,CAAxC,EAA2C,MAA3C,CAA3B,EAA+E,CAAC,CAAD,EAAI,cAAJ,CAA/E,EAAoG,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,aAA7B,EAA4C,QAA5C,EAAsD,gBAAtD,EAAwE,CAAxE,EAA2E,OAA3E,EAAoF,OAApF,CAApG,EAAkM,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,YAAjC,CAAlM,EAAkP,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,aAA7B,EAA4C,QAA5C,EAAsD,wBAAtD,EAAgF,CAAhF,EAAmF,OAAnF,EAA4F,OAA5F,CAAlP,EAAwV,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,SAAjC,CAAxV,EAAqY,CAAC,CAAD,EAAI,yBAAJ,CAArY,EAAqa,CAAC,OAAD,EAAU,yCAAV,EAAqD,CAArD,EAAwD,MAAxD,CAAra,EAAse,CAAC,CAAD,EAAI,IAAJ,EAAU,OAAV,EAAmB,CAAnB,EAAsB,aAAtB,CAAte,EAA4gB,CAAC,CAAD,EAAI,qBAAJ,EAA2B,OAA3B,EAAoC,eAApC,CAA5gB,EAAkkB,CAAC,CAAD,EAAI,YAAJ,EAAkB,kBAAlB,CAAlkB,EAAymB,CAAC,OAAD,EAAU,iDAAV,EAA6D,CAA7D,EAAgE,MAAhE,CAAzmB,EAAkrB,CAAC,OAAD,EAAU,EAAV,EAAc,CAAd,EAAiB,SAAjB,CAAlrB,EAA+sB,CAAC,CAAD,EAAI,iBAAJ,EAAuB,wBAAvB,EAAiD,UAAjD,CAA/sB,EAA6wB,CAAC,CAAD,EAAI,QAAJ,EAAc,oBAAd,CAA7wB,EAAkzB,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,SAAxB,EAAmC,eAAnC,EAAoD,QAApD,CAAlzB,EAAi3B,CAAC,CAAD,EAAI,aAAJ,CAAj3B,CAFqB;AAEi3BC,cAAQ,EAAE,SAAS2zD,iCAAT,CAA2Ct2D,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9+B,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBwkD,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,GAAlE,EAAuE,CAAvE;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS+R,yDAAT,GAAqE;AAAE,mBAAOt2D,GAAG,CAAC+/C,SAAJ,CAAc2R,YAAd,CAA2Bl4D,IAA3B,EAAP;AAA2C,WAA7I;;AACA,kEAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS+8D,yDAAT,GAAqE;AAAE,mBAAOv2D,GAAG,CAAC01D,kBAAJ,GAAyB,CAAC11D,GAAG,CAAC01D,kBAArC;AAA0D,WAA5J;;AACA,kEAAiB,CAAjB,EAAoB,GAApB,EAAyB,CAAzB;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqB3P,uCAArB,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,KAApE,EAA2E,CAA3E;;AACA;;AACA;;AACA;AACH;;AAAC,YAAIhmD,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BC,GAAG,CAAC+/C,SAAJ,CAAcgR,SAAxC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,OAAlB,EAA2B/wD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBuM,YAArB,CAAkCxB,OAAlC,CAA0C,SAA1C,EAAqD/sD,GAAG,CAAC+/C,SAAJ,CAAcyE,KAAnE,CAA3B;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,QAAnB,EAA6BxkD,GAAG,CAAC01D,kBAAjC;;AACA,mEAAkB,OAAlB,EAA2B11D,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBwM,oBAArB,CAA0CzB,OAA1C,CAAkD,SAAlD,EAA6D/sD,GAAG,CAAC+/C,SAAJ,CAAcyE,KAA3E,CAA3B;;AACA,oEAAmB,eAAnB,EAAoC,IAApC,EAA0C,eAA1C,EAA2DxkD,GAAG,CAAC01D,kBAA/D;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B11D,GAAG,CAAC01D,kBAA9B;AACH;AAAE,OA9BkD;AA8BhD7yD,gBAAU,EAAE,CAAC,oDAAD,EAAc,uDAAd,EAA8B,2EAA9B,EAAmE,8DAAnE,EAA2F,sDAA3F,CA9BoC;AA8BwE5S,YAAM,EAAE,CAAC,s7BAAD;AA9BhF,KAAzB,CAAhC;AA+BA;;AACAolE,4BAAwB,CAAC52E,cAAzB,GAA0C;AAAA,aAAM,CAC5C;AAAEC,YAAI,EAAEkvE,kBAAR;AAA4BhvE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG5D;AAAA,mBAAM+uE,kBAAN;AAAA,WAHgD,CAAD;AAAtB,SAAD;AAAxC,OAD4C,EAK5C;AAAElvE,YAAI,EAAE;AAAR,OAL4C,CAAN;AAAA,KAA1C;;AAOA22E,4BAAwB,CAACv7D,cAAzB,GAA0C;AACtCo8D,oBAAc,EAAE,CAAC;AAAEx3E,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAA5B,OAAD,CADsB;AAEtCu3E,oBAAc,EAAE,CAAC;AAAE13E,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAA5B,OAAD;AAFsB,KAA1C;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBw2E,wBAAzB,EAAmD,CAAC;AACzE32E,YAAI,EAAE,uDADmE;AAEzEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,mBADX;AAEC6V,kBAAQ,o+FAFT;AAqDCzS,gBAAM,EAAE;AArDT,SAAD;AAFmE,OAAD,CAAnD,EAyDrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEkvE,kBAAR;AAA4BhvE,oBAAU,EAAE,CAAC;AACvDF,gBAAI,EAAE,oDADiD;AAEvDG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM+uE,kBAAN;AAAA,aAFhB,CAAD;AAFiD,WAAD;AAAxC,SAAD,EAKX;AAAElvE,cAAI,EAAE;AAAR,SALW,CAAP;AAK2B,OA9DpB,EA8DsB;AAAEw3E,sBAAc,EAAE,CAAC;AAC1Dx3E,cAAI,EAAE,0DADoD;AAE1DG,cAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAFoD,SAAD,CAAlB;AAGvCu3E,sBAAc,EAAE,CAAC;AACjB13E,cAAI,EAAE,0DADW;AAEjBG,cAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAFW,SAAD;AAHuB,OA9DtB;AAoEb,KApEF;AAsEd;;;;;AAIA;;;AACA,QAAI23E,QAAQ,GAAG,CAAf;;QACMjB,4B;AACF;;;AAGA,4CAAYxV,SAAZ,EAAuB;AAAA;;AACnB,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAKvpD,EAAL,wBAAwBggE,QAAQ,EAAhC;AACA,aAAKv6E,IAAL,GAAYA,IAAZ;AACH;AACD;;;;;;;mCAGW;AACP,eAAK8jE,SAAL,CAAenzD,MAAf,IAAyB3Q,IAAI,CAAC2T,GAAL,CAAS,KAAKmwD,SAAL,CAAeyM,KAAxB,EAA+B,KAAKzM,SAAL,CAAenzD,MAA9C,CAAzB;;AACA,cAAI,KAAKmzD,SAAL,CAAenzD,MAAf,IAAyB,CAA7B,EAAgC;AAC5B,iBAAK6pE,SAAL,CAAejlE,aAAf,CAA6Bia,KAA7B;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKs0C,SAAL,CAAenzD,MAAf,IAAyB,KAAKmzD,SAAL,CAAeyM,KAAxC;;AACA,cAAK,KAAKzM,SAAL,CAAenzD,MAAf,GAAwB,KAAKmzD,SAAL,CAAeyM,KAAxC,IAAkD,KAAKzM,SAAL,CAAegC,SAArE,EAAgF;AAC5E,iBAAK0U,SAAL,CAAejlE,aAAf,CAA6Bia,KAA7B;AACH;AACJ;AACD;;;;;;oCAGY;AACR,eAAKs0C,SAAL,CAAenzD,MAAf,GAAwB,CAAxB;AACA,eAAK6pE,SAAL,CAAejlE,aAAf,CAA6Bia,KAA7B;AACH;AACD;;;;;;mCAGW;AACP,eAAKs0C,SAAL,CAAenzD,MAAf,GAAwB,CAAC,KAAK8pE,OAAL,GAAe,CAAhB,IAAqB,KAAK3W,SAAL,CAAeyM,KAA5D;;AACA,cAAK,KAAKzM,SAAL,CAAenzD,MAAf,GAAwB,KAAKmzD,SAAL,CAAeyM,KAAxC,IAAkD,KAAKzM,SAAL,CAAegC,SAArE,EAAgF;AAC5E,iBAAK0U,SAAL,CAAejlE,aAAf,CAA6Bia,KAA7B;AACH;AACJ;AACD;;;;;;;AAkCA;;;;iCAISvqB,K,EAAO;AACZ;AACA,cAAMymB,QAAQ,GAAG,CAACzmB,KAAK,CAACsb,MAAN,CAAa3b,KAA/B;;AACA,cAAI8mB,QAAQ,KAAK,KAAKmtD,IAAtB,EAA4B;AACxB,iBAAKA,IAAL,GAAa5zE,KAAK,CAACsb,MAAN,CAAa3b,KAAb,GAAqB,KAAK61E,OAA3B,GAAsC,KAAKA,OAA3C,GAAsD/uD,QAAQ,GAAG,CAAZ,GAAiB,CAAjB,GAAqBA,QAAtF;AACAzmB,iBAAK,CAACsb,MAAN,CAAa3b,KAAb,GAAqB,KAAKi0E,IAA1B;AACH;AACJ;;;4BA1Ca;AACV,iBAAO74E,IAAI,CAACg4E,IAAL,CAAU,KAAKlU,SAAL,CAAegC,SAAf,GAA2B,KAAKhC,SAAL,CAAeyM,KAApD,CAAP;AACH;AACD;;;;;;4BAGY;AACR,iBAAO,KAAKzM,SAAL,CAAeyM,KAAtB;AACH;AACD;;;;;0BAIU3rE,K,EAAO;AACb,eAAKk/D,SAAL,CAAeyM,KAAf,GAAuB,CAAC3rE,KAAxB,CADa,CAEb;;AACA,eAAKi0E,IAAL,GAAY,CAAZ;AACH;AACD;;;;;;4BAGW;AACP,iBAAO,KAAK/U,SAAL,CAAe+U,IAAtB;AACH;AACD;;;;;0BAISj0E,K,EAAO;AACZ,eAAKk/D,SAAL,CAAe+U,IAAf,GAAsB,CAACj0E,KAAvB;AACH;;;;;;AAcL00E,gCAA4B,CAACj3E,IAA7B,GAAoC,SAASq4E,oCAAT,CAA8Cn4E,CAA9C,EAAiD;AAAE,aAAO,KAAKA,CAAC,IAAI+2E,4BAAV,EAAwC,gEAAyB;AAAa;;;AAEzJ;AAAA,eAAM3H,kBAAN;AAAA,OAF4I,CAAzB,CAAxC,CAAP;AAErC,KAFlD;;AAGA2H,gCAA4B,CAAC1zD,IAA7B,GAAoC,gEAAyB;AAAEnjB,UAAI,EAAE62E,4BAAR;AAAsCr+D,eAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAAjD;AAA8E4K,eAAS,EAAE,SAAS80D,kCAAT,CAA4C72D,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjN,oEAAmBkmD,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAIlmD,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACy2D,SAAJ,GAAgBz0D,EAAE,CAACE,KAAxE;AACH;AAAE,OALsD;AAKpDvI,YAAM,EAAE;AAAEk9D,cAAM,EAAE;AAAV,OAL4C;AAKtBt0D,WAAK,EAAE,EALe;AAKXC,UAAI,EAAE,EALK;AAKDC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,QAAJ,EAAc,yBAAd,EAAyC,oBAAzC,CAAD,EAAiE,CAAC,CAAD,EAAI,kBAAJ,CAAjE,EAA0F,CAAC,CAAD,EAAI,aAAJ,CAA1F,EAA8G,CAAC,CAAD,EAAI,wBAAJ,EAA8B,gBAA9B,EAAgD,QAAhD,EAA0D,yBAA1D,CAA9G,EAAoM,CAAC,CAAD,EAAI,kBAAJ,EAAwB,QAAxB,EAAkC,yBAAlC,CAApM,EAAkQ,CAAC,CAAD,EAAI,aAAJ,CAAlQ,EAAsR,CAAC,CAAD,EAAI,qBAAJ,CAAtR,EAAkT,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,aAA3B,CAAlT,EAA6V,CAAC,CAAD,EAAI,cAAJ,EAAoB,CAApB,EAAuB,IAAvB,EAA6B,SAA7B,EAAwC,UAAxC,EAAoD,eAApD,CAA7V,EAAma,CAAC,CAAD,EAAI,OAAJ,EAAa,CAAb,EAAgB,OAAhB,EAAyB,SAAzB,CAAna,EAAwc,CAAC,CAAD,EAAI,kBAAJ,EAAwB,QAAxB,EAAkC,yBAAlC,CAAxc,EAAsgB,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,sBAA1B,EAAkD,CAAlD,EAAqD,UAArD,EAAiE,OAAjE,EAA0E,OAA1E,CAAtgB,EAA0lB,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,sBAAjC,CAA1lB,EAAopB,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,qBAA1B,EAAiD,CAAjD,EAAoD,UAApD,EAAgE,OAAhE,EAAyE,OAAzE,CAAppB,EAAuuB,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,eAAjC,CAAvuB,EAA0xB,CAAC,CAAD,EAAI,iBAAJ,CAA1xB,EAAkzB,CAAC,CAAD,EAAI,kBAAJ,CAAlzB,EAA20B,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,GAA1B,EAA+B,MAA/B,EAAuC,GAAvC,EAA4C,CAA5C,EAA+C,cAA/C,EAA+D,CAA/D,EAAkE,IAAlE,EAAwE,KAAxE,EAA+E,UAA/E,EAA2F,SAA3F,EAAsG,OAAtG,EAA+G,MAA/G,EAAuH,aAAvH,EAAsI,WAAtI,CAA30B,EAA+9B,CAAC,WAAD,EAAc,EAAd,CAA/9B,EAAk/B,CAAC,CAAD,EAAI,oBAAJ,CAAl/B,EAA6gC,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,qBAA1B,EAAiD,CAAjD,EAAoD,UAApD,EAAgE,OAAhE,EAAyE,OAAzE,CAA7gC,EAAgmC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,gBAAjC,CAAhmC,EAAopC,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,qBAA1B,EAAiD,CAAjD,EAAoD,UAApD,EAAgE,OAAhE,EAAyE,OAAzE,CAAppC,EAAuuC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,uBAAjC,CAAvuC,EAAkyC,CAAC,CAAD,EAAI,OAAJ,CAAlyC,CALP;AAKwzCC,cAAQ,EAAE,SAASo0D,qCAAT,CAA+C/2D,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC77C,cAAMg3D,GAAG,GAAG,gEAAZ;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,OAApB,EAA6B,CAA7B;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,eAAlB,EAAmC,SAASC,qEAAT,CAA+EtzD,MAA/E,EAAuF;AAAE,mBAAO1D,GAAG,CAACwsD,KAAJ,GAAY9oD,MAAnB;AAA4B,WAAxJ;;AACA,mEAAkB,CAAlB,EAAqBwiD,8CAArB,EAAqE,CAArE,EAAwE,CAAxE,EAA2E,QAA3E,EAAqF,CAArF;;AACA;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,uEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,EAApC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS+Q,8DAAT,GAA0E;AAAE,mBAAOj3D,GAAG,CAACk3D,SAAJ,EAAP;AAAyB,WAAhI;;AACA,kEAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,EAApC;;AACA,mEAAkB,OAAlB,EAA2B,SAASC,8DAAT,GAA0E;AAAE,mBAAOn3D,GAAG,CAACo3D,QAAJ,EAAP;AAAwB,WAA/H;;AACA,kEAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC;;AACA,uEAAsB,EAAtB,EAA0B,OAA1B,EAAmC,EAAnC;;AACA,+DAAc,EAAd;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,OAA1B,EAAmC,EAAnC,EAAuC,EAAvC;;AACA,mEAAkB,MAAlB,EAA0B,SAASC,4DAAT,CAAsE3zD,MAAtE,EAA8E;AAAE,mBAAO1D,GAAG,CAACs3D,QAAJ,CAAa5zD,MAAb,CAAP;AAA8B,WAAxI,EAA0I,aAA1I,EAAyJ,SAAS6zD,mEAAT,CAA6E7zD,MAA7E,EAAqF;AAAE,mBAAO1D,GAAG,CAACs3D,QAAJ,CAAa5zD,MAAb,CAAP;AAA8B,WAA9Q,EAAgR,WAAhR,EAA6R,SAAS8zD,iEAAT,GAA6E;AAAE,wEAAqBT,GAArB;;AAA2B,gBAAMU,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AAAoC,mBAAOA,GAAG,CAAC52E,KAAJ,GAAYmf,GAAG,CAAC80D,IAAvB;AAA8B,WAAzc;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC;;AACA,+DAAc,EAAd;;AACA;;AACA;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,EAApC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS4C,8DAAT,GAA0E;AAAE,mBAAO13D,GAAG,CAAC23D,WAAJ,EAAP;AAA2B,WAAlI;;AACA,kEAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,EAApC;;AACA,mEAAkB,OAAlB,EAA2B,SAASC,8DAAT,GAA0E;AAAE,mBAAO53D,GAAG,CAAC63D,QAAJ,EAAP;AAAwB,WAA/H;;AACA,kEAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B;;AACA;;AACA;;AACA;;AACA;AACH;;AAAC,YAAI93D,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCC,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqB+M,cAArB,CAAoChC,OAApC,CAA4C,QAA5C,EAAsD/sD,GAAG,CAAC/jB,IAAJ,CAASg4E,IAAT,CAAcj0D,GAAG,CAAC+/C,SAAJ,CAAcgC,SAAd,GAA0B/hD,GAAG,CAAC+/C,SAAJ,CAAcyM,KAAtD,MAAiE,CAAjE,GAAqExsD,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,GAAuB,CAAvB,GAA2B,EAAhG,GAAqG,GAA3J,EAAgKmgE,OAAhK,CAAwK,MAAxK,EAAgL/sD,GAAG,CAAC/jB,IAAJ,CAAS2T,GAAT,CAAaoQ,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,GAAuBoT,GAAG,CAAC+/C,SAAJ,CAAcyM,KAAlD,EAAyDxsD,GAAG,CAAC+/C,SAAJ,CAAcgC,SAAvE,IAAoF,EAApQ,EAAwQgL,OAAxQ,CAAgR,SAAhR,EAA2R/sD,GAAG,CAAC+/C,SAAJ,CAAcgC,SAAd,GAA0B,EAArT,CAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiC/hD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqB8M,eAAtD;;AACA,oEAAmB,KAAnB,EAA0B9uD,GAAG,CAACxJ,EAAJ,GAAS,aAAnC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,IAAlB,EAAwBwJ,GAAG,CAACxJ,EAAJ,GAAS,aAAjC,EAAgD,SAAhD,EAA2DwJ,GAAG,CAACwsD,KAA/D,EAAsE,UAAtE,EAAkFxsD,GAAG,CAAC+/C,SAAJ,CAAcgC,SAAd,KAA4B,CAA9G;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6B/hD,GAAG,CAAC62D,MAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B72D,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,IAAwB,CAAtD,EAAyD,OAAzD,EAAkEoT,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBiN,SAAvF;;AACA,oEAAmB,eAAnB,EAAoCjvD,GAAG,CAAC+/C,SAAJ,CAAcvpD,EAAlD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BwJ,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,IAAwB,CAAtD,EAAyD,OAAzD,EAAkEoT,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBkN,QAAvF;;AACA,oEAAmB,eAAnB,EAAoClvD,GAAG,CAAC+/C,SAAJ,CAAcvpD,EAAlD;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,KAAnB,EAA0BwJ,GAAG,CAACxJ,EAAJ,GAAS,aAAnC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BwJ,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBmN,eAApD,EAAqE,GAArE;;AACA,kEAAiB,CAAjB;;AACA,8EAA6B,KAA7B,EAAoCnvD,GAAG,CAAC02D,OAAxC;;AACA,mEAAkB,IAAlB,EAAwB12D,GAAG,CAACxJ,EAAJ,GAAS,aAAjC,EAAgD,UAAhD,EAA4DwJ,GAAG,CAAC+/C,SAAJ,CAAcgC,SAAd,KAA4B,CAAxF,EAA2F,SAA3F,EAAsG/hD,GAAG,CAAC80D,IAA1G,EAAgH,OAAhH,EAAyH90D,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBoN,UAArB,GAAkC,GAAlC,GAAwCpvD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBqN,cAArB,CAAoCtC,OAApC,CAA4C,KAA5C,EAAmD,KAAK/sD,GAAG,CAAC80D,IAA5D,EAAkE/H,OAAlE,CAA0E,KAA1E,EAAiF,KAAK/sD,GAAG,CAAC02D,OAA1F,CAAjK;;AACA,oEAAmB,eAAnB,EAAoC12D,GAAG,CAAC+/C,SAAJ,CAAcvpD,EAAlD;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BwJ,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBgN,oBAApD,EAA0E,MAA1E,EAAoFhvD,GAAG,CAAC+/C,SAAJ,CAAcwP,QAAlG,EAA4G,GAA5G;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BvvD,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,GAAuBoT,GAAG,CAAC+/C,SAAJ,CAAcyM,KAArC,IAA8CxsD,GAAG,CAAC+/C,SAAJ,CAAcgC,SAA1F,EAAqG,OAArG,EAA8G/hD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBsN,QAAnI;;AACA,oEAAmB,eAAnB,EAAoCtvD,GAAG,CAAC+/C,SAAJ,CAAcvpD,EAAlD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BwJ,GAAG,CAAC+/C,SAAJ,CAAcnzD,MAAd,GAAuBoT,GAAG,CAAC+/C,SAAJ,CAAcyM,KAArC,IAA8CxsD,GAAG,CAAC+/C,SAAJ,CAAcgC,SAA1F,EAAqG,OAArG,EAA8G/hD,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqBuN,QAAnI;;AACA,oEAAmB,eAAnB,EAAoCvvD,GAAG,CAAC+/C,SAAJ,CAAcvpD,EAAlD;AACH;AAAE,OA5FsD;AA4FpDqM,gBAAU,EAAE,CAAC,yEAAD,EAAoC,8DAApC,EAA4D,sDAA5D,EAA4E,uDAA5E,EAA4F,kEAA5F,EAAwH,mEAAxH,EAAqJ,6DAArJ,EAA4K,8EAA5K,CA5FwC;AA4F6K5S,YAAM,EAAE,CAAC,iUAAD;AA5FrL,KAAzB,CAApC;AA6FA;;AACAslE,gCAA4B,CAAC92E,cAA7B,GAA8C;AAAA,aAAM,CAChD;AAAEC,YAAI,EAAEkvE,kBAAR;AAA4BhvE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG5D;AAAA,mBAAM+uE,kBAAN;AAAA,WAHgD,CAAD;AAAtB,SAAD;AAAxC,OADgD,CAAN;AAAA,KAA9C;;AAMA2H,gCAA4B,CAACz7D,cAA7B,GAA8C;AAC1C28D,eAAS,EAAE,CAAC;AAAE/3E,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,WAAD;AAAzB,OAAD,CAD+B;AAE1Cg4E,YAAM,EAAE,CAAC;AAAEn4E,YAAI,EAAE;AAAR,OAAD;AAFkC,KAA9C;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyB62E,4BAAzB,EAAuD,CAAC;AAC7E72E,YAAI,EAAE,uDADuE;AAE7EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,uBADX;AAEC6V,kBAAQ,iyHAFT;AA8ECzS,gBAAM,EAAE;AA9ET,SAAD;AAFuE,OAAD,CAAvD,EAkFrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEkvE,kBAAR;AAA4BhvE,oBAAU,EAAE,CAAC;AACvDF,gBAAI,EAAE,oDADiD;AAEvDG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM+uE,kBAAN;AAAA,aAFhB,CAAD;AAFiD,WAAD;AAAxC,SAAD,CAAP;AAKF,OAvFS,EAuFP;AAAE6I,iBAAS,EAAE,CAAC;AACxB/3E,cAAI,EAAE,uDADkB;AAExBG,cAAI,EAAE,CAAC,WAAD;AAFkB,SAAD,CAAb;AAGVg4E,cAAM,EAAE,CAAC;AACTn4E,cAAI,EAAE;AADG,SAAD;AAHE,OAvFO;AA4Fb,KA5FF;AA8Fd;;;;AAIA;;;QACMo5E,6B;AACF;;;;AAIA,6CAAYC,aAAZ,EAA2B7uC,IAA3B,EAAiC;AAAA;;AAC7B,aAAK6uC,aAAL,GAAqBA,aAArB;AACA,aAAK7uC,IAAL,GAAYA,IAAZ;AACA,aAAK8uC,gBAAL,GAAwB,EAAxB;AACA,aAAKC,cAAL,GAAsB/uC,IAAI,CAACgvC,MAA3B;AACH;AACD;;;;;;;mCAGW,CACV;AACD;;;;;;0CAGkB;AACd,eAAKC,qBAAL,GAA6B,IAAI,gEAAJ,CAAmB,KAAKC,QAAxB,CAA7B;AACH;AACD;;;;;;;sCAIcC,W,EAAa;AACvB,eAAKJ,cAAL,GAAsB,KAAK/uC,IAAL,CAAUgvC,MAAV,CAAiB10B,MAAjB;AAAyB;;;;AAI/C,oBAAAtW,CAAC;AAAA,mBAAIA,CAAC,CAACwyB,MAAF,CAASt0C,WAAT,GAAuBvpB,OAAvB,CAA+Bw2E,WAAW,CAACjtD,WAAZ,EAA/B,KAA6D,CAAC,CAAlE;AAAA,WAJqB,CAAtB;AAKH;AACD;;;;;;;sCAIcs8C,K,EAAO;AACjB,eAAKqQ,aAAL,CAAmBrQ,KAAnB;AACH;AACD;;;;;;;sCAIcxmE,K,EAAO;AACjBA,eAAK,CAACoiB,wBAAN;;AACA,cAAI,KAAK60D,qBAAT,EAAgC;AAC5B,gBAAIj3E,KAAK,CAAC4X,OAAN,KAAkB,gEAAlB,IAAgC5X,KAAK,CAAC4X,OAAN,KAAkB,8DAAtD,EAAgE;AAC5D;AACA,mBAAKq/D,qBAAL,CAA2BznD,SAA3B,CAAqCxvB,KAArC;AACA;;AACA,kBAAImwD,UAAU;AAAI;AAAkB,mBAAK8mB,qBAAL,CAA2B9mB,UAA/D;;AACA,kBAAIA,UAAU,IAAI,KAAKA,UAAvB,EAAmC;AAC/BnwD,qBAAK,CAAC4X,OAAN,KAAkB,gEAAlB,GAA+B,KAAKq/D,qBAAL,CAA2B7nD,kBAA3B,EAA/B,GAAiF,KAAK6nD,qBAAL,CAA2B1nD,iBAA3B,EAAjF;AACA4gC,0BAAU;AAAI;AAAkB,qBAAK8mB,qBAAL,CAA2B9mB,UAA3D;AACH;;AACD,mBAAKA,UAAL,GAAkBA,UAAlB;;AACE;AAAkB,mBAAK8mB,qBAAL,CAA2B9mB,UAA/C,CAA6DlwC,eAA7D,GAA+Em3D,cAA/E;;AACA,qBAAO,KAAP;AACH,aAZD,MAaK,IAAIp3E,KAAK,CAAC4X,OAAN,KAAkB,2DAAtB,EAA6B;AAC5B;AAAkB,mBAAKq/D,qBAAL,CAA2B9mB,UAA/C,CAA6DlwC,eAA7D,GAA+Eo3D,KAA/E;;AACA,qBAAO,KAAP;AACH;AACJ;AACJ;;;;;;AAELT,iCAA6B,CAACx5E,IAA9B,GAAqC,SAASk6E,qCAAT,CAA+Ch6E,CAA/C,EAAkD;AAAE,aAAO,KAAKA,CAAC,IAAIs5E,6BAAV,EAAyC,gEAAyB,mEAAzB,CAAzC,EAAuF,gEAAyB,wEAAzB,CAAvF,CAAP;AAA2I,KAApO;;AACAA,iCAA6B,CAACj2D,IAA9B,GAAqC,gEAAyB;AAAEnjB,UAAI,EAAEo5E,6BAAR;AAAuC5gE,eAAS,EAAE,CAAC,CAAC,uCAAD,CAAD,CAAlD;AAA+F4K,eAAS,EAAE,SAAS22D,mCAAT,CAA6C14D,EAA7C,EAAiDC,GAAjD,EAAsD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACpO,oEAAmBqmD,IAAnB,EAAyB,IAAzB;AACH;;AAAC,YAAIrmD,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACo4D,QAAJ,GAAep2D,EAApE;AACH;AAAE,OALuD;AAKrDO,WAAK,EAAE,CAL8C;AAK3CC,UAAI,EAAE,CALqC;AAKlCC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,kBAAJ,CAAD,EAA0B,CAAC,CAAD,EAAI,cAAJ,CAA1B,EAA+C,CAAC,cAAD,EAAiB,KAAjB,EAAwB,UAAxB,EAAoC,EAApC,EAAwC,MAAxC,EAAgD,kBAAhD,EAAoE,CAApE,EAAuE,aAAvE,EAAsF,SAAtF,EAAiG,eAAjG,EAAkH,SAAlH,CAA/C,EAA6K,CAAC,CAAD,EAAI,aAAJ,CAA7K,EAAiM,CAAC,UAAD,EAAa,GAAb,EAAkB,eAAlB,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,QAA1C,EAAoD,OAApD,EAA6D,CAA7D,EAAgE,OAAhE,EAAyE,SAAzE,CAAjM,EAAsR,CAAC,UAAD,EAAa,GAAb,EAAkB,eAAlB,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,OAA1C,CAAtR,EAA0U,CAAC,UAAD,EAAa,EAAb,CAA1U,CAL0B;AAKmUC,cAAQ,EAAE,SAASg2D,sCAAT,CAAgD34D,EAAhD,EAAoDC,GAApD,EAAyD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1c,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,uEAAsB,CAAtB,EAAyB,gBAAzB;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,mEAAkB,eAAlB,EAAmC,SAAS44D,qEAAT,CAA+Ej1D,MAA/E,EAAuF;AAAE,mBAAO1D,GAAG,CAAC44D,aAAJ,CAAkBl1D,MAAlB,CAAP;AAAmC,WAA/J,EAAiK,SAAjK,EAA4K,SAASm1D,+DAAT,CAAyEn1D,MAAzE,EAAiF;AAAE,mBAAO1D,GAAG,CAAC84D,aAAJ,CAAkBp1D,MAAlB,CAAP;AAAmC,WAAlS;;AACA;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,cAAzB;;AACA,mEAAkB,CAAlB,EAAqB2iD,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,GAAvE,EAA4E,CAA5E;;AACA;;AACA;;AACA;AACH;;AAAC,YAAItmD,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCC,GAAG,CAACkpB,IAAJ,CAAS84B,MAAT,CAAgB2N,WAAjD,EAA8D,SAA9D,EAAyE3vD,GAAG,CAACg4D,gBAA7E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6Bh4D,GAAG,CAACi4D,cAAjC;AACH;AAAE,OAzBuD;AAyBrDp1D,gBAAU,EAAE,CAAC,8EAAD,EAAyC,mEAAzC,EAAsE,qDAAtE,EAAqF,0EAArF,EAA0G,iEAA1G,EAA2H,mEAA3H,EAAwJ,8DAAxJ,EAAgL,sDAAhL,EAAgM,kEAAhM,EAAmN,uDAAnN,EAAmO,mEAAnO,CAzByC;AAyB+M5S,YAAM,EAAE,CAAC,wcAAD;AAzBvN,KAAzB,CAArC;AA0BA;;AACA6nE,iCAA6B,CAACr5E,cAA9B,GAA+C;AAAA,aAAM,CACjD;AAAEC,YAAI,EAAEq6E,QAAR;AAAkBn6E,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,mEAAD;AAAtB,SAAD;AAA9B,OADiD,EAEjD;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wEAAD;AAAtB,SAAD;AAA/B,OAFiD,CAAN;AAAA,KAA/C;;AAIAi5E,iCAA6B,CAACh+D,cAA9B,GAA+C;AAC3Cs+D,cAAQ,EAAE,CAAC;AAAE15E,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,UAAD;AAA5B,OAAD;AADiC,KAA/C;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBi5E,6BAAzB,EAAwD,CAAC;AAC9Ep5E,YAAI,EAAE,uDADwE;AAE9EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,uCADX;AAEC6V,kBAAQ,yoBAFT;AAkBCzS,gBAAM,EAAE;AAlBT,SAAD;AAFwE,OAAD,CAAxD,EAsBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEq6E,QAAR;AAAkBn6E,oBAAU,EAAE,CAAC;AAC7CF,gBAAI,EAAE,oDADuC;AAE7CG,gBAAI,EAAE,CAAC,mEAAD;AAFuC,WAAD;AAA9B,SAAD,EAGX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAAC,wEAAD;AAF4B,WAAD;AAA/B,SAHW,CAAP;AAMF,OA5BS,EA4BP;AAAEu5E,gBAAQ,EAAE,CAAC;AACvB15E,cAAI,EAAE,0DADiB;AAEvBG,cAAI,EAAE,CAAC,UAAD;AAFiB,SAAD;AAAZ,OA5BO;AA+Bb,KA/BF;AAiCd;;;;;AAIA;;;;;QAGMm6E,mB;;;;;;;;AACF;;;;;qCAKarsC,O,EAAS26B,I,EAAM;AACxB;AACA,cAAM2R,WAAW,GAAG3R,IAAI,IAAIA,IAAI,CAACuC,SAAjC;AACA,iBAAO,CAAC,EAAEl9B,OAAO,IAAIA,OAAO,CAACtX,OAAnB,KAA+BsX,OAAO,CAACusC,KAAR,IAAiBvsC,OAAO,CAACwsC,OAAzB,IAAoCF,WAAnE,CAAF,CAAR;AACH;;;;SAEL;;;QACMG,sB;AACF;;;;AAIA,sCAAYrB,aAAZ,EAA2B7uC,IAA3B,EAAiC;AAAA;;AAC7B,aAAK6uC,aAAL,GAAqBA,aAArB;AACA,aAAK7uC,IAAL,GAAYA,IAAZ;AACA,aAAKugC,4BAAL,GAAoC,KAAKvgC,IAAL,CAAU84B,MAAV,CAAiB4N,qBAArD;AACA,aAAKyJ,UAAL,GAAkB,EAAlB;AACA,aAAKvP,yBAAL,GAAiC,IAAjC;AACA,aAAKvB,OAAL,GAAe,IAAIyQ,mBAAJ,EAAf;AACA,aAAKM,QAAL,GAAgB,KAAKpwC,IAAL,CAAUu+B,WAAV,CAAsBC,KAAtB,CAA4B4R,QAA5C;AACA,aAAK1S,eAAL,GAAuBwS,sBAAsB,CAACG,oBAAvB,CAA4C,KAAKD,QAAjD,CAAvB;AACA,YAAI,CAAC,KAAK1S,eAAV,EACI,2BAAoB,KAAK0S,QAAzB,0BAAiD,KAAKpwC,IAAL,CAAUu+B,WAAV,CAAsBC,KAAtB,CAA4BhI,MAA7E;AACJ,aAAK8Z,gBAAL,GAAwB,KAAKtwC,IAAL,CAAUu+B,WAAV,CAAsBgS,QAAtB,IAAkC,KAAK7S,eAAL,CAAqB,CAArB,CAA1D;AACA,aAAKyB,WAAL,GAAmB,KAAKiR,QAAL,IAAiB,MAAjB,GAA0B,KAAKI,MAAL,CAAY,KAAKxwC,IAAL,CAAUu+B,WAAV,CAAsB5mE,KAAlC,CAA1B,GAAqE,KAAKqoC,IAAL,CAAUu+B,WAAV,CAAsB5mE,KAA9G;;AACA,YAAI,KAAKy4E,QAAL,IAAiB,MAArB,EAA6B;AACzB,cAAI,KAAKpwC,IAAL,CAAUu+B,WAAV,CAAsB5mE,KAA1B,EACI,KAAKw4E,UAAL,GAAkB,KAAKA,UAAL,CAAgB16C,MAAhB,CAAuB,KAAKuK,IAAL,CAAUu+B,WAAV,CAAsB5mE,KAA7C,EAAoD2iD,MAApD;AAA4D;;;;AAI9E,oBAAAmQ,CAAC;AAAA,mBAAIA,CAAC,IAAI,IAAT;AAAA,WAJiB,CAAlB;AAKJ,eAAKmW,yBAAL,GAAiC,KAAKuP,UAAL,CAAgBh4E,MAAhB,IAA0B,CAA3D;AACH;;AACD,YAAI,KAAKi4E,QAAL,IAAiB,MAAjB,IAA2B,KAAKjR,WAAL,IAAoB,IAAnD,EAAyD;AACrD,eAAKA,WAAL,GAAmB,IAAnB;AACH;AACJ;AACD;;;;;;;mCAGW,CACV;AACD;;;;;;wCAGgB;AACZ;AACA,cAAIxnE,KAAK,GAAG,KAAKwnE,WAAjB;;AACA,cAAI,KAAKmR,gBAAL,KAA0B,OAA9B,EAAuC;AACnC34E,iBAAK,GAAG,IAAR;AACH,WAFD,MAGK;AACD,gBAAI,KAAKy4E,QAAL,IAAiB,MAArB,EACIz4E,KAAK,GAAG,KAAK84E,UAAL,CAAgB94E,KAAhB,CAAR;AACJ,gBAAI,KAAKy4E,QAAL,IAAiB,MAArB,EACIz4E,KAAK,GAAG,KAAKw4E,UAAb;AACP;;AACD,eAAKtB,aAAL,CAAmB;AAAErQ,iBAAK,EAAE,KAAKx+B,IAAL,CAAUu+B,WAAV,CAAsBC,KAA/B;AAAsC+R,oBAAQ,EAAE,KAAKD,gBAArD;AAAuE34E,iBAAK,EAAEA;AAA9E,WAAnB;AACH;AACD;;;;;;;;yCAKiBA,K,EAAO+lB,O,EAAS;AAC7B,cAAIA,OAAJ,EAAa;AACT,iBAAKyyD,UAAL,CAAgB13E,IAAhB,CAAqBd,KAArB;AACH,WAFD,MAGK;AACD;AACA,gBAAIe,KAAK,GAAG,KAAKy3E,UAAL,CAAgBx3E,OAAhB,CAAwBhB,KAAxB,CAAZ;AACA,gBAAIe,KAAK,IAAI,CAAC,CAAd,EACI,KAAKy3E,UAAL,CAAgBv3E,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACP;;AACD,eAAKkoE,yBAAL,GAAiC,KAAKuP,UAAL,CAAgBh4E,MAAhB,IAA0B,CAA3D;AACH;AACD;;;;;;;uCAIeR,K,EAAO;AAClB,iBAAO,KAAKw4E,UAAL,CAAgBx3E,OAAhB,CAAwBhB,KAAxB,KAAkC,CAAC,CAA1C;AACH;AACD;;;;;;;wCAIgB6mE,K,EAAO;AACnB,cAAIA,KAAK,CAACkS,QAAN,CAAe,oBAAf,CAAJ,EACI,OAAO,KAAK1wC,IAAL,CAAU84B,MAAV,CAAiB6N,iBAAxB,CADJ,KAEK,IAAInI,KAAK,CAACkS,QAAN,CAAe,UAAf,CAAJ,EACD,OAAO,KAAK1wC,IAAL,CAAU84B,MAAV,CAAiB8N,aAAxB,CADC,KAEA,IAAIpI,KAAK,CAACkS,QAAN,CAAe,SAAf,CAAJ,EACD,OAAO,KAAK1wC,IAAL,CAAU84B,MAAV,CAAiB+N,oBAAxB,CADC,KAGD,OAAO,EAAP;AACP;AACD;;;;;;;+CAIuBrhB,M,EAAQ;AAC3B,iBAAO,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAAC7tD,KAApD;AACH;AACD;;;;;;;qDAI6B6tD,M,EAAQ;AACjC,iBAAO,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACmrB,WAApD;AACH;AACD;;;;;;;;mCAKWC,C,EAAG;AACV,iBAAO,CAACA,CAAC,CAAC78C,OAAF,EAAD,EAAc68C,CAAC,CAACl9C,QAAF,KAAe,CAA7B,EAAgCk9C,CAAC,CAACC,WAAF,EAAhC,EAAiD7pD,IAAjD,CAAsD,GAAtD,CAAP;AACH;AACD;;;;;;;;+BAKO8pD,C,EAAG;AACN,cAAI,CAACA,CAAL,EACI,OAAO,IAAIC,IAAJ,EAAP;AACJ;;AACA,cAAInnE,KAAK,GAAGknE,CAAC,CAAClnE,KAAF,CAAQ,GAAR,CAAZ;AACA,iBAAO,IAAImnE,IAAJ,CAASnrC,MAAM,CAACh8B,KAAK,CAAC,CAAD,CAAN,CAAf,EAA2Bg8B,MAAM,CAACh8B,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmB,CAA9C,EAAiDg8B,MAAM,CAACh8B,KAAK,CAAC,CAAD,CAAN,CAAvD,CAAP;AACH;;;;;;AAELsmE,0BAAsB,CAAC96E,IAAvB,GAA8B,SAAS47E,8BAAT,CAAwC17E,CAAxC,EAA2C;AAAE,aAAO,KAAKA,CAAC,IAAI46E,sBAAV,EAAkC,gEAAyB,mEAAzB,CAAlC,EAAgF,gEAAyB,wEAAzB,CAAhF,CAAP;AAAoI,KAA/M;;AACAA,0BAAsB,CAACv3D,IAAvB,GAA8B,gEAAyB;AAAEnjB,UAAI,EAAE06E,sBAAR;AAAgCliE,eAAS,EAAE,CAAC,CAAC,+BAAD,CAAD,CAA3C;AAAgFqL,WAAK,EAAE,EAAvF;AAA2FC,UAAI,EAAE,CAAjG;AAAoGC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,UAAJ,CAAD,EAAkB,CAAC,GAAD,EAAM,QAAN,CAAlB,EAAmC,CAAC,CAAD,EAAI,QAAJ,CAAnC,EAAkD,CAAC,CAAD,EAAI,aAAJ,CAAlD,EAAsE,CAAC,kBAAD,EAAqB,EAArB,EAAyB,iBAAzB,EAA4C,EAA5C,EAAgD,CAAhD,EAAmD,aAAnD,CAAtE,EAAyI,CAAC,YAAD,EAAe,OAAf,CAAzI,EAAkK,CAAC,CAAD,EAAI,SAAJ,CAAlK,EAAkL,CAAC,CAAD,EAAI,iBAAJ,CAAlL,EAA0M,CAAC,CAAD,EAAI,gBAAJ,CAA1M,EAAiO,CAAC,CAAD,EAAI,OAAJ,EAAa,aAAb,CAAjO,EAA8P,CAAC,CAAD,EAAI,OAAJ,EAAa,CAAb,EAAgB,OAAhB,EAAyB,SAAzB,CAA9P,EAAmS,CAAC,CAAD,EAAI,MAAJ,EAAY,gBAAZ,CAAnS,EAAkU,CAAC,CAAD,EAAI,MAAJ,CAAlU,EAA+U,CAAC,CAAD,EAAI,QAAJ,CAA/U,EAA8V,CAAC,MAAD,EAAS,QAAT,EAAmB,YAAnB,EAAiC,EAAjC,EAAqC,CAArC,EAAwC,MAAxC,CAA9V,EAA+Y,CAAC,WAAD,EAAc,EAAd,CAA/Y,EAAka,CAAC,cAAD,EAAiB,EAAjB,CAAla,EAAwb,CAAC,iBAAD,EAAoB,EAApB,CAAxb,EAAid,CAAC,cAAD,EAAiB,EAAjB,CAAjd,EAAue,CAAC,WAAD,EAAc,EAAd,CAAve,EAA0f,CAAC,CAAD,EAAI,OAAJ,CAA1f,EAAwgB,CAAC,CAAD,EAAI,kBAAJ,CAAxgB,EAAiiB,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAAjiB,EAAqlB,CAAC,oBAAD,EAAuB,MAAvB,EAA+B,YAA/B,EAA6C,OAA7C,CAArlB,EAA4oB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,cAAxB,EAAwC,KAAxC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,MAA/D,EAAuE,aAAvE,EAAsF,UAAtF,EAAkG,EAAlG,EAAsG,CAAtG,EAAyG,KAAzG,EAAgH,CAAhH,EAAmH,mBAAnH,EAAwI,SAAxI,EAAmJ,eAAnJ,EAAoK,aAApK,EAAmL,eAAnL,CAA5oB,EAAi1B,CAAC,kBAAD,EAAqB,SAArB,CAAj1B,EAAk3B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,KAArB,CAAl3B,EAA+4B,CAAC,YAAD,EAAe,gCAAf,CAA/4B,EAAi8B,CAAC,QAAD,EAAW,EAAX,CAAj8B,EAAi9B,CAAC,iBAAD,EAAoB,EAApB,EAAwB,cAAxB,EAAwC,KAAxC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,MAA/D,EAAuE,aAAvE,EAAsF,UAAtF,EAAkG,EAAlG,EAAsG,SAAtG,EAAiH,qBAAjH,EAAwI,CAAxI,EAA2I,aAA3I,EAA0J,mBAA1J,EAA+K,SAA/K,EAA0L,eAA1L,CAAj9B,EAA6pC,CAAC,CAAD,EAAI,MAAJ,CAA7pC,EAA0qC,CAAC,OAAD,EAAU,SAAV,EAAqB,CAArB,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,CAA7C,EAAgD,OAAhD,EAAyD,SAAzD,CAA1qC,EAA+uC,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,EAAkB,SAAlB,EAA6B,QAA7B,CAA/uC,EAAuxC,CAAC,iBAAD,EAAoB,EAApB,EAAwB,cAAxB,EAAwC,KAAxC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,CAA/D,EAAkE,OAAlE,EAA2E,KAA3E,EAAkF,QAAlF,EAA4F,KAA5F,EAAmG,CAAnG,EAAsG,OAAtG,CAAvxC,EAAu4C,CAAC,MAAD,EAAS,aAAT,EAAwB,CAAxB,EAA2B,SAA3B,EAAsC,eAAtC,CAAv4C,EAA+7C,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAZ,EAAe,OAAf,CAA/7C,EAAw9C,CAAC,iBAAD,EAAoB,EAApB,CAAx9C,EAAi/C,CAAC,CAAD,EAAI,MAAJ,CAAj/C,EAA8/C,CAAC,kBAAD,EAAqB,EAArB,CAA9/C,EAAwhD,CAAC,iBAAD,EAAoB,EAApB,EAAwB,cAAxB,EAAwC,KAAxC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,MAA/D,EAAuE,aAAvE,EAAsF,UAAtF,EAAkG,EAAlG,EAAsG,CAAtG,EAAyG,aAAzG,EAAwH,mBAAxH,EAA6I,SAA7I,EAAwJ,eAAxJ,CAAxhD,CAA5G;AAA+yDC,cAAQ,EAAE,SAASy3D,+BAAT,CAAyCp6D,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACx6D,cAAMq6D,IAAI,GAAG,gEAAb;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC,EAAoC,CAApC;;AACA,mEAAkB,UAAlB,EAA8B,SAASC,wDAAT,GAAoE;AAAE,wEAAqBD,IAArB;;AAA4B,gBAAM5xD,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AAAmC,mBAAO,CAACA,GAAG,CAAC8xD,KAAJ,IAAat6D,GAAG,CAAC8pD,yBAAjB,IAA8C9pD,GAAG,CAACw5D,gBAAJ,IAAwB,OAAvE,KAAmFx5D,GAAG,CAACu6D,aAAJ,EAA1F;AAAgH,WAAnR;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,+DAAc,CAAd;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,uEAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAArC;;AACA,+DAAc,CAAd,EAAiB,OAAjB;;AACA;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC;;AACA,uEAAsB,EAAtB,EAA0B,gBAA1B;;AACA,uEAAsB,EAAtB,EAA0B,YAA1B,EAAwC,CAAxC;;AACA,mEAAkB,aAAlB,EAAiC,SAASC,kEAAT,CAA4E92D,MAA5E,EAAoF;AAAE,mBAAO1D,GAAG,CAACw5D,gBAAJ,GAAuB91D,MAA9B;AAAuC,WAA9J;;AACA,mEAAkB,EAAlB,EAAsBgjD,6CAAtB,EAAqE,CAArE,EAAwE,CAAxE,EAA2E,YAA3E,EAAyF,EAAzF;;AACA;;AACA;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,mEAAkB,EAAlB,EAAsBI,+CAAtB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,cAA7E,EAA6F,EAA7F;;AACA,mEAAkB,EAAlB,EAAsBE,+CAAtB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,cAA7E,EAA6F,EAA7F;;AACA,mEAAkB,EAAlB,EAAsBE,+CAAtB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,cAA7E,EAA6F,EAA7F;;AACA,mEAAkB,EAAlB,EAAsBK,+CAAtB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,cAA7E,EAA6F,EAA7F;;AACA,mEAAkB,EAAlB,EAAsBM,+CAAtB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,cAA7E,EAA6F,EAA7F;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,uEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,EAApC;;AACA,+DAAc,EAAd;;AACA;;AACA;;AACA,mEAAkB,EAAlB,EAAsBK,8CAAtB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,aAA5E,EAA2F,IAA3F,EAAiG,EAAjG,EAAqG,oEAArG;;AACA,mEAAkB,EAAlB,EAAsBQ,8CAAtB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,aAA5E,EAA2F,IAA3F,EAAiG,EAAjG,EAAqG,oEAArG;;AACA,mEAAkB,EAAlB,EAAsBgB,8CAAtB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,aAA5E,EAA2F,IAA3F,EAAiG,EAAjG,EAAqG,oEAArG;;AACA,mEAAkB,EAAlB,EAAsBK,8CAAtB,EAAsE,EAAtE,EAA0E,CAA1E,EAA6E,aAA7E,EAA4F,IAA5F,EAAkG,EAAlG,EAAsG,oEAAtG;;AACA,mEAAkB,EAAlB,EAAsBU,8CAAtB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,aAA5E,EAA2F,IAA3F,EAAiG,EAAjG,EAAqG,oEAArG;;AACA;;AACA;AACH;;AAAC,YAAI1qD,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,0EAAyBC,GAAG,CAACkpB,IAAJ,CAASu+B,WAAT,CAAqBC,KAArB,CAA2BhI,MAApD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,OAAlB,EAA2B1/C,GAAG,CAACw5D,gBAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6Bx5D,GAAG,CAAC4mD,eAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B5mD,GAAG,CAACs5D,QAAJ,IAAgB,QAAhB,IAA4Bt5D,GAAG,CAACw5D,gBAAJ,KAAyB,OAA/E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bx5D,GAAG,CAACs5D,QAAJ,IAAgB,MAAhB,IAA0Bt5D,GAAG,CAACw5D,gBAAJ,KAAyB,OAA7E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bx5D,GAAG,CAACs5D,QAAJ,IAAgB,MAAhB,IAA0Bt5D,GAAG,CAACw5D,gBAAJ,KAAyB,OAA7E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bx5D,GAAG,CAACs5D,QAAJ,IAAgB,MAAhB,IAA0Bt5D,GAAG,CAACw5D,gBAAJ,KAAyB,OAA7E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bx5D,GAAG,CAACs5D,QAAJ,IAAgB,MAAhB,IAA0Bt5D,GAAG,CAACw5D,gBAAJ,KAAyB,OAA7E;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBx5D,GAAG,CAACkpB,IAAJ,CAAS84B,MAAT,CAAgB37D,KAAzC;AACH;AAAE,OAjEgD;AAiE9Cwc,gBAAU,EAAE,CAAC,8EAAD,EAAyC,mEAAzC,EAAsE,qDAAtE,EAAqF,kEAArF,EAAuG,uEAAvG,EAA8H,+DAA9H,EAA8I,0EAA9I,EAAmK,mEAAnK,EAAqL,uDAArL,EAAqM,oDAArM,EAAkN,iEAAlN,EAAqO,gEAArO,EAA8P,iEAA9P,EAA+Q,mEAA/Q,EAA4S,gFAA5S,EAAwU,gEAAxU,EAAkW,8DAAlW,EAA0X,sDAA1X,EAA0Y,iFAA1Y,EAAua,uEAAva,EAAyb,2EAAzb,EAAgd,sEAAhd,EAAie,+DAAje,EAA0f,uEAA1f,EAA+gB,sEAA/gB,EAAsiB,uEAAtiB,CAjEkC;AAiE6hB5S,YAAM,EAAE,CAAC,67DAAD;AAjEriB,KAAzB,CAA9B;AAkEAmpE,0BAAsB,CAACqB,gBAAvB,GAA0C,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,OAAvC,CAA1C;AACArB,0BAAsB,CAACsB,gBAAvB,GAA0C,CAAC,UAAD,EAAa,cAAb,EAA6B,QAA7B,EAAuC,MAAvC,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,OAA3D,CAA1C;AACAtB,0BAAsB,CAACuB,aAAvB,GAAuC,CAAC,IAAD,EAAO,IAAP,EAAa,OAAb,CAAvC;AACAvB,0BAAsB,CAACwB,aAAvB,GAAuC,CAAC,IAAD,CAAvC;AACAxB,0BAAsB,CAACG,oBAAvB,GAA8C;AAC1C,gBAAUH,sBAAsB,CAACqB,gBADS;AAE1C,cAAQrB,sBAAsB,CAACqB,gBAFW;AAG1C,cAAQrB,sBAAsB,CAACsB,gBAHW;AAI1C,cAAQtB,sBAAsB,CAACuB,aAJW;AAK1C,cAAQvB,sBAAsB,CAACwB;AALW,KAA9C;AAOA;;AACAxB,0BAAsB,CAAC36E,cAAvB,GAAwC;AAAA,aAAM,CAC1C;AAAEC,YAAI,EAAEq6E,QAAR;AAAkBn6E,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,mEAAD;AAAtB,SAAD;AAA9B,OAD0C,EAE1C;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wEAAD;AAAtB,SAAD;AAA/B,OAF0C,CAAN;AAAA,KAAxC;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBu6E,sBAAzB,EAAiD,CAAC;AACvE16E,YAAI,EAAE,uDADiE;AAEvEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,+BADX;AAEC6V,kBAAQ,+7JAFT;AA4FCzS,gBAAM,EAAE;AA5FT,SAAD;AAFiE,OAAD,CAAjD,EAgGrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEq6E,QAAR;AAAkBn6E,oBAAU,EAAE,CAAC;AAC7CF,gBAAI,EAAE,oDADuC;AAE7CG,gBAAI,EAAE,CAAC,mEAAD;AAFuC,WAAD;AAA9B,SAAD,EAGX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAAC,wEAAD;AAF4B,WAAD;AAA/B,SAHW,CAAP;AAMF,OAtGS,EAsGP,IAtGO;AAsGC,KAtGhB;AAwGd;;;;;;QAIMy2E,kB;AACF;;;;AAIA,kCAAYvV,SAAZ,EAAuB8a,kBAAvB,EAA2C;AAAA;;AACvC,aAAK9a,SAAL,GAAiBA,SAAjB;AACA,aAAK8a,kBAAL,GAA0BA,kBAA1B;AACA,aAAK7F,OAAL,GAAe,EAAf;AACA,aAAKkD,MAAL,GAAc,KAAKnY,SAAL,CAAegV,gBAA7B;;AACA,YAAIhV,SAAS,CAACiV,OAAd,EAAuB;AACnB,eAAKA,OAAL,GAAejV,SAAS,CAACiV,OAAzB;AACH;AACJ;AACD;;;;;;;mCAGW,CACV;AACD;;;;;;;qCAIa9zE,K,EAAO;AACd;AAAkBA,eAAK,CAAC45E,aAA1B,CAA2CjtC,IAA3C;AACA,eAAKktC,sBAAL,CAA4B75E,KAAK,CAAC45E,aAAlC;AACH;AACD;;;;;;;;oCAKY55E,K,EAAOsiD,M,EAAQ;AAAA;;AACvB;AACA,cAAMvO,SAAS,GAAG,KAAK+lC,qBAAL,CAA2B95E,KAAK,CAAC45E,aAAjC,EAAgDt3B,MAAhD,CAAlB;AACAvO,mBAAS,CAACjK,WAAV,GAAwBjvC,SAAxB;AAAmC;;;;AAInC,oBAACsgB,MAAD,EAAY;AACR,gBAAI,CAACA,MAAL,EACI;;AACJ,oBAAI,CAAC0jD,SAAL,CAAe8R,aAAf,CAA6Br4D,IAA7B,CAAkC;AAAEyhE,iBAAG,EAAE,QAAI,CAACC,4BAAL,CAAkC13B,MAAlC,CAAP;AAAkD,qBAAK,QAAI,CAAC03B,4BAAL,CAAkC7+D,MAAlC;AAAvD,aAAlC;AACA;;;AACA,gBAAIza,KAAK,GAAG,QAAI,CAACozE,OAAL,CAAanzE,OAAb,CAAqB2hD,MAArB,CAAZ;;AACA,oBAAI,CAACwxB,OAAL,CAAapzE,KAAb,IAAsBya,MAAtB;;AACA,oBAAI,CAAC0jD,SAAL,CAAe+R,aAAf,CAA6Bt4D,IAA7B,CAAkC,QAAI,CAACw7D,OAAL,CAAa3jE,GAAb;AAAkB;;;;AAIpD,sBAAA67B,CAAC;AAAA,qBAAI,QAAI,CAACguC,4BAAL,CAAkChuC,CAAlC,CAAJ;AAAA,aAJiC,CAAlC;;AAKAsW,kBAAM,GAAGnnC,MAAT;AACH,WAjBD;AAkBH;AACD;;;;;;;+CAIuB8+D,gB,EAAkB;AAAA;;AACrC,cAAI,KAAKC,qBAAT,EACI;AACJ,eAAKA,qBAAL,GAA6B,KAAKP,kBAAL,CAAwB7iE,IAAxB,CAA6B8/D,6BAA7B,EAA4DqD,gBAA5D,EAA8E;AACvGE,kCAAsB,EAAE,IAD+E;AAEvGnyC,gBAAI,EAAE;AACFgvC,oBAAM,EAAE,KAAKA,MADX;AAEFlW,oBAAM,EAAE,KAAKjC,SAAL,CAAeiC;AAFrB;AAFiG,WAA9E,CAA7B;AAOA,eAAKoZ,qBAAL,CAA2BpwC,WAA3B,GAAyCjvC,SAAzC;AAAoD;;;;AAIpD,oBAAC2rE,KAAD,EAAW;AACP,oBAAI,CAAC0T,qBAAL,GAA6B,IAA7B;AACA,gBAAI,CAAC1T,KAAL,EACI;AACJ;;AACA,gBAAMzyB,SAAS,GAAG,QAAI,CAAC+lC,qBAAL,CAA2BG,gBAA3B,EAA6C;AAAEzT,mBAAK,EAAEA;AAAT,aAA7C,CAAlB;;AACAzyB,qBAAS,CAACjK,WAAV,GAAwBjvC,SAAxB;AAAmC;;;;AAInC,sBAACynD,MAAD,EAAY;AACR,kBAAI,CAACA,MAAL,EACI;;AACJ,sBAAI,CAACwxB,OAAL,CAAarzE,IAAb,CAAkB6hD,MAAlB;;AACA,sBAAI,CAACuc,SAAL,CAAe4R,WAAf,CAA2Bn4D,IAA3B,CAAgC,QAAI,CAAC0hE,4BAAL,CAAkC13B,MAAlC,CAAhC;;AACA,sBAAI,CAACuc,SAAL,CAAe+R,aAAf,CAA6Bt4D,IAA7B,CAAkC,QAAI,CAACw7D,OAAL,CAAa3jE,GAAb;AAAkB;;;;AAIpD,wBAAA67B,CAAC;AAAA,uBAAI,QAAI,CAACguC,4BAAL,CAAkChuC,CAAlC,CAAJ;AAAA,eAJiC,CAAlC;AAKH,aAdD;AAeH,WAzBD;AA0BH;AACD;;;;;;;;8CAKsBiuC,gB,EAAkB33B,M,EAAQ;AAC5C;AACA,cAAMvO,SAAS,GAAG,KAAK4lC,kBAAL,CAAwB7iE,IAAxB,CAA6BohE,sBAA7B,EAAqD+B,gBAArD,EAAuE;AACrFG,yCAA6B,EAAE,CAAC,wBAAD,CADsD;AAErFD,kCAAsB,EAAE,IAF6D;AAGrFnyC,gBAAI,EAAE;AACFu+B,yBAAW,EAAEjkB,MADX;AAEFwe,oBAAM,EAAE,KAAKjC,SAAL,CAAeiC;AAFrB;AAH+E,WAAvE,CAAlB;AAQA,iBAAO/sB,SAAP;AACH;AACD;;;;;;;qCAIauO,M,EAAQ;AAAA;;AACjB;AACA,cAAM5hD,KAAK,GAAG,KAAKozE,OAAL,CAAanzE,OAAb,CAAqB2hD,MAArB,CAAd;;AACA,cAAI5hD,KAAK,IAAI,CAAb,EAAgB;AACZ,iBAAKozE,OAAL,CAAalzE,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACA,iBAAKm+D,SAAL,CAAe6R,aAAf,CAA6Bp4D,IAA7B,CAAkC,KAAK0hE,4BAAL,CAAkC13B,MAAlC,CAAlC;AACA,iBAAKuc,SAAL,CAAe+R,aAAf,CAA6Bt4D,IAA7B,CAAkC,KAAKw7D,OAAL,CAAa3jE,GAAb;AAAkB;;;;AAIpD,sBAAA67B,CAAC;AAAA,qBAAI,QAAI,CAACguC,4BAAL,CAAkChuC,CAAlC,CAAJ;AAAA,aAJiC,CAAlC;AAKH;AACJ;AACD;;;;;;;oCAIYsW,M,EAAQ;AAChB;AACA,cAAI3iD,KAAK,GAAG2iD,MAAM,CAAC3iD,KAAnB;AACA,cAAI2iD,MAAM,CAACi2B,QAAP,IAAmB,OAAvB,EACI,OAAO,EAAP;;AACJ,cAAIj2B,MAAM,CAACkkB,KAAP,CAAa4R,QAAb,IAAyB,MAA7B,EAAqC;AACjCz4E,iBAAK;AAAK;AAAkB2iD,kBAAM,CAAC3iD,KAA3B,CAAoCwQ,GAApC;AAAyC;;;;AAIjD,sBAAAsiD,CAAC;AAAA,qBAAI,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BA,CAAC,CAACkmB,WAAlC;AAAA,aAJO,CAAR;AAKH;;AACD,cAAI9oD,KAAK,CAACC,OAAN,CAAcnwB,KAAd,CAAJ,EAA0B;AACtBA,iBAAK,GAAGA,KAAK,CAACqvB,IAAN,CAAW,IAAX,CAAR;AACH;;AACD,iBAAOrvB,KAAP;AACH;AACD;;;;;;;8CAIsB2iD,M,EAAQ;AAC1B,cAAIA,MAAM,CAACkkB,KAAP,CAAa4R,QAAb,IAAyB,MAA7B,EAAqC;AACjC,mBAAO91B,MAAM,CAAC3iD,KAAP,IAAgB,KAAhB,aAA2B,KAAKk/D,SAAL,CAAeiC,MAAf,CAAsBgO,GAAjD,cAAwDxsB,MAAM,CAACkkB,KAAP,CAAahI,MAArE,IAAgFlc,MAAM,CAACkkB,KAAP,CAAahI,MAApG;AACH,WAFD,MAGK;AACD,6BAAUlc,MAAM,CAACkkB,KAAP,CAAahI,MAAvB,cAAiC,KAAKK,SAAL,CAAeiC,MAAf,CAAsB4E,eAAtB,CAAsCpjB,MAAM,CAACi2B,QAA7C,CAAjC,cAA2F,KAAK8B,WAAL,CAAiB/3B,MAAjB,CAA3F;AACH;AACJ;AACD;;;;;;;;qDAK6BA,M,EAAQ;AACjC;;AACA;AACA,cAAIg4B,YAAY;AAAI;AAAkBC,cAAI,CAACluC,KAAL,CAAWkuC,IAAI,CAACC,SAAL,CAAel4B,MAAf,CAAX,CAAtC;AACA,cAAIg4B,YAAY,CAAC/B,QAAb,IAAyB,OAA7B,EACI,OAAO+B,YAAP;;AACJ,cAAIA,YAAY,CAAC9T,KAAb,CAAmB4R,QAAnB,IAA+B,MAAnC,EAA2C;AACvC;AACA,gBAAID,UAAU,GAAGmC,YAAY,CAAC36E,KAA9B;;AACA,iBAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGi4E,UAAU,CAACh4E,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC;AACA,kBAAMP,KAAK,GAAGw4E,UAAU,CAACj4E,CAAD,CAAxB;AACAi4E,wBAAU,CAACj4E,CAAD,CAAV,GAAgB,OAAOP,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACA,KAA1D;AACH;AACJ;;AACD,iBAAO26E,YAAP;AACH;;;;;;AAELlG,sBAAkB,CAACh3E,IAAnB,GAA0B,SAASq9E,0BAAT,CAAoCn9E,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAI82E,kBAAV,EAA8B,gEAAyB;AAAa;;;AAE3H;AAAA,eAAM1H,kBAAN;AAAA,OAF8G,CAAzB,CAA9B,EAE1B,gEAAyB,mEAAzB,CAF0B,CAAP;AAEqC,KAFxG;;AAGA0H,sBAAkB,CAACzzD,IAAnB,GAA0B,gEAAyB;AAAEnjB,UAAI,EAAE42E,kBAAR;AAA4Bp+D,eAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAAvC;AAAyDqL,WAAK,EAAE,CAAhE;AAAmEC,UAAI,EAAE,CAAzE;AAA4EC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,YAAJ,CAAD,EAAoB,CAAC,CAAD,EAAI,MAAJ,EAAY,MAAZ,CAApB,EAAyC,CAAC,UAAD,EAAa,EAAb,CAAzC,EAA2D,CAAC,CAAD,EAAI,IAAJ,EAAU,WAAV,EAAuB,OAAvB,EAAgC,aAAhC,EAA+C,MAA/C,EAAuD,CAAvD,EAA0D,OAA1D,CAA3D,EAA+H,CAAC,CAAD,EAAI,WAAJ,EAAiB,OAAjB,EAA0B,SAA1B,EAAqC,CAArC,EAAwC,OAAxC,EAAiD,SAAjD,CAA/H,EAA4L,CAAC,cAAD,EAAiB,KAAjB,EAAwB,CAAxB,EAA2B,cAA3B,EAA2C,CAA3C,EAA8C,aAA9C,EAA6D,iBAA7D,EAAgF,OAAhF,CAA5L,EAAsR,CAAC,aAAD,EAAgB,EAAhB,CAAtR,EAA2S,CAAC,CAAD,EAAI,WAAJ,EAAiB,OAAjB,EAA0B,SAA1B,CAA3S,EAAiV,CAAC,eAAD,EAAkB,EAAlB,CAAjV,CAApF;AAA6bC,cAAQ,EAAE,SAASk5D,2BAAT,CAAqC77D,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9iB,cAAM2kD,GAAG,GAAG,gEAAZ;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,eAAzB,EAA0C,IAA1C,EAAgD,CAAhD;;AACA,uEAAsB,CAAtB,EAAyB,GAAzB,EAA8B,CAA9B;;AACA,mEAAkB,OAAlB,EAA2B,SAASmX,8CAAT,GAA0D;AAAE,wEAAqBnX,GAArB;;AAA2B,gBAAMj8C,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AAAmC,mBAAOA,GAAG,CAAC8vD,KAAJ,EAAP;AAAqB,WAA1K;;AACA;;AACA,mEAAkB,CAAlB,EAAqB1N,sCAArB,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,UAAnE,EAA+E,CAA/E;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,mEAAkB,OAAlB,EAA2B,SAASiR,kDAAT,CAA4Dp4D,MAA5D,EAAoE;AAAE,mBAAO1D,GAAG,CAAC+7D,YAAJ,CAAiBr4D,MAAjB,CAAP;AAAkC,WAAnI;;AACA;;AACA;;AACA;;AACA;AACH;;AAAC,YAAI3D,EAAE,GAAG,CAAT,EAAY;AACV,cAAMyI,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BxI,GAAG,CAACg1D,OAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,aAAlB,EAAiCh1D,GAAG,CAAC+/C,SAAJ,CAAciC,MAAd,CAAqB0N,SAAtD,EAAiE,iBAAjE,EAAoFlnD,GAApF;AACH;AAAE,OArB4C;AAqB1C3F,gBAAU,EAAE,CAAC,oEAAD,EAAsB,uDAAtB,EAAsC,qEAAtC,EAA4D,gEAA5D,EAA6E,+DAA7E,EAA6F,sEAA7F,CArB8B;AAqBuF5S,YAAM,EAAE,CAAC,sKAAD;AArB/F,KAAzB,CAA1B;AAsBA;;AACAqlE,sBAAkB,CAAC72E,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAEkvE,kBAAR;AAA4BhvE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG5D;AAAA,mBAAM+uE,kBAAN;AAAA,WAHgD,CAAD;AAAtB,SAAD;AAAxC,OADsC,EAKtC;AAAElvE,YAAI,EAAE;AAAR,OALsC,CAAN;AAAA,KAApC;AAOA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB42E,kBAAzB,EAA6C,CAAC;AACnE52E,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,YADX;AAEC6V,kBAAQ,8qBAFT;AAeCzS,gBAAM,EAAE;AAfT,SAAD;AAF6D,OAAD,CAA7C,EAmBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEkvE,kBAAR;AAA4BhvE,oBAAU,EAAE,CAAC;AACvDF,gBAAI,EAAE,oDADiD;AAEvDG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM+uE,kBAAN;AAAA,aAFhB,CAAD;AAFiD,WAAD;AAAxC,SAAD,EAKX;AAAElvE,cAAI,EAAE;AAAR,SALW,CAAP;AAKoC,OAxB7B,EAwB+B,IAxB/B;AAwBuC,KAxBtD;AA0Bd;;;;AAIA;AACA;AACA;AACA;;;QACMs9E,e;;;;;;;;AACF;;;kCAGiB;AACb,iBAAO;AACHC,oBAAQ,EAAED,eADP;AAEH3hE,qBAAS,EAAE;AAFR,WAAP;AAIH;;;;;;AAEL2hE,mBAAe,CAAC9hE,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEs9E;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAAC7hE,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAASm9E,uBAAT,CAAiC19E,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIw9E,eAAV,GAAP;AAAsC,OAAvF;AAAyF1hE,aAAO,EAAE,CAAC,CACtI,4DADsI,EAEtI,0DAFsI,EAGtI;AACI2hE,gBAAQ,EAAE,qEADd;AAEI5hE,iBAAS,EAAE,CAAC,mEAAD;AAFf,OAHsI,EAOtI,gFAPsI,EAQtI,qEARsI,EAStI,wEATsI,EAUtI,uEAVsI,EAWtI,uEAXsI,EAYtI,wEAZsI,EAatI,qEAbsI,EActI,yEAdsI,EAetI,6EAfsI,EAgBtI,uEAhBsI,EAiBtI,iFAjBsI,EAkBtI,2EAlBsI,CAAD;AAAlG,KAAxB,CAAvB;;AAoBA,KAAC,YAAY;AAAE,OAAC,OAAOE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0ByhE,eAA1B,EAA2C;AAAExhE,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACozD,kBAAD,EAC1IlB,wBAD0I,EAE1IQ,qBAF0I,EAG1IqI,4BAH0I,EAI1IF,wBAJ0I,EAK1IlJ,cAL0I,EAM1Id,aAN0I,EAO1IU,OAP0I,EAQ1IuJ,kBAR0I,EAS1IwC,6BAT0I,EAU1IsB,sBAV0I,CAAP;AAUzG,SAV2E;AAUzE9+D,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAC1D,0DAD0D,EAE1D,qEAF0D,EAG1D,gFAH0D,EAI1D,qEAJ0D,EAK1D,wEAL0D,EAM1D,uEAN0D,EAO1D,uEAP0D,EAQ1D,wEAR0D,EAS1D,qEAT0D,EAU1D,yEAV0D,EAW1D,6EAX0D,EAY1D,uEAZ0D,EAa1D,iFAb0D,EAc1D,2EAd0D,CAAP;AAc5B,SAxB8E;AAwB5EG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACmzD,kBAAD,EACvDlB,wBADuD,CAAP;AACpB;AAzByE,OAA3C,CAAnD;AAyB2B,KAzB1C;AA0BA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBsP,eAAzB,EAA0C,CAAC;AAChEt9E,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CACVozD,kBADU,EACUlB,wBADV,EAEVQ,qBAFU,EAEaqI,4BAFb,EAE2CF,wBAF3C,EAGVlJ,cAHU,EAGMd,aAHN,EAGqBU,OAHrB,EAG8BuJ,kBAH9B,EAGkDwC,6BAHlD,EAIVsB,sBAJU,CADf;AAOCrpC,yBAAe,EAAE,CACb+nC,6BADa,EAEbsB,sBAFa,CAPlB;AAWC9+D,iBAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL;AACI2hE,oBAAQ,EAAE,qEADd;AAEI5hE,qBAAS,EAAE,CAAC,mEAAD;AAFf,WAHK,EAOL,gFAPK,EAQL,qEARK,EASL,wEATK,EAUL,uEAVK,EAWL,uEAXK,EAYL,wEAZK,EAaL,qEAbK,EAcL,yEAdK,EAeL,6EAfK,EAgBL,uEAhBK,EAiBL,iFAjBK,EAkBL,2EAlBK,CAXV;AA+BCI,iBAAO,EAAE,CAACmzD,kBAAD,EAAqBlB,wBAArB;AA/BV,SAAD;AAF0D,OAAD,CAA1C,EAmCrB,IAnCqB,EAmCf,IAnCe;AAmCP,KAnCR;AAqCd;;;;;AAKA;;;;;AAIA;;;AAMA;;;;;;;;;;;;;;;;;;ACh8GA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;AAIA;;;AAOA,QAAMpsD,GAAG,GAAG,CAAC,cAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,iBAAD,CAAZ;;AACA,aAAS47D,kCAAT,CAA4Cp8D,EAA5C,EAAgDC,GAAhD,EAAqD,CAAG;;AACxD,QAAMkE,GAAG,GAAG,SAANA,GAAM,CAAU+6C,EAAV,EAAc7O,EAAd,EAAkBC,EAAlB,EAAsB;AAAE,aAAO;AAAE,mBAAW4O,EAAb;AAAiB,wBAAgB7O,EAAjC;AAAqC,eAAOC;AAA5C,OAAP;AAA0D,KAA9F;;AACA,QAAM+rB,kBAAkB,GAAG,IAAI,4DAAJ,CAAmB,oBAAnB,CAA3B;;QACMC,W;AACF;;;;;AAKA,2BAAYtmC,wBAAZ,EAAsCd,SAAtC,EAAiD/L,IAAjD,EAAuD;AAAA;;AACnD,aAAK6M,wBAAL,GAAgCA,wBAAhC;AACA,aAAKd,SAAL,GAAiBA,SAAjB;AACA,aAAKuqB,OAAL,GAAe,KAAf;AACA,aAAK8c,QAAL,GAAgB,KAAhB;AACA,aAAKC,gBAAL,GAAwB,KAAxB;AACA,aAAKC,qBAAL,GAA6B,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA7B,CANmD,CAOnD;;AACA,aAAKC,gBAAL,GAAwB,IAAxB;AACA,aAAKC,cAAL,GAAsB,IAAtB;AACA,aAAKC,YAAL,GAAoB,IAApB;AACA,aAAK1+E,MAAL,GAAc+qC,IAAI,CAAC/qC,MAAnB;AACA,aAAK+qC,IAAL,GAAYA,IAAI,CAACA,IAAjB;AACA,aAAKxiC,SAAL,GAAiBwiC,IAAI,CAAC/qC,MAAL,CAAYuI,SAAZ;AAA0B;AAAkB+yD,wBAAgB,CAAC,KAAKt7D,MAAL,CAAY2+E,iBAAb,CAAhB,CAAgDp2E,SAA7G;AACH;AACD;;;;;;;;iCAISxF,K,EAAO;AACZ,eAAK67E,oCAAL;AACA,eAAKC,uCAAL;AACH;AACD;;;;;;;oCAIY97E,K,EAAO;AACf,eAAK+7E,gBAAL,CAAsB/7E,KAAtB;AACA,eAAKy7E,gBAAL,GAAwB,IAAxB;AACH;AACD;;;;;;;kCAIUz7E,K,EAAO;AACb,cAAI,KAAKy7E,gBAAL,IAAyB,KAAKE,YAAlC,EAAgD;AAC5C,iBAAKF,gBAAL,GAAwB,KAAxB;AACA,iBAAKE,YAAL,GAAoB,KAApB;AACA;AACH;;AACD,eAAKI,gBAAL,CAAsB/7E,KAAtB;AACA,eAAK07E,cAAL,GAAsB,IAAtB;AACH;AACD;;;;;;;gCAIQ17E,K,EAAO;AACX,cAAI,KAAKy7E,gBAAL,IAAyB,KAAKC,cAAlC,EAAkD;AAC9C,iBAAKD,gBAAL,GAAwB,KAAxB;AACA,iBAAKC,cAAL,GAAsB,KAAtB;AACA;AACH;;AACD,eAAKK,gBAAL,CAAsB/7E,KAAtB;AACA,eAAK27E,YAAL,GAAoB,IAApB;AACH;AACD;;;;;;;yCAIiB37E,K,EAAO;AAAA;;AACpB,cAAI,CAAC,KAAKo7E,QAAV,EACI,OAFgB,CAGpB;AACA;AACA;;AACA,cAAI,KAAKY,kBAAL,IAA2Bh8E,KAAK,CAACsb,MAArC,EACI;AACJ,eAAK0gE,kBAAL,GAA0Bh8E,KAAK,CAACsb,MAAhC;AACA5U,oBAAU;AAAE;;;AAGZ,sBAAM;AACF,oBAAI,CAACs1E,kBAAL,GAA0B,IAA1B;AACH,WALS,EAKN,GALM,CAAV;AAMA;;AACA,cAAIt6E,SAAS,GAAG,KAAKu6E,kBAAL,CAAwB3rE,aAAxC;;AACA,cAAI5O,SAAS,KAAK1B,KAAK,CAACsb,MAApB,IAA8B,KAAK4gE,OAAL,CAAal8E,KAAK,CAACsb,MAAnB,EAA2B5Z,SAA3B,CAAlC,EAAyE;AACrE;AACH;;AACD,cAAI,KAAKzE,MAAL,CAAYm9E,6BAAhB,EAA+C;AAC3C,iBAAK,IAAIl6E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjD,MAAL,CAAYm9E,6BAAZ,CAA0Cj6E,MAA9D,EAAsED,CAAC,EAAvE,EAA2E;AACvE;AACA,kBAAMyL,QAAQ,GAAG,KAAK1O,MAAL,CAAYm9E,6BAAZ,CAA0Cl6E,CAA1C,CAAjB;AACA;;AACA,kBAAMkO,QAAQ,GAAG1W,QAAQ,CAACwK,gBAAT,CAA0ByJ,QAA1B,CAAjB;;AACA,mBAAK,IAAIzL,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGkO,QAAQ,CAACjO,MAA7B,EAAqCD,GAAC,EAAtC,EAA0C;AACtC;AACA,oBAAM4mD,IAAI,GAAG14C,QAAQ,CAAClO,GAAD,CAArB;;AACA,oBAAI4mD,IAAI,KAAK9mD,KAAK,CAACsb,MAAf,IAAyB,KAAK4gE,OAAL,CAAal8E,KAAK,CAACsb,MAAnB,EAA2BwrC,IAA3B,CAA7B,EAA+D;AAC3D;AACH;AACJ;AACJ;AACJ;;AACD,eAAKq1B,WAAL;AACH;AACD;;;;;;mCAGW;AAAA;;AACP,eAAKC,wCAAL;AACA,eAAKC,aAAL;AACA,eAAKtoC,SAAL,CAAeuoC,WAAf,GAA6BzhF,SAA7B;AAAwC;;;;AAIxC,oBAAAgR,CAAC,EAAI;AACD,oBAAI,CAACyyD,OAAL,GAAe,KAAf;AACA,oBAAI,CAAC8c,QAAL,GAAgB,KAAhB;AACH,WAPD;AAQA,eAAKrnC,SAAL,CAAewoC,SAAf,GAA2B1hF,SAA3B;AAAsC;;;;AAItC,oBAAAgR,CAAC,EAAI;AACD,oBAAI,CAACuvE,QAAL,GAAgB,IAAhB;AACH,WAND;AAOA,eAAKS,oCAAL;AACA,eAAKC,uCAAL;AACA,eAAKxd,OAAL,GAAe,IAAf;AACH;AACD;;;;;;sCAGc;AACV,eAAK8d,wCAAL,CAA8C,KAA9C;AACH;AACD;;;;;;wCAGgB;AACZ;AACA,cAAII,gBAAgB,GAAG,KAAK3nC,wBAAL,CAA8B4nC,uBAA9B;AAAuD;AAAkB,eAAKx/E,MAAL,CAAYy/E,SAArF,CAAvB;AACA,eAAKC,yBAAL,CAA+BrsD,KAA/B;AACA;;AACA,cAAMqkB,QAAQ,GAAG,iEAAmBioC,gBAAnB,CAAoC,CACjD;AACI17E,mBAAO,EAAE,wEADb;AAEIuzB,oBAAQ,EAAE,KAAKuT,IAAL,IAAa;AAF3B,WADiD,EAKjD;AACI9mC,mBAAO,EAAEg6E,kBADb;AAEIzmD,oBAAQ,EAAE,KAAK0nD,WAAL,CAAiBX,IAAjB,CAAsB,IAAtB;AAFd,WALiD,CAApC,CAAjB;AAUA;;;AACA,cAAIqB,YAAY,GAAG,KAAKF,yBAAL,CAA+BG,eAA/B,CAA+CN,gBAA/C,EAAiE,CAAjE,EAAoE7nC,QAApE,CAAnB;AACH;AACD;;;;;;;+CAIuB30C,K,EAAO;AAC1B,cAAIA,KAAK,CAACsb,MAAN,IAAgB,KAAK2gE,kBAAL,CAAwB3rE,aAAxC,IAAyD,CAAC,KAAKguD,OAAnE,EAA4E;AACxE,iBAAKvqB,SAAL,CAAe/2C,KAAf,CAAqB,KAAKq1C,YAA1B;AACH;AACJ;AACD;;;;;;;oCAIYA,Y,EAAc;AACtB,eAAKA,YAAL,GAAoBA,YAApB;AACA,eAAKisB,OAAL,GAAe,KAAf;AACA,eAAK8c,QAAL,GAAgB,KAAhB;AACH;AACD;;;;;;;;mEAK0D;AAAA,cAAjB2B,QAAiB,uEAAN,IAAM;;AACtD;AACA,cAAIj2B,IAAI;AAAK;AAAkB,eAAK7pD,MAAL,CAAY2+E,iBAAhC,CAAqDh6E,UAAhE;;AACA,iBAAOklD,IAAI,KAAK,IAAhB,EAAsB;AAClBi2B,oBAAQ,GACJj2B,IAAI,CAACtmD,gBAAL,CAAsB,QAAtB,EAAgC,KAAK86E,qBAArC,CADI,GAEJx0B,IAAI,CAACjmD,mBAAL,CAAyB,QAAzB,EAAmC,KAAKy6E,qBAAxC,CAFJ;AAGAx0B,gBAAI,GAAGA,IAAI,CAACllD,UAAZ;AACH;AACJ;AACD;;;;;;;+DAIuC;AACnC;AACA,cAAMo7E,eAAe,GAAG,IAAI,wEAAJ,EAAxB;AACA;;AACA,cAAMj/B,IAAI,GAAG,KAAK9gD,MAAL,CAAY2+E,iBAAZ,CAA8Bh/E,qBAA9B,EAAb;AACA;;AACA,cAAIhF,GAAG,GAAG,KAAKqF,MAAL,CAAYk9E,sBAAZ,GACNp8B,IAAI,CAACriD,MAAL,GAAc,KAAKuB,MAAL,CAAY2+E,iBAAZ,CAA8BqB,YAA5C,GAA2D,CADrD,GAENl/B,IAAI,CAACriD,MAFT;AAGAshF,yBAAe,CAAC5yE,QAAhB,GAA2B;AAAExS,eAAG,YAAKA,GAAL;AAAL,WAA3B;;AACA,cAAI,KAAK4N,SAAL,IAAkB,KAAtB,EAA6B;AACzB;AACA,gBAAI3J,KAAK,GAAG7C,MAAM,CAACkkF,UAAP,GAAoBn/B,IAAI,CAAClmD,IAAzB,GAAgC,KAAKoF,MAAL,CAAY2+E,iBAAZ,CAA8B99B,WAA1E;AACAk/B,2BAAe,CAAC5yE,QAAhB,CAAyBvO,KAAzB,aAAoCA,KAApC;AACH,WAJD,MAKK;AACDmhF,2BAAe,CAAC5yE,QAAhB,CAAyBvS,IAAzB,aAAmCkmD,IAAI,CAAClmD,IAAxC;AACH;;AACD,eAAKk8C,SAAL,CAAe94C,cAAf,CAA8B+hF,eAAe,CAAC5yE,QAA9C;AACH;AACD;;;;;;;kEAI0C;AACtC,cAAI,CAAC,KAAKnN,MAAL,CAAYkgF,0BAAjB,EACI;AACJ;;AACA,cAAIC,mBAAmB;AAAI;AAAkB,eAAKnB,kBAAL,CAAwB3rE,aAArE;AACA;;AACA,cAAI6K,MAAM,GAAG,KAAKkiE,eAAL,EAAb;;AACA,cAAIliE,MAAM,CAACzf,MAAP,IAAiB,CAACyf,MAAM,CAACmiE,eAA7B,EAA8C;AAC1C,iBAAKjC,gBAAL,GAAwB,IAAxB;AACA;;AACA,gBAAM2B,eAAe,GAAG,IAAI,wEAAJ,EAAxB;AACA;;AACA,gBAAMj/B,IAAI,GAAGq/B,mBAAmB,CAACxgF,qBAApB,EAAb;AACA;;AACA,gBAAI2gF,uBAAuB,GAAG,KAAKtgF,MAAL,CAAY2+E,iBAAZ,CAA8BqB,YAA5D;AACA;;AACA,gBAAIrlF,GAAG,GAAG,KAAKqF,MAAL,CAAYk9E,sBAAZ,GACNp8B,IAAI,CAACnmD,GAAL,GAAWwlF,mBAAmB,CAACH,YAA/B,GAA8CM,uBAA9C,GAAwE,CADlE,GAENx/B,IAAI,CAACnmD,GAAL,GAAWwlF,mBAAmB,CAACH,YAA/B,GAA8CM,uBAFlD;AAGAP,2BAAe,CAAC5yE,QAAhB,GAA2B;AAAExS,iBAAG,YAAKA,GAAL;AAAL,aAA3B;;AACA,gBAAI,KAAK4N,SAAL,IAAkB,KAAtB,EAA6B;AACzB;AACA,kBAAI3J,KAAK,GAAG7C,MAAM,CAACkkF,UAAP,GAAoBn/B,IAAI,CAAClmD,IAAzB,GAAgC,KAAKoF,MAAL,CAAY2+E,iBAAZ,CAA8B99B,WAA1E;AACAk/B,6BAAe,CAAC5yE,QAAhB,CAAyBvO,KAAzB,aAAoCA,KAApC;AACH,aAJD,MAKK;AACDmhF,6BAAe,CAAC5yE,QAAhB,CAAyBvS,IAAzB,aAAmCkmD,IAAI,CAAClmD,IAAxC;AACH;;AACD,iBAAKk8C,SAAL,CAAe94C,cAAf,CAA8B+hF,eAAe,CAAC5yE,QAA9C;AACH,WAtBD,MAuBK;AACD,iBAAKixE,gBAAL,GAAwB,KAAxB;AACH;AACJ;AACD;;;;;;;0CAIkB;AACd;AACA,cAAI35E,SAAS,GAAG,KAAKu6E,kBAAL,CAAwB3rE,aAAxC;AACA;;AACA,cAAIsrE,iBAAiB,GAAG,KAAK3+E,MAAL,CAAY2+E,iBAApC,CAJc,CAKd;;AACA;;AACA,cAAI4B,QAAQ,GAAG97E,SAAS,CAAC9E,qBAAV,EAAf,CAPc,CAQd;;AACA;;AACA,cAAIhF,GAAG,GAAG4lF,QAAQ,CAAC5lF,GAAnB;;AACA,cAAI,KAAKyjF,gBAAT,EAA2B;AACvBzjF,eAAG,GAAG,KAAKqF,MAAL,CAAYk9E,sBAAZ,GACFqD,QAAQ,CAAC5lF,GAAT,GAAe8J,SAAS,CAACu7E,YAAzB,GAAwCrB,iBAAiB,CAACqB,YADxD,GAEFO,QAAQ,CAAC5lF,GAAT,GAAe8J,SAAS,CAACu7E,YAAzB,GAAwCrB,iBAAiB,CAACqB,YAF9D;AAGH;AACD;;;AACA,cAAIK,eAAe,GAAG1lF,GAAtB;;AACA,cAAI,CAAC,KAAKyjF,gBAAV,EAA4B;AACxBiC,2BAAe,GAAG1lF,GAAG,IAAI,KAAKqF,MAAL,CAAYk9E,sBAAZ,GAAqCz4E,SAAS,CAACu7E,YAAV,GAAyBrB,iBAAiB,CAACqB,YAAhF,GAA+Fv7E,SAAS,CAACu7E,YAAV,GAAyBrB,iBAAiB,CAACqB,YAA9I,CAArB;AACH;AACD;;;AACA,cAAIQ,GAAG,GAAG,EAAV;AACAA,aAAG,CAAC7lF,GAAJ,GAAUA,GAAG,GAAG,CAAhB;AACA6lF,aAAG,CAACH,eAAJ,GAAsBA,eAAe,GAAG,CAAxC;AACAG,aAAG,CAAC5lF,IAAJ,GAAW2lF,QAAQ,CAAC3lF,IAAT,GAAgB,CAA3B;AACA4lF,aAAG,CAAC/hF,MAAJ,GAAc8hF,QAAQ,CAAC5lF,GAAT,GAAe8J,SAAS,CAACu7E,YAA1B,IAA2CjkF,MAAM,CAAC0kF,WAAP,IAAsBhmF,QAAQ,CAACQ,eAAT,CAAyB+kF,YAA1F,CAAb;;AACA,cAAI,KAAK5B,gBAAL,IAAyB,CAACoC,GAAG,CAAC/hF,MAAlC,EAA0C;AACtC,gBAAI,CAAC+hF,GAAG,CAAC7lF,GAAT,EACI6lF,GAAG,CAAC/hF,MAAJ,GAAa,IAAb;AACP;;AACD+hF,aAAG,CAAC5hF,KAAJ,GAAa2hF,QAAQ,CAAC3lF,IAAT,GAAgB6J,SAAS,CAACo8C,WAA3B,IAA2C9kD,MAAM,CAACkkF,UAAP,IAAqBxlF,QAAQ,CAACQ,eAAT,CAAyB4lD,WAAzF,CAAZ;AACA2/B,aAAG,CAACE,GAAJ,GAAUF,GAAG,CAAC7lF,GAAJ,IAAW6lF,GAAG,CAAC5lF,IAAf,IAAuB4lF,GAAG,CAAC/hF,MAA3B,IAAqC+hF,GAAG,CAAC5hF,KAAnD;AACA4hF,aAAG,CAACG,GAAJ,GAAUH,GAAG,CAAC7lF,GAAJ,IAAW6lF,GAAG,CAAC5lF,IAAf,IAAuB4lF,GAAG,CAAC/hF,MAA3B,IAAqC+hF,GAAG,CAAC5hF,KAAnD;AACA,iBAAO4hF,GAAP;AACH;;;;AAED;;;;;;gCAMQI,I,EAAMC,Q,EAAU;AACpB;AACA,cAAIjgC,KAAK,GAAGggC,IAAZ;;AACA,iBAAOhgC,KAAK,KAAK,IAAjB,EAAuB;AACnB,gBAAIA,KAAK,KAAKigC,QAAd,EACI,OAAO,IAAP;AACJjgC,iBAAK,GAAGA,KAAK,CAACj8C,UAAd;AACH;;AACD,iBAAO,KAAP;AACH;;;;;;AAELu5E,eAAW,CAAC/9E,IAAZ,GAAmB,SAAS2gF,mBAAT,CAA6BzgF,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAI69E,WAAV,EAAuB,gEAAyB,sEAAzB,CAAvB,EAAkF,gEAAyB,qEAAzB,CAAlF,EAAiI,gEAAyB,wEAAzB,CAAjI,CAAP;AAAqL,KAA1O;;AACAA,eAAW,CAACx6D,IAAZ,GAAmB,gEAAyB;AAAEnjB,UAAI,EAAE29E,WAAR;AAAqBnlE,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoD4K,eAAS,EAAE,SAASo9D,iBAAT,CAA2Bn/D,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,oEAAmBO,GAAnB,EAAwB,IAAxB,EAA8B,8DAA9B;;AACA,oEAAmBC,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAIR,EAAE,GAAG,CAAT,EAAY;AACV,cAAIiC,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAAC69D,yBAAJ,GAAgC77D,EAAE,CAACE,KAAxF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDhC,GAAG,CAACm9D,kBAAJ,GAAyBn7D,EAAE,CAACE,KAAjF;AACH;AAAE,OAPqC;AAOnCrC,kBAAY,EAAE,SAASs/D,wBAAT,CAAkCp/D,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxE,mEAAkB,WAAlB,EAA+B,SAASq/D,wCAAT,CAAkD17D,MAAlD,EAA0D;AAAE,mBAAO1D,GAAG,CAACq/D,WAAJ,CAAgB37D,MAAhB,CAAP;AAAiC,WAA5H,EAA8H,KAA9H,EAAqI,+DAArI,EAA+J,SAA/J,EAA0K,SAAS47D,sCAAT,CAAgD57D,MAAhD,EAAwD;AAAE,mBAAO1D,GAAG,CAACu/D,SAAJ,CAAc77D,MAAd,CAAP;AAA+B,WAAnQ,EAAqQ,KAArQ,EAA4Q,+DAA5Q,EAAsS,OAAtS,EAA+S,SAAS87D,oCAAT,CAA8C97D,MAA9C,EAAsD;AAAE,mBAAO1D,GAAG,CAACy/D,OAAJ,CAAY/7D,MAAZ,CAAP;AAA6B,WAApY,EAAsY,KAAtY,EAA6Y,+DAA7Y;AACH;AAAE,OATqC;AASnCnB,WAAK,EAAE,CAT4B;AASzBC,UAAI,EAAE,EATmB;AASfC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,4BAAJ,EAAkC,CAAlC,EAAqC,SAArC,EAAgD,eAAhD,CAAD,EAAmE,CAAC,iBAAD,EAAoB,EAApB,CAAnE,EAA4F,CAAC,cAAD,EAAiB,EAAjB,CAA5F,CATO;AAS4GC,cAAQ,EAAE,SAASg9D,oBAAT,CAA8B3/D,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/M,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,eAAlB,EAAmC,SAAS4/D,iDAAT,CAA2Dj8D,MAA3D,EAAmE;AAAE,mBAAO1D,GAAG,CAAC4/D,sBAAJ,CAA2Bl8D,MAA3B,CAAP;AAA4C,WAApJ;;AACA,mEAAkB,CAAlB,EAAqBy4D,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,aAA/D,EAA8E,IAA9E,EAAoF,CAApF,EAAuF,oEAAvF;;AACA;AACH;;AAAC,YAAIp8D,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,WAAnB,EAAgCC,GAAG,CAAC7hB,MAAJ,CAAW4I,QAA3C,EAAqD,YAArD,EAAmEiZ,GAAG,CAAC7hB,MAAJ,CAAW6I,SAA9E;;AACA,mEAAkB,SAAlB,EAA6B,8DAAuB,CAAvB,EAA0Bkd,GAA1B,EAA+BlE,GAAG,CAACw/C,OAAnC,EAA4Cx/C,GAAG,CAACu8D,gBAAhD,EAAkEv8D,GAAG,CAACtZ,SAAJ,IAAiB,KAAnF,CAA7B;;AACA,oEAAmB,KAAnB,EAA0BsZ,GAAG,CAACtZ,SAAJ,IAAiB,KAAjB,GAAyB,KAAzB,GAAiC,EAA3D;AACH;AAAE,OAlBqC;AAkBnCmc,gBAAU,EAAE,CAAC,qDAAD,EAAa,uDAAb,CAlBuB;AAkBO5S,YAAM,EAAE,CAAC,80CAAD,CAlBf;AAkBi2C6S,mBAAa,EAAE;AAlBh3C,KAAzB,CAAnB;AAmBA;;AACAu5D,eAAW,CAAC59E,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wEAAD;AAAtB,SAAD;AAA/B,OAH+B,CAAN;AAAA,KAA7B;;AAKAw9E,eAAW,CAACviE,cAAZ,GAA6B;AACzB+jE,+BAAyB,EAAE,CAAC;AAAEn/E,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,cAAD,EAAiB;AAAEghF,cAAI,EAAE;AAAR,SAAjB;AAAzB,OAAD,CADF;AAEzB1C,wBAAkB,EAAE,CAAC;AAAEz+E,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,iBAAD;AAAzB,OAAD,CAFK;AAGzBwgF,iBAAW,EAAE,CAAC;AAAE3gF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,oBAAD,EAAuB,CAAC,QAAD,CAAvB;AAA5B,OAAD,CAHY;AAIzB0gF,eAAS,EAAE,CAAC;AAAE7gF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,kBAAD,EAAqB,CAAC,QAAD,CAArB;AAA5B,OAAD,CAJc;AAKzB4gF,aAAO,EAAE,CAAC;AAAE/gF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAA5B,OAAD;AALgB,KAA7B;AAOA;;AAAc,KAAC,YAAY;AAAE,sEAAyBw9E,WAAzB,EAAsC,CAAC;AAC5D39E,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAEC6V,kBAAQ,EAAE,wYAFX;AAGCI,uBAAa,EAAE,gEAAkBG,IAHlC;AAIChT,gBAAM,EAAE,CAAC,80CAAD;AAJT,SAAD;AAFsD,OAAD,CAAtC,EAQrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA4C;AAAEA,cAAI,EAAE;AAAR,SAA5C,EAA2E;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACxHF,gBAAI,EAAE,oDADkH;AAExHG,gBAAI,EAAE,CAAC,wEAAD;AAFkH,WAAD;AAA/B,SAA3E,CAAP;AAGF,OAXS,EAWP;AAAEwgF,mBAAW,EAAE,CAAC;AAC1B3gF,cAAI,EAAE,0DADoB;AAE1BG,cAAI,EAAE,CAAC,oBAAD,EAAuB,CAAC,QAAD,CAAvB;AAFoB,SAAD,CAAf;AAGV0gF,iBAAS,EAAE,CAAC;AACZ7gF,cAAI,EAAE,0DADM;AAEZG,cAAI,EAAE,CAAC,kBAAD,EAAqB,CAAC,QAAD,CAArB;AAFM,SAAD,CAHD;AAMV4gF,eAAO,EAAE,CAAC;AACV/gF,cAAI,EAAE,0DADI;AAEVG,cAAI,EAAE,CAAC,gBAAD,EAAmB,CAAC,QAAD,CAAnB;AAFI,SAAD,CANC;AASVg/E,iCAAyB,EAAE,CAAC;AAC5Bn/E,cAAI,EAAE,uDADsB;AAE5BG,cAAI,EAAE,CAAC,cAAD,EAAiB;AAAEghF,gBAAI,EAAE;AAAR,WAAjB;AAFsB,SAAD,CATjB;AAYV1C,0BAAkB,EAAE,CAAC;AACrBz+E,cAAI,EAAE,uDADe;AAErBG,cAAI,EAAE,CAAC,iBAAD;AAFe,SAAD;AAZV,OAXO;AA0Bb,KA1BF;AA4Bd;;;;;;QAIMihF,kB;AACF;;;;AAIA,kCAAYzoE,QAAZ,EAAsB0oE,cAAtB,EAAsC;AAAA;;AAClC,aAAK1oE,QAAL,GAAgBA,QAAhB;AACA,aAAK0oE,cAAL,GAAsBA,cAAtB;AACH;AACD;;;;;;;;;;;6BAOKlrC,sB,EAAwBioC,iB,EAAmB3+E,M,EAAQ;AACpD,cAAI,CAACA,MAAL,EACIA,MAAM,GAAG,EAAT;AACJ;;AACA,cAAI+qC,IAAI,GAAG/qC,MAAM,CAAC+qC,IAAlB;AACA,iBAAO/qC,MAAM,CAAC+qC,IAAd;AACA;;AACA,cAAM82C,eAAe,GAAG;AACpB7hF,kBAAM,EAAEsB,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkBrI,MAAlB,EAA0B;AAAEy/E,uBAAS,EAAE/oC,sBAAb;AAAqCioC,+BAAiB,EAAEA,iBAAxD;AAA2E/1E,sBAAQ,EAAG,OAAO5I,MAAM,CAAC4I,QAAd,KAA2B,QAA5B,GAAwC5I,MAAM,CAAC4I,QAAP,GAAkB,IAA1D,GAAiE5I,MAAM,CAAC4I,QAA7J;AAAuKC,uBAAS,EAAG,OAAO7I,MAAM,CAAC6I,SAAd,KAA4B,QAA7B,GAAyC7I,MAAM,CAAC6I,SAAP,GAAmB,IAA5D,GAAmE7I,MAAM,CAAC6I,SAA5P;AAAuQq3E,wCAA0B,EAAElgF,MAAM,CAACkgF,0BAAP,IAAqC,IAArC,GAA4C,IAA5C,GAAmDlgF,MAAM,CAACkgF,0BAA7V;AAAyX/C,2CAA6B,EAAE,OAAOn9E,MAAM,CAACm9E,6BAAd,KAAgD,QAAhD,GAA2D,CAACn9E,MAAM,CAACm9E,6BAAR,CAA3D,GAAoGn9E,MAAM,CAACm9E;AAAngB,aAA1B,CADY;AAEpBpyC,gBAAI,EAAEA;AAFc,WAAxB;AAIA;;AACA,cAAM+2C,iBAAiB,GAAG;AACtB3gF,yBAAa,EAAE,kCADO;AAEtBD,uBAAW,EAAE,KAFS;AAGtBF,0BAAc,EAAE,KAAKkY,QAAL,CAAczB,gBAAd,CAA+B3X,IAA/B,EAHM;AAItBmB,sBAAU,EAAE,0BAJU;AAKtB2rC,wBAAY,EAAE,KALQ;AAMtB7B,gBAAI,EAAE82C;AANgB,WAA1B;AAQA;;AACA,cAAI/qC,SAAS,GAAG,KAAK8qC,cAAL,CAAoB/nE,IAApB,CAAyBqkE,WAAzB,EAAsC4D,iBAAtC,CAAhB;;AACA,iBAAOhrC,SAAP;AACH;;;;;;AAEL6qC,sBAAkB,CAACxhF,IAAnB,GAA0B,SAAS4hF,0BAAT,CAAoC1hF,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIshF,kBAAV,EAA8B,uDAAgB,4DAAhB,CAA9B,EAA+D,uDAAgB,kEAAhB,CAA/D,CAAP;AAA2G,KAA9K;;AACAA,sBAAkB,CAAChhF,KAAnB,GAA2B,iEAA0B;AAAEE,WAAK,EAAE8gF,kBAAT;AAA6B/gF,aAAO,EAAE+gF,kBAAkB,CAACxhF;AAAzD,KAA1B,CAA3B;AACA;;AACAwhF,sBAAkB,CAACrhF,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAE;AAAR,OADsC,EAEtC;AAAEA,YAAI,EAAE;AAAR,OAFsC,CAAN;AAAA,KAApC;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBohF,kBAAzB,EAA6C,CAAC;AACnEphF,YAAI,EAAE;AAD6D,OAAD,CAA7C,EAErB,YAAY;AAAE,eAAO,CAAC;AAAEA,cAAI,EAAE;AAAR,SAAD,EAA2B;AAAEA,cAAI,EAAE;AAAR,SAA3B,CAAP;AAAgE,OAFzD,EAE2D,IAF3D;AAEmE,KAFlF;AAId;;;;;;QAIMyhF,oB;;;;;;;;AACF;;;kCAGiB;AACb,iBAAO;AACHlE,oBAAQ,EAAEkE,oBADP;AAEH9lE,qBAAS,EAAE,CAACylE,kBAAD;AAFR,WAAP;AAIH;;;;;;AAELK,wBAAoB,CAACjmE,IAArB,GAA4B,+DAAwB;AAAExb,UAAI,EAAEyhF;AAAR,KAAxB,CAA5B;AACAA,wBAAoB,CAAChmE,IAArB,GAA4B,+DAAwB;AAAEpb,aAAO,EAAE,SAASqhF,4BAAT,CAAsC5hF,CAAtC,EAAyC;AAAE,eAAO,KAAKA,CAAC,IAAI2hF,oBAAV,GAAP;AAA2C,OAAjG;AAAmG7lE,aAAO,EAAE,CAAC,CACrJ,4DADqJ,EAErJ,0DAFqJ,EAGrJ,wEAHqJ,CAAD;AAA5G,KAAxB,CAA5B;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B4lE,oBAA1B,EAAgD;AAAE3lE,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC6hE,WAAD,CAAP;AAAuB,SAArD;AAAuD/hE,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAC/L,0DAD+L,EAE/L,wEAF+L,CAAP;AAErK;AAFuF,OAAhD,CAAnD;AAEkB,KAFjC;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB6lE,oBAAzB,EAA+C,CAAC;AACrEzhF,YAAI,EAAE,sDAD+D;AAErEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CAAC6hE,WAAD,CADf;AAEC/hE,iBAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,wEAHK,CAFV;AAOCy1B,yBAAe,EAAE,CAACssC,WAAD,CAPlB;AAQC5hE,iBAAO,EAAE;AARV,SAAD;AAF+D,OAAD,CAA/C,EAYrB,IAZqB,EAYf,IAZe;AAYP,KAZR;AAcd;;;;;AAKA;;;;AAOA","file":"default~pages-categories-categories-module~pages-feeds-feeds-module~pages-orders-orders-module~pages~1b778316-es5.js","sourcesContent":["import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, ChangeDetectorRef, Optional, Inject, ViewChild, forwardRef, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MAT_DATE_FORMATS, DateAdapter, mixinColor } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n/** @nocollapse */ MatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.changes;\n    /**\n     * A label for the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.calendarLabel;\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.openCalendarLabel;\n    /**\n     * A label for the previous month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMonthLabel;\n    /**\n     * A label for the next month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMonthLabel;\n    /**\n     * A label for the previous year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevYearLabel;\n    /**\n     * A label for the next year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextYearLabel;\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMultiYearLabel;\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMultiYearLabel;\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMonthViewLabel;\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMultiYearViewLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCalendarCell.prototype.value;\n    /** @type {?} */\n    MatCalendarCell.prototype.displayValue;\n    /** @type {?} */\n    MatCalendarCell.prototype.ariaLabel;\n    /** @type {?} */\n    MatCalendarCell.prototype.enabled;\n    /** @type {?} */\n    MatCalendarCell.prototype.cssClasses;\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", \"mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell mat-focus-indicator\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"selectedValue === item.value\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content\\\"\\n        [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">\\n        {{item.displayValue}}\\n      </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The label for the table. (e.g. \"Jan 2017\").\n     * @type {?}\n     */\n    MatCalendarBody.prototype.label;\n    /**\n     * The cells to display in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.rows;\n    /**\n     * The value in the table that corresponds to today.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.todayValue;\n    /**\n     * The value in the table that is currently selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValue;\n    /**\n     * The minimum number of free cells needed to fit the label in the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.labelMinRequiredCells;\n    /**\n     * The number of columns in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.numCols;\n    /**\n     * The cell number of the active cell in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.activeCell;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.cellAspectRatio;\n    /**\n     * Emits when a new value is selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValueChange;\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._firstRowOffset;\n    /**\n     * Padding for the individual date cells.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellPadding;\n    /**\n     * Width of an individual cell.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/month-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [selectedValue]=\\\"_selectedDate!\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateClass;\n    /**\n     * Emits when a new date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype.selectedChange;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype._userSelection;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMonthView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMonthView.prototype._matCalendarBody;\n    /**\n     * The label for this month (e.g. \"January 2017\").\n     * @type {?}\n     */\n    MatMonthView.prototype._monthLabel;\n    /**\n     * Grid of calendar cells representing the dates of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._weeks;\n    /**\n     * The number of blank cells in the first row before the 1st of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._firstWeekOffset;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._selectedDate;\n    /**\n     * The date of the month that today falls on. Null if today is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._todayDate;\n    /**\n     * The names of the weekdays.\n     * @type {?}\n     */\n    MatMonthView.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dateFormats;\n    /** @type {?} */\n    MatMonthView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/multi-year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.dateFilter;\n    /**\n     * Emits when a new year is selected.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.selectedChange;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatMultiYearView.prototype.yearSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMultiYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the currently displayed years.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._years;\n    /**\n     * The year that today falls on.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._todayYear;\n    /**\n     * The year of the selected date. Null if the selected date is null.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._selectedYear;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatMultiYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._dir;\n}\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatYearView.prototype.dateFilter;\n    /**\n     * Emits when a new month is selected.\n     * @type {?}\n     */\n    MatYearView.prototype.selectedChange;\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatYearView.prototype.monthSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the months of the year.\n     * @type {?}\n     */\n    MatYearView.prototype._months;\n    /**\n     * The label for this year (e.g. \"2017\").\n     * @type {?}\n     */\n    MatYearView.prototype._yearLabel;\n    /**\n     * The month in this year that today falls on. Null if today is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._todayMonth;\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._selectedMonth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dateFormats;\n    /** @type {?} */\n    MatYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._intl;\n    /** @type {?} */\n    MatCalendarHeader.prototype.calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateFormats;\n}\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        const currentView = this.currentView;\n        /** @type {?} */\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\nif (false) {\n    /**\n     * An input indicating the type of the header component, if set.\n     * @type {?}\n     */\n    MatCalendar.prototype.headerComponent;\n    /**\n     * A portal containing the header component type for this calendar.\n     * @type {?}\n     */\n    MatCalendar.prototype._calendarHeaderPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._intlChanges;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._moveFocusOnNextTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._startAt;\n    /**\n     * Whether the calendar should be started in month or year view.\n     * @type {?}\n     */\n    MatCalendar.prototype.startView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateClass;\n    /**\n     * Emits when the currently selected date changes.\n     * @type {?}\n     */\n    MatCalendar.prototype.selectedChange;\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearSelected;\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthSelected;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatCalendar.prototype._userSelection;\n    /**\n     * Reference to the current month view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthView;\n    /**\n     * Reference to the current year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearView;\n    /**\n     * Reference to the current multi-year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.multiYearView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._clampedActiveDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._currentView;\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     * @type {?}\n     */\n    MatCalendar.prototype.stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatDatepickerContentBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Current state of the animation.\n         */\n        this._animationState = 'enter';\n        /**\n         * Emits when an animation has finished.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationDone.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._minDate\\\"\\n    [maxDate]=\\\"datepicker._maxDate\\\"\\n    [dateFilter]=\\\"datepicker._dateFilter\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"datepicker._selected\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\nif (false) {\n    /**\n     * Reference to the internal calendar component.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._calendar;\n    /**\n     * Reference to the datepicker that created the overlay.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype.datepicker;\n    /**\n     * Whether the datepicker is above or below the input.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._isAbove;\n    /**\n     * Current state of the animation.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationState;\n    /**\n     * Emits when an animation has finished.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationDone;\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    MatDatepickerContent.prototype._changeDetectorRef;\n}\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            /** @type {?} */\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => this._destroyPopup()));\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._dialogRef.componentInstance.color = this.color;\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        /** @type {?} */\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        /** @type {?} */\n        const ref = this._popupComponentRef = (/** @type {?} */ (this._popupRef)).attach(portal);\n        ref.instance.datepicker = this;\n        ref.instance.color = this.color;\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (this._popupRef)).updatePosition();\n        }));\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Destroys the current popup overlay.\n     * @private\n     * @return {?}\n     */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._scrollStrategy;\n    /**\n     * An input indicating the type of the custom header component for the calendar, if set.\n     * @type {?}\n     */\n    MatDatepicker.prototype.calendarHeaderComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._startAt;\n    /**\n     * The view that the calendar should start in.\n     * @type {?}\n     */\n    MatDatepicker.prototype.startView;\n    /** @type {?} */\n    MatDatepicker.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._disabled;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.yearSelected;\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.monthSelected;\n    /**\n     * Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatDatepicker.prototype.panelClass;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatDatepicker.prototype.dateClass;\n    /**\n     * Emits when the datepicker has been opened.\n     * @type {?}\n     */\n    MatDatepicker.prototype.openedStream;\n    /**\n     * Emits when the datepicker has been closed.\n     * @type {?}\n     */\n    MatDatepicker.prototype.closedStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._opened;\n    /**\n     * The id for the datepicker calendar.\n     * @type {?}\n     */\n    MatDatepicker.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._validSelected;\n    /**\n     * A reference to the overlay when the calendar is opened as a popup.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupRef;\n    /**\n     * A reference to the dialog when the calendar is opened as a dialog.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialogRef;\n    /**\n     * Reference to the component instantiated in popup mode.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupComponentRef;\n    /**\n     * The element that was focused before the datepicker was opened.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._focusedElementBeforeOpen;\n    /**\n     * Subscription to value changes in the associated input element.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._inputSubscription;\n    /**\n     * The input element this datepicker is associated with.\n     * @type {?}\n     */\n    MatDatepicker.prototype._datepickerInput;\n    /**\n     * Emits when the datepicker is disabled.\n     * @type {?}\n     */\n    MatDatepicker.prototype._disabledChange;\n    /**\n     * Emits new selected date when selected date changes.\n     * @type {?}\n     */\n    MatDatepicker.prototype._selectedChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nif (false) {\n    /**\n     * The new value for the target datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.value;\n    /**\n     * Reference to the datepicker input component that emitted the event.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.target;\n    /**\n     * Reference to the native input element associated with the datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.targetElement;\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        const lastValueWasValid = this._lastValueValid;\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else if (lastValueWasValid !== this._lastValueValid) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_value;\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the component has been initialized.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._isInitialized;\n    /** @type {?} */\n    MatDatepickerInput.prototype._datepicker;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._disabled;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateChange;\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateInput;\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._valueChange;\n    /**\n     * Emits when the disabled state has changed\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._disabledChange;\n    /** @type {?} */\n    MatDatepickerInput.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._cvaOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validatorOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._datepickerSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._localeSubscription;\n    /**\n     * The form control validator for whether the input parses.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._parseValidator;\n    /**\n     * The form control validator for the min date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._minValidator;\n    /**\n     * The form control validator for the max date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._maxValidator;\n    /**\n     * The form control validator for the date filter.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._filterValidator;\n    /**\n     * The combined form control validator for this input.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validator;\n    /**\n     * Whether the last value set on the input was valid.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._lastValueValid;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._elementRef;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._formField;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerToggle.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._stateChanges;\n    /**\n     * Datepicker instance that the button will toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.datepicker;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._disabled;\n    /**\n     * Whether ripples on the toggle should be disabled.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.disableRipple;\n    /**\n     * Custom icon set by the consumer.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._customIcon;\n    /**\n     * Underlying button element.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._button;\n    /** @type {?} */\n    MatDatepickerToggle.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ],\n        CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatMultiYearView, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n\n//# sourceMappingURL=datepicker.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._getFocusTrap().focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._getFocusTrap().focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Gets the focus trap associated with the dialog.\n     * @private\n     * @return {?}\n     */\n    _getFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        return this._focusTrap;\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Optional, ElementRef, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_checked;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_required;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatRadioButtonBase.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._radioDispatcher;\n    /** @type {?} */\n    _MatRadioButtonBase.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._providerOverride;\n}\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return ɵMatRadioButton_BaseFactory(t || MatRadioButton); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatRadioButton_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioButton);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase };\n\n//# sourceMappingURL=radio.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Directive, ElementRef, Input, Renderer2, Pipe, ContentChild, Component, EventEmitter, forwardRef, Inject, Output, ContentChildren, ViewChildren, HostListener, ViewChild, NgModule } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { POPUP_DIALOG_CLOSE, PopupDialogService, NgxPopupDialogModule } from 'ngx-popup-dialog';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/form-field';\nimport * as ɵngcc4 from '@angular/material/input';\nimport * as ɵngcc5 from '@angular/material/list';\nimport * as ɵngcc6 from '@angular/material/button';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/material/icon';\nimport * as ɵngcc9 from '@angular/material/select';\nimport * as ɵngcc10 from '@angular/material/core';\nimport * as ɵngcc11 from '@angular/material/datepicker';\nimport * as ɵngcc12 from '@angular/material/checkbox';\nimport * as ɵngcc13 from '@angular/material/radio';\nimport * as ɵngcc14 from 'ngx-popup-dialog';\nimport * as ɵngcc15 from '@angular/material/chips';\n\nconst _c0 = [\"dataTableCell\"];\nconst _c1 = [\"dataTableHeader\"];\nconst _c2 = [\"dataTableRow\", \"\"];\nfunction DataTableRowComponent_ng_template_7_th_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 14);\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r5.item[column_r2.property]);\n} }\nconst _c3 = function (a0, a1, a2) { return { column: a0, row: a1, item: a2 }; };\nfunction DataTableRowComponent_ng_template_7_th_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 15);\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r2.cellTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c3, column_r2, ctx_r6._this, ctx_r6.item));\n} }\nfunction DataTableRowComponent_ng_template_7_th_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 11);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowComponent_ng_template_7_th_0_div_1_Template, 1, 1, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(2, DataTableRowComponent_ng_template_7_th_0_div_2_Template, 1, 6, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", column_r2.getCellColor(ctx_r3._this, ctx_r3.index));\n    ɵngcc0.ɵɵproperty(\"hide\", !column_r2.visible)(\"ngClass\", column_r2.styleClassObject);\n    ɵngcc0.ɵɵattribute(\"data-label\", column_r2.header);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r2.cellTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r2.cellTemplate);\n} }\nfunction DataTableRowComponent_ng_template_7_td_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 14);\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r10.item[column_r2.property]);\n} }\nfunction DataTableRowComponent_ng_template_7_td_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 15);\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r2.cellTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c3, column_r2, ctx_r11._this, ctx_r11.item));\n} }\nfunction DataTableRowComponent_ng_template_7_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 16);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowComponent_ng_template_7_td_1_div_1_Template, 1, 1, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(2, DataTableRowComponent_ng_template_7_td_1_div_2_Template, 1, 6, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", column_r2.getCellColor(ctx_r4._this, ctx_r4.index));\n    ɵngcc0.ɵɵproperty(\"hide\", !column_r2.visible)(\"ngClass\", column_r2.styleClassObject);\n    ɵngcc0.ɵɵattribute(\"data-label\", column_r2.header);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r2.cellTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r2.cellTemplate);\n} }\nfunction DataTableRowComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableRowComponent_ng_template_7_th_0_Template, 3, 7, \"th\", 9);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowComponent_ng_template_7_td_1_Template, 3, 7, \"td\", 10);\n} if (rf & 2) {\n    const column_r2 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.dataTable.primaryColumn === column_r2.property);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.dataTable.primaryColumn !== column_r2.property);\n} }\nconst _c4 = function (a0, a1) { return { row: a0, item: a1 }; };\nfunction DataTableRowComponent_tr_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"td\");\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"hide\", !ctx_r1.expanded);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.dataTable.columnCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.dataTable.expandTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c4, ctx_r1._this, ctx_r1.item));\n} }\nconst _c5 = function (a0, a1) { return { \"fa-caret-right\": a0, \"fa-caret-down\": a1 }; };\nconst _c6 = [\"dataTableExpand\"];\nfunction DataTableComponent_data_table_header_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"data-table-header\");\n} }\nfunction DataTableComponent_filter_bar_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"filter-bar\");\n} }\nfunction DataTableComponent_th_18_button_3_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 23);\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    const i_r9 = ctx_r17.index;\n    const column_r8 = ctx_r17.$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", \"col-\" + ctx_r13.id + \"-\" + i_r9)(\"textContent\", column_r8.header);\n} }\nconst _c7 = function (a0) { return { column: a0 }; };\nfunction DataTableComponent_th_18_button_3_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 24);\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r8.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c7, column_r8));\n} }\nconst _c8 = function (a0, a1) { return { \"fa-sort-asc\": a0, \"fa-sort-desc\": a1 }; };\nfunction DataTableComponent_th_18_button_3_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵelement(1, \"i\", 26);\n    ɵngcc0.ɵɵelement(2, \"i\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", column_r8.property === ctx_r15.sortBy);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", column_r8.property !== ctx_r15.sortBy)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c8, ctx_r15.sortAsc, !ctx_r15.sortAsc));\n} }\nfunction DataTableComponent_th_18_button_3_span_4_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 28);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function DataTableComponent_th_18_button_3_span_4_Template_span_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit; const _r10 = ɵngcc0.ɵɵreference(1); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.resizeColumnStart($event, column_r8, _r10); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction DataTableComponent_th_18_button_3_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableComponent_th_18_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const column_r8 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.headerClicked(column_r8, $event); });\n    ɵngcc0.ɵɵtemplate(1, DataTableComponent_th_18_button_3_span_1_Template, 1, 2, \"span\", 19);\n    ɵngcc0.ɵɵtemplate(2, DataTableComponent_th_18_button_3_span_2_Template, 1, 4, \"span\", 20);\n    ɵngcc0.ɵɵtemplate(3, DataTableComponent_th_18_button_3_span_3_Template, 3, 6, \"span\", 21);\n    ɵngcc0.ɵɵtemplate(4, DataTableComponent_th_18_button_3_span_4_Template, 1, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r26 = ɵngcc0.ɵɵnextContext();\n    const column_r8 = ctx_r26.$implicit;\n    const i_r9 = ctx_r26.index;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r11.itemCount === 0)(\"title\", !ctx_r11.sortAsc ? ctx_r11.labels.sortAscending : ctx_r11.labels.sortDescending);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", column_r8.sortable ? ctx_r11.id : null)(\"aria-labelledby\", \"col-\" + ctx_r11.id + \"-\" + i_r9);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r8.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.sortable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.resizable);\n} }\nfunction DataTableComponent_th_18_span_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"textContent\", column_r8.header);\n} }\nfunction DataTableComponent_th_18_span_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 24);\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r8.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c7, column_r8));\n} }\nfunction DataTableComponent_th_18_span_4_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵelement(1, \"i\", 26);\n    ɵngcc0.ɵɵelement(2, \"i\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r29 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", column_r8.property === ctx_r29.sortBy);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", column_r8.property !== ctx_r29.sortBy)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c8, ctx_r29.sortAsc, !ctx_r29.sortAsc));\n} }\nfunction DataTableComponent_th_18_span_4_span_4_Template(rf, ctx) { if (rf & 1) {\n    const _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 28);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function DataTableComponent_th_18_span_4_span_4_Template_span_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r35); const column_r8 = ɵngcc0.ɵɵnextContext(2).$implicit; const _r10 = ɵngcc0.ɵɵreference(1); const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.resizeColumnStart($event, column_r8, _r10); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction DataTableComponent_th_18_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, DataTableComponent_th_18_span_4_span_1_Template, 1, 1, \"span\", 29);\n    ɵngcc0.ɵɵtemplate(2, DataTableComponent_th_18_span_4_span_2_Template, 1, 4, \"span\", 20);\n    ɵngcc0.ɵɵtemplate(3, DataTableComponent_th_18_span_4_span_3_Template, 3, 6, \"span\", 21);\n    ɵngcc0.ɵɵtemplate(4, DataTableComponent_th_18_span_4_span_4_Template, 1, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r8 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r8.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.sortable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.resizable);\n} }\nfunction DataTableComponent_th_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 15, 16);\n    ɵngcc0.ɵɵpipe(2, \"px\");\n    ɵngcc0.ɵɵtemplate(3, DataTableComponent_th_18_button_3_Template, 5, 8, \"button\", 17);\n    ɵngcc0.ɵɵtemplate(4, DataTableComponent_th_18_span_4_Template, 5, 4, \"span\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const column_r8 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ɵngcc0.ɵɵpipeBind1(2, 11, column_r8.width));\n    ɵngcc0.ɵɵclassProp(\"sortable\", column_r8.sortable)(\"resizable\", column_r8.resizable);\n    ɵngcc0.ɵɵproperty(\"hide\", !column_r8.visible)(\"ngClass\", column_r8.styleClassObject);\n    ɵngcc0.ɵɵattribute(\"aria-sort\", column_r8.sortable ? column_r8.property === ctx_r2.sortBy ? ctx_r2.sortAsc ? \"ascending\" : \"descending\" : \"none\" : null);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r8.sortable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r8.sortable);\n} }\nfunction DataTableComponent_tbody_19_Template(rf, ctx) { if (rf & 1) {\n    const _r42 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tbody\", 30, 31);\n    ɵngcc0.ɵɵlistener(\"selectedChange\", function DataTableComponent_tbody_19_Template_tbody_selectedChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r42); const _r40 = ɵngcc0.ɵɵreference(1); const ctx_r41 = ɵngcc0.ɵɵnextContext(); return ctx_r41.onRowSelectChanged(_r40); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r38 = ctx.$implicit;\n    const index_r39 = ctx.index;\n    ɵngcc0.ɵɵproperty(\"item\", item_r38)(\"index\", index_r39);\n} }\nfunction DataTableComponent_tbody_20_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tbody\");\n    ɵngcc0.ɵɵelementStart(1, \"tr\");\n    ɵngcc0.ɵɵelementStart(2, \"td\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4.columnCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.noDataMessage);\n} }\nfunction DataTableComponent_tbody_21_tr_1_td_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 35);\n} if (rf & 2) {\n    const column_r47 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"hide\", !column_r47.visible);\n} }\nfunction DataTableComponent_tbody_21_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 34);\n    ɵngcc0.ɵɵelement(1, \"td\", 35);\n    ɵngcc0.ɵɵelementStart(2, \"td\", 35);\n    ɵngcc0.ɵɵtext(3, \"\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"td\", 35);\n    ɵngcc0.ɵɵtemplate(5, DataTableComponent_tbody_21_tr_1_td_5_Template, 1, 1, \"td\", 36);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const index_r45 = ctx.index;\n    const ctx_r43 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"row-odd\", (index_r45 + ctx_r43.items.length) % 2 === 0)(\"row-even\", (index_r45 + ctx_r43.items.length) % 2 === 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", !ctx_r43.expandColumnVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hide\", !ctx_r43.indexColumnVisible);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"hide\", !ctx_r43.selectColumnVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r43.columns);\n} }\nfunction DataTableComponent_tbody_21_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tbody\", 32);\n    ɵngcc0.ɵɵtemplate(1, DataTableComponent_tbody_21_tr_1_Template, 6, 8, \"tr\", 33);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.substituteItems);\n} }\nfunction DataTableComponent_div_22_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 37);\n    ɵngcc0.ɵɵelementStart(1, \"i\");\n    ɵngcc0.ɵɵelement(2, \"i\", 38);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction DataTableComponent_data_table_pagination_23_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"data-table-pagination\", 39);\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"limits\", ctx_r7.pageLimits);\n} }\nfunction DataTableHeaderComponent_p_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p\", 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r0.dataTable.title);\n} }\nfunction DataTableHeaderComponent_div_8_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableHeaderComponent_div_8_li_2_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.dataTable.expandColumnVisible = $event; })(\"change\", function DataTableHeaderComponent_div_8_li_2_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r2.dataTable.expandColumnVisible);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", ctx_r2.dataTable.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r2.dataTable.labels.expandColumn);\n} }\nfunction DataTableHeaderComponent_div_8_li_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableHeaderComponent_div_8_li_3_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.dataTable.indexColumnVisible = $event; })(\"change\", function DataTableHeaderComponent_div_8_li_3_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r3.dataTable.indexColumnVisible);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", ctx_r3.dataTable.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r3.dataTable.labels.indexColumn);\n} }\nfunction DataTableHeaderComponent_div_8_li_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableHeaderComponent_div_8_li_4_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.dataTable.selectColumnVisible = $event; })(\"change\", function DataTableHeaderComponent_div_8_li_4_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r4.dataTable.selectColumnVisible);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", ctx_r4.dataTable.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"textContent\", ctx_r4.dataTable.labels.selectColumn);\n} }\nfunction DataTableHeaderComponent_div_8_ng_template_5_li_0_Template(rf, ctx) { if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableHeaderComponent_div_8_ng_template_5_li_0_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const item_r15 = ɵngcc0.ɵɵnextContext().$implicit; return item_r15.visible = $event; })(\"change\", function DataTableHeaderComponent_div_8_ng_template_5_li_0_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r21 = ɵngcc0.ɵɵnextContext(3); return ctx_r21.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r15 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", item_r15.visible);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", ctx_r17.dataTable.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"textContent\", item_r15.header);\n} }\nfunction DataTableHeaderComponent_div_8_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableHeaderComponent_div_8_ng_template_5_li_0_Template, 4, 3, \"li\", 12);\n} if (rf & 2) {\n    const item_r15 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.dataTable.primaryColumn !== item_r15.property);\n} }\nfunction DataTableHeaderComponent_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 11);\n    ɵngcc0.ɵɵtemplate(2, DataTableHeaderComponent_div_8_li_2_Template, 4, 3, \"li\", 12);\n    ɵngcc0.ɵɵtemplate(3, DataTableHeaderComponent_div_8_li_3_Template, 4, 3, \"li\", 12);\n    ɵngcc0.ɵɵtemplate(4, DataTableHeaderComponent_div_8_li_4_Template, 4, 3, \"li\", 12);\n    ɵngcc0.ɵɵtemplate(5, DataTableHeaderComponent_div_8_ng_template_5_Template, 1, 1, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.dataTable.expandableRows);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.dataTable.indexColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.dataTable.selectColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.dataTable.columns);\n} }\nconst _c9 = [\"pageInput\"];\nfunction DataTablePaginationComponent_option_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 24);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const l_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", l_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(l_r2);\n} }\nconst _c10 = [\"listItem\"];\nfunction FieldFilterChooserPopupDialog_a_6_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 5, 6);\n    ɵngcc0.ɵɵlistener(\"click\", function FieldFilterChooserPopupDialog_a_6_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const field_r1 = ctx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.fieldSelected(field_r1); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    const _r2 = ɵngcc0.ɵɵreference(1);\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r0.activeItem == _r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", field_r1.header, \" \");\n} }\nfunction FieldFilterPopupDialog_mat_option_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const operator_r17 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", operator_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.data.labels.filterOperators[operator_r17], \" \");\n} }\nfunction FieldFilterPopupDialog_ng_container_16_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction FieldFilterPopupDialog_ng_container_16_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_container_16_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r9 = ɵngcc0.ɵɵreference(27);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n} }\nfunction FieldFilterPopupDialog_ng_container_17_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction FieldFilterPopupDialog_ng_container_17_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_container_17_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r7 = ɵngcc0.ɵɵreference(25);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r7);\n} }\nfunction FieldFilterPopupDialog_ng_container_18_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction FieldFilterPopupDialog_ng_container_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_container_18_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r15 = ɵngcc0.ɵɵreference(33);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r15);\n} }\nfunction FieldFilterPopupDialog_ng_container_19_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c11 = function (a0, a1) { return { options: a0, form: a1 }; };\nfunction FieldFilterPopupDialog_ng_container_19_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_container_19_ng_container_1_Template, 1, 0, \"ng-container\", 22);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    const _r11 = ɵngcc0.ɵɵreference(29);\n    const _r0 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r11)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c11, ctx_r5.data.fieldFilter.field.possibleOptions, _r0));\n} }\nfunction FieldFilterPopupDialog_ng_container_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction FieldFilterPopupDialog_ng_container_20_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_container_20_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r13 = ɵngcc0.ɵɵreference(31);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r13);\n} }\nfunction FieldFilterPopupDialog_ng_template_24_mat_error_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-error\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r23 = ɵngcc0.ɵɵreference(2);\n    const ctx_r25 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r25.getErrorMessage(_r23));\n} }\nfunction FieldFilterPopupDialog_ng_template_24_Template(rf, ctx) { if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 24, 25);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function FieldFilterPopupDialog_ng_template_24_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.filterValue = $event; });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"mat-datepicker-toggle\", 26);\n    ɵngcc0.ɵɵelement(4, \"mat-datepicker\", 27, 28);\n    ɵngcc0.ɵɵtemplate(6, FieldFilterPopupDialog_ng_template_24_mat_error_6_Template, 2, 1, \"mat-error\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r23 = ɵngcc0.ɵɵreference(2);\n    const _r24 = ɵngcc0.ɵɵreference(5);\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"errorStateMatcher\", ctx_r8.matcher)(\"ngModel\", ctx_r8.filterValue)(\"matDatepicker\", _r24)(\"placeholder\", ctx_r8.data.labels.date);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"for\", _r24);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r23 && _r23.invalid);\n} }\nfunction FieldFilterPopupDialog_ng_template_26_mat_error_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-error\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r28 = ɵngcc0.ɵɵreference(2);\n    const ctx_r29 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r29.getErrorMessage(_r28));\n} }\nfunction FieldFilterPopupDialog_ng_template_26_Template(rf, ctx) { if (rf & 1) {\n    const _r31 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 29, 25);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function FieldFilterPopupDialog_ng_template_26_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r31); const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.filterValue = $event; });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, FieldFilterPopupDialog_ng_template_26_mat_error_3_Template, 2, 1, \"mat-error\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r28 = ɵngcc0.ɵɵreference(2);\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r10.data.labels.value)(\"errorStateMatcher\", ctx_r10.matcher)(\"ngModel\", ctx_r10.filterValue);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r28 && _r28.invalid);\n} }\nfunction FieldFilterPopupDialog_ng_template_28_mat_checkbox_1_Template(rf, ctx) { if (rf & 1) {\n    const _r39 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-checkbox\", 32);\n    ɵngcc0.ɵɵlistener(\"change\", function FieldFilterPopupDialog_ng_template_28_mat_checkbox_1_Template_mat_checkbox_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); const option_r37 = ctx.$implicit; const ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38.valueCheckChange(option_r37, $event.checked); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r37 = ctx.$implicit;\n    const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r35.isValueChecked(option_r37));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r35.getPossibleOptionDisplayText(option_r37));\n} }\nfunction FieldFilterPopupDialog_ng_template_28_mat_error_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-error\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r36 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r36.MUST_SELECT_VALUE_VALIDATION);\n} }\nfunction FieldFilterPopupDialog_ng_template_28_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30);\n    ɵngcc0.ɵɵtemplate(1, FieldFilterPopupDialog_ng_template_28_mat_checkbox_1_Template, 2, 2, \"mat-checkbox\", 31);\n    ɵngcc0.ɵɵtemplate(2, FieldFilterPopupDialog_ng_template_28_mat_error_2_Template, 2, 1, \"mat-error\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const options_r32 = ctx.options;\n    const f_r34 = ctx.form;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", options_r32);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", f_r34.submitted && !ctx_r12.isAtleastOneValueSelected);\n} }\nfunction FieldFilterPopupDialog_ng_template_30_Template(rf, ctx) { if (rf & 1) {\n    const _r43 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 33);\n    ɵngcc0.ɵɵlistener(\"focus\", function FieldFilterPopupDialog_ng_template_30_Template_input_focus_1_listener() { ɵngcc0.ɵɵrestoreView(_r43); const _r41 = ɵngcc0.ɵɵreference(8); const _r40 = ɵngcc0.ɵɵreference(4); const ctx_r42 = ɵngcc0.ɵɵnextContext(); return ctx_r42.filterValue == false ? _r41.focus() : _r40.focus(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"mat-radio-group\", 34);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function FieldFilterPopupDialog_ng_template_30_Template_mat_radio_group_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r44 = ɵngcc0.ɵɵnextContext(); return ctx_r44.filterValue = $event; });\n    ɵngcc0.ɵɵelementStart(3, \"mat-radio-button\", 35, 36);\n    ɵngcc0.ɵɵelementStart(5, \"mat-icon\", 37);\n    ɵngcc0.ɵɵtext(6, \"check\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"mat-radio-button\", 20, 38);\n    ɵngcc0.ɵɵelementStart(9, \"mat-icon\", 37);\n    ɵngcc0.ɵɵtext(10, \"close\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r14.filterValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", true);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"value\", false);\n} }\nfunction FieldFilterPopupDialog_ng_template_32_mat_error_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-error\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r45 = ɵngcc0.ɵɵreference(2);\n    const ctx_r46 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r46.getErrorMessage(_r45));\n} }\nfunction FieldFilterPopupDialog_ng_template_32_Template(rf, ctx) { if (rf & 1) {\n    const _r48 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 39, 25);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function FieldFilterPopupDialog_ng_template_32_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r47 = ɵngcc0.ɵɵnextContext(); return ctx_r47.filterValue = $event; });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, FieldFilterPopupDialog_ng_template_32_mat_error_3_Template, 2, 1, \"mat-error\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r45 = ɵngcc0.ɵɵreference(2);\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r16.data.labels.value)(\"errorStateMatcher\", ctx_r16.matcher)(\"ngModel\", ctx_r16.filterValue);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r45 && _r45.invalid);\n} }\nfunction FilterBarComponent_mat_chip_5_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-chip\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function FilterBarComponent_mat_chip_5_Template_mat_chip_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const filter_r3 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.chipClicked($event, filter_r3); })(\"removed\", function FilterBarComponent_mat_chip_5_Template_mat_chip_removed_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const filter_r3 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.removeFilter(filter_r3); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"mat-icon\", 8);\n    ɵngcc0.ɵɵtext(3, \"cancel\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const filter_r3 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"removable\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.formatChipDisplayText(filter_r3), \" \");\n} }\nfunction isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nclass HideDirective {\n    /**\n     * @param {?} _elementRef\n     * @param {?} renderer\n     */\n    constructor(_elementRef, renderer) {\n        this._elementRef = _elementRef;\n        this.renderer = renderer;\n        this._prevCondition = false;\n    }\n    /**\n     * @param {?} newCondition\n     * @return {?}\n     */\n    set hide(newCondition) {\n        this.initDisplayStyle();\n        if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n            this._prevCondition = true;\n            this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n        }\n        else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n            this._prevCondition = false;\n            this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initDisplayStyle() {\n        if (this._displayStyle === undefined) {\n            /** @type {?} */\n            const displayStyle = this._elementRef.nativeElement.style.display;\n            if (displayStyle !== 'none') {\n                this._displayStyle = displayStyle;\n            }\n        }\n    }\n}\nHideDirective.ɵfac = function HideDirective_Factory(t) { return new (t || HideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nHideDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HideDirective, selectors: [[\"\", \"hide\", \"\"]], inputs: { hide: \"hide\" } });\n/** @nocollapse */\nHideDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nHideDirective.propDecorators = {\n    hide: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HideDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[hide]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { hide: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MinPipe {\n    /**\n     * @param {?} value\n     * @param {?} args\n     * @return {?}\n     */\n    transform(value, args) {\n        return Math.min.apply(null, value);\n    }\n}\nMinPipe.ɵfac = function MinPipe_Factory(t) { return new (t || MinPipe)(); };\nMinPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"min\", type: MinPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'min'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PixelConverter {\n    /**\n     * @param {?} value\n     * @param {?} args\n     * @return {?}\n     */\n    transform(value, args) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value === 'string') {\n            return value;\n        }\n        if (typeof value === 'number') {\n            return value + 'px';\n        }\n    }\n}\nPixelConverter.ɵfac = function PixelConverter_Factory(t) { return new (t || PixelConverter)(); };\nPixelConverter.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"px\", type: PixelConverter, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PixelConverter, [{\n        type: Pipe,\n        args: [{\n                name: 'px'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass DataTableResource {\n    /**\n     * @param {?} items\n     */\n    constructor(items) {\n        this.items = items;\n    }\n    /**\n     * @param {?} params\n     * @param {?=} filter\n     * @return {?}\n     */\n    query(params, filter) {\n        /** @type {?} */\n        let result = [];\n        if (filter) {\n            result = this.items.filter(filter);\n        }\n        else {\n            result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n        }\n        if (params.sortBy) {\n            result.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                if (typeof a[params.sortBy] === 'string') {\n                    return a[params.sortBy].localeCompare(b[params.sortBy]);\n                }\n                else {\n                    return a[params.sortBy] - b[params.sortBy];\n                }\n            }));\n            if (params.sortAsc === false) {\n                result.reverse();\n            }\n        }\n        if (params.offset !== undefined) {\n            if (params.limit === undefined) {\n                result = result.slice(params.offset, result.length);\n            }\n            else {\n                result = result.slice(params.offset, params.offset + params.limit);\n            }\n        }\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => resolve(result)));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    count() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => resolve(this.items.length)));\n        }));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnDirective {\n    constructor() {\n        this.styleClassObject = {}; // for [ngClass]\n        this.sortable = false;\n        this.resizable = false;\n        this.visible = true;\n    }\n    /**\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    getCellColor(row, index) {\n        if (this.cellColors !== undefined) {\n            return ((/** @type {?} */ (this.cellColors)))(row.item, row, this, index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initCellClass();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initCellClass() {\n        if (!this.styleClass && this.property) {\n            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n                this.styleClass = 'column-' + this.property;\n            }\n            else {\n                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n            }\n        }\n        if (this.styleClass != null) {\n            this.styleClassObject = {\n                [this.styleClass]: true\n            };\n        }\n    }\n}\nDataTableColumnDirective.ɵfac = function DataTableColumnDirective_Factory(t) { return new (t || DataTableColumnDirective)(); };\nDataTableColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnDirective, selectors: [[\"data-table-column\"]], contentQueries: function DataTableColumnDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n    } }, inputs: { sortable: \"sortable\", resizable: \"resizable\", visible: \"visible\", styleClass: \"styleClass\", header: \"header\", property: \"property\", cellColors: \"cellColors\", width: \"width\" } });\nDataTableColumnDirective.propDecorators = {\n    header: [{ type: Input }],\n    sortable: [{ type: Input }],\n    resizable: [{ type: Input }],\n    property: [{ type: Input }],\n    styleClass: [{ type: Input }],\n    cellColors: [{ type: Input }],\n    width: [{ type: Input }],\n    visible: [{ type: Input }],\n    cellTemplate: [{ type: ContentChild, args: ['dataTableCell',] }],\n    headerTemplate: [{ type: ContentChild, args: ['dataTableHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'data-table-column'\n            }]\n    }], function () { return []; }, { sortable: [{\n            type: Input\n        }], resizable: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }], header: [{\n            type: Input\n        }], property: [{\n            type: Input\n        }], cellColors: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], cellTemplate: [{\n            type: ContentChild,\n            args: ['dataTableCell']\n        }], headerTemplate: [{\n            type: ContentChild,\n            args: ['dataTableHeader']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableRowComponent {\n    /**\n     * @param {?} dataTable\n     * @param {?} renderer\n     * @param {?} elementRef\n     */\n    constructor(dataTable, renderer, elementRef) {\n        this.dataTable = dataTable;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this._this = this;\n        this._listeners = [];\n        this.selectedChange = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.selectedChange.emit(selected);\n    }\n    // other:\n    /**\n     * @return {?}\n     */\n    get displayIndex() {\n        if (this.dataTable.pagination) {\n            return this.dataTable.displayParams.offset + this.index + 1;\n        }\n        else {\n            return this.index + 1;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getTooltip() {\n        if (this.dataTable.rowTooltip) {\n            return this.dataTable.rowTooltip(this.item, this, this.index);\n        }\n        return '';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.dataTable.rowClick.observers.length > 0) {\n            this._listeners.push(this.renderer.listen(this.elementRef.nativeElement, 'click', (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.dataTable.rowClicked(this, event))));\n        }\n        if (this.dataTable.rowDoubleClick.observers.length > 0) {\n            this._listeners.push(this.renderer.listen(this.elementRef.nativeElement, 'dblclick', (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.dataTable.rowDoubleClicked(this, event))));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.selected = false;\n        this._listeners.forEach((/**\n         * @param {?} fn\n         * @return {?}\n         */\n        fn => fn()));\n    }\n}\nDataTableRowComponent.ɵfac = function DataTableRowComponent_Factory(t) { return new (t || DataTableRowComponent)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => DataTableComponent))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableRowComponent, selectors: [[\"\", \"dataTableRow\", \"\"]], inputs: { item: \"item\", index: \"index\" }, outputs: { selectedChange: \"selectedChange\" }, attrs: _c2, decls: 9, vars: 27, consts: [[1, \"data-table-row\", 3, \"title\"], [3, \"hide\"], [1, \"row-expand-button\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-lg\", 3, \"ngClass\"], [1, \"index-column\", 3, \"hide\", \"textContent\"], [1, \"select-column\", 3, \"hide\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"title\", \"ngModelChange\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"row-expansion\", 3, \"hide\", 4, \"ngIf\"], [\"scope\", \"row\", \"class\", \"data-column\", 3, \"hide\", \"ngClass\", \"background-color\", 4, \"ngIf\"], [\"class\", \"data-column\", 3, \"hide\", \"ngClass\", \"background-color\", 4, \"ngIf\"], [\"scope\", \"row\", 1, \"data-column\", 3, \"hide\", \"ngClass\"], [3, \"textContent\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"textContent\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"data-column\", 3, \"hide\", \"ngClass\"], [1, \"row-expansion\", 3, \"hide\"]], template: function DataTableRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tr\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"td\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTableRowComponent_Template_button_click_2_listener($event) { ctx.expanded = !ctx.expanded; return $event.stopPropagation(); });\n        ɵngcc0.ɵɵelement(3, \"i\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"td\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"td\", 5);\n        ɵngcc0.ɵɵelementStart(6, \"input\", 6);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableRowComponent_Template_input_ngModelChange_6_listener($event) { return ctx.selected = $event; });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, DataTableRowComponent_ng_template_7_Template, 2, 2, \"ng-template\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, DataTableRowComponent_tr_8_Template, 3, 7, \"tr\", 8);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.dataTable.getRowColor(ctx.item, ctx.index, ctx._this));\n        ɵngcc0.ɵɵclassProp(\"row-odd\", ctx.index % 2 === 0)(\"row-even\", ctx.index % 2 === 1)(\"selected\", ctx.selected)(\"clickable\", ctx.dataTable.selectOnRowClick);\n        ɵngcc0.ɵɵproperty(\"title\", ctx.getTooltip());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.dataTable.expandColumnVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"title\", ctx.dataTable.labels.expandRow.replace(\"{cell_content}\", \"\" + ctx.item[ctx.dataTable.primaryColumn]));\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.expanded)(\"aria-label\", ctx.dataTable.labels.expandRow.replace(\"{cell_content}\", \"\" + ctx.item[ctx.dataTable.primaryColumn]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(24, _c5, !ctx.expanded, ctx.expanded));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.dataTable.indexColumnVisible)(\"textContent\", ctx.displayIndex);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.dataTable.selectColumnVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selected)(\"title\", ctx.dataTable.labels.selectRow.replace(\"{cell_content}\", \"\" + ctx.item[ctx.dataTable.primaryColumn]));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.dataTable.labels.selectRow.replace(\"{cell_content}\", \"\" + ctx.item[ctx.dataTable.primaryColumn]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dataTable.columns);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataTable.expandableRows);\n    } }, directives: [HideDirective, ɵngcc1.NgClass, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [\".select-column[_ngcontent-%COMP%]{text-align:center}.row-expand-button[_ngcontent-%COMP%]{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable[_ngcontent-%COMP%]{cursor:pointer}th[_ngcontent-%COMP%]{font-weight:initial}\"] });\n/** @nocollapse */\nDataTableRowComponent.ctorParameters = () => [\n    { type: DataTableComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => DataTableComponent)),] }] },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nDataTableRowComponent.propDecorators = {\n    item: [{ type: Input }],\n    index: [{ type: Input }],\n    selectedChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[dataTableRow]',\n                template: `<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\" [attr.data-label]=\"column.header\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n`,\n                styles: [`.select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}`]\n            }]\n    }], function () { return [{ type: DataTableComponent, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => DataTableComponent))]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { selectedChange: [{\n            type: Output\n        }], item: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultTranslations = {\n    headerReload: 'reload {title} table',\n    headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n    headerColumnSelectorAdded: '{column_name} added to {title} table',\n    headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n    indexColumn: 'index',\n    selectColumn: 'select',\n    selectRow: 'select {cell_content}',\n    selectAllRows: 'select all rows',\n    expandColumn: 'expand',\n    expandRow: 'expand {cell_content}',\n    sortedAscending: '{title} table sorted by {header} ascending',\n    sortedDescending: '{title} table sorted by {header} descending',\n    sortAscending: 'activate to sort ascending',\n    sortDescending: 'activate to sort descending',\n    paginationLimit: 'Limit',\n    paginationText: 'Results: {from} to {to} of {total}',\n    paginationTotalPages: 'of',\n    firstPage: 'first page',\n    prevPage: 'previous page',\n    pageNumberLabel: 'Page',\n    pageNumber: 'page number',\n    pageNumberNofM: '({N} of {M})',\n    nextPage: 'next page',\n    lastPage: 'last page',\n    loadingText: '{title} table is loading',\n    loadedText: '{title} table loaded',\n    addFilter: 'Add filter',\n    searchField: 'Search Field',\n    selectedValueRequired: 'You must select a value',\n    validDateRequired: 'You must enter valid date',\n    valueRequired: 'You must enter a value',\n    numericValueRequired: 'You must enter a numeric value',\n    apply: 'Apply',\n    value: 'Value',\n    date: 'Date',\n    not: 'Not',\n    filterOperators: {\n        'lt': '<',\n        'gt': '>',\n        'lte': '<=',\n        'gte': '>=',\n        'eq': '=',\n        'ne': 'not equal to',\n        'contains': 'contains',\n        'not_contains': 'not contains',\n        'starts': 'starts with',\n        'ends': 'ends with',\n        'empty': 'is empty',\n        'true': 'true',\n        'false': 'false'\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*tslint:disable-next-line*/\n/**\n * @param {?} event\n * @param {?} __1\n * @return {?}\n */\nfunction drag(event, { move: move, up: up }) {\n    /** @type {?} */\n    const startX = event.pageX;\n    /** @type {?} */\n    const startY = event.pageY;\n    /** @type {?} */\n    let x = startX;\n    /** @type {?} */\n    let y = startY;\n    /** @type {?} */\n    let moved = false;\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    function mouseMoveHandler(evt) {\n        /** @type {?} */\n        const dx = evt.pageX - x;\n        /** @type {?} */\n        const dy = evt.pageY - y;\n        x = evt.pageX;\n        y = evt.pageY;\n        if (dx || dy) {\n            moved = true;\n        }\n        move(evt, dx, dy, x, y);\n        event.preventDefault(); // to avoid text selection\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    function mouseUpHandler(evt) {\n        x = evt.pageX;\n        y = evt.pageY;\n        document.removeEventListener('mousemove', mouseMoveHandler);\n        document.removeEventListener('mouseup', mouseUpHandler);\n        if (up) {\n            up(event, x, y, moved);\n        }\n    }\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\nclass DataTableComponent {\n    constructor() {\n        this._items = [];\n        // One-time optional bindings with default values:\n        this.title = '';\n        this.showTitle = true;\n        this.header = true;\n        this.pagination = true;\n        this.indexColumn = true;\n        this.indexColumnHeader = '';\n        this.selectColumn = false;\n        this.multiSelect = true;\n        this.substituteRows = true;\n        this.expandableRows = false;\n        this.selectOnRowClick = false;\n        this.autoReload = true;\n        this.showReloading = false;\n        this.pageLimits = [10, 25, 50, 100, 250];\n        this.primaryColumn = '';\n        this.tableCssClass = '';\n        this.tableContainerCssClass = '';\n        // reload emitter\n        this.reload = new EventEmitter();\n        // event handlers:\n        this.rowClick = new EventEmitter();\n        this.rowDoubleClick = new EventEmitter();\n        this.headerClick = new EventEmitter();\n        this.cellClick = new EventEmitter();\n        this.refreshClick = new EventEmitter();\n        this.filterAdded = new EventEmitter();\n        this.filterRemoved = new EventEmitter();\n        this.filterUpdated = new EventEmitter();\n        this.filterChanged = new EventEmitter();\n        this._displayParams = (/** @type {?} */ ({})); // params of the last finished reload\n        // params of the last finished reload\n        this.subject = new Subject();\n        this.notifier = new Subject();\n        this.selectedRows = [];\n        this.id = `datatable-${nextId++}`;\n        // select all checkbox flag\n        this._selectAllCheckbox = false;\n        // column resizing:\n        this._resizeInProgress = false;\n        this.resizeLimit = 30;\n        // Reloading:\n        this._reloading = false;\n        this._sortAsc = true;\n        this._offset = 0;\n        this._limit = 10;\n    }\n    /**\n     * @return {?}\n     */\n    get items() {\n        return this._items;\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    set items(items) {\n        this._items = items;\n        // no need to call notifier.next() because _onReloadFinished()\n        // will change reloaded value causing notifier.next() to be called implicitly.\n        this._onReloadFinished();\n    }\n    /**\n     * @return {?}\n     */\n    get itemCount() {\n        return this._itemCount;\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    set itemCount(count) {\n        this._itemCount = count;\n        this.notifier.next();\n    }\n    /**\n     * @return {?}\n     */\n    get reloading() {\n        return this._reloading;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set reloading(val) {\n        this._reloading = val;\n        this.notifier.next();\n    }\n    /**\n     * @return {?}\n     */\n    get sortBy() {\n        return this._sortBy;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sortBy(value) {\n        this._sortBy = value;\n        this.subject.next();\n    }\n    /**\n     * @return {?}\n     */\n    get sortAsc() {\n        return this._sortAsc;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sortAsc(value) {\n        this._sortAsc = value;\n        this.subject.next();\n    }\n    /**\n     * @return {?}\n     */\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set offset(value) {\n        this._offset = value;\n        this.subject.next();\n    }\n    /**\n     * @return {?}\n     */\n    get limit() {\n        return this._limit;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set limit(value) {\n        this._limit = value;\n        this.subject.next();\n    }\n    // calculated property:\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        this.offset = (value - 1) * this.limit;\n    }\n    /**\n     * @return {?}\n     */\n    get lastPage() {\n        return Math.ceil(this.itemCount / this.limit);\n    }\n    // setting multiple observable properties simultaneously\n    /**\n     * @param {?} sortBy\n     * @param {?} asc\n     * @return {?}\n     */\n    sort(sortBy, asc) {\n        this.sortBy = sortBy;\n        this.sortAsc = asc;\n    }\n    // init\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initDefaultValues();\n        this._initDefaultClickEvents();\n        this._updateDisplayParams();\n        if (this.pageLimits.indexOf(this.limit) < 0) {\n            this.limit = this.pageLimits[0];\n        }\n        this.labels = Object.assign({}, defaultTranslations, this.labels);\n        if (this.autoReload) {\n            this.reloadItems();\n        }\n        this.notifier$ = this.notifier.subscribe((/**\n         * @return {?}\n         */\n        () => this._notify()));\n        this.subject$ = this.subject.pipe(debounceTime(100)).subscribe((/**\n         * @return {?}\n         */\n        () => this.reloadItems()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initDefaultValues() {\n        this.indexColumnVisible = this.indexColumn;\n        this.selectColumnVisible = this.selectColumn;\n        this.expandColumnVisible = this.expandableRows;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initDefaultClickEvents() {\n        this.headerClick.subscribe((/**\n         * @param {?} tableEvent\n         * @return {?}\n         */\n        (tableEvent) => this.sortColumn(tableEvent.column)));\n        if (this.selectOnRowClick) {\n            this.rowClick.subscribe((/**\n             * @param {?} tableEvent\n             * @return {?}\n             */\n            (tableEvent) => tableEvent.row.selected = !tableEvent.row.selected));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    reloadItems() {\n        this.reloading = true;\n        this.reload.emit(this._getRemoteParameters());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _onReloadFinished() {\n        if (this.reloading) {\n            this._updateDisplayParams();\n            this._selectAllCheckbox = false;\n            this.reloading = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get displayParams() {\n        return this._displayParams;\n    }\n    /**\n     * @return {?}\n     */\n    _updateDisplayParams() {\n        this._displayParams = {\n            sortBy: this.sortBy,\n            sortAsc: this.sortAsc,\n            offset: this.offset,\n            limit: this.limit\n        };\n    }\n    /**\n     * @param {?} row\n     * @param {?} event\n     * @return {?}\n     */\n    rowClicked(row, event) {\n        this.rowClick.emit({ row, event });\n    }\n    /**\n     * @param {?} row\n     * @param {?} event\n     * @return {?}\n     */\n    rowDoubleClicked(row, event) {\n        this.rowDoubleClick.emit({ row, event });\n    }\n    /**\n     * @param {?} column\n     * @param {?} event\n     * @return {?}\n     */\n    headerClicked(column, event) {\n        if (!this._resizeInProgress) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.headerClick.emit({ column, event });\n        }\n        else {\n            this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n        }\n    }\n    /**\n     * @private\n     * @param {?} column\n     * @param {?} row\n     * @param {?} event\n     * @return {?}\n     */\n    cellClicked(column, row, event) {\n        this.cellClick.emit({ row, column, event });\n    }\n    // functions:\n    /**\n     * @private\n     * @return {?}\n     */\n    _getRemoteParameters() {\n        /** @type {?} */\n        const params = (/** @type {?} */ ({}));\n        if (this.sortBy) {\n            params.sortBy = this.sortBy;\n            params.sortAsc = this.sortAsc;\n        }\n        if (this.pagination) {\n            params.offset = this.offset;\n            params.limit = this.limit;\n        }\n        return params;\n    }\n    /**\n     * @private\n     * @param {?} column\n     * @return {?}\n     */\n    sortColumn(column) {\n        if (column.sortable) {\n            /** @type {?} */\n            const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n            this.sort(column.property, ascending);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get columnCount() {\n        /** @type {?} */\n        let count = 0;\n        count += this.indexColumnVisible ? 1 : 0;\n        count += this.selectColumnVisible ? 1 : 0;\n        count += this.expandColumnVisible ? 1 : 0;\n        this.columns.toArray().forEach((/**\n         * @param {?} column\n         * @return {?}\n         */\n        column => {\n            count += column.visible ? 1 : 0;\n        }));\n        return count;\n    }\n    /**\n     * @param {?} item\n     * @param {?} index\n     * @param {?} row\n     * @return {?}\n     */\n    getRowColor(item, index, row) {\n        if (this.rowColors !== undefined) {\n            return ((/** @type {?} */ (this.rowColors)))(item, row, index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get selectAllCheckbox() {\n        return this._selectAllCheckbox;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectAllCheckbox(value) {\n        this._selectAllCheckbox = value;\n        this._onSelectAllChanged(value);\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _onSelectAllChanged(value) {\n        this.rows.toArray().forEach((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.selected = value));\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    onRowSelectChanged(row) {\n        // maintain the selectedRow(s) view\n        if (this.multiSelect) {\n            /** @type {?} */\n            const index = this.selectedRows.indexOf(row);\n            if (row.selected && index < 0) {\n                this.selectedRows.push(row);\n            }\n            else if (!row.selected && index >= 0) {\n                this.selectedRows.splice(index, 1);\n            }\n        }\n        else {\n            if (row.selected) {\n                this.selectedRow = row;\n            }\n            else if (this.selectedRow === row) {\n                delete this.selectedRow;\n            }\n        }\n        // unselect all other rows:\n        if (row.selected && !this.multiSelect) {\n            this.rows.toArray().filter((/**\n             * @param {?} row_\n             * @return {?}\n             */\n            row_ => row_.selected)).forEach((/**\n             * @param {?} row_\n             * @return {?}\n             */\n            row_ => {\n                if (row_ !== row) { // avoid endless loop\n                    row_.selected = false;\n                }\n            }));\n        }\n    }\n    // other:\n    /**\n     * @return {?}\n     */\n    get substituteItems() {\n        return Array.from({ length: this.displayParams.limit - this.items.length });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} column\n     * @param {?} columnElement\n     * @return {?}\n     */\n    resizeColumnStart(event, column, columnElement) {\n        this._resizeInProgress = true;\n        /** @type {?} */\n        let startOffset = columnElement.offsetWidth - event.pageX;\n        drag(event, {\n            move: (/**\n             * @param {?} moveEvent\n             * @param {?} dx\n             * @return {?}\n             */\n            (moveEvent, dx) => {\n                if (this._isResizeInLimit(columnElement, dx)) {\n                    column.width = startOffset + moveEvent.pageX + dx;\n                }\n            }),\n        });\n    }\n    /**\n     * @private\n     * @param {?} columnElement\n     * @param {?} dx\n     * @return {?}\n     */\n    _isResizeInLimit(columnElement, dx) {\n        /* This is needed because CSS min-width didn't work on table-layout: fixed.\n             Without the limits, resizing can make the next column disappear completely,\n             and even increase the table width. The current implementation suffers from the fact,\n             that offsetWidth sometimes contains out-of-date values. */\n        if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n            !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n            (dx >= 0 && (((/** @type {?} */ (columnElement.nextElementSibling))).offsetWidth + dx) <= this.resizeLimit)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.primaryColumn === '') {\n            this.primaryColumn = ((/** @type {?} */ (this.columns.first))).property;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _notify() {\n        /** @type {?} */\n        const loading = this.reloading;\n        this.reloadNotification = loading ?\n            this.labels.loadingText.replace('{title}', this.title) :\n            this.labels.loadedText.replace('{title}', this.title);\n        if (!loading) {\n            if (this.pagination) {\n                this.paginationNotification = this.labels.paginationText\n                    .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n                    .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n                    .replace('{total}', '' + this.itemCount);\n            }\n            else {\n                this.paginationNotification = '';\n            }\n            if (this.columns !== undefined && this.sortBy !== undefined) {\n                /** @type {?} */\n                const col = (/** @type {?} */ (this.columns.toArray().find((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                column => column.property === this.sortBy))));\n                this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n                    .replace('{title}', this.title)\n                    .replace('{header}', col.header);\n            }\n            else {\n                this.sortNotification = '';\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subject$.unsubscribe();\n        this.notifier$.unsubscribe();\n    }\n}\nDataTableComponent.ɵfac = function DataTableComponent_Factory(t) { return new (t || DataTableComponent)(); };\nDataTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableComponent, selectors: [[\"data-table\"]], contentQueries: function DataTableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c6, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DataTableColumnDirective, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expandTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n    } }, viewQuery: function DataTableComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataTableRowComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rows = _t);\n    } }, inputs: { title: \"title\", showTitle: \"showTitle\", header: \"header\", pagination: \"pagination\", indexColumn: \"indexColumn\", indexColumnHeader: \"indexColumnHeader\", selectColumn: \"selectColumn\", multiSelect: \"multiSelect\", substituteRows: \"substituteRows\", expandableRows: \"expandableRows\", selectOnRowClick: \"selectOnRowClick\", autoReload: \"autoReload\", showReloading: \"showReloading\", pageLimits: \"pageLimits\", primaryColumn: \"primaryColumn\", tableCssClass: \"tableCssClass\", tableContainerCssClass: \"tableContainerCssClass\", items: \"items\", itemCount: \"itemCount\", sortBy: \"sortBy\", sortAsc: \"sortAsc\", offset: \"offset\", limit: \"limit\", page: \"page\", labels: \"labels\", rowColors: \"rowColors\", rowTooltip: \"rowTooltip\", filterableFields: \"filterableFields\", filters: \"filters\", noDataMessage: \"noDataMessage\" }, outputs: { reload: \"reload\", rowClick: \"rowClick\", rowDoubleClick: \"rowDoubleClick\", headerClick: \"headerClick\", cellClick: \"cellClick\", refreshClick: \"refreshClick\", filterAdded: \"filterAdded\", filterRemoved: \"filterRemoved\", filterUpdated: \"filterUpdated\", filterChanged: \"filterChanged\" }, decls: 24, vars: 29, consts: [[1, \"data-table-wrapper\"], [\"role\", \"status\", \"aria-live\", \"polite\", \"aria-atomic\", \"false\", \"aria-relevant\", \"text\", 1, \"sr-only\"], [3, \"textContent\"], [4, \"ngIf\"], [3, \"id\"], [1, \"sr-only\", 3, \"textContent\"], [1, \"expand-column-header\", 3, \"hide\"], [\"scope\", \"col\", 1, \"index-column-header\", 3, \"hide\"], [1, \"select-column-header\", 3, \"hide\"], [\"type\", \"checkbox\", 3, \"hide\", \"ngModel\", \"disabled\", \"title\", \"ngModelChange\"], [\"scope\", \"col\", \"class\", \"column-header\", 3, \"hide\", \"sortable\", \"resizable\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"data-table-row-wrapper\", \"dataTableRow\", \"\", 3, \"item\", \"index\", \"selectedChange\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"substitute-rows\", 4, \"ngIf\"], [\"class\", \"busy\", 4, \"ngIf\"], [3, \"limits\", 4, \"ngIf\"], [\"scope\", \"col\", 1, \"column-header\", 3, \"hide\", \"ngClass\"], [\"th\", \"\"], [3, \"disabled\", \"title\", \"click\", 4, \"ngIf\"], [3, \"disabled\", \"title\", \"click\"], [3, \"id\", \"textContent\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"class\", \"column-sort-icon\", 4, \"ngIf\"], [\"class\", \"column-resize-handle\", 3, \"mousedown\", 4, \"ngIf\"], [3, \"id\", \"textContent\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"column-sort-icon\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-sort\", \"column-sortable-icon\", 3, \"hide\"], [\"aria-hidden\", \"true\", 1, \"fa\", 3, \"hide\", \"ngClass\"], [1, \"column-resize-handle\", 3, \"mousedown\"], [3, \"textContent\", 4, \"ngIf\"], [\"dataTableRow\", \"\", 1, \"data-table-row-wrapper\", 3, \"item\", \"index\", \"selectedChange\"], [\"row\", \"\"], [1, \"substitute-rows\"], [\"role\", \"presentation\", 3, \"row-odd\", \"row-even\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [3, \"hide\"], [3, \"hide\", 4, \"ngFor\", \"ngForOf\"], [1, \"busy\"], [1, \"fa\", \"fa-spin\", \"fa-cog\", \"fa-2x\"], [3, \"limits\"]], template: function DataTableComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n        ɵngcc0.ɵɵelement(4, \"span\", 2);\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, DataTableComponent_data_table_header_6_Template, 1, 0, \"data-table-header\", 3);\n        ɵngcc0.ɵɵtemplate(7, DataTableComponent_filter_bar_7_Template, 1, 0, \"filter-bar\", 3);\n        ɵngcc0.ɵɵelementStart(8, \"div\");\n        ɵngcc0.ɵɵelementStart(9, \"table\", 4);\n        ɵngcc0.ɵɵelement(10, \"caption\", 5);\n        ɵngcc0.ɵɵelementStart(11, \"thead\");\n        ɵngcc0.ɵɵelementStart(12, \"tr\");\n        ɵngcc0.ɵɵelement(13, \"td\", 6);\n        ɵngcc0.ɵɵelementStart(14, \"th\", 7);\n        ɵngcc0.ɵɵelement(15, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(16, \"td\", 8);\n        ɵngcc0.ɵɵelementStart(17, \"input\", 9);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTableComponent_Template_input_ngModelChange_17_listener($event) { return ctx.selectAllCheckbox = $event; });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(18, DataTableComponent_th_18_Template, 5, 13, \"th\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(19, DataTableComponent_tbody_19_Template, 2, 2, \"tbody\", 11);\n        ɵngcc0.ɵɵtemplate(20, DataTableComponent_tbody_20_Template, 4, 2, \"tbody\", 3);\n        ɵngcc0.ɵɵtemplate(21, DataTableComponent_tbody_21_Template, 2, 1, \"tbody\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(22, DataTableComponent_div_22_Template, 3, 0, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(23, DataTableComponent_data_table_pagination_23_Template, 1, 1, \"data-table-pagination\", 14);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.reloadNotification);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.paginationNotification);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.sortNotification);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.columnSelectorNotification);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.header);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filterableFields && ctx.filterableFields.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"data-table-box \", ctx.tableContainerCssClass, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"table data-table \", ctx.tableCssClass, \"\");\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.title);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.expandColumnVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.indexColumnVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.indexColumnHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.selectColumnVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"hide\", !ctx.multiSelect)(\"ngModel\", ctx.selectAllCheckbox)(\"disabled\", ctx.itemCount === 0)(\"title\", ctx.labels.selectAllRows);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.labels.selectAllRows);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.itemCount === 0 && ctx.noDataMessage);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.pagination && ctx.substituteRows);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showReloading && ctx.reloading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.pagination);\n    } }, directives: function () { return [ɵngcc1.NgIf, HideDirective, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgForOf, DataTableHeaderComponent,\n        FilterBarComponent, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet, DataTableRowComponent,\n        DataTablePaginationComponent]; }, pipes: function () { return [PixelConverter]; }, styles: [\"[_nghost-%COMP%]     .data-table.table>tbody+tbody{border-top:none}[_nghost-%COMP%]     .data-table.table td{vertical-align:middle}[_nghost-%COMP%]     .data-table>tbody>tr>td, [_nghost-%COMP%]     .data-table>thead>tr>th{overflow:hidden}[_nghost-%COMP%]     .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}[_nghost-%COMP%]     .row-odd{background-color:#f6f6f6}.data-table[_ngcontent-%COMP%]   .substitute-rows[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:hover, [_nghost-%COMP%]     .data-table .data-table-row:hover{background-color:#ececec}.data-table[_ngcontent-%COMP%]{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header[_ngcontent-%COMP%]{position:relative}.expand-column-header[_ngcontent-%COMP%]{width:50px}.select-column-header[_ngcontent-%COMP%]{width:50px;text-align:center}.index-column-header[_ngcontent-%COMP%]{width:40px}.column-header.sortable[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{margin-left:8px}.column-header.resizable[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{margin-right:8px}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]   .column-sortable-icon[_ngcontent-%COMP%]{color:#d3d3d3}.column-header[_ngcontent-%COMP%]   .column-resize-handle[_ngcontent-%COMP%]{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box[_ngcontent-%COMP%]{position:relative}.busy[_ngcontent-%COMP%]{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}\"] });\n/** @nocollapse */\nDataTableComponent.ctorParameters = () => [];\nDataTableComponent.propDecorators = {\n    items: [{ type: Input }],\n    itemCount: [{ type: Input }],\n    columns: [{ type: ContentChildren, args: [DataTableColumnDirective,] }],\n    rows: [{ type: ViewChildren, args: [DataTableRowComponent,] }],\n    expandTemplate: [{ type: ContentChild, args: ['dataTableExpand',] }],\n    title: [{ type: Input }],\n    showTitle: [{ type: Input }],\n    header: [{ type: Input }],\n    pagination: [{ type: Input }],\n    indexColumn: [{ type: Input }],\n    indexColumnHeader: [{ type: Input }],\n    rowColors: [{ type: Input }],\n    rowTooltip: [{ type: Input }],\n    filterableFields: [{ type: Input }],\n    filters: [{ type: Input }],\n    selectColumn: [{ type: Input }],\n    multiSelect: [{ type: Input }],\n    substituteRows: [{ type: Input }],\n    expandableRows: [{ type: Input }],\n    labels: [{ type: Input }],\n    selectOnRowClick: [{ type: Input }],\n    autoReload: [{ type: Input }],\n    showReloading: [{ type: Input }],\n    noDataMessage: [{ type: Input }],\n    pageLimits: [{ type: Input }],\n    primaryColumn: [{ type: Input }],\n    tableCssClass: [{ type: Input }],\n    tableContainerCssClass: [{ type: Input }],\n    reload: [{ type: Output }],\n    rowClick: [{ type: Output }],\n    rowDoubleClick: [{ type: Output }],\n    headerClick: [{ type: Output }],\n    cellClick: [{ type: Output }],\n    refreshClick: [{ type: Output }],\n    filterAdded: [{ type: Output, args: ['filterAdded',] }],\n    filterRemoved: [{ type: Output, args: ['filterRemoved',] }],\n    filterUpdated: [{ type: Output, args: ['filterUpdated',] }],\n    filterChanged: [{ type: Output, args: ['filterChanged',] }],\n    sortBy: [{ type: Input }],\n    sortAsc: [{ type: Input }],\n    offset: [{ type: Input }],\n    limit: [{ type: Input }],\n    page: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableComponent, [{\n        type: Component,\n        args: [{\n                selector: 'data-table',\n                template: `<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n  <filter-bar *ngIf=\"filterableFields && filterableFields.length > 0\"></filter-bar>\n\n  <div class=\"data-table-box {{tableContainerCssClass}}\">\n    <table class=\"table data-table {{tableCssClass}}\" [id]=\"id\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n`,\n                styles: [`:host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}`]\n            }]\n    }], function () { return []; }, { title: [{\n            type: Input\n        }], showTitle: [{\n            type: Input\n        }], header: [{\n            type: Input\n        }], pagination: [{\n            type: Input\n        }], indexColumn: [{\n            type: Input\n        }], indexColumnHeader: [{\n            type: Input\n        }], selectColumn: [{\n            type: Input\n        }], multiSelect: [{\n            type: Input\n        }], substituteRows: [{\n            type: Input\n        }], expandableRows: [{\n            type: Input\n        }], selectOnRowClick: [{\n            type: Input\n        }], autoReload: [{\n            type: Input\n        }], showReloading: [{\n            type: Input\n        }], pageLimits: [{\n            type: Input\n        }], primaryColumn: [{\n            type: Input\n        }], tableCssClass: [{\n            type: Input\n        }], tableContainerCssClass: [{\n            type: Input\n        }], reload: [{\n            type: Output\n        }], rowClick: [{\n            type: Output\n        }], rowDoubleClick: [{\n            type: Output\n        }], headerClick: [{\n            type: Output\n        }], cellClick: [{\n            type: Output\n        }], refreshClick: [{\n            type: Output\n        }], filterAdded: [{\n            type: Output,\n            args: ['filterAdded']\n        }], filterRemoved: [{\n            type: Output,\n            args: ['filterRemoved']\n        }], filterUpdated: [{\n            type: Output,\n            args: ['filterUpdated']\n        }], filterChanged: [{\n            type: Output,\n            args: ['filterChanged']\n        }], items: [{\n            type: Input\n        }], itemCount: [{\n            type: Input\n        }], sortBy: [{\n            type: Input\n        }], sortAsc: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], limit: [{\n            type: Input\n        }], page: [{\n            type: Input\n        }], labels: [{\n            type: Input\n        }], columns: [{\n            type: ContentChildren,\n            args: [DataTableColumnDirective]\n        }], rows: [{\n            type: ViewChildren,\n            args: [DataTableRowComponent]\n        }], expandTemplate: [{\n            type: ContentChild,\n            args: ['dataTableExpand']\n        }], rowColors: [{\n            type: Input\n        }], rowTooltip: [{\n            type: Input\n        }], filterableFields: [{\n            type: Input\n        }], filters: [{\n            type: Input\n        }], noDataMessage: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableHeaderComponent {\n    /**\n     * @param {?} dataTable\n     * @param {?} elemRef\n     */\n    constructor(dataTable, elemRef) {\n        this.dataTable = dataTable;\n        this.elemRef = elemRef;\n        this.columnSelectorOpen = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickHandler(event) {\n        if (!this.elemRef.nativeElement.contains(event.target)) {\n            this.columnSelectorOpen = false;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyUpHandler(event) {\n        if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n            this.columnSelectorOpen = false;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChange(event) {\n        /** @type {?} */\n        const isChecked = ((/** @type {?} */ (event.target))).checked;\n        /** @type {?} */\n        const columnName = ((/** @type {?} */ (event.target))).parentElement.textContent.trim();\n        /** @type {?} */\n        const interpolateParams = {\n            'column_name': columnName,\n            'title': this.dataTable.title\n        };\n        this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n            this.dataTable.labels.headerColumnSelectorRemoved)\n            .replace('{column_name}', interpolateParams.column_name)\n            .replace('{title}', interpolateParams.title);\n    }\n}\nDataTableHeaderComponent.ɵfac = function DataTableHeaderComponent_Factory(t) { return new (t || DataTableHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => DataTableComponent))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableHeaderComponent, selectors: [[\"data-table-header\"]], hostBindings: function DataTableHeaderComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderComponent_click_HostBindingHandler($event) { return ctx.onClickHandler($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"keyup\", function DataTableHeaderComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUpHandler($event); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, decls: 9, vars: 8, consts: [[1, \"data-table-header\"], [\"class\", \"h4 title\", 3, \"textContent\", 4, \"ngIf\"], [1, \"button-panel\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"btn-sm\", \"refresh-button\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-refresh\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"btn-sm\", \"column-selector-button\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-list\"], [1, \"column-selector-wrapper\"], [\"class\", \"column-selector-box panel panel-default\", 4, \"ngIf\"], [1, \"h4\", \"title\", 3, \"textContent\"], [1, \"column-selector-box\", \"panel\", \"panel-default\"], [1, \"list-group\", \"list-group-flush\"], [\"class\", \"list-group-item column-selector-column checkbox\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"list-group-item\", \"column-selector-column\", \"checkbox\"], [1, \"d-flex\", \"align-items-center\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"textContent\"]], template: function DataTableHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DataTableHeaderComponent_p_1_Template, 1, 1, \"p\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderComponent_Template_button_click_3_listener() { return ctx.dataTable.refreshClick.emit(); });\n        ɵngcc0.ɵɵelement(4, \"i\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderComponent_Template_button_click_5_listener() { return ctx.columnSelectorOpen = !ctx.columnSelectorOpen; });\n        ɵngcc0.ɵɵelement(6, \"i\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(8, DataTableHeaderComponent_div_8_Template, 6, 4, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataTable.showTitle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"title\", ctx.dataTable.labels.headerReload.replace(\"{title}\", ctx.dataTable.title));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.columnSelectorOpen);\n        ɵngcc0.ɵɵproperty(\"title\", ctx.dataTable.labels.headerColumnSelector.replace(\"{title}\", ctx.dataTable.title));\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-expanded\", ctx.columnSelectorOpen);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.columnSelectorOpen);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], styles: [\".data-table-header[_ngcontent-%COMP%]{min-height:25px;margin-bottom:10px}.title[_ngcontent-%COMP%]{display:inline-block;margin:5px 0 0 5px}.button-panel[_ngcontent-%COMP%]{float:right}.button-panel[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{outline:0!important}.column-selector-wrapper[_ngcontent-%COMP%]{position:relative}.column-selector-box[_ngcontent-%COMP%]{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box[_ngcontent-%COMP%]   .list-group-item.column-selector-column[_ngcontent-%COMP%]{padding:.5rem .25rem}.column-selector-box[_ngcontent-%COMP%]   .list-group-item.column-selector-column[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:0}.column-selector-box[_ngcontent-%COMP%]   .list-group-item.column-selector-column[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin-right:4px;font-style:italic}\"] });\n/** @nocollapse */\nDataTableHeaderComponent.ctorParameters = () => [\n    { type: DataTableComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => DataTableComponent)),] }] },\n    { type: ElementRef }\n];\nDataTableHeaderComponent.propDecorators = {\n    onClickHandler: [{ type: HostListener, args: ['document:click', ['$event'],] }],\n    onKeyUpHandler: [{ type: HostListener, args: ['document:keyup', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableHeaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'data-table-header',\n                template: `<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.refreshClick.emit()\"\n            [title]=\"dataTable.labels.headerReload.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\"\n            [title]=\"dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n                styles: [`.data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}`]\n            }]\n    }], function () { return [{ type: DataTableComponent, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => DataTableComponent))]\n            }] }, { type: ɵngcc0.ElementRef }]; }, { onClickHandler: [{\n            type: HostListener,\n            args: ['document:click', ['$event']]\n        }], onKeyUpHandler: [{\n            type: HostListener,\n            args: ['document:keyup', ['$event']]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$1 = 0;\nclass DataTablePaginationComponent {\n    /**\n     * @param {?} dataTable\n     */\n    constructor(dataTable) {\n        this.dataTable = dataTable;\n        this.id = `pagination-${nextId$1++}`;\n        this.Math = Math;\n    }\n    /**\n     * @return {?}\n     */\n    pageBack() {\n        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n        if (this.dataTable.offset <= 0) {\n            this.pageInput.nativeElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    pageForward() {\n        this.dataTable.offset += this.dataTable.limit;\n        if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n            this.pageInput.nativeElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    pageFirst() {\n        this.dataTable.offset = 0;\n        this.pageInput.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    pageLast() {\n        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n        if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n            this.pageInput.nativeElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get maxPage() {\n        return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n    }\n    /**\n     * @return {?}\n     */\n    get limit() {\n        return this.dataTable.limit;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set limit(value) {\n        this.dataTable.limit = +value;\n        // returning back to the first page.\n        this.page = 1;\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this.dataTable.page;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        this.dataTable.page = +value;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    validate(event) {\n        /** @type {?} */\n        const newValue = +event.target.value;\n        if (newValue !== this.page) {\n            this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1) ? 1 : newValue;\n            event.target.value = this.page;\n        }\n    }\n}\nDataTablePaginationComponent.ɵfac = function DataTablePaginationComponent_Factory(t) { return new (t || DataTablePaginationComponent)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => DataTableComponent)))); };\nDataTablePaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTablePaginationComponent, selectors: [[\"data-table-pagination\"]], viewQuery: function DataTablePaginationComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c9, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pageInput = _t.first);\n    } }, inputs: { limits: \"limits\" }, decls: 29, vars: 29, consts: [[1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"pagination-range\"], [3, \"textContent\"], [1, \"pagination-controllers\", \"pagination-box\", \"d-flex\", \"justify-content-between\"], [1, \"pagination-limit\", \"d-flex\", \"justify-content-between\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", 3, \"textContent\"], [1, \"form-control\", 3, \"id\", \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-pages\", \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-default\", \"pagination-firstpage\", 3, \"disabled\", \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-angle-double-left\"], [1, \"btn\", \"btn-default\", \"pagination-prevpage\", 3, \"disabled\", \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-angle-left\"], [1, \"pagination-page\"], [1, \"input-group-text\"], [\"type\", \"number\", \"min\", \"1\", \"step\", \"1\", 1, \"form-control\", 3, \"id\", \"max\", \"disabled\", \"ngModel\", \"title\", \"blur\", \"keyup.enter\", \"keyup.esc\"], [\"pageInput\", \"\"], [1, \"input-group-append\"], [1, \"btn\", \"btn-default\", \"pagination-nextpage\", 3, \"disabled\", \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-angle-right\"], [1, \"btn\", \"btn-default\", \"pagination-lastpage\", 3, \"disabled\", \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-angle-double-right\"], [3, \"value\"]], template: function DataTablePaginationComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r3 = ɵngcc0.ɵɵgetCurrentView();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n        ɵngcc0.ɵɵelement(7, \"label\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"select\", 8);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DataTablePaginationComponent_Template_select_ngModelChange_8_listener($event) { return ctx.limit = $event; });\n        ɵngcc0.ɵɵtemplate(9, DataTablePaginationComponent_option_9_Template, 2, 2, \"option\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"button\", 11);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePaginationComponent_Template_button_click_11_listener() { return ctx.pageFirst(); });\n        ɵngcc0.ɵɵelement(12, \"i\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(13, \"button\", 13);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePaginationComponent_Template_button_click_13_listener() { return ctx.pageBack(); });\n        ɵngcc0.ɵɵelement(14, \"i\", 14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"div\", 15);\n        ɵngcc0.ɵɵelementStart(16, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(17, \"div\", 6);\n        ɵngcc0.ɵɵelementStart(18, \"label\", 16);\n        ɵngcc0.ɵɵtext(19);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(20, \"input\", 17, 18);\n        ɵngcc0.ɵɵlistener(\"blur\", function DataTablePaginationComponent_Template_input_blur_20_listener($event) { return ctx.validate($event); })(\"keyup.enter\", function DataTablePaginationComponent_Template_input_keyup_enter_20_listener($event) { return ctx.validate($event); })(\"keyup.esc\", function DataTablePaginationComponent_Template_input_keyup_esc_20_listener() { ɵngcc0.ɵɵrestoreView(_r3); const _r1 = ɵngcc0.ɵɵreference(21); return _r1.value = ctx.page; });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(22, \"div\", 19);\n        ɵngcc0.ɵɵelementStart(23, \"span\", 16);\n        ɵngcc0.ɵɵtext(24);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(25, \"button\", 20);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePaginationComponent_Template_button_click_25_listener() { return ctx.pageForward(); });\n        ɵngcc0.ɵɵelement(26, \"i\", 21);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(27, \"button\", 22);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePaginationComponent_Template_button_click_27_listener() { return ctx.pageLast(); });\n        ɵngcc0.ɵɵelement(28, \"i\", 23);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.dataTable.labels.paginationText.replace(\"{from}\", ctx.Math.ceil(ctx.dataTable.itemCount / ctx.dataTable.limit) !== 0 ? ctx.dataTable.offset + 1 + \"\" : \"0\").replace(\"{to}\", ctx.Math.min(ctx.dataTable.offset + ctx.dataTable.limit, ctx.dataTable.itemCount) + \"\").replace(\"{total}\", ctx.dataTable.itemCount + \"\"));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"textContent\", ctx.dataTable.labels.paginationLimit);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.id + \"-page-limit\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id + \"-page-limit\")(\"ngModel\", ctx.limit)(\"disabled\", ctx.dataTable.itemCount === 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.limits);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.dataTable.offset <= 0)(\"title\", ctx.dataTable.labels.firstPage);\n        ɵngcc0.ɵɵattribute(\"aria-controls\", ctx.dataTable.id);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.dataTable.offset <= 0)(\"title\", ctx.dataTable.labels.prevPage);\n        ɵngcc0.ɵɵattribute(\"aria-controls\", ctx.dataTable.id);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.id + \"-page-input\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.dataTable.labels.pageNumberLabel, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵpropertyInterpolate(\"max\", ctx.maxPage);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id + \"-page-input\")(\"disabled\", ctx.dataTable.itemCount === 0)(\"ngModel\", ctx.page)(\"title\", ctx.dataTable.labels.pageNumber + \" \" + ctx.dataTable.labels.pageNumberNofM.replace(\"{N}\", \"\" + ctx.page).replace(\"{M}\", \"\" + ctx.maxPage));\n        ɵngcc0.ɵɵattribute(\"aria-controls\", ctx.dataTable.id);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate2(\" \", ctx.dataTable.labels.paginationTotalPages, \"\\u00A0\", ctx.dataTable.lastPage, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.dataTable.offset + ctx.dataTable.limit >= ctx.dataTable.itemCount)(\"title\", ctx.dataTable.labels.nextPage);\n        ɵngcc0.ɵɵattribute(\"aria-controls\", ctx.dataTable.id);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.dataTable.offset + ctx.dataTable.limit >= ctx.dataTable.itemCount)(\"title\", ctx.dataTable.labels.lastPage);\n        ɵngcc0.ɵɵattribute(\"aria-controls\", ctx.dataTable.id);\n    } }, directives: [ɵngcc2.SelectControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgForOf, ɵngcc2.NumberValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x], styles: [\".pagination-controllers[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{min-width:5rem;text-align:right}.pagination-pages[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{margin:0 .15rem}.pagination-limit[_ngcontent-%COMP%]{margin-right:1.5rem}.pagination-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{outline:0!important}\"] });\n/** @nocollapse */\nDataTablePaginationComponent.ctorParameters = () => [\n    { type: DataTableComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => DataTableComponent)),] }] }\n];\nDataTablePaginationComponent.propDecorators = {\n    pageInput: [{ type: ViewChild, args: ['pageInput',] }],\n    limits: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablePaginationComponent, [{\n        type: Component,\n        args: [{\n                selector: 'data-table-pagination',\n                template: `<div class=\"d-flex justify-content-between align-items-center\">\n  <div class=\"pagination-range\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n  <div class=\"pagination-controllers pagination-box d-flex justify-content-between\">\n    <div class=\"pagination-limit d-flex justify-content-between\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n        </div>\n        <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n          <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex justify-content-between\">\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageFirst()\"\n              class=\"btn btn-default pagination-firstpage\"\n              [title]=\"dataTable.labels.firstPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageBack()\"\n              class=\"btn btn-default pagination-prevpage\"\n              [title]=\"dataTable.labels.prevPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"pagination-page\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n              {{ dataTable.labels.pageNumberLabel }}\n            </label>\n          </div>\n          <input #pageInput type=\"number\"\n                 [id]=\"id + '-page-input'\"\n                 class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [disabled]=\"dataTable.itemCount === 0\"\n                 [ngModel]=\"page\"\n                 (blur)=\"validate($event)\"\n                 (keyup.enter)=\"validate($event)\"\n                 (keyup.esc)=\"pageInput.value = page\"\n                 [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n                 [attr.aria-controls]=\"dataTable.id\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageForward()\"\n              class=\"btn btn-default pagination-nextpage\"\n              [title]=\"dataTable.labels.nextPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageLast()\"\n              class=\"btn btn-default pagination-lastpage\"\n              [title]=\"dataTable.labels.lastPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n`,\n                styles: [`.pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}`]\n            }]\n    }], function () { return [{ type: DataTableComponent, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => DataTableComponent))]\n            }] }]; }, { pageInput: [{\n            type: ViewChild,\n            args: ['pageInput']\n        }], limits: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// @dynamic\nclass FieldFilterChooserPopupDialog {\n    /**\n     * @param {?} _dialogCloser\n     * @param {?} data\n     */\n    constructor(_dialogCloser, data) {\n        this._dialogCloser = _dialogCloser;\n        this.data = data;\n        this.fieldSearchQuery = '';\n        this.filteredFields = data.fields;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.keyboardEventsManager = new ListKeyManager(this.listItem);\n    }\n    /**\n     * @param {?} searchQuery\n     * @return {?}\n     */\n    onFieldSearch(searchQuery) {\n        this.filteredFields = this.data.fields.filter((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.header.toLowerCase().indexOf(searchQuery.toLowerCase()) != -1));\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    fieldSelected(field) {\n        this._dialogCloser(field);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        event.stopImmediatePropagation();\n        if (this.keyboardEventsManager) {\n            if (event.keyCode === DOWN_ARROW || event.keyCode === UP_ARROW) {\n                // passing the event to key manager so we get a change fired\n                this.keyboardEventsManager.onKeydown(event);\n                /** @type {?} */\n                let activeItem = (/** @type {?} */ (this.keyboardEventsManager.activeItem));\n                if (activeItem == this.activeItem) {\n                    event.keyCode === DOWN_ARROW ? this.keyboardEventsManager.setFirstItemActive() : this.keyboardEventsManager.setLastItemActive();\n                    activeItem = (/** @type {?} */ (this.keyboardEventsManager.activeItem));\n                }\n                this.activeItem = activeItem;\n                ((/** @type {?} */ (this.keyboardEventsManager.activeItem)))._getHostElement().scrollIntoView();\n                return false;\n            }\n            else if (event.keyCode === ENTER) {\n                ((/** @type {?} */ (this.keyboardEventsManager.activeItem)))._getHostElement().click();\n                return false;\n            }\n        }\n    }\n}\nFieldFilterChooserPopupDialog.ɵfac = function FieldFilterChooserPopupDialog_Factory(t) { return new (t || FieldFilterChooserPopupDialog)(ɵngcc0.ɵɵdirectiveInject(POPUP_DIALOG_CLOSE), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };\nFieldFilterChooserPopupDialog.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FieldFilterChooserPopupDialog, selectors: [[\"app-field-filter-chooser-popup-dialog\"]], viewQuery: function FieldFilterChooserPopupDialog_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c10, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listItem = _t);\n    } }, decls: 7, vars: 3, consts: [[1, \"dialog-container\"], [1, \"search-field\"], [\"autocomplete\", \"off\", \"matInput\", \"\", \"name\", \"fieldSearchQuery\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"keydown\"], [1, \"fields-list\"], [\"tabindex\", \"0\", \"mat-list-item\", \"\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"tabindex\", \"0\", \"mat-list-item\", \"\", 3, \"click\"], [\"listItem\", \"\"]], template: function FieldFilterChooserPopupDialog_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"form\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"mat-form-field\");\n        ɵngcc0.ɵɵelementStart(3, \"input\", 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function FieldFilterChooserPopupDialog_Template_input_ngModelChange_3_listener($event) { return ctx.onFieldSearch($event); })(\"keydown\", function FieldFilterChooserPopupDialog_Template_input_keydown_3_listener($event) { return ctx.handleKeyDown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"mat-nav-list\");\n        ɵngcc0.ɵɵtemplate(6, FieldFilterChooserPopupDialog_a_6_Template, 3, 3, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"placeholder\", ctx.data.labels.searchField)(\"ngModel\", ctx.fieldSearchQuery);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.filteredFields);\n    } }, directives: [ɵngcc2.ɵangular_packages_forms_forms_y, ɵngcc2.NgControlStatusGroup, ɵngcc2.NgForm, ɵngcc3.MatFormField, ɵngcc4.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc5.MatNavList, ɵngcc1.NgForOf, ɵngcc5.MatListItem], styles: [\".dialog-container[_ngcontent-%COMP%]{padding-bottom:12px}.search-field[_ngcontent-%COMP%]{padding:12px 12px 0}.fields-list[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;background-color:#f5f5f5}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.mat-list-item.active[_ngcontent-%COMP%]{background:rgba(0,0,0,.04)}\"] });\n/** @nocollapse */\nFieldFilterChooserPopupDialog.ctorParameters = () => [\n    { type: Function, decorators: [{ type: Inject, args: [POPUP_DIALOG_CLOSE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n];\nFieldFilterChooserPopupDialog.propDecorators = {\n    listItem: [{ type: ViewChildren, args: ['listItem',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FieldFilterChooserPopupDialog, [{\n        type: Component,\n        args: [{\n                selector: 'app-field-filter-chooser-popup-dialog',\n                template: `<div class=\"dialog-container\">\n  <form class=\"search-field\">\n    <mat-form-field>\n      <input autocomplete=\"off\" matInput [placeholder]=\"data.labels.searchField\" name=\"fieldSearchQuery\" [ngModel]=\"fieldSearchQuery\"\n        (ngModelChange)=\"onFieldSearch($event)\" (keydown)=\"handleKeyDown($event)\">\n    </mat-form-field>\n  </form>\n  <div class=\"fields-list\">\n    <mat-nav-list>\n      <a tabindex=\"0\" mat-list-item [class.active]=\"activeItem == listItem\" #listItem *ngFor=\"let field of filteredFields\"\n        (click)=\"fieldSelected(field)\">{{field.header}}\n      </a>\n    </mat-nav-list>\n  </div>\n</div>\n`,\n                styles: [`.dialog-container{padding-bottom:12px}.search-field{padding:12px 12px 0}.fields-list{max-height:250px;overflow-y:auto}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.mat-list-item.active{background:rgba(0,0,0,.04)}`]\n            }]\n    }], function () { return [{ type: Function, decorators: [{\n                type: Inject,\n                args: [POPUP_DIALOG_CLOSE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_DATA]\n            }] }]; }, { listItem: [{\n            type: ViewChildren,\n            args: ['listItem']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nclass MyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n}\n// @dynamic\nclass FieldFilterPopupDialog {\n    /**\n     * @param {?} _dialogCloser\n     * @param {?} data\n     */\n    constructor(_dialogCloser, data) {\n        this._dialogCloser = _dialogCloser;\n        this.data = data;\n        this.MUST_SELECT_VALUE_VALIDATION = this.data.labels.selectedValueRequired;\n        this.valuesList = [];\n        this.isAtleastOneValueSelected = true;\n        this.matcher = new MyErrorStateMatcher();\n        this.dataType = this.data.fieldFilter.field.dataType;\n        this.filterOperators = FieldFilterPopupDialog.ALL_FILTER_OPERATORS[this.dataType];\n        if (!this.filterOperators)\n            throw `Data type '${this.dataType}' for field '${this.data.fieldFilter.field.header}' is not recognized`;\n        this.selectedOperator = this.data.fieldFilter.operator || this.filterOperators[0];\n        this.filterValue = this.dataType == 'date' ? this.toDate(this.data.fieldFilter.value) : this.data.fieldFilter.value;\n        if (this.dataType == 'enum') {\n            if (this.data.fieldFilter.value)\n                this.valuesList = this.valuesList.concat(this.data.fieldFilter.value).filter((/**\n                 * @param {?} v\n                 * @return {?}\n                 */\n                v => v != null));\n            this.isAtleastOneValueSelected = this.valuesList.length != 0;\n        }\n        if (this.dataType == 'bool' && this.filterValue == null) {\n            this.filterValue = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    onFilterApply() {\n        /** @type {?} */\n        let value = this.filterValue;\n        if (this.selectedOperator === 'empty') {\n            value = null;\n        }\n        else {\n            if (this.dataType == 'date')\n                value = this.formatDate(value);\n            if (this.dataType == 'enum')\n                value = this.valuesList;\n        }\n        this._dialogCloser({ field: this.data.fieldFilter.field, operator: this.selectedOperator, value: value });\n    }\n    /**\n     * @param {?} value\n     * @param {?} checked\n     * @return {?}\n     */\n    valueCheckChange(value, checked) {\n        if (checked) {\n            this.valuesList.push(value);\n        }\n        else {\n            /** @type {?} */\n            let index = this.valuesList.indexOf(value);\n            if (index != -1)\n                this.valuesList.splice(index, 1);\n        }\n        this.isAtleastOneValueSelected = this.valuesList.length != 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isValueChecked(value) {\n        return this.valuesList.indexOf(value) != -1;\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    getErrorMessage(field) {\n        if (field.hasError('matDatepickerParse'))\n            return this.data.labels.validDateRequired;\n        else if (field.hasError('required'))\n            return this.data.labels.valueRequired;\n        else if (field.hasError('pattern'))\n            return this.data.labels.numericValueRequired;\n        else\n            return '';\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n    getPossibleOptionValue(option) {\n        return typeof option === 'string' ? option : option.value;\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n    getPossibleOptionDisplayText(option) {\n        return typeof option === 'string' ? option : option.displayText;\n    }\n    /**\n     * @private\n     * @param {?} d\n     * @return {?}\n     */\n    formatDate(d) {\n        return [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/');\n    }\n    /**\n     * @private\n     * @param {?} s\n     * @return {?}\n     */\n    toDate(s) {\n        if (!s)\n            return new Date();\n        /** @type {?} */\n        let split = s.split('/');\n        return new Date(Number(split[2]), Number(split[1]) - 1, Number(split[0]));\n    }\n}\nFieldFilterPopupDialog.ɵfac = function FieldFilterPopupDialog_Factory(t) { return new (t || FieldFilterPopupDialog)(ɵngcc0.ɵɵdirectiveInject(POPUP_DIALOG_CLOSE), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };\nFieldFilterPopupDialog.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FieldFilterPopupDialog, selectors: [[\"app-field-filter-popup-dialog\"]], decls: 34, vars: 9, consts: [[3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"header\"], [1, \"field-label\"], [\"mat-dialog-close\", \"\", \"mat-icon-button\", \"\", 1, \"icon-button\"], [\"aria-label\", \"close\"], [1, \"content\"], [1, \"filter-operator\"], [1, \"mat-auto-width\"], [3, \"value\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ml-2\", \"mat-auto-width\"], [4, \"ngIf\"], [1, \"footer\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"mx-1\"], [\"dateField\", \"\"], [\"numericField\", \"\"], [\"valuesListField\", \"\"], [\"booleanField\", \"\"], [\"textField\", \"\"], [3, \"value\"], [4, \"ngTemplateOutlet\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"hideRequiredMarker\", \"true\", \"floatLabel\", \"never\"], [\"cdkFocusInitial\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", \"name\", \"filterValue\", \"required\", \"\", 1, \"ltr\", 3, \"errorStateMatcher\", \"ngModel\", \"matDatepicker\", \"placeholder\", \"ngModelChange\"], [\"filterValueInput\", \"ngModel\"], [\"matSuffix\", \"\", 3, \"for\"], [\"panelClass\", \"field-filter-popup-value-panel\"], [\"picker\", \"\"], [\"cdkFocusInitial\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", \"name\", \"filterValue\", \"required\", \"\", \"pattern\", \"^[0-9]+(.?[0-9]+)?$\", 3, \"placeholder\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [1, \"py-3\"], [\"class\", \"d-block\", 3, \"checked\", \"change\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-block\", 3, \"checked\", \"change\"], [\"cdkFocusInitial\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", 2, \"width\", \"0px\", \"height\", \"0px\", 3, \"focus\"], [\"name\", \"filterValue\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mr-3\", 3, \"value\"], [\"radioButtonTrue\", \"\"], [1, \"mt-1\"], [\"radioButtonFalse\", \"\"], [\"cdkFocusInitial\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", \"name\", \"filterValue\", \"required\", \"\", 3, \"placeholder\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"]], template: function FieldFilterPopupDialog_Template(rf, ctx) { if (rf & 1) {\n        const _r49 = ɵngcc0.ɵɵgetCurrentView();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"form\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngSubmit\", function FieldFilterPopupDialog_Template_form_ngSubmit_1_listener() { ɵngcc0.ɵɵrestoreView(_r49); const _r0 = ɵngcc0.ɵɵreference(2); return (_r0.valid && ctx.isAtleastOneValueSelected || ctx.selectedOperator == \"empty\") && ctx.onFilterApply(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"button\", 4);\n        ɵngcc0.ɵɵelementStart(7, \"mat-icon\", 5);\n        ɵngcc0.ɵɵtext(8, \"close\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 6);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(12, \"mat-form-field\");\n        ɵngcc0.ɵɵelementStart(13, \"mat-select\", 9);\n        ɵngcc0.ɵɵlistener(\"valueChange\", function FieldFilterPopupDialog_Template_mat_select_valueChange_13_listener($event) { return ctx.selectedOperator = $event; });\n        ɵngcc0.ɵɵtemplate(14, FieldFilterPopupDialog_mat_option_14_Template, 2, 2, \"mat-option\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(16, FieldFilterPopupDialog_ng_container_16_Template, 2, 1, \"ng-container\", 12);\n        ɵngcc0.ɵɵtemplate(17, FieldFilterPopupDialog_ng_container_17_Template, 2, 1, \"ng-container\", 12);\n        ɵngcc0.ɵɵtemplate(18, FieldFilterPopupDialog_ng_container_18_Template, 2, 1, \"ng-container\", 12);\n        ɵngcc0.ɵɵtemplate(19, FieldFilterPopupDialog_ng_container_19_Template, 2, 5, \"ng-container\", 12);\n        ɵngcc0.ɵɵtemplate(20, FieldFilterPopupDialog_ng_container_20_Template, 2, 1, \"ng-container\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"div\", 13);\n        ɵngcc0.ɵɵelementStart(22, \"button\", 14);\n        ɵngcc0.ɵɵtext(23);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(24, FieldFilterPopupDialog_ng_template_24_Template, 7, 6, \"ng-template\", null, 15, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(26, FieldFilterPopupDialog_ng_template_26_Template, 4, 4, \"ng-template\", null, 16, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(28, FieldFilterPopupDialog_ng_template_28_Template, 3, 2, \"ng-template\", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(30, FieldFilterPopupDialog_ng_template_30_Template, 11, 3, \"ng-template\", null, 18, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(32, FieldFilterPopupDialog_ng_template_32_Template, 4, 4, \"ng-template\", null, 19, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.fieldFilter.field.header);\n        ɵngcc0.ɵɵadvance(8);\n        ɵngcc0.ɵɵproperty(\"value\", ctx.selectedOperator);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.filterOperators);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataType == \"number\" && ctx.selectedOperator !== \"empty\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataType == \"date\" && ctx.selectedOperator !== \"empty\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataType == \"text\" && ctx.selectedOperator !== \"empty\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataType == \"enum\" && ctx.selectedOperator !== \"empty\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataType == \"bool\" && ctx.selectedOperator !== \"empty\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.labels.apply);\n    } }, directives: [ɵngcc2.ɵangular_packages_forms_forms_y, ɵngcc2.NgControlStatusGroup, ɵngcc2.NgForm, ɵngcc6.MatButton, ɵngcc7.MatDialogClose, ɵngcc8.MatIcon, ɵngcc3.MatFormField, ɵngcc9.MatSelect, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc10.MatOption, ɵngcc1.NgTemplateOutlet, ɵngcc4.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc11.MatDatepickerInput, ɵngcc2.RequiredValidator, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc11.MatDatepickerToggle, ɵngcc3.MatSuffix, ɵngcc11.MatDatepicker, ɵngcc3.MatError, ɵngcc2.PatternValidator, ɵngcc12.MatCheckbox, ɵngcc13.MatRadioGroup, ɵngcc13.MatRadioButton], styles: [\".header[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#3367d6;border-radius:2px 2px 0 0;color:#fff;font-size:15px;min-width:176px;padding:8px}.field-label[_ngcontent-%COMP%]{padding:0 8px}.icon-button[_ngcontent-%COMP%]{outline:0}.content[_ngcontent-%COMP%]{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;padding:24px;min-width:200px;max-height:200px;overflow-y:auto}.footer[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#4285f4;padding:8px 0}  .mat-select-value{min-width:24px!important}.mat-auto-width[_ngcontent-%COMP%]     .mat-form-field{width:auto!important}.mat-auto-width[_ngcontent-%COMP%]     .mat-form-field-infix{width:auto!important}.mat-auto-width[_ngcontent-%COMP%]     .mat-select-value{max-width:100%;width:auto}  .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#4285f4}.mat-checkbox-indeterminate.mat-accent[_ngcontent-%COMP%]   .mat-checkbox-background[_ngcontent-%COMP%],   .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#4285f4}  .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#4285f4}  .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#4285f4}  .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{background-color:rgba(66,133,244,.26)!important}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px;background-color:#f5f5f5}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.ltr[_ngcontent-%COMP%]{direction:ltr}\"] });\nFieldFilterPopupDialog.numericOperators = ['lt', 'gt', 'lte', 'gte', 'eq', 'ne', 'empty'];\nFieldFilterPopupDialog.textualOperators = ['contains', 'not_contains', 'starts', 'ends', 'eq', 'ne', 'empty'];\nFieldFilterPopupDialog.enumOperators = ['eq', 'ne', 'empty'];\nFieldFilterPopupDialog.boolOperators = ['eq'];\nFieldFilterPopupDialog.ALL_FILTER_OPERATORS = {\n    \"number\": FieldFilterPopupDialog.numericOperators,\n    \"date\": FieldFilterPopupDialog.numericOperators,\n    \"text\": FieldFilterPopupDialog.textualOperators,\n    \"enum\": FieldFilterPopupDialog.enumOperators,\n    \"bool\": FieldFilterPopupDialog.boolOperators\n};\n/** @nocollapse */\nFieldFilterPopupDialog.ctorParameters = () => [\n    { type: Function, decorators: [{ type: Inject, args: [POPUP_DIALOG_CLOSE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FieldFilterPopupDialog, [{\n        type: Component,\n        args: [{\n                selector: 'app-field-filter-popup-dialog',\n                template: `<div>\n  <form #f=\"ngForm\" (ngSubmit)=\"((f.valid && isAtleastOneValueSelected) || selectedOperator == 'empty') && onFilterApply()\">\n    <div class=\"header\">\n      <span class=\"field-label\">{{data.fieldFilter.field.header}}</span>\n      <button mat-dialog-close class=\"icon-button\" mat-icon-button>\n        <mat-icon aria-label=\"close\">close</mat-icon>\n      </button>\n    </div>\n    <div class=\"content\">\n      <div class=\"filter-operator\">\n        <div class=\"mat-auto-width\">\n          <mat-form-field>\n            <mat-select [(value)]=\"selectedOperator\">\n              <mat-option *ngFor=\"let operator of filterOperators\" [value]=\"operator\">\n                {{data.labels.filterOperators[operator]}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"ml-2 mat-auto-width\">\n        <ng-container *ngIf=\"dataType == 'number' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"numericField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'date' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"dateField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'text' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"textField\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'enum' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"valuesListField; context: {options: data.fieldFilter.field.possibleOptions, form: f}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataType == 'bool' && selectedOperator !== 'empty'\">\n          <ng-container *ngTemplateOutlet=\"booleanField\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <button type=\"submit\" class=\"mx-1\" mat-button>{{data.labels.apply}}</button>\n    </div>\n\n\n    <ng-template #dateField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [errorStateMatcher]=\"matcher\" #filterValueInput=\"ngModel\" name=\"filterValue\"\n          [(ngModel)]=\"filterValue\" [matDatepicker]=\"picker\" [placeholder]=\"data.labels.date\" class=\"ltr\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker panelClass=\"field-filter-popup-value-panel\"></mat-datepicker>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #numericField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required pattern=\"^[0-9]+(\\.?[0-9]+)?$\">\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n    <ng-template #valuesListField let-options=\"options\" let-operator=\"operator\" let-f=\"form\">\n      <div class=\"py-3\">\n        <mat-checkbox class=\"d-block\" *ngFor=\"let option of options\" [checked]=\"isValueChecked(option)\" (change)=\"valueCheckChange(option, $event.checked)\">{{getPossibleOptionDisplayText(option)}}</mat-checkbox>\n        <mat-error *ngIf=\"f.submitted && !isAtleastOneValueSelected\">{{MUST_SELECT_VALUE_VALIDATION}}</mat-error>\n      </div>\n    </ng-template>\n\n    <ng-template #booleanField>\n      <div class=\"py-3\">\n        <!-- Workaround to focus radio buttons -->\n        <input style=\"width: 0px; height: 0px;\" cdkFocusInitial (focus)=\"filterValue == false ? radioButtonFalse.focus() : radioButtonTrue.focus()\" autocomplete=\"off\" matInput>\n        <mat-radio-group [(ngModel)]=\"filterValue\" name=\"filterValue\">\n          <mat-radio-button #radioButtonTrue class=\"mr-3\" [value]=\"true\"><mat-icon class=\"mt-1\">check</mat-icon></mat-radio-button>\n          <mat-radio-button #radioButtonFalse [value]=\"false\"><mat-icon class=\"mt-1\">close</mat-icon></mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </ng-template>\n\n    <ng-template #textField>\n      <mat-form-field hideRequiredMarker=\"true\" floatLabel=\"never\">\n        <input cdkFocusInitial autocomplete=\"off\" matInput [placeholder]=\"data.labels.value\" [errorStateMatcher]=\"matcher\"\n          #filterValueInput=\"ngModel\" name=\"filterValue\" [(ngModel)]=\"filterValue\" required>\n        <mat-error *ngIf=\"filterValueInput && filterValueInput.invalid\">{{getErrorMessage(filterValueInput)}}</mat-error>\n      </mat-form-field>\n    </ng-template>\n\n  </form>\n</div>\n`,\n                styles: [`.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#3367d6;border-radius:2px 2px 0 0;color:#fff;font-size:15px;min-width:176px;padding:8px}.field-label{padding:0 8px}.icon-button{outline:0}.content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;padding:24px;min-width:200px;max-height:200px;overflow-y:auto}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#4285f4;padding:8px 0}::ng-deep .mat-select-value{min-width:24px!important}.mat-auto-width ::ng-deep .mat-form-field{width:auto!important}.mat-auto-width ::ng-deep .mat-form-field-infix{width:auto!important}.mat-auto-width ::ng-deep .mat-select-value{max-width:100%;width:auto}::ng-deep .mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#4285f4}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#4285f4}::ng-deep .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#4285f4}::ng-deep .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{background-color:rgba(66,133,244,.26)!important}::-webkit-scrollbar{width:6px;background-color:#f5f5f5}::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}.ltr{direction:ltr}`]\n            }]\n    }], function () { return [{ type: Function, decorators: [{\n                type: Inject,\n                args: [POPUP_DIALOG_CLOSE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_DATA]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FilterBarComponent {\n    /**\n     * @param {?} dataTable\n     * @param {?} popupDialogService\n     */\n    constructor(dataTable, popupDialogService) {\n        this.dataTable = dataTable;\n        this.popupDialogService = popupDialogService;\n        this.filters = [];\n        this.fields = this.dataTable.filterableFields;\n        if (dataTable.filters) {\n            this.filters = dataTable.filters;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    inputFocused(event) {\n        ((/** @type {?} */ (event.currentTarget))).blur();\n        this.openFieldChooserDialog(event.currentTarget);\n    }\n    /**\n     * @param {?} event\n     * @param {?} filter\n     * @return {?}\n     */\n    chipClicked(event, filter) {\n        /** @type {?} */\n        const dialogRef = this.openFieldFilterDialog(event.currentTarget, filter);\n        dialogRef.afterClosed().subscribe((/**\n         * @param {?} result\n         * @return {?}\n         */\n        (result) => {\n            if (!result)\n                return;\n            this.dataTable.filterUpdated.emit({ old: this.convertFilterToEmittedFilter(filter), new: this.convertFilterToEmittedFilter(result) });\n            /** @type {?} */\n            let index = this.filters.indexOf(filter);\n            this.filters[index] = result;\n            this.dataTable.filterChanged.emit(this.filters.map((/**\n             * @param {?} c\n             * @return {?}\n             */\n            c => this.convertFilterToEmittedFilter(c))));\n            filter = result;\n        }));\n    }\n    /**\n     * @param {?} triggeredElement\n     * @return {?}\n     */\n    openFieldChooserDialog(triggeredElement) {\n        if (this.fieldChooserDialogRef)\n            return;\n        this.fieldChooserDialogRef = this.popupDialogService.open(FieldFilterChooserPopupDialog, triggeredElement, {\n            coverTriggeringElement: true,\n            data: {\n                fields: this.fields,\n                labels: this.dataTable.labels\n            }\n        });\n        this.fieldChooserDialogRef.afterClosed().subscribe((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            this.fieldChooserDialogRef = null;\n            if (!field)\n                return;\n            /** @type {?} */\n            const dialogRef = this.openFieldFilterDialog(triggeredElement, { field: field });\n            dialogRef.afterClosed().subscribe((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => {\n                if (!filter)\n                    return;\n                this.filters.push(filter);\n                this.dataTable.filterAdded.emit(this.convertFilterToEmittedFilter(filter));\n                this.dataTable.filterChanged.emit(this.filters.map((/**\n                 * @param {?} c\n                 * @return {?}\n                 */\n                c => this.convertFilterToEmittedFilter(c))));\n            }));\n        }));\n    }\n    /**\n     * @param {?} triggeredElement\n     * @param {?=} filter\n     * @return {?}\n     */\n    openFieldFilterDialog(triggeredElement, filter) {\n        /** @type {?} */\n        const dialogRef = this.popupDialogService.open(FieldFilterPopupDialog, triggeredElement, {\n            suppressCloseOnClickSelectors: ['.cdk-overlay-container'],\n            coverTriggeringElement: true,\n            data: {\n                fieldFilter: filter,\n                labels: this.dataTable.labels\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    removeFilter(filter) {\n        /** @type {?} */\n        const index = this.filters.indexOf(filter);\n        if (index >= 0) {\n            this.filters.splice(index, 1);\n            this.dataTable.filterRemoved.emit(this.convertFilterToEmittedFilter(filter));\n            this.dataTable.filterChanged.emit(this.filters.map((/**\n             * @param {?} c\n             * @return {?}\n             */\n            c => this.convertFilterToEmittedFilter(c))));\n        }\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    formatValue(filter) {\n        /** @type {?} */\n        let value = filter.value;\n        if (filter.operator == 'empty')\n            return '';\n        if (filter.field.dataType == \"enum\") {\n            value = ((/** @type {?} */ (filter.value))).map((/**\n             * @param {?} v\n             * @return {?}\n             */\n            v => typeof v === \"string\" ? v : v.displayText));\n        }\n        if (Array.isArray(value)) {\n            value = value.join(', ');\n        }\n        return value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    formatChipDisplayText(filter) {\n        if (filter.field.dataType == \"bool\") {\n            return filter.value == false ? `${this.dataTable.labels.not} ${filter.field.header}` : filter.field.header;\n        }\n        else {\n            return `${filter.field.header} ${this.dataTable.labels.filterOperators[filter.operator]} ${this.formatValue(filter)}`;\n        }\n    }\n    /**\n     * @private\n     * @param {?} filter\n     * @return {?}\n     */\n    convertFilterToEmittedFilter(filter) {\n        // clone the filter and extract values from enum possible options\n        /** @type {?} */\n        let clonedFilter = (/** @type {?} */ (JSON.parse(JSON.stringify(filter))));\n        if (clonedFilter.operator == \"empty\")\n            return clonedFilter;\n        if (clonedFilter.field.dataType == \"enum\") {\n            /** @type {?} */\n            let valuesList = clonedFilter.value;\n            for (let i = 0; i < valuesList.length; i++) {\n                /** @type {?} */\n                const value = valuesList[i];\n                valuesList[i] = typeof value === \"string\" ? value : value.value;\n            }\n        }\n        return clonedFilter;\n    }\n}\nFilterBarComponent.ɵfac = function FilterBarComponent_Factory(t) { return new (t || FilterBarComponent)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => DataTableComponent))), ɵngcc0.ɵɵdirectiveInject(ɵngcc14.PopupDialogService)); };\nFilterBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FilterBarComponent, selectors: [[\"filter-bar\"]], decls: 8, vars: 3, consts: [[1, \"filter-bar\"], [1, \"px-2\", \"pb-2\"], [\"chipList\", \"\"], [1, \"fa\", \"fa-filter\", \"fa-2x\", \"filter-icon\", \"mr-1\", 3, \"click\"], [3, \"removable\", \"click\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"autocomplete\", \"off\", 1, \"filter-input\", 3, \"placeholder\", \"matChipInputFor\", \"focus\"], [\"filterInput\", \"\"], [3, \"removable\", \"click\", \"removed\"], [\"matChipRemove\", \"\"]], template: function FilterBarComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r7 = ɵngcc0.ɵɵgetCurrentView();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"mat-chip-list\", null, 2);\n        ɵngcc0.ɵɵelementStart(4, \"i\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function FilterBarComponent_Template_i_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r7); const _r2 = ɵngcc0.ɵɵreference(7); return _r2.click(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, FilterBarComponent_mat_chip_5_Template, 4, 2, \"mat-chip\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"focus\", function FilterBarComponent_Template_input_focus_6_listener($event) { return ctx.inputFocused($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(3);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.filters);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"placeholder\", ctx.dataTable.labels.addFilter)(\"matChipInputFor\", _r0);\n    } }, directives: [ɵngcc15.MatChipList, ɵngcc1.NgForOf, ɵngcc15.MatChipInput, ɵngcc15.MatChip, ɵngcc8.MatIcon, ɵngcc15.MatChipRemove], styles: [\".filter-input[_ngcontent-%COMP%]{background-color:transparent;border:0;height:32px;outline:0;padding:0}.filter-icon[_ngcontent-%COMP%]{color:#3367d6;cursor:pointer}\"] });\n/** @nocollapse */\nFilterBarComponent.ctorParameters = () => [\n    { type: DataTableComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => DataTableComponent)),] }] },\n    { type: PopupDialogService }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'filter-bar',\n                template: `<div class=\"filter-bar\">\n    <div class=\"px-2 pb-2\">\n      <mat-chip-list #chipList>\n        <i class=\"fa fa-filter fa-2x filter-icon mr-1\" (click)=\"filterInput.click()\"></i>\n        <mat-chip *ngFor=\"let filter of filters\" (click)=\"chipClicked($event, filter)\" [removable]=\"true\" (removed)=\"removeFilter(filter)\">\n          {{formatChipDisplayText(filter)}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input #filterInput autocomplete=\"off\" class=\"filter-input\" [placeholder]=\"dataTable.labels.addFilter\" [matChipInputFor]=\"chipList\" (focus)=\"inputFocused($event)\">\n      </mat-chip-list>\n    </div>\n</div>\n`,\n                styles: [`.filter-input{background-color:transparent;border:0;height:32px;outline:0;padding:0}.filter-icon{color:#3367d6;cursor:pointer}`]\n            }]\n    }], function () { return [{ type: DataTableComponent, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => DataTableComponent))]\n            }] }, { type: ɵngcc14.PopupDialogService }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// modules\n// material\n// utils\n// components & directives\nclass DataTableModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: DataTableModule,\n            providers: []\n        };\n    }\n}\nDataTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataTableModule });\nDataTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataTableModule_Factory(t) { return new (t || DataTableModule)(); }, imports: [[\n            CommonModule,\n            FormsModule,\n            {\n                ngModule: NgxPopupDialogModule,\n                providers: [PopupDialogService]\n            },\n            MatFormFieldModule,\n            MatIconModule,\n            MatDialogModule,\n            MatChipsModule,\n            MatInputModule,\n            MatButtonModule,\n            MatListModule,\n            MatSelectModule,\n            MatCheckboxModule,\n            MatRadioModule,\n            MatDatepickerModule,\n            MatNativeDateModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataTableModule, { declarations: function () { return [DataTableComponent,\n        DataTableColumnDirective,\n        DataTableRowComponent,\n        DataTablePaginationComponent,\n        DataTableHeaderComponent,\n        PixelConverter,\n        HideDirective,\n        MinPipe,\n        FilterBarComponent,\n        FieldFilterChooserPopupDialog,\n        FieldFilterPopupDialog]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        NgxPopupDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatDialogModule,\n        MatChipsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatListModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatDatepickerModule,\n        MatNativeDateModule]; }, exports: function () { return [DataTableComponent,\n        DataTableColumnDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    DataTableComponent, DataTableColumnDirective,\n                    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n                    PixelConverter, HideDirective, MinPipe, FilterBarComponent, FieldFilterChooserPopupDialog,\n                    FieldFilterPopupDialog\n                ],\n                entryComponents: [\n                    FieldFilterChooserPopupDialog,\n                    FieldFilterPopupDialog\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    {\n                        ngModule: NgxPopupDialogModule,\n                        providers: [PopupDialogService]\n                    },\n                    MatFormFieldModule,\n                    MatIconModule,\n                    MatDialogModule,\n                    MatChipsModule,\n                    MatInputModule,\n                    MatButtonModule,\n                    MatListModule,\n                    MatSelectModule,\n                    MatCheckboxModule,\n                    MatRadioModule,\n                    MatDatepickerModule,\n                    MatNativeDateModule\n                ],\n                exports: [DataTableComponent, DataTableColumnDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DataTableModule, DataTableComponent as DataTable, DataTableColumnDirective as DataTableColumn, DataTableRowComponent as DataTableRow, DataTablePaginationComponent as DataTablePagination, DataTableHeaderComponent as DataTableHeader, DataTableResource, FieldFilterChooserPopupDialog as ɵe, FieldFilterPopupDialog as ɵf, FilterBarComponent as ɵd, HideDirective as ɵb, MinPipe as ɵc, PixelConverter as ɵa };\n\n//# sourceMappingURL=angular7-data-table.js.map","import { Overlay } from '@angular/cdk/overlay';\nimport { Component, ComponentFactoryResolver, HostListener, Inject, ReflectiveInjector, ViewChild, ViewContainerRef, ViewEncapsulation, InjectionToken, Injectable, NgModule } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/dialog';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\n\nconst _c0 = [\"popupContent\"];\nconst _c1 = [\"dialogContainer\"];\nfunction PopupDialog_ng_template_2_Template(rf, ctx) { }\nconst _c2 = function (a0, a1, a2) { return { \"visible\": a0, \"scale-to-top\": a1, \"rtl\": a2 }; };\nconst POPUP_DIALOG_CLOSE = new InjectionToken('POPUP_DIALOG_CLOSE');\nclass PopupDialog {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} dialogRef\n     * @param {?} data\n     */\n    constructor(componentFactoryResolver, dialogRef, data) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.dialogRef = dialogRef;\n        this.visible = false;\n        this.isOpened = false;\n        this.scaleBottomToTop = false;\n        this.scrollBoundedFunction = this.onScroll.bind(this);\n        // set events handled to true to ignore event when popup opened for the first time.\n        this.mouseDownHandled = true;\n        this.mouseUpHandled = true;\n        this.clickHandled = true;\n        this.config = data.config;\n        this.data = data.data;\n        this.direction = data.config.direction || (/** @type {?} */ (getComputedStyle(this.config.triggeringElement).direction));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onScroll(event) {\n        this.positionDialogWhereTriggeringElement();\n        this.positionDialogUpIfBottomOutsideViewport();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        this.handleMouseEvent(event);\n        this.mouseDownHandled = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseUp(event) {\n        if (this.mouseDownHandled || this.clickHandled) {\n            this.mouseDownHandled = false;\n            this.clickHandled = false;\n            return;\n        }\n        this.handleMouseEvent(event);\n        this.mouseUpHandled = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        if (this.mouseDownHandled || this.mouseUpHandled) {\n            this.mouseDownHandled = false;\n            this.mouseUpHandled = false;\n            return;\n        }\n        this.handleMouseEvent(event);\n        this.clickHandled = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleMouseEvent(event) {\n        if (!this.isOpened)\n            return;\n        // Clicking on element will trigger this callback function multiple times (for mouse down, up and click)\n        // Therefor, we stop execution if we get the same event target.\n        // We reset the lastClickedElement after 100 ms\n        if (this.lastClickedElement == event.target)\n            return;\n        this.lastClickedElement = event.target;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.lastClickedElement = null;\n        }), 200);\n        /** @type {?} */\n        var container = this.dialogContainerRef.nativeElement;\n        if (container === event.target || this.childOf(event.target, container)) {\n            return;\n        }\n        if (this.config.suppressCloseOnClickSelectors) {\n            for (let i = 0; i < this.config.suppressCloseOnClickSelectors.length; i++) {\n                /** @type {?} */\n                const selector = this.config.suppressCloseOnClickSelectors[i];\n                /** @type {?} */\n                const elements = document.querySelectorAll(selector);\n                for (let i = 0; i < elements.length; i++) {\n                    /** @type {?} */\n                    const elem = elements[i];\n                    if (elem === event.target || this.childOf(event.target, elem)) {\n                        return;\n                    }\n                }\n            }\n        }\n        this.closeDialog();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.registerOrUnregisterAncestrosScrollEvent();\n        this.loadComponent();\n        this.dialogRef.beforeClose().subscribe((/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => {\n            this.visible = false;\n            this.isOpened = false;\n        }));\n        this.dialogRef.afterOpen().subscribe((/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => {\n            this.isOpened = true;\n        }));\n        this.positionDialogWhereTriggeringElement();\n        this.positionDialogUpIfBottomOutsideViewport();\n        this.visible = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.registerOrUnregisterAncestrosScrollEvent(false);\n    }\n    /**\n     * @return {?}\n     */\n    loadComponent() {\n        /** @type {?} */\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory((/** @type {?} */ (this.config.component)));\n        this.popupContentViewContainer.clear();\n        /** @type {?} */\n        const injector = ReflectiveInjector.resolveAndCreate([\n            {\n                provide: MAT_DIALOG_DATA,\n                useValue: this.data || {}\n            },\n            {\n                provide: POPUP_DIALOG_CLOSE,\n                useValue: this.closeDialog.bind(this)\n            }\n        ]);\n        /** @type {?} */\n        let componentRef = this.popupContentViewContainer.createComponent(componentFactory, 0, injector);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    containerTransitionEnd(event) {\n        if (event.target == this.dialogContainerRef.nativeElement && !this.visible) {\n            this.dialogRef.close(this.dialogResult);\n        }\n    }\n    /**\n     * @param {?=} dialogResult\n     * @return {?}\n     */\n    closeDialog(dialogResult) {\n        this.dialogResult = dialogResult;\n        this.visible = false;\n        this.isOpened = false;\n    }\n    /**\n     * @private\n     * @param {?=} register\n     * @return {?}\n     */\n    registerOrUnregisterAncestrosScrollEvent(register = true) {\n        /** @type {?} */\n        let elem = ((/** @type {?} */ (this.config.triggeringElement))).parentNode;\n        while (elem !== null) {\n            register ?\n                elem.addEventListener(\"scroll\", this.scrollBoundedFunction) :\n                elem.removeEventListener(\"scroll\", this.scrollBoundedFunction);\n            elem = elem.parentNode;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    positionDialogWhereTriggeringElement() {\n        /** @type {?} */\n        const matDialogConfig = new MatDialogConfig();\n        /** @type {?} */\n        const rect = this.config.triggeringElement.getBoundingClientRect();\n        /** @type {?} */\n        let top = this.config.coverTriggeringElement ?\n            rect.bottom - this.config.triggeringElement.offsetHeight - 1 :\n            rect.bottom;\n        matDialogConfig.position = { top: `${top}px` };\n        if (this.direction == 'rtl') {\n            /** @type {?} */\n            let right = window.innerWidth - rect.left - this.config.triggeringElement.offsetWidth;\n            matDialogConfig.position.right = `${right}px`;\n        }\n        else {\n            matDialogConfig.position.left = `${rect.left}px`;\n        }\n        this.dialogRef.updatePosition(matDialogConfig.position);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    positionDialogUpIfBottomOutsideViewport() {\n        if (!this.config.scaleToTopOnBottomOverflow)\n            return;\n        /** @type {?} */\n        let dialogContainerElem = (/** @type {?} */ (this.dialogContainerRef.nativeElement));\n        /** @type {?} */\n        let result = this.isOutOfViewport();\n        if (result.bottom && !result.topIfScaleToTop) {\n            this.scaleBottomToTop = true;\n            /** @type {?} */\n            const matDialogConfig = new MatDialogConfig();\n            /** @type {?} */\n            const rect = dialogContainerElem.getBoundingClientRect();\n            /** @type {?} */\n            let triggeringElementHeight = this.config.triggeringElement.offsetHeight;\n            /** @type {?} */\n            let top = this.config.coverTriggeringElement ?\n                rect.top - dialogContainerElem.offsetHeight + triggeringElementHeight + 1 :\n                rect.top - dialogContainerElem.offsetHeight - triggeringElementHeight;\n            matDialogConfig.position = { top: `${top}px` };\n            if (this.direction == 'rtl') {\n                /** @type {?} */\n                let right = window.innerWidth - rect.left - this.config.triggeringElement.offsetWidth;\n                matDialogConfig.position.right = `${right}px`;\n            }\n            else {\n                matDialogConfig.position.left = `${rect.left}px`;\n            }\n            this.dialogRef.updatePosition(matDialogConfig.position);\n        }\n        else {\n            this.scaleBottomToTop = false;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isOutOfViewport() {\n        /** @type {?} */\n        let container = this.dialogContainerRef.nativeElement;\n        /** @type {?} */\n        let triggeringElement = this.config.triggeringElement;\n        // Get element's bounding\n        /** @type {?} */\n        var bounding = container.getBoundingClientRect();\n        // reduce height from top position if scale to top\n        /** @type {?} */\n        let top = bounding.top;\n        if (this.scaleBottomToTop) {\n            top = this.config.coverTriggeringElement ?\n                bounding.top - container.offsetHeight + triggeringElement.offsetHeight :\n                bounding.top - container.offsetHeight - triggeringElement.offsetHeight;\n        }\n        /** @type {?} */\n        let topIfScaleToTop = top;\n        if (!this.scaleBottomToTop) {\n            topIfScaleToTop = top - (this.config.coverTriggeringElement ? container.offsetHeight - triggeringElement.offsetHeight : container.offsetHeight + triggeringElement.offsetHeight);\n        }\n        /** @type {?} */\n        var out = {};\n        out.top = top < 0;\n        out.topIfScaleToTop = topIfScaleToTop < 0;\n        out.left = bounding.left < 0;\n        out.bottom = (bounding.top + container.offsetHeight) > (window.innerHeight || document.documentElement.offsetHeight);\n        if (this.scaleBottomToTop && !out.bottom) {\n            if (!out.top)\n                out.bottom = true;\n        }\n        out.right = (bounding.left + container.offsetWidth) > (window.innerWidth || document.documentElement.offsetWidth);\n        out.any = out.top || out.left || out.bottom || out.right;\n        out.all = out.top && out.left && out.bottom && out.right;\n        return out;\n    }\n    ;\n    /**\n     * @private\n     * @param {?} node\n     * @param {?} ancestor\n     * @return {?}\n     */\n    childOf(node, ancestor) {\n        /** @type {?} */\n        var child = node;\n        while (child !== null) {\n            if (child === ancestor)\n                return true;\n            child = child.parentNode;\n        }\n        return false;\n    }\n}\nPopupDialog.ɵfac = function PopupDialog_Factory(t) { return new (t || PopupDialog)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };\nPopupDialog.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PopupDialog, selectors: [[\"popup-dialog\"]], viewQuery: function PopupDialog_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true, ViewContainerRef);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupContentViewContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dialogContainerRef = _t.first);\n    } }, hostBindings: function PopupDialog_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function PopupDialog_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"mouseup\", function PopupDialog_mouseup_HostBindingHandler($event) { return ctx.onMouseUp($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"click\", function PopupDialog_click_HostBindingHandler($event) { return ctx.onClick($event); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, decls: 4, vars: 10, consts: [[1, \"ngx-popup-dialog-container\", 3, \"ngClass\", \"transitionend\"], [\"dialogContainer\", \"\"], [\"popupContent\", \"\"]], template: function PopupDialog_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"transitionend\", function PopupDialog_Template_div_transitionend_0_listener($event) { return ctx.containerTransitionEnd($event); });\n        ɵngcc0.ɵɵtemplate(2, PopupDialog_ng_template_2_Template, 0, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"max-width\", ctx.config.maxWidth)(\"max-height\", ctx.config.maxHeight);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(6, _c2, ctx.visible, ctx.scaleBottomToTop, ctx.direction == \"rtl\"));\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.direction == \"rtl\" ? \"rtl\" : \"\");\n    } }, directives: [ɵngcc2.Dir, ɵngcc3.NgClass], styles: [\".ngx-popup-dialog-overlay{display:block}.ngx-popup-dialog-overlay .mat-dialog-container{display:inline;padding:0}.ngx-popup-dialog-container{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);background:#fff;border-radius:2px;overflow:auto;transition:transform 150ms cubic-bezier(.4,0,1,1);transition:transform 150ms cubic-bezier(.4,0,1,1),-webkit-transform 150ms cubic-bezier(.4,0,1,1);-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:scale3d(0,0,1);transform:scale3d(0,0,1)}.ngx-popup-dialog-container.rtl{-webkit-transform-origin:top right;transform-origin:top right;direction:rtl}.ngx-popup-dialog-container.visible{transition:transform 150ms cubic-bezier(0,0,.2,1);transition:transform 150ms cubic-bezier(0,0,.2,1),-webkit-transform 150ms cubic-bezier(0,0,.2,1);-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}.ngx-popup-dialog-container.scale-to-top{-webkit-transform-origin:left bottom 0;transform-origin:left bottom 0}.ngx-popup-dialog-container.rtl.scale-to-top{-webkit-transform-origin:right bottom 0;transform-origin:right bottom 0}.ngx-popup-dialog-container::-webkit-scrollbar{width:6px;background-color:#f5f5f5}.ngx-popup-dialog-container::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}\"], encapsulation: 2 });\n/** @nocollapse */\nPopupDialog.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: MatDialogRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n];\nPopupDialog.propDecorators = {\n    popupContentViewContainer: [{ type: ViewChild, args: ['popupContent', { read: ViewContainerRef },] }],\n    dialogContainerRef: [{ type: ViewChild, args: ['dialogContainer',] }],\n    onMouseDown: [{ type: HostListener, args: ['document:mousedown', ['$event'],] }],\n    onMouseUp: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],\n    onClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PopupDialog, [{\n        type: Component,\n        args: [{\n                selector: 'popup-dialog',\n                template: \"<div #dialogContainer [attr.dir]=\\\"direction == 'rtl' ? 'rtl' : ''\\\" (transitionend)=\\\"containerTransitionEnd($event)\\\"\\n class=\\\"ngx-popup-dialog-container\\\" [ngClass]=\\\"{'visible': visible, 'scale-to-top': scaleBottomToTop, 'rtl': direction == 'rtl'}\\\"\\n [style.max-width]=\\\"config.maxWidth\\\" [style.max-height]=\\\"config.maxHeight\\\">\\n  <ng-template #popupContent></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".ngx-popup-dialog-overlay{display:block}.ngx-popup-dialog-overlay .mat-dialog-container{display:inline;padding:0}.ngx-popup-dialog-container{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);background:#fff;border-radius:2px;overflow:auto;transition:transform 150ms cubic-bezier(.4,0,1,1);transition:transform 150ms cubic-bezier(.4,0,1,1),-webkit-transform 150ms cubic-bezier(.4,0,1,1);-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:scale3d(0,0,1);transform:scale3d(0,0,1)}.ngx-popup-dialog-container.rtl{-webkit-transform-origin:top right;transform-origin:top right;direction:rtl}.ngx-popup-dialog-container.visible{transition:transform 150ms cubic-bezier(0,0,.2,1);transition:transform 150ms cubic-bezier(0,0,.2,1),-webkit-transform 150ms cubic-bezier(0,0,.2,1);-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}.ngx-popup-dialog-container.scale-to-top{-webkit-transform-origin:left bottom 0;transform-origin:left bottom 0}.ngx-popup-dialog-container.rtl.scale-to-top{-webkit-transform-origin:right bottom 0;transform-origin:right bottom 0}.ngx-popup-dialog-container::-webkit-scrollbar{width:6px;background-color:#f5f5f5}.ngx-popup-dialog-container::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#d9d9d9}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc1.MatDialogRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_DATA]\n            }] }]; }, { onMouseDown: [{\n            type: HostListener,\n            args: ['document:mousedown', ['$event']]\n        }], onMouseUp: [{\n            type: HostListener,\n            args: ['document:mouseup', ['$event']]\n        }], onClick: [{\n            type: HostListener,\n            args: ['document:click', ['$event']]\n        }], popupContentViewContainer: [{\n            type: ViewChild,\n            args: ['popupContent', { read: ViewContainerRef }]\n        }], dialogContainerRef: [{\n            type: ViewChild,\n            args: ['dialogContainer']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PopupDialogService {\n    /**\n     * @param {?} _overlay\n     * @param {?} _dialogService\n     */\n    constructor(_overlay, _dialogService) {\n        this._overlay = _overlay;\n        this._dialogService = _dialogService;\n    }\n    /**\n     * @template T\n     * @param {?} componentOrTemplateRef\n     * @param {?} triggeringElement\n     * @param {?=} config\n     * @return {?}\n     */\n    open(componentOrTemplateRef, triggeringElement, config) {\n        if (!config)\n            config = {};\n        /** @type {?} */\n        let data = config.data;\n        delete config.data;\n        /** @type {?} */\n        const popupDialogData = {\n            config: Object.assign({}, config, { component: componentOrTemplateRef, triggeringElement: triggeringElement, maxWidth: (typeof config.maxWidth === \"number\") ? config.maxWidth + 'px' : config.maxWidth, maxHeight: (typeof config.maxHeight === \"number\") ? config.maxHeight + 'px' : config.maxHeight, scaleToTopOnBottomOverflow: config.scaleToTopOnBottomOverflow == null ? true : config.scaleToTopOnBottomOverflow, suppressCloseOnClickSelectors: typeof config.suppressCloseOnClickSelectors === \"string\" ? [config.suppressCloseOnClickSelectors] : config.suppressCloseOnClickSelectors }),\n            data: data\n        };\n        /** @type {?} */\n        const popupDialogConfig = {\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            hasBackdrop: false,\n            scrollStrategy: this._overlay.scrollStrategies.noop(),\n            panelClass: 'ngx-popup-dialog-overlay',\n            restoreFocus: false,\n            data: popupDialogData\n        };\n        /** @type {?} */\n        let dialogRef = this._dialogService.open(PopupDialog, popupDialogConfig);\n        return dialogRef;\n    }\n}\nPopupDialogService.ɵfac = function PopupDialogService_Factory(t) { return new (t || PopupDialogService)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc1.MatDialog)); };\nPopupDialogService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PopupDialogService, factory: PopupDialogService.ɵfac });\n/** @nocollapse */\nPopupDialogService.ctorParameters = () => [\n    { type: Overlay },\n    { type: MatDialog }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PopupDialogService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc1.MatDialog }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxPopupDialogModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NgxPopupDialogModule,\n            providers: [PopupDialogService]\n        };\n    }\n}\nNgxPopupDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPopupDialogModule });\nNgxPopupDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxPopupDialogModule_Factory(t) { return new (t || NgxPopupDialogModule)(); }, imports: [[\n            CommonModule,\n            FormsModule,\n            MatDialogModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPopupDialogModule, { declarations: function () { return [PopupDialog]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        MatDialogModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPopupDialogModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [PopupDialog],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    MatDialogModule\n                ],\n                entryComponents: [PopupDialog],\n                exports: []\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxPopupDialogModule, PopupDialogService, POPUP_DIALOG_CLOSE, PopupDialog as ɵa };\n\n//# sourceMappingURL=ngx-popup-dialog.js.map"]}