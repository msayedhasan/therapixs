{"version":3,"sources":["webpack:///src/app/pages/notifications/notifications-routing.module.ts","webpack:///src/app/pages/notifications/notifications.component.html","webpack:///src/app/pages/notifications/notifications.component.ts","webpack:///src/app/pages/notifications/notifications.module.ts","webpack:///src/app/pages/notifications/notifications.service.ts"],"names":["routes","path","component","NotificationsRoutingModule","forChild","imports","exports","modalRef","NotificationsComponent","fb","notificationService","usersService","modalService","toastr","spinner","items","itemCount","limit","limits","offset","tableElements","selectedRows","fcmTokens","form","group","title","required","message","getData","show","getAll","users","subscribe","data","itemResource","count","reloadItems","hide","event","query","template","FilterRecord","filter","item","toLowerCase","owner","shipper","leader","name","includes","phone","toString","address","bikeMake","bikeYear","bikeModel","row","_selected","push","splice","indexOf","index","length","fcmToken","newForm","value","error","send","res","console","log","info","sendMultiCast","reset","openModal","FilterRecords","selector","templateUrl","styleUrls","NotificationsModule","forRoot","declarations","providers","NotificationsService","http","post","providedIn"],"mappings":"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","file":"pages-notifications-notifications-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotificationsComponent } from './notifications.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsRoutingModule {}\n","<div class=\"grid-center-noGutter\">\n  <div class=\"col-20_sm-22_xs-23\" style=\"margin-top: 20px\">\n    <div class=\"card\">\n      <div class=\"card-header grid-noGutter\">\n        <span>{{ \"Notifications\" | lowercase | translate }}</span>\n      </div>\n      <div class=\"card-body grid-center-noGutter\">\n        <div class=\"col-24 grid-spaceBetween-noGutter\">\n          <div class=\"card xs-hidden\">\n            <div class=\"card-body\">\n              <span\n                style=\"\n                  display: inline-block;\n                  background-color: #4899c2;\n                  padding: 15px;\n                  color: white;\n                \"\n              >\n                <i class=\"material-icons\">home</i>\n              </span>\n              <div style=\"display: inline-block; margin: 0 10px\">\n                <div style=\"color: #20a8d8; font-size: 18px; font-weight: 600\">\n                  {{ items.length }}\n                </div>\n                <div style=\"color: #73818f; font-size: 80%; font-weight: 700\">\n                  {{ \"Notifications\" | lowercase | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-top xs-24 grid-noGutter\" style=\"margin-top: 15px\">\n            <div class=\"col-4_lg-6_sm-10 grid-column-noGutter\">\n              <a\n                (click)=\"openModal(templateNotification)\"\n                class=\"btn color1 round addbtn\"\n                >{{ \"add\" | lowercase | translate }}\n                {{ \"notification\" | lowercase | translate }}</a\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"col-24 grid-center-noGutter\" style=\"margin-top: 20px\">\n          <div class=\"col-24 grid-noGutter\">\n            <div\n              class=\"col-12_xs-24 grid-left-noGutter\"\n              style=\"margin-left: 10px\"\n            >\n              <label class=\"col-24 grid\" style=\"font-weight: bold\" for=\"\">{{\n                \"search for\" | lowercase | translate\n              }}</label>\n              <div class=\"col-24 grid\">\n                <input\n                  type=\"text\"\n                  #FilterRecord\n                  class=\"form-control col\"\n                  placeholder=\"e.g. English Name\"\n                />\n                <a\n                  (click)=\"FilterRecords(FilterRecord.value)\"\n                  class=\"btn col-4 color1 round search\"\n                >\n                  <span class=\"md-hidden\">{{\n                    \"search\" | lowercase | translate\n                  }}</span>\n                  <span><i class=\"material-icons\">search</i></span>\n                </a>\n                <a\n                  (click)=\"FilterRecords(''); FilterRecord.value = ''\"\n                  class=\"btn col-4 color2 round search\"\n                >\n                  <span class=\"md-hidden\">{{\n                    \"Clear\" | lowercase | translate\n                  }}</span>\n                  <span><i class=\"material-icons\">clear</i></span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid-center-noGutter\" style=\"margin-top: 20px\">\n      <ng-container>\n        <ng-container *ngTemplateOutlet=\"table\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #table>\n  <div>\n    <data-table\n      id=\"my-table\"\n      title=\"List of Users\"\n      [items]=\"tableElements\"\n      [itemCount]=\"itemCount\"\n      [pageLimits]=\"limits\"\n      [limit]=\"limit\"\n      [pagination]=\"true\"\n      (reload)=\"reloadItems($event)\"\n      [noDataMessage]=\"'No data to show'\"\n      [selectColumn]=\"true\"\n      [multiSelect]=\"true\"\n      [selectOnRowClick]=\"true\"\n      (rowClick)=\"selectRow($event)\"\n    >\n      <data-table-column\n        [property]=\"'name'\"\n        [header]=\"'Name'\"\n        [sortable]=\"true\"\n      >\n      </data-table-column>\n      <data-table-column\n        [property]=\"'phone'\"\n        [header]=\"'Phone'\"\n        [sortable]=\"true\"\n      >\n      </data-table-column>\n\n      <data-table-column [property]=\"'fcmToken'\" [header]=\"'Notifications'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          {{ item.fcmToken && item.fcmToken !== \"\" ? \"Available\" : \"N/A\" }}\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column [header]=\"'type'\">\n        <ng-template #dataTableCell let-item=\"item\">\n          <div>\n            <ng-container *ngIf=\"item.admin\"><div>Admin</div></ng-container>\n            <ng-container *ngIf=\"item.owner\"><div>Owner</div> </ng-container>\n            <ng-container *ngIf=\"item.leader\"\n              ><div>President</div>\n            </ng-container>\n            <ng-container *ngIf=\"!item.admin && !item.owner && !item.leader\"\n              ><div>User</div>\n            </ng-container>\n          </div>\n        </ng-template>\n      </data-table-column>\n\n      <data-table-column\n        [property]=\"'address'\"\n        [header]=\"'Address'\"\n        [sortable]=\"true\"\n      >\n      </data-table-column>\n\n      <data-table-column\n        [property]=\"'bikeMake'\"\n        [header]=\"'Bike Make'\"\n        [sortable]=\"true\"\n      >\n      </data-table-column>\n\n      <data-table-column\n        [property]=\"'bikeYear' || 'bikeModel'\"\n        [header]=\"'Bike Year'\"\n        [sortable]=\"true\"\n      >\n      </data-table-column>\n    </data-table>\n  </div>\n</ng-template>\n\n<ng-template #templateNotification id=\"template2\">\n  <div class=\"modal-header\">\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"col-24 grid-noGutter\">\n      <div class=\"col-24\">\n        <div class=\"col-24 grid\">\n          <app-input-text\n            class=\"col-24\"\n            [label]=\"'Title'\"\n            [fieldId]=\"'title'\"\n            type=\"text\"\n            [placeholder]=\"'Add Title'\"\n            [control]=\"form.get('title')\"\n            [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n          >\n          </app-input-text>\n          <app-input-text\n            class=\"col-24\"\n            [label]=\"'Message'\"\n            [fieldId]=\"'message'\"\n            type=\"text\"\n            [placeholder]=\"'Add Message'\"\n            [control]=\"form.get('message')\"\n            [fieldClass]=\"'col-19_xlg-18_lg-17_md-24'\"\n          >\n          </app-input-text>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid-right\">\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color1 round\"\n        style=\"margin-right: 10px\"\n        (click)=\"sendNotification()\"\n      >\n        Confirm\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn col-5_sm-5_xs-6 color2 round\"\n        (click)=\"modalRef.hide()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DataTableResource } from 'angular7-data-table';\n\nimport { NotificationsService } from './notifications.service';\nimport { UsersService } from '../users/users.service';\n\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss'],\n})\nexport class NotificationsComponent implements OnInit {\n  itemResource;\n  items = [];\n  itemCount = 0;\n  limit = 20;\n  limits = [20, 25, 50];\n  offset = 1;\n  tableElements = [];\n\n  modalRef: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private notificationService: NotificationsService,\n    private usersService: UsersService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.spinner.show();\n\n    this.items = [];\n    this.tableElements = [];\n    this.usersService.getAll();\n    this.usersService.users.subscribe(async (data) => {\n      if (data) {\n        this.items = data;\n\n        this.itemResource = new DataTableResource(data);\n        this.itemCount = await this.itemResource.count();\n        this.reloadItems({\n          offset: 0,\n          limit: this.limit,\n        });\n      }\n    });\n\n    this.spinner.hide();\n  }\n\n  async reloadItems(event) {\n    if (this.itemResource) {\n      this.tableElements = await this.itemResource.query(event);\n    }\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  async FilterRecords(FilterRecord) {\n    this.tableElements = this.items;\n    if (FilterRecord !== '') {\n      this.tableElements = this.items.filter((item) => {\n        if (FilterRecord.toLowerCase() === 'owner') {\n          return item.owner;\n        } else if (FilterRecord.toLowerCase() === 'shipper') {\n          return item.shipper;\n        } else if (FilterRecord.toLowerCase() === 'president') {\n          return item.leader;\n        } else if (FilterRecord.toLowerCase() === 'user') {\n          return !item.owner && !item.shipper && !item.leader;\n        } else {\n          return (\n            item.name.toLowerCase().includes(FilterRecord) ||\n            item.phone?.toString().includes(FilterRecord) ||\n            item.address?.toLowerCase().includes(FilterRecord) ||\n            item.bikeMake?.toLowerCase().includes(FilterRecord) ||\n            item.bikeYear?.toString().includes(FilterRecord) ||\n            item.bikeModel?.toString().includes(FilterRecord)\n          );\n        }\n      });\n    }\n\n    this.itemResource = new DataTableResource(this.tableElements);\n    this.itemCount = await this.itemResource.count();\n    this.reloadItems({\n      offset: 0,\n      limit: this.limit,\n    });\n  }\n\n  selectedRows = [];\n\n  fcmTokens = [];\n  selectRow(event) {\n    if (!event.row._selected) {\n      this.selectedRows.push(event.row.item);\n    } else {\n      this.selectedRows.splice(this.selectedRows.indexOf(event.row.item), 1);\n    }\n  }\n\n  form = this.fb.group({\n    title: ['', Validators.required],\n    message: ['', Validators.required],\n  });\n  sendNotification() {\n    this.spinner.show();\n\n    for (let index = 0; index < this.selectedRows.length; index++) {\n      const row = this.selectedRows[index];\n\n      if (row.fcmToken) {\n        this.fcmTokens.push(row.fcmToken);\n      }\n    }\n\n    let newForm = { ...this.form.value, fcmTokens: this.fcmTokens };\n\n    if (this.fcmTokens.length === 0) {\n      return this.toastr.error(\n        'Select at least one user with available notification',\n        'Error'\n      );\n    } else if (this.fcmTokens.length === 1) {\n      this.notificationService.send(newForm).subscribe(\n        (res) => {\n          console.log(res);\n          this.toastr.info(res['message'], 'Info');\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(error.error.message, 'Error');\n          // this.error.next(error.error.message);\n        }\n      );\n    } else {\n      this.notificationService.sendMultiCast(newForm).subscribe(\n        (res) => {\n          console.log(res);\n          this.toastr.info(res['message'], 'Info');\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(error.error.message, 'Error');\n          // this.error.next(error.error.message);\n        }\n      );\n    }\n\n    this.selectedRows = [];\n    this.fcmTokens = [];\n    this.form.reset();\n    this.getData();\n\n    this.spinner.hide();\n    this.modalRef.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotificationsRoutingModule } from './notifications-routing.module';\nimport { NotificationsComponent } from './notifications.component';\n\nimport { FormFieldsModule } from 'src/app/reusable-components/form-fields/form-fields.module';\n\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { DataTableModule } from 'angular7-data-table';\nimport { ExportAsModule } from 'ngx-export-as';\n\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [NotificationsComponent],\n  imports: [\n    CommonModule,\n    NotificationsRoutingModule,\n    FormFieldsModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    DataTableModule.forRoot(),\n    ExportAsModule,\n\n    SharedModule,\n  ],\n  providers: [],\n})\nexport class NotificationsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { baseUrl } from '../../config/variables';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  constructor(private http: HttpClient) {}\n  send(form) {\n    return this.http.post(baseUrl + '/notification/single', form);\n  }\n\n  sendMultiCast(form) {\n    return this.http.post(baseUrl + '/notification/multiple', form);\n  }\n}\n"]}