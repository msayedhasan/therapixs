{"version":3,"sources":["./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js","./node_modules/ngx-bootstrap/__ivy_ngcc__/tooltip/fesm2015/ngx-bootstrap-tooltip.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiL;AAClF;AACvB;AACT;;AAE/D;AACA;AACA,cAAc,uFAAuF;AACrG;AACwC;AACiB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAgBV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,qBAAqB,gEAAyB,EAAE,kDAAkD;AAClG,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;AACtB,WAAW,EAsDV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,iEAAiE,iEAAK;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAU,IAAI,4DAAU;AACpC,gBAAgB,4DAAU;AAC1B;AACA;AACA;AACA,wCAAwC,4DAAU;AAClD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAQ;AAChB,QAAQ,0DAAQ;AAChB;AACA;AACA,aAAa,iEAAK;AAClB;AACA;AACA;AACA;AACA,kCAAkC,0DAAQ;AAC1C,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAU,IAAI,4DAAU;AACxC,gBAAgB,4DAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAK;AACjB;AACA;AACA;AACA,aAAa,iEAAK;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB,4DAAU,IAAI,4DAAU;AAC5C,+CAA+C,4DAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uCAAuC,0DAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,4DAAU,oBAAoB,0DAAQ;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa,4DAAU;AACvB;AACA;AACA,4CAA4C,0DAAQ;AACpD,8BAA8B,4DAAU;AACxC;AACA;AACA,YAAY,4DAAU,8BAA8B;AACpD,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,4DAAU,8BAA8B,yBAAyB;AACzE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC,4DAAU;AAC7C,mBAAmB,EAAE;AACrB;AACA,mCAAmC,4DAAU;AAC7C;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,qFAA6B,GAAG;AACjS,sBAAsB,+DAAwB,EAAE,sHAAsH;AACtK,QAAQ,wDAAiB,4EAA4E,mCAAmC,EAAE,yEAAyE,gCAAgC,EAAE,iFAAiF,0BAA0B,EAAE;AAClW,KAAK,EAAE,WAAW,mBAAmB,YAAY,+EAA+E,0BAA0B;AAC1J;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,qFAAsB;AAClC;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,oDAAM,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,sBAAsB,OAAO,0DAAY,oCAAoC;AAC7E,mBAAmB,OAAO,0DAAY,kCAAkC;AACxE,aAAa,OAAO,0DAAY,sCAAsC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,8DAAuB,EAAE,GAAG,OAAO,uDAAgB,EAAE,GAAG,OAAO,qFAA6B,EAAE,EAAE,EAAE,GAAG;AACxK,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAgGV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,+CAA+C;AACrE,sBAAsB,4CAA4C;AAClE;AACA;AACA,mBAAmB,0GAA0G;AAC7H;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;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CA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C,aAAa;AACb,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,kDAAK;AAC3C,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,yEAAa;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,qFAA6B,GAAG,+DAAwB,iBAAiB,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,4EAAyB,GAAG;AACrY,wBAAwB,+DAAwB,EAAE,6FAA6F,ovBAAovB,YAAY,uHAAuH,4BAA4B;AACliC;AACA;AACA,KAAK,OAAO,8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","file":"default~pages-ads-ads-module~pages-auth-auth-module~pages-categories-categories-module~pages-events-~c26d7e12-es2015.js","sourcesContent":["import { Injectable, Component, ElementRef, Renderer2, HostListener, EventEmitter, Directive, ViewContainerRef, Input, Output, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\n\nconst _c0 = [\"*\"];\nclass BsModalRef {\n    constructor() {\n        /**\n         * Hides the modal\n         */\n        this.hide = Function;\n        /**\n         * Sets new class to modal window\n         */\n        this.setClass = Function;\n    }\n}\nBsModalRef.ɵfac = function BsModalRef_Factory(t) { return new (t || BsModalRef)(); };\nBsModalRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsModalRef, factory: BsModalRef.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsModalRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n     * @type {?}\n     */\n    BsModalRef.prototype.content;\n    /**\n     * Hides the modal\n     * @type {?}\n     */\n    BsModalRef.prototype.hide;\n    /**\n     * Sets new class to modal window\n     * @type {?}\n     */\n    BsModalRef.prototype.setClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalBackdropOptions {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.animate = true;\n        Object.assign(this, options);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ModalBackdropOptions.prototype.animate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalOptions {\n}\nModalOptions.ɵfac = function ModalOptions_Factory(t) { return new (t || ModalOptions)(); };\nModalOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ModalOptions, factory: ModalOptions.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalOptions, [{\n        type: Injectable\n    }], null, null); })();\nif (false) {\n    /**\n     *  Includes a modal-backdrop element. Alternatively,\n     *  specify static for a backdrop which doesn't close the modal on click.\n     * @type {?}\n     */\n    ModalOptions.prototype.backdrop;\n    /**\n     * Closes the modal when escape key is pressed.\n     * @type {?}\n     */\n    ModalOptions.prototype.keyboard;\n    /** @type {?} */\n    ModalOptions.prototype.focus;\n    /**\n     * Shows the modal when initialized.\n     * @type {?}\n     */\n    ModalOptions.prototype.show;\n    /**\n     * Ignore the backdrop click\n     * @type {?}\n     */\n    ModalOptions.prototype.ignoreBackdropClick;\n    /**\n     * Css class for opened modal\n     * @type {?}\n     */\n    ModalOptions.prototype.class;\n    /**\n     * Toggle animation\n     * @type {?}\n     */\n    ModalOptions.prototype.animated;\n    /**\n     * Modal data\n     * @type {?}\n     */\n    ModalOptions.prototype.initialState;\n    /**\n     * Modal providers\n     * @type {?}\n     */\n    ModalOptions.prototype.providers;\n    /**\n     * aria-labelledby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaLabelledBy;\n    /**\n     * aria-describedby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaDescribedby;\n}\n/** @type {?} */\nconst modalConfigDefaults = {\n    backdrop: true,\n    keyboard: true,\n    focus: true,\n    show: false,\n    ignoreBackdropClick: false,\n    class: '',\n    animated: true,\n    initialState: {}\n};\n/** @type {?} */\nconst CLASS_NAME = {\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n    BACKDROP: 'modal-backdrop',\n    OPEN: 'modal-open',\n    FADE: 'fade',\n    IN: 'in',\n    // bs3\n    SHOW: 'show' // bs4\n};\n/** @type {?} */\nconst SELECTOR = {\n    DIALOG: '.modal-dialog',\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',\n    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n/** @type {?} */\nconst TRANSITION_DURATIONS = {\n    MODAL: 300,\n    BACKDROP: 150\n};\n/** @type {?} */\nconst DISMISS_REASONS = {\n    BACKRDOP: 'backdrop-click',\n    ESC: 'esc'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalContainerComponent {\n    /**\n     * @param {?} options\n     * @param {?} _element\n     * @param {?} _renderer\n     */\n    constructor(options, _element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.isShown = false;\n        this.isModalHiding = false;\n        this.clickStartedInContent = false;\n        this.config = Object.assign({}, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n        }\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = true;\n            this._renderer.addClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        }), this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n        if (document && document.body) {\n            if (this.bsModalService.getModalsCount() === 1) {\n                this.bsModalService.checkScrollbar();\n                this.bsModalService.setScrollbar();\n            }\n            this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n        }\n        if (this._element.nativeElement) {\n            this._element.nativeElement.focus();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n        this.hide();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this.isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard &&\n            this.level === this.bsModalService.getModalsCount()) {\n            this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.isShown) {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (this.isModalHiding || !this.isShown) {\n            return;\n        }\n        this.isModalHiding = true;\n        this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = false;\n            if (document &&\n                document.body &&\n                this.bsModalService.getModalsCount() === 1) {\n                this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n            }\n            this.bsModalService.hide(this.level);\n            this.isModalHiding = false;\n        }), this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    }\n}\nModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) { return new (t || ModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nModalContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalContainerComponent, selectors: [[\"modal-container\"]], hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\", 1, \"modal\"], hostVars: 3, hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ModalContainerComponent_mousedown_HostBindingHandler($event) { return ctx.onClickStarted($event); })(\"mouseup\", function ModalContainerComponent_mouseup_HostBindingHandler($event) { return ctx.onClickStop($event); })(\"keydown.esc\", function ModalContainerComponent_keydown_esc_HostBindingHandler($event) { return ctx.onEsc($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.config.ariaLabelledBy)(\"aria-describedby\", ctx.config.ariaDescribedby);\n    } }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [[\"role\", \"document\"], [1, \"modal-content\"]], template: function ModalContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.config.class ? \" \" + ctx.config.class : \"\"));\n    } }, encapsulation: 2 });\n/** @nocollapse */\nModalContainerComponent.ctorParameters = () => [\n    { type: ModalOptions },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nModalContainerComponent.propDecorators = {\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'modal-container',\n                template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n                host: {\n                    class: 'modal',\n                    role: 'dialog',\n                    tabindex: '-1',\n                    '[attr.aria-modal]': 'true',\n                    '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n                    '[attr.aria-describedby]': 'config.ariaDescribedby'\n                }\n            }]\n    }], function () { return [{ type: ModalOptions }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { onClickStarted: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], onClickStop: [{\n            type: HostListener,\n            args: ['mouseup', ['$event']]\n        }], onEsc: [{\n            type: HostListener,\n            args: ['window:keydown.esc', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ModalContainerComponent.prototype.config;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isShown;\n    /** @type {?} */\n    ModalContainerComponent.prototype.level;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isAnimated;\n    /** @type {?} */\n    ModalContainerComponent.prototype.bsModalService;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.isModalHiding;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalContainerComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This component will be added as background layout for modals if enabled\n */\nclass ModalBackdropComponent {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this._isShown = false;\n        this.element = element;\n        this.renderer = renderer;\n    }\n    /**\n     * @return {?}\n     */\n    get isAnimated() {\n        return this._isAnimated;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isAnimated(value) {\n        this._isAnimated = value;\n        // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isShown(value) {\n        this._isShown = value;\n        if (value) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        else {\n            this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        if (!isBs3()) {\n            if (value) {\n                this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n            else {\n                this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);\n            Utils.reflow(this.element.nativeElement);\n        }\n        this.isShown = true;\n    }\n}\nModalBackdropComponent.ɵfac = function ModalBackdropComponent_Factory(t) { return new (t || ModalBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nModalBackdropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalBackdropComponent, selectors: [[\"bs-modal-backdrop\"]], hostAttrs: [1, \"modal-backdrop\"], decls: 0, vars: 0, template: function ModalBackdropComponent_Template(rf, ctx) { }, encapsulation: 2 });\n/** @nocollapse */\nModalBackdropComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalBackdropComponent, [{\n        type: Component,\n        args: [{\n                selector: 'bs-modal-backdrop',\n                template: ' ',\n                host: { class: CLASS_NAME.BACKDROP }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    ModalBackdropComponent.prototype.element;\n    /** @type {?} */\n    ModalBackdropComponent.prototype.renderer;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isAnimated;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isShown;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TRANSITION_DURATION = 300;\n/** @type {?} */\nconst BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\nclass ModalDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} clf\n     */\n    constructor(_element, _viewContainerRef, _renderer, clf) {\n        this._element = _element;\n        this._renderer = _renderer;\n        /**\n         * This event fires immediately when the `show` instance method is called.\n         */\n        this.onShow = new EventEmitter();\n        /**\n         * This event is fired when the modal has been made visible to the user\n         * (will wait for CSS transitions to complete)\n         */\n        this.onShown = new EventEmitter();\n        /**\n         * This event is fired immediately when\n         * the hide instance method has been called.\n         */\n        this.onHide = new EventEmitter();\n        /**\n         * This event is fired when the modal has finished being\n         * hidden from the user (will wait for CSS transitions to complete).\n         */\n        this.onHidden = new EventEmitter();\n        this._isShown = false;\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.timerHideModal = 0;\n        this.timerRmBackDrop = 0;\n        this.isNested = false;\n        this.clickStartedInContent = false;\n        this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n    }\n    /**\n     * allows to set modal configuration via element property\n     * @param {?} conf\n     * @return {?}\n     */\n    set config(conf) {\n        this._config = this.getConfig(conf);\n    }\n    /**\n     * @return {?}\n     */\n    get config() {\n        return this._config;\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.dismissReason = DISMISS_REASONS.BACKRDOP;\n        this.hide(event);\n    }\n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this._isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard) {\n            this.dismissReason = DISMISS_REASONS.ESC;\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.config = void 0;\n        if (this._isShown) {\n            this._isShown = false;\n            this.hideModal();\n            this._backdrop.dispose();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._config = this._config || this.getConfig();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.show) {\n                this.show();\n            }\n        }), 0);\n    }\n    /* Public methods */\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n    toggle() {\n        return this._isShown ? this.hide() : this.show();\n    }\n    /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n    show() {\n        this.dismissReason = null;\n        this.onShow.emit(this);\n        if (this._isShown) {\n            return;\n        }\n        clearTimeout(this.timerHideModal);\n        clearTimeout(this.timerRmBackDrop);\n        this._isShown = true;\n        this.checkScrollbar();\n        this.setScrollbar();\n        if (document$1 && document$1.body) {\n            if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n                this.isNested = true;\n            }\n            else {\n                this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n            }\n        }\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            this.showElement();\n        }));\n    }\n    /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n    hide(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        this.onHide.emit(this);\n        // todo: add an option to prevent hiding\n        if (!this._isShown) {\n            return;\n        }\n        window$1.clearTimeout(this.timerHideModal);\n        window$1.clearTimeout(this.timerRmBackDrop);\n        this._isShown = false;\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        // this._addClassIn = false;\n        if (this._config.animated) {\n            this.timerHideModal = window$1.setTimeout((/**\n             * @return {?}\n             */\n            () => this.hideModal()), TRANSITION_DURATION);\n        }\n        else {\n            this.hideModal();\n        }\n    }\n    /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n    getConfig(config) {\n        return Object.assign({}, modalConfigDefaults, config);\n    }\n    /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    showElement() {\n        // todo: replace this with component loader usage\n        if (!this._element.nativeElement.parentNode ||\n            this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n            // don't move modals dom position\n            if (document$1 && document$1.body) {\n                document$1.body.appendChild(this._element.nativeElement);\n            }\n        }\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n        if (this._config.animated) {\n            Utils.reflow(this._element.nativeElement);\n        }\n        // this._addClassIn = true;\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        /** @type {?} */\n        const transitionComplete = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.focus) {\n                this._element.nativeElement.focus();\n            }\n            this.onShown.emit(this);\n        });\n        if (this._config.animated) {\n            setTimeout(transitionComplete, TRANSITION_DURATION);\n        }\n        else {\n            transitionComplete();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    hideModal() {\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isNested) {\n                if (document$1 && document$1.body) {\n                    this._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n                }\n                this.resetScrollbar();\n            }\n            this.resetAdjustments();\n            this.focusOtherModal();\n            this.onHidden.emit(this);\n        }));\n    }\n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n    showBackdrop(callback) {\n        if (this._isShown &&\n            this.config.backdrop &&\n            (!this.backdrop || !this.backdrop.instance.isShown)) {\n            this.removeBackdrop();\n            this._backdrop\n                .attach(ModalBackdropComponent)\n                .to('body')\n                .show({ isAnimated: this._config.animated });\n            this.backdrop = this._backdrop._componentRef;\n            if (!callback) {\n                return;\n            }\n            if (!this._config.animated) {\n                callback();\n                return;\n            }\n            setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n        }\n        else if (!this._isShown && this.backdrop) {\n            this.backdrop.instance.isShown = false;\n            /** @type {?} */\n            const callbackRemove = (/**\n             * @return {?}\n             */\n            () => {\n                this.removeBackdrop();\n                if (callback) {\n                    callback();\n                }\n            });\n            if (this.backdrop.instance.isAnimated) {\n                this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n            }\n            else {\n                callbackRemove();\n            }\n        }\n        else if (callback) {\n            callback();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._backdrop.hide();\n    }\n    /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    focusOtherModal() {\n        if (this._element.nativeElement.parentElement == null) {\n            return;\n        }\n        /** @type {?} */\n        const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n        if (!otherOpenedModals.length) {\n            return;\n        }\n        otherOpenedModals[otherOpenedModals.length - 1].focus();\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    resetAdjustments() {\n        this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n        this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    }\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document$1) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window$1\n            .getComputedStyle(document$1.body)\n            .getPropertyValue('padding-right') || 0, 10);\n        if (this.isBodyOverflowing) {\n            document$1.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    resetScrollbar() {\n        document$1.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @protected\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document$1.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document$1.body, scrollDiv);\n        return scrollbarWidth;\n    }\n}\nModalDirective.ɵfac = function ModalDirective_Factory(t) { return new (t || ModalDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory)); };\nModalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ModalDirective, selectors: [[\"\", \"bsModal\", \"\"]], hostBindings: function ModalDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ModalDirective_mousedown_HostBindingHandler($event) { return ctx.onClickStarted($event); })(\"mouseup\", function ModalDirective_mouseup_HostBindingHandler($event) { return ctx.onClickStop($event); })(\"keydown.esc\", function ModalDirective_keydown_esc_HostBindingHandler($event) { return ctx.onEsc($event); });\n    } }, inputs: { config: \"config\" }, outputs: { onShow: \"onShow\", onShown: \"onShown\", onHide: \"onHide\", onHidden: \"onHidden\" }, exportAs: [\"bs-modal\"] });\n/** @nocollapse */\nModalDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: ComponentLoaderFactory }\n];\nModalDirective.propDecorators = {\n    config: [{ type: Input }],\n    onShow: [{ type: Output }],\n    onShown: [{ type: Output }],\n    onHide: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onEsc: [{ type: HostListener, args: ['keydown.esc', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[bsModal]',\n                exportAs: 'bs-modal'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.ComponentLoaderFactory }]; }, { onShow: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], onHide: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }], onClickStarted: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], onClickStop: [{\n            type: HostListener,\n            args: ['mouseup', ['$event']]\n        }], onEsc: [{\n            type: HostListener,\n            args: ['keydown.esc', ['$event']]\n        }] }); })();\nif (false) {\n    /**\n     * This event fires immediately when the `show` instance method is called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onShow;\n    /**\n     * This event is fired when the modal has been made visible to the user\n     * (will wait for CSS transitions to complete)\n     * @type {?}\n     */\n    ModalDirective.prototype.onShown;\n    /**\n     * This event is fired immediately when\n     * the hide instance method has been called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onHide;\n    /**\n     * This event is fired when the modal has finished being\n     * hidden from the user (will wait for CSS transitions to complete).\n     * @type {?}\n     */\n    ModalDirective.prototype.onHidden;\n    /**\n     * This field contains last dismiss reason.\n     * Possible values: `backdrop-click`, `esc` and `null`\n     * (if modal was closed by direct call of `.hide()`).\n     * @type {?}\n     */\n    ModalDirective.prototype.dismissReason;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._config;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._isShown;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerHideModal;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerRmBackDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.isNested;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BsModalService {\n    /**\n     * @param {?} rendererFactory\n     * @param {?} clf\n     */\n    constructor(rendererFactory, clf) {\n        this.clf = clf;\n        // constructor props\n        this.config = modalConfigDefaults;\n        // tslint:disable-next-line:no-any\n        this.onShow = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onShown = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHide = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHidden = new EventEmitter();\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.modalsCount = 0;\n        this.lastDismissReason = '';\n        this.loaders = [];\n        this._backdropLoader = this.clf.createLoader(null, null, null);\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n    /**\n     * Shows a modal\n     * @param {?} content\n     * @param {?=} config\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    show(content, config) {\n        this.modalsCount++;\n        this._createLoaders();\n        this.config = Object.assign({}, modalConfigDefaults, config);\n        this._showBackdrop();\n        this.lastDismissReason = null;\n        return this._showModal(content);\n    }\n    /**\n     * @param {?} level\n     * @return {?}\n     */\n    hide(level) {\n        if (this.modalsCount === 1) {\n            this._hideBackdrop();\n            this.resetScrollbar();\n        }\n        this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._hideModal(level);\n            this.removeLoaders(level);\n        }), this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    }\n    /**\n     * @return {?}\n     */\n    _showBackdrop() {\n        /** @type {?} */\n        const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n        /** @type {?} */\n        const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n        if (this.modalsCount === 1) {\n            this.removeBackdrop();\n            if (isBackdropEnabled && isBackdropInDOM) {\n                this._backdropLoader\n                    .attach(ModalBackdropComponent)\n                    .to('body')\n                    .show({ isAnimated: this.config.animated });\n                this.backdropRef = this._backdropLoader._componentRef;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _hideBackdrop() {\n        if (!this.backdropRef) {\n            return;\n        }\n        this.backdropRef.instance.isShown = false;\n        /** @type {?} */\n        const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => this.removeBackdrop()), duration);\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _showModal(content) {\n        /** @type {?} */\n        const modalLoader = this.loaders[this.loaders.length - 1];\n        if (this.config && this.config.providers) {\n            for (const provider of this.config.providers) {\n                modalLoader.provide(provider);\n            }\n        }\n        /** @type {?} */\n        const bsModalRef = new BsModalRef();\n        /** @type {?} */\n        const modalContainerRef = modalLoader\n            .provide({ provide: ModalOptions, useValue: this.config })\n            .provide({ provide: BsModalRef, useValue: bsModalRef })\n            .attach(ModalContainerComponent)\n            .to('body')\n            .show({ content, isAnimated: this.config.animated, initialState: this.config.initialState, bsModalService: this });\n        modalContainerRef.instance.level = this.getModalsCount();\n        bsModalRef.hide = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const duration = this.config.animated ? TRANSITION_DURATIONS.MODAL : 0;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => modalContainerRef.instance.hide()), duration);\n        });\n        bsModalRef.content = modalLoader.getInnerComponent() || null;\n        bsModalRef.setClass = (/**\n         * @param {?} newClass\n         * @return {?}\n         */\n        (newClass) => {\n            modalContainerRef.instance.config.class = newClass;\n        });\n        return bsModalRef;\n    }\n    /**\n     * @param {?} level\n     * @return {?}\n     */\n    _hideModal(level) {\n        /** @type {?} */\n        const modalLoader = this.loaders[level - 1];\n        if (modalLoader) {\n            modalLoader.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getModalsCount() {\n        return this.modalsCount;\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    setDismissReason(reason) {\n        this.lastDismissReason = reason;\n    }\n    /**\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._backdropLoader.hide();\n        this.backdropRef = null;\n    }\n    /** Checks if the body is overflowing and sets scrollbar width */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window\n            .getComputedStyle(document.body)\n            .getPropertyValue('padding-right') || '0', 10);\n        if (this.isBodyOverflowing) {\n            document.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    resetScrollbar() {\n        document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document.body, scrollDiv);\n        return scrollbarWidth;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLoaders() {\n        /** @type {?} */\n        const loader = this.clf.createLoader(null, null, null);\n        this.copyEvent(loader.onBeforeShow, this.onShow);\n        this.copyEvent(loader.onShown, this.onShown);\n        this.copyEvent(loader.onBeforeHide, this.onHide);\n        this.copyEvent(loader.onHidden, this.onHidden);\n        this.loaders.push(loader);\n    }\n    /**\n     * @private\n     * @param {?} level\n     * @return {?}\n     */\n    removeLoaders(level) {\n        this.loaders.splice(level - 1, 1);\n        this.loaders.forEach((/**\n         * @param {?} loader\n         * @param {?} i\n         * @return {?}\n         */\n        (loader, i) => {\n            loader.instance.level = i + 1;\n        }));\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    copyEvent(from, to) {\n        from.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            to.emit(this.lastDismissReason);\n        }));\n    }\n}\nBsModalService.ɵfac = function BsModalService_Factory(t) { return new (t || BsModalService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.ComponentLoaderFactory)); };\nBsModalService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsModalService, factory: BsModalService.ɵfac });\n/** @nocollapse */\nBsModalService.ctorParameters = () => [\n    { type: RendererFactory2 },\n    { type: ComponentLoaderFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsModalService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.RendererFactory2 }, { type: ɵngcc1.ComponentLoaderFactory }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    BsModalService.prototype.config;\n    /** @type {?} */\n    BsModalService.prototype.onShow;\n    /** @type {?} */\n    BsModalService.prototype.onShown;\n    /** @type {?} */\n    BsModalService.prototype.onHide;\n    /** @type {?} */\n    BsModalService.prototype.onHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.backdropRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._backdropLoader;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.modalsCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.lastDismissReason;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.loaders;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.clf;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n    /**\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });\nModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ModalModule_Factory(t) { return new (t || ModalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: [ModalBackdropComponent,\n        ModalDirective,\n        ModalContainerComponent], exports: [ModalBackdropComponent,\n        ModalDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    ModalBackdropComponent,\n                    ModalDirective,\n                    ModalContainerComponent\n                ],\n                exports: [ModalBackdropComponent, ModalDirective],\n                entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsModalRef, BsModalService, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };\n\n//# sourceMappingURL=ngx-bootstrap-modal.js.map","import { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, ViewContainerRef, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport { isBs3, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport { __decorate, __metadata } from 'tslib';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default values provider for tooltip\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\nimport * as ɵngcc2 from 'ngx-bootstrap/positioning';\n\nconst _c0 = [\"*\"];\nclass TooltipConfig {\n    constructor() {\n        /**\n         * sets disable adaptive position\n         */\n        this.adaptivePosition = true;\n        /**\n         * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n         */\n        this.placement = 'top';\n        /**\n         * array of event names which triggers tooltip opening\n         */\n        this.triggers = 'hover focus';\n        /**\n         * delay before showing the tooltip\n         */\n        this.delay = 0;\n    }\n}\nTooltipConfig.ɵfac = function TooltipConfig_Factory(t) { return new (t || TooltipConfig)(); };\nTooltipConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TooltipConfig, factory: TooltipConfig.ɵfac });\nif (false) {\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipConfig.prototype.adaptivePosition;\n    /**\n     * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n     * @type {?}\n     */\n    TooltipConfig.prototype.placement;\n    /**\n     * array of event names which triggers tooltip opening\n     * @type {?}\n     */\n    TooltipConfig.prototype.triggers;\n    /**\n     * a selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipConfig.prototype.container;\n    /**\n     * delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipConfig.prototype.delay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TooltipContainerComponent {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        Object.assign(this, config);\n    }\n    /**\n     * @return {?}\n     */\n    get isBs3() {\n        return isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.classMap = { in: false, fade: false };\n        this.classMap[this.placement] = true;\n        this.classMap[`tooltip-${this.placement}`] = true;\n        this.classMap.in = true;\n        if (this.animation) {\n            this.classMap.fade = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    }\n}\nTooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) { return new (t || TooltipContainerComponent)(ɵngcc0.ɵɵdirectiveInject(TooltipConfig)); };\nTooltipContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipContainerComponent, selectors: [[\"bs-tooltip-container\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 7, hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassMap(\"tooltip in tooltip-\" + ctx.placement + \" \" + \"bs-tooltip-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n        ɵngcc0.ɵɵclassProp(\"show\", !ctx.isBs3)(\"bs3\", ctx.isBs3);\n    } }, ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"tooltip-arrow\", \"arrow\"], [1, \"tooltip-inner\"]], template: function TooltipContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".tooltip[_nghost-%COMP%] {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    .bs3.tooltip.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.tooltip.bottom[_nghost-%COMP%] {\\n      margin-top: 0px;\\n    }\\n    .bs3.bs-tooltip-left[_nghost-%COMP%], .bs3.bs-tooltip-right[_nghost-%COMP%]{\\n      margin: 0px;\\n    }\\n    .bs3.bs-tooltip-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-tooltip-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      margin: .3rem 0;\\n    }\"], changeDetection: 0 });\n/** @nocollapse */\nTooltipContainerComponent.ctorParameters = () => [\n    { type: TooltipConfig }\n];\nif (false) {\n    /** @type {?} */\n    TooltipContainerComponent.prototype.classMap;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.placement;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.containerClass;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.animation;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet id = 0;\nclass TooltipDirective {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} cis\n     * @param {?} config\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _positionService\n     */\n    constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        this.tooltipId = id++;\n        /**\n         * Fired when tooltip content changes\n         */\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange = new EventEmitter();\n        /**\n         * Css class for tooltip container\n         */\n        this.containerClass = '';\n        /**\n         * @deprecated - removed, will be added to configuration\n         */\n        this.tooltipAnimation = true;\n        /**\n         * @deprecated\n         */\n        this.tooltipFadeDuration = 150;\n        /**\n         * @deprecated\n         */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     * @return {?}\n     */\n    get isOpen() {\n        return this._tooltip.isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /**\n     * @deprecated - please use `tooltip` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set htmlContent(value) {\n        warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n        this.tooltip = value;\n    }\n    /**\n     * @deprecated - please use `placement` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _placement(value) {\n        warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n        this.placement = value;\n    }\n    /**\n     * @deprecated - please use `isOpen` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _isOpen(value) {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        this.isOpen = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _isOpen() {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        return this.isOpen;\n    }\n    /**\n     * @deprecated - please use `isDisabled` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _enable(value) {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        this.isDisabled = !value;\n    }\n    /**\n     * @return {?}\n     */\n    get _enable() {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        return this.isDisabled;\n    }\n    /**\n     * @deprecated - please use `container=\"body\"` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _appendToBody(value) {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        this.container = value ? 'body' : this.container;\n    }\n    /**\n     * @return {?}\n     */\n    get _appendToBody() {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        return this.container === 'body';\n    }\n    /**\n     * @deprecated - will replaced with customClass\n     * @param {?} value\n     * @return {?}\n     */\n    set _popupClass(value) {\n        warnOnce('tooltipClass deprecated');\n    }\n    /**\n     * @deprecated - removed\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipContext(value) {\n        warnOnce('tooltipContext deprecated');\n    }\n    /**\n     * @deprecated\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipPopupDelay(value) {\n        warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n        this.delay = value;\n    }\n    /**\n     * @deprecated -  please use `triggers` instead\n     * @return {?}\n     */\n    get _tooltipTrigger() {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        return this.triggers;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipTrigger(value) {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        this.triggers = (value || '').toString();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: (/**\n             * @return {?}\n             */\n            () => this.show())\n        });\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            if (!value) {\n                this._tooltip.hide();\n            }\n        }));\n        this.onShown.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.setAriaDescribedBy();\n        }));\n        this.onHidden.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.setAriaDescribedBy();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    setAriaDescribedBy() {\n        this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : null;\n        if (this._ariaDescribedby) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n        }\n        else {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    show() {\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition\n                }\n            }\n        });\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        /** @type {?} */\n        const showTooltip = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._delayTimeoutId) {\n                this._delayTimeoutId = undefined;\n            }\n            this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(this.container)\n                .position({ attachment: this.placement })\n                .show({\n                content: this.tooltip,\n                placement: this.placement,\n                containerClass: this.containerClass,\n                id: `tooltip-${this.tooltipId}`\n            });\n        });\n        /** @type {?} */\n        const cancelDelayedTooltipShowing = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._tooltipCancelShowFn) {\n                this._tooltipCancelShowFn();\n            }\n        });\n        if (this.delay) {\n            if (this._delaySubscription) {\n                this._delaySubscription.unsubscribe();\n            }\n            this._delaySubscription = timer(this.delay).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            }));\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((/**\n                 * @param {?} trigger\n                 * @return {?}\n                 */\n                (trigger) => {\n                    this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, (/**\n                     * @return {?}\n                     */\n                    () => {\n                        this._delaySubscription.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    }));\n                }));\n            }\n        }\n        else {\n            showTooltip();\n        }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    hide() {\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        this._tooltip.instance.classMap.in = false;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tooltip.hide();\n        }), this.tooltipFadeDuration);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tooltip.dispose();\n        this.tooltipChange.unsubscribe();\n        if (this._delaySubscription) {\n            this._delaySubscription.unsubscribe();\n        }\n        this.onShown.unsubscribe();\n        this.onHidden.unsubscribe();\n    }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) { return new (t || TooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(TooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.PositioningService)); };\nTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TooltipDirective, selectors: [[\"\", \"tooltip\", \"\"], [\"\", \"tooltipHtml\", \"\"]], inputs: { containerClass: \"containerClass\", tooltipAnimation: \"tooltipAnimation\", tooltipFadeDuration: \"tooltipFadeDuration\", isOpen: \"isOpen\", htmlContent: [\"tooltipHtml\", \"htmlContent\"], tooltip: \"tooltip\", _placement: [\"tooltipPlacement\", \"_placement\"], placement: \"placement\", _isOpen: [\"tooltipIsOpen\", \"_isOpen\"], _enable: [\"tooltipEnable\", \"_enable\"], isDisabled: \"isDisabled\", _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"], container: \"container\", _popupClass: [\"tooltipClass\", \"_popupClass\"], _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"], _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"], delay: \"delay\", _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"], triggers: \"triggers\", adaptivePosition: \"adaptivePosition\" }, outputs: { tooltipChange: \"tooltipChange\", tooltipStateChanged: \"tooltipStateChanged\", onShown: \"onShown\", onHidden: \"onHidden\" }, exportAs: [\"bs-tooltip\"] });\n/** @nocollapse */\nTooltipDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ComponentLoaderFactory },\n    { type: TooltipConfig },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: PositioningService }\n];\nTooltipDirective.propDecorators = {\n    adaptivePosition: [{ type: Input }],\n    tooltip: [{ type: Input }],\n    tooltipChange: [{ type: Output }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    containerClass: [{ type: Input }],\n    isOpen: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    delay: [{ type: Input }],\n    onShown: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    htmlContent: [{ type: Input, args: ['tooltipHtml',] }],\n    _placement: [{ type: Input, args: ['tooltipPlacement',] }],\n    _isOpen: [{ type: Input, args: ['tooltipIsOpen',] }],\n    _enable: [{ type: Input, args: ['tooltipEnable',] }],\n    _appendToBody: [{ type: Input, args: ['tooltipAppendToBody',] }],\n    tooltipAnimation: [{ type: Input }],\n    _popupClass: [{ type: Input, args: ['tooltipClass',] }],\n    _tooltipContext: [{ type: Input, args: ['tooltipContext',] }],\n    _tooltipPopupDelay: [{ type: Input, args: ['tooltipPopupDelay',] }],\n    tooltipFadeDuration: [{ type: Input }],\n    _tooltipTrigger: [{ type: Input, args: ['tooltipTrigger',] }],\n    tooltipStateChanged: [{ type: Output }]\n};\n__decorate([\n    OnChange(),\n    __metadata(\"design:type\", Object)\n], TooltipDirective.prototype, \"tooltip\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'bs-tooltip-container',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                // tslint:disable-next-line\n                host: {\n                    '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                    '[class.show]': '!isBs3',\n                    '[class.bs3]': 'isBs3',\n                    '[attr.id]': 'this.id',\n                    role: 'tooltip'\n                },\n                template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `,\n                styles: [`\n    :host.tooltip {\n      display: block;\n      pointer-events: none;\n    }\n    :host.bs3.tooltip.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.tooltip.bottom {\n      margin-top: 0px;\n    }\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\n      margin: 0px;\n    }\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\n      margin: .3rem 0;\n    }\n  `]\n            }]\n    }], function () { return [{ type: TooltipConfig }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[tooltip], [tooltipHtml]',\n                exportAs: 'bs-tooltip'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc1.ComponentLoaderFactory }, { type: TooltipConfig }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.PositioningService }]; }, { tooltipChange: [{\n            type: Output\n        }], containerClass: [{\n            type: Input\n        }], tooltipAnimation: [{\n            type: Input\n        }], tooltipFadeDuration: [{\n            type: Input\n        }], tooltipStateChanged: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], isOpen: [{\n            type: Input\n        }], htmlContent: [{\n            type: Input,\n            args: ['tooltipHtml']\n        }], tooltip: [{\n            type: Input\n        }], _placement: [{\n            type: Input,\n            args: ['tooltipPlacement']\n        }], placement: [{\n            type: Input\n        }], _isOpen: [{\n            type: Input,\n            args: ['tooltipIsOpen']\n        }], _enable: [{\n            type: Input,\n            args: ['tooltipEnable']\n        }], isDisabled: [{\n            type: Input\n        }], _appendToBody: [{\n            type: Input,\n            args: ['tooltipAppendToBody']\n        }], container: [{\n            type: Input\n        }], _popupClass: [{\n            type: Input,\n            args: ['tooltipClass']\n        }], _tooltipContext: [{\n            type: Input,\n            args: ['tooltipContext']\n        }], _tooltipPopupDelay: [{\n            type: Input,\n            args: ['tooltipPopupDelay']\n        }], delay: [{\n            type: Input\n        }], _tooltipTrigger: [{\n            type: Input,\n            args: ['tooltipTrigger']\n        }], triggers: [{\n            type: Input\n        }], adaptivePosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    TooltipDirective.prototype.tooltipId;\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipDirective.prototype.adaptivePosition;\n    /**\n     * Content to be displayed as tooltip.\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltip;\n    /**\n     * Fired when tooltip content changes\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipChange;\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     * @type {?}\n     */\n    TooltipDirective.prototype.placement;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     */\n    TooltipDirective.prototype.triggers;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipDirective.prototype.container;\n    /**\n     * Css class for tooltip container\n     * @type {?}\n     */\n    TooltipDirective.prototype.containerClass;\n    /**\n     * Allows to disable tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.isDisabled;\n    /**\n     * Delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.delay;\n    /**\n     * Emits an event when the tooltip is shown\n     * @type {?}\n     */\n    TooltipDirective.prototype.onShown;\n    /**\n     * Emits an event when the tooltip is hidden\n     * @type {?}\n     */\n    TooltipDirective.prototype.onHidden;\n    /**\n     * @deprecated - removed, will be added to configuration\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipAnimation;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipFadeDuration;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipStateChanged;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._delayTimeoutId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._tooltipCancelShowFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._tooltip;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._delaySubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._positionService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TooltipModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TooltipModule,\n            providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TooltipModule });\nTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TooltipModule_Factory(t) { return new (t || TooltipModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, { declarations: function () { return [TooltipDirective,\n        TooltipContainerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TooltipDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [TooltipDirective, TooltipContainerComponent],\n                exports: [TooltipDirective],\n                entryComponents: [TooltipContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\n\n//# sourceMappingURL=ngx-bootstrap-tooltip.js.map"],"sourceRoot":"webpack:///"}